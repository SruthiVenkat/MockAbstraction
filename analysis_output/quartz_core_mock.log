/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction
:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/asm-3.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/c3p0-0.9.5.3.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/derby-10.8.2.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/derbyclient-10.8.2.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/derbynet-10.8.2.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/hamcrest-core-1.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/hamcrest-library-1.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/HikariCP-java7-2.4.13.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/javaee-api-5.0-2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/junit-dep-4.8.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/log4j-1.2.16.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/mchange-commons-java-0.2.15.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/mockito-all-1.9.5.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/slf4j-api-1.7.7.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/slf4j-log4j12-1.7.7.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/typesafe-config-2.10.1.jar
it is a maven project
[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1mReactor Build Order:[m
[[1;34mINFO[m] 
[[1;34mINFO[m] quartz-parent                                                      [pom]
[[1;34mINFO[m] quartz-checkstyle                                                  [jar]
[[1;34mINFO[m] quartz-core                                                        [jar]
[[1;34mINFO[m] quartz-commonj                                                     [jar]
[[1;34mINFO[m] quartz-jboss                                                       [jar]
[[1;34mINFO[m] quartz-stubs                                                       [jar]
[[1;34mINFO[m] quartz-oracle                                                      [jar]
[[1;34mINFO[m] quartz-weblogic                                                    [jar]
[[1;34mINFO[m] quartz-jobs                                                        [jar]
[[1;34mINFO[m] quartz-plugins                                                     [jar]
[[1;34mINFO[m] quartz-terracotta-root                                             [pom]
[[1;34mINFO[m] quartz-terracotta-bootstrap                                        [jar]
[[1;34mINFO[m] quartz                                                             [jar]
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-----------------< [0;36morg.quartz-scheduler:quartz-parent[0;1m >-----------------[m
[[1;34mINFO[m] [1mBuilding quartz-parent 2.3.1                                      [1/13][m
[[1;34mINFO[m] [1m--------------------------------[ pom ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-parent[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-parent[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-parent[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m----------< [0;36morg.quartz-scheduler.internal:quartz-checkstyle[0;1m >-----------[m
[[1;34mINFO[m] [1mBuilding quartz-checkstyle 2.3.1                                  [2/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/checkstyle/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/checkstyle/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 3 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/checkstyle/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-------------< [0;36morg.quartz-scheduler.internal:quartz-core[0;1m >--------------[m
[[1;34mINFO[m] [1mBuilding quartz-core 2.3.1                                        [3/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 28 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Compiling 204 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mrmic-maven-plugin:1.1:rmic[m [1m(rmic-process-classes)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Compiling 1 remote classes
Warning: generation and use of skeletons and static stubs for JRMP
is deprecated. Skeletons are unnecessary, and static stubs have
been superseded by dynamically generated stubs. Users are
encouraged to migrate away from using rmic to generate skeletons and static
stubs. See the documentation for java.rmi.server.UnicastRemoteObject.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 23 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Compiling 81 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.10:test[m [1m(default-test)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.quartz.CronScheduleBuilderTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.257 sec
Running org.quartz.MonthlyCalendarTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 sec
Running org.quartz.PriorityTest
2021-04-24 02:00:25,341 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:00:25,419 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:00:25,420 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:00:25,422 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:00:25,428 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:00:25,429 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'QuartzScheduler' initialized from an externally provided properties instance.
2021-04-24 02:00:25,429 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:00:25,469 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2021-04-24 02:00:26,443 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:00:26,443 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:00:26,444 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:00:26,446 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:00:26,463 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:00:26,463 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:00:26,463 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:00:26,463 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:00:26,463 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'QuartzScheduler' initialized from an externally provided properties instance.
2021-04-24 02:00:26,463 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:00:26,464 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2021-04-24 02:00:27,465 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:00:27,465 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:00:27,465 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.397 sec
Running org.quartz.utils.DirtyFlagMapTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 sec
Running org.quartz.utils.PropertiesParserTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.064 sec
Running org.quartz.utils.ClassUtilsTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.171 sec
Running org.quartz.utils.HikariCpPoolingConnectionProviderTest
2021-04-24 02:00:31,602 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Sat Apr 24 02:00:32 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-24 02:00:33,516 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-24 02:00:33,516 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-24 02:00:33,519 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-24 02:00:54,157 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-24 02:00:54,471 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.HikariCpPoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:00:54,537 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:00:54,801 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:00:54,801 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:00:54,803 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:00:54,805 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:00:54,807 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:00:54,808 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:00:54,808 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:00:54,808 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:00:54,847 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Starting...
2021-04-24 02:00:54,880 WARN [com.zaxxer.hikari.util.DriverDataSource] - Registered driver with driverClassName=org.apache.derby.jdbc.ClientDriver was not found, trying direct instantiation.
2021-04-24 02:00:54,953 INFO [com.zaxxer.hikari.pool.PoolBase] - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: getNetworkTimeout.)
2021-04-24 02:00:55,274 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Start completed.
2021-04-24 02:00:55,628 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:00:55,758 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:00:55,758 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:00:55,777 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:00:55,828 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:00:55,855 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:00:55,855 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:00:55,859 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:00:55,860 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:00:55,860 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:00:56,227 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Shutdown initiated...
2021-04-24 02:00:56,227 INFO [com.zaxxer.hikari.pool.HikariPool] - HikariPool-1 - Close initiated...
2021-04-24 02:00:56,248 INFO [com.zaxxer.hikari.pool.HikariPool] - HikariPool-1 - Closed.
2021-04-24 02:00:56,248 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Shutdown completed.
2021-04-24 02:00:56,248 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:00:56,248 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:00:56,251 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.HikariCpPoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:00:56,251 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:00:56,465 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:00:56,465 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:00:56,465 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:00:56,466 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:00:56,466 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:00:56,466 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:00:56,466 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:00:56,466 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:00:56,466 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-2 - Starting...
2021-04-24 02:00:56,466 WARN [com.zaxxer.hikari.util.DriverDataSource] - Registered driver with driverClassName=org.apache.derby.jdbc.ClientDriver was not found, trying direct instantiation.
2021-04-24 02:00:56,470 INFO [com.zaxxer.hikari.pool.PoolBase] - HikariPool-2 - Driver does not support get/set network timeout for connections. (Feature not implemented: getNetworkTimeout.)
2021-04-24 02:00:56,483 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-2 - Start completed.
2021-04-24 02:00:56,491 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:00:56,504 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:00:56,504 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:00:56,509 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:00:56,514 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:00:56,524 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:00:56,524 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:00:56,539 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:00:56,539 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:00:56,540 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:00:56,963 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-2 - Shutdown initiated...
2021-04-24 02:00:56,964 INFO [com.zaxxer.hikari.pool.HikariPool] - HikariPool-2 - Close initiated...
2021-04-24 02:00:57,003 INFO [com.zaxxer.hikari.pool.HikariPool] - HikariPool-2 - Closed.
2021-04-24 02:00:57,004 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-2 - Shutdown completed.
2021-04-24 02:00:57,004 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:00:57,004 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:00:57,004 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-24 02:01:00,113 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Sat Apr 24 02:01:00 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-24 02:01:00,223 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 29.163 sec
Running org.quartz.utils.C3p0PoolingConnectionProviderTest
2021-04-24 02:01:02,396 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Sat Apr 24 02:01:04 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-24 02:01:04,772 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-24 02:01:04,772 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-24 02:01:04,776 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-24 02:01:15,853 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-24 02:01:16,134 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:01:16,307 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-24 02:01:16,382 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-24 02:01:16,461 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:01:16,516 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:16,516 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:16,518 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:16,520 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:16,521 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:16,522 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:01:16,522 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:16,522 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:01:16,566 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 5, acquireRetryAttempts -> 3, acquireRetryDelay -> 3000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahongw8122exao|4df13dd0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahongw8122exao|4df13dd0, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 60, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 5, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:01:16,606 WARN [com.mchange.v2.resourcepool.BasicResourcePool] - Bad pool size config, start 3 < min 5. Using 5 as start.
2021-04-24 02:01:16,951 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:17,056 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:17,056 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:17,073 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:17,091 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:17,095 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:01:17,095 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:01:17,102 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:01:17,102 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:01:17,102 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:01:17,485 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:01:17,486 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:01:17,489 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:01:17,512 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:01:17,517 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:17,517 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:17,518 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:17,518 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:17,518 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:17,518 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:01:17,518 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:17,518 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:01:17,529 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 5, acquireRetryAttempts -> 3, acquireRetryDelay -> 3000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahongw8122exao|44a1ae4e, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahongw8122exao|44a1ae4e, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 60, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 5, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:01:17,530 WARN [com.mchange.v2.resourcepool.BasicResourcePool] - Bad pool size config, start 3 < min 5. Using 5 as start.
2021-04-24 02:01:17,557 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:17,569 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:17,569 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:17,573 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:17,576 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:17,577 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:01:17,578 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:01:17,582 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:01:17,582 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:01:17,582 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:01:18,019 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:01:18,020 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:01:18,022 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-24 02:01:20,025 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Sat Apr 24 02:01:20 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-24 02:01:20,127 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 18.463 sec
Running org.quartz.JdbcSchedulerTest
2021-04-24 02:01:22,697 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:22,697 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:22,710 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:22,711 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:22,713 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:22,714 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler
2021-04-24 02:01:22,714 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:23,215 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutting down.
2021-04-24 02:01:23,216 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO paused.
2021-04-24 02:01:23,670 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:24,117 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:24,117 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:24,118 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:24,118 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:24,118 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:24,118 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler
2021-04-24 02:01:24,118 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:24,290 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:24,365 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:24,365 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:24,376 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:24,387 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:24,388 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO started.
2021-04-24 02:01:24,643 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutting down.
2021-04-24 02:01:24,643 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO paused.
2021-04-24 02:01:25,118 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:25,298 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:25,299 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:25,299 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:25,299 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:25,299 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:25,299 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler
2021-04-24 02:01:25,299 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:25,325 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-24 02:01:25,325 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO paused.
2021-04-24 02:01:25,799 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:25,940 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:25,940 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:25,940 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:25,940 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:25,940 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:25,941 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler
2021-04-24 02:01:25,941 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:25,953 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:25,970 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:25,970 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:25,977 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:25,984 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:25,984 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO started.
2021-04-24 02:01:26,094 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutting down.
2021-04-24 02:01:26,094 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO paused.
2021-04-24 02:01:26,440 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:26,652 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:26,652 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:26,652 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:26,652 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:26,652 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:26,653 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler
2021-04-24 02:01:26,653 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:26,860 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-24 02:01:26,860 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO paused.
2021-04-24 02:01:27,152 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:27,252 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:27,252 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:27,253 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:27,253 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:27,253 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:27,253 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler
2021-04-24 02:01:27,253 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:27,283 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:27,294 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:27,294 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:27,299 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:27,303 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:27,304 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO started.
2021-04-24 02:01:27,383 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutting down.
2021-04-24 02:01:27,384 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO paused.
2021-04-24 02:01:27,753 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:27,876 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:27,876 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:27,876 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:27,876 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:27,876 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:27,876 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler
2021-04-24 02:01:27,876 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:27,918 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutting down.
2021-04-24 02:01:27,918 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO paused.
2021-04-24 02:01:28,376 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:28,464 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:28,464 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:28,464 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:28,464 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:28,464 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:28,464 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler
2021-04-24 02:01:28,464 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:28,471 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:28,485 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:28,485 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:28,490 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:28,494 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:28,494 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO started.
2021-04-24 02:01:28,634 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutting down.
2021-04-24 02:01:28,634 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO paused.
2021-04-24 02:01:28,635 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:28,637 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-24 02:01:28,739 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:28,739 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:28,739 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:28,739 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:28,739 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:28,739 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler
2021-04-24 02:01:28,739 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:28,746 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:28,757 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:28,757 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:28,761 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:28,764 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:28,764 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO started.
2021-04-24 02:01:28,850 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutting down.
2021-04-24 02:01:28,850 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO paused.
2021-04-24 02:01:29,880 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutdown complete.
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.313 sec
Running org.quartz.Qtz205SchedulerListenerTest
2021-04-24 02:01:30,625 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:01:30,657 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:30,658 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:30,659 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:01:30,661 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:01:30,661 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'QuartzScheduler' initialized from an externally provided properties instance.
2021-04-24 02:01:30,661 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:30,662 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2021-04-24 02:01:30,662 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:01:30,675 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2021-04-24 02:01:30,684 INFO [org.quartz.Qtz205SchedulerListenerTest] - Trigger fired. count 1
2021-04-24 02:01:30,685 INFO [org.quartz.Qtz205SchedulerListenerTest] - Job executed. jobExecutionCount=1
2021-04-24 02:01:30,919 INFO [org.quartz.Qtz205SchedulerListenerTest] - Trigger fired. count 2
2021-04-24 02:01:30,919 INFO [org.quartz.Qtz205SchedulerListenerTest] - Job executed. jobExecutionCount=2
2021-04-24 02:01:31,168 INFO [org.quartz.Qtz205SchedulerListenerTest] - Trigger fired. count 3
2021-04-24 02:01:31,169 INFO [org.quartz.Qtz205SchedulerListenerTest] - Job execution vetoed.
2021-04-24 02:01:31,169 INFO [org.quartz.Qtz205SchedulerListenerTest] - triggerFinalized Trigger 'DEFAULT.test':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null
2021-04-24 02:01:35,675 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:01:35,676 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:01:36,171 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.783 sec
Running org.quartz.SimpleTriggerTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.22 sec
Running org.quartz.FlakyJdbcSchedulerTest
2021-04-24 02:01:38,825 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:38,825 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:38,829 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:38,830 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:38,832 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testTriggerFiringScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:38,832 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testTriggerFiringScheduler
2021-04-24 02:01:38,832 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:39,477 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:39,505 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:39,505 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:39,511 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:39,518 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:39,520 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO started.
2021-04-24 02:01:43,796 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutting down.
2021-04-24 02:01:43,796 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO paused.
2021-04-24 02:01:44,564 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:44,820 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:44,821 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:44,821 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:44,821 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:44,821 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:44,821 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler
2021-04-24 02:01:44,821 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:45,322 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutting down.
2021-04-24 02:01:45,322 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO paused.
2021-04-24 02:01:46,328 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:46,683 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:46,683 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:46,684 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:46,684 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:46,684 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:46,684 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler
2021-04-24 02:01:46,684 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:46,698 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:46,711 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:46,711 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:46,716 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:46,721 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:46,722 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO started.
2021-04-24 02:01:46,863 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutting down.
2021-04-24 02:01:46,864 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO paused.
2021-04-24 02:01:47,694 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:47,799 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:47,799 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:47,799 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:47,799 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:47,799 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:47,799 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler
2021-04-24 02:01:47,799 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:47,806 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:47,816 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:47,816 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:47,820 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:47,824 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:47,824 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO started.
2021-04-24 02:01:47,921 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutting down.
2021-04-24 02:01:47,921 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO paused.
2021-04-24 02:01:48,827 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:48,921 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:48,921 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:48,921 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:48,921 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:48,921 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:48,921 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler
2021-04-24 02:01:48,921 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:48,949 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:48,959 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:48,959 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:48,963 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:48,966 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:48,966 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO started.
2021-04-24 02:01:49,027 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutting down.
2021-04-24 02:01:49,028 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO paused.
2021-04-24 02:01:49,935 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:50,030 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:50,030 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:50,030 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:50,030 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:50,030 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:50,031 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler
2021-04-24 02:01:50,031 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:50,072 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutting down.
2021-04-24 02:01:50,072 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO paused.
2021-04-24 02:01:51,041 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:51,123 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:51,123 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:51,123 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:51,123 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:51,123 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:51,123 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler
2021-04-24 02:01:51,123 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:51,130 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:51,138 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:51,138 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:51,141 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:51,144 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:51,145 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO started.
2021-04-24 02:01:51,275 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutting down.
2021-04-24 02:01:51,275 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO paused.
2021-04-24 02:01:51,790 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:51,791 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-24 02:01:51,880 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:51,881 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:51,881 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:51,881 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:51,881 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:51,881 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler
2021-04-24 02:01:51,881 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:51,888 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:51,899 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:51,899 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:51,904 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:51,908 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:51,908 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO started.
2021-04-24 02:01:52,040 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutting down.
2021-04-24 02:01:52,040 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO paused.
2021-04-24 02:01:53,588 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:53,671 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:53,671 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:53,671 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:53,671 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:53,671 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:53,671 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler
2021-04-24 02:01:53,672 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:53,821 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-24 02:01:53,821 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO paused.
2021-04-24 02:01:54,683 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:54,758 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:54,758 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:54,758 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:54,758 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:54,758 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:54,758 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler
2021-04-24 02:01:54,758 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:54,767 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-24 02:01:54,767 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO paused.
2021-04-24 02:01:55,848 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-24 02:01:55,910 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:01:55,911 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:01:55,911 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:01:55,911 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:01:55,911 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testTriggerFiringScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:01:55,911 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testTriggerFiringScheduler
2021-04-24 02:01:55,911 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:01:56,014 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:01:56,021 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:01:56,022 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:01:56,024 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:01:56,027 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:01:56,027 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO started.
2021-04-24 02:01:56,029 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,214 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName0':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,249 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,276 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName4':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,358 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName8':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,360 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,455 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,462 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,469 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName20':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,574 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,593 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,775 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,787 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,841 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,909 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:56,912 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,017 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,071 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,073 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,090 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName40':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,092 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,101 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,160 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName46':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,168 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,234 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,240 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,251 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,260 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName54':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,262 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,267 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,331 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,347 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,354 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,357 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName59':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,359 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,466 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,527 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName61':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,541 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName62':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,567 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,569 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,582 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,608 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,614 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,618 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,690 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName79':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,708 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,772 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,775 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName85':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,833 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName86':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:55 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:57,845 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName89':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,003 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,005 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName91':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,024 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName97':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,029 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName98':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,044 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName2':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,161 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,165 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,182 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName10':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,235 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName11':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,240 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,263 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName20':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,364 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,424 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,476 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName21':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,479 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,483 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,552 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,589 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,591 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName30':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,605 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,611 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,626 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,680 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName37':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,681 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,693 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName40':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,701 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName42':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,775 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,884 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,889 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,895 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,947 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,957 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,963 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName60':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,963 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,979 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,981 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName64':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,983 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName64':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,984 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,990 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName65':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,992 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName65':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,993 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,999 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName66':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:58,999 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,007 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,009 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName68':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,033 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,039 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName78':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,094 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,154 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName79':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,208 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,211 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,316 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,321 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName85':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:56 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,332 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,334 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName87':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,335 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,447 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName90':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,466 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,610 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,714 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,716 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,720 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,728 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName13':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,733 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,788 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,843 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName16':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,846 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,854 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName19':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,854 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,860 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,920 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,967 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:01:59,971 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,079 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,085 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,088 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName32':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,193 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName32':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,194 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,199 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,209 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,213 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,266 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,268 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,269 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,276 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName39':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,278 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName39':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,286 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName42':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,294 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName44':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,295 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,297 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName44':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,302 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,305 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,316 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName49':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,324 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName52':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,324 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,326 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName52':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,330 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName54':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,331 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName54':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,332 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName54':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,337 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,575 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,607 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,644 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,648 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,703 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName77':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,707 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName79':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,708 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,920 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,924 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,979 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,980 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,990 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName92':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,991 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:00,993 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,003 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName96':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,077 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName4':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,085 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName6':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,086 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,137 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName6':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,191 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,254 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,255 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,370 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,555 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,661 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,667 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName32':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,667 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,721 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,728 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,730 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName36':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,787 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,791 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName39':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,792 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,797 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName42':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,908 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,909 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:01,912 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,036 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,039 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName55':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,041 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName55':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,074 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName57':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,098 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,101 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,106 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,114 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName71':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,122 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,125 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,129 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,132 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,167 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName79':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,248 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,263 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName87':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,303 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,318 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,368 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName97':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,373 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,429 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName99':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,537 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,639 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,641 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,642 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,696 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,749 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,758 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,761 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName6':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,765 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,772 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName8':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,786 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,841 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,904 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,912 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,970 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName24':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,973 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,975 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,977 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,985 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName28':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:02,997 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,026 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,030 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName41':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,032 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName41':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,083 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,134 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName41':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,141 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,151 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,152 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,153 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,154 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,154 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,194 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName50':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:01:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:03,267 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutting down.
2021-04-24 02:02:03,267 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO paused.
2021-04-24 02:02:04,275 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:04,412 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:04,412 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:04,412 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:04,412 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:04,412 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:04,412 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler
2021-04-24 02:02:04,412 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:04,913 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutting down.
2021-04-24 02:02:04,913 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO paused.
2021-04-24 02:02:05,939 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:06,234 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:06,234 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:06,234 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:06,234 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:06,234 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:06,234 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler
2021-04-24 02:02:06,234 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:06,239 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:06,249 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:06,249 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:06,253 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:06,256 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:06,256 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO started.
2021-04-24 02:02:06,364 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'DEFAULT.6da64b5bd2ee-4023b113-9245-4854-989c-740e225d53c4':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:06 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedBefore': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:06,382 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutting down.
2021-04-24 02:02:06,382 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO paused.
2021-04-24 02:02:07,242 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:07,316 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:07,316 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:07,316 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:07,316 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:07,316 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:07,316 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler
2021-04-24 02:02:07,316 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:07,321 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:07,329 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:07,329 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:07,331 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:07,334 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:07,334 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO started.
2021-04-24 02:02:07,334 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob': java.sql.SQLException: FlakyConnection failed on you on creation.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3246)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:07,343 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:07,359 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:07,392 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:07,393 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutting down.
2021-04-24 02:02:07,393 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO paused.
2021-04-24 02:02:08,435 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:08,495 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:08,495 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:08,495 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:08,495 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:08,495 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:08,495 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler
2021-04-24 02:02:08,495 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:08,512 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:08,518 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:08,518 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:08,520 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:08,522 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:08,522 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO started.
2021-04-24 02:02:08,548 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'DEFAULT.6da64b5bd2ee-13248474-8c66-4d76-94d5-72e2777ca6e4':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:08 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedAfter': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:08,602 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'DEFAULT.6da64b5bd2ee-13248474-8c66-4d76-94d5-72e2777ca6e4':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:08 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedAfter': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:08,604 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'DEFAULT.6da64b5bd2ee-13248474-8c66-4d76-94d5-72e2777ca6e4':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:08 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedAfter': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:08,618 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutting down.
2021-04-24 02:02:08,618 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO paused.
2021-04-24 02:02:09,526 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:09,589 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:09,589 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:09,589 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:09,589 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:09,589 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:09,589 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler
2021-04-24 02:02:09,589 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:09,611 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutting down.
2021-04-24 02:02:09,611 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO paused.
2021-04-24 02:02:10,597 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:10,668 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:10,668 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:10,668 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:10,668 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:10,668 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:10,668 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler
2021-04-24 02:02:10,668 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:10,674 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:10,681 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:10,681 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:10,683 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:10,686 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:10,686 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO started.
2021-04-24 02:02:10,758 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutting down.
2021-04-24 02:02:10,759 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO paused.
2021-04-24 02:02:11,271 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:11,271 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-24 02:02:11,349 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:11,349 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:11,349 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:11,349 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:11,349 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:11,349 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler
2021-04-24 02:02:11,349 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:11,354 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:11,359 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:11,359 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:11,362 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:11,364 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:11,364 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO started.
2021-04-24 02:02:11,365 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Failed to obtain DB connection from data source 'testShutdownWithWaitIsClean': java.sql.SQLException: FlakyConnection failed on you on creation.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testShutdownWithWaitIsClean': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3246)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:11,372 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testShutdownWithWaitIsClean': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:11,387 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testShutdownWithWaitIsClean': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:11,487 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutting down.
2021-04-24 02:02:11,487 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO paused.
2021-04-24 02:02:13,045 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:13,105 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:13,105 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:13,105 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:13,105 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:13,105 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:13,105 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler
2021-04-24 02:02:13,106 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:13,198 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-24 02:02:13,198 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO paused.
2021-04-24 02:02:14,137 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:14,212 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:14,212 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:14,212 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:14,212 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:14,212 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:14,212 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler
2021-04-24 02:02:14,212 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:14,220 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-24 02:02:14,220 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO paused.
2021-04-24 02:02:15,238 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:15,290 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:15,290 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:15,290 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:15,290 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:15,290 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testTriggerFiringScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:15,290 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testTriggerFiringScheduler
2021-04-24 02:02:15,290 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:15,373 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:15,382 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:15,383 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:15,386 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:15,391 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:15,391 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO started.
2021-04-24 02:02:15,571 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName3':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:15,628 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:15,687 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:15,751 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName7':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:15,761 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,034 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,039 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName13':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,047 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName13':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,108 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,111 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,171 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,303 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,315 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,375 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,379 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,642 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,655 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,719 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,759 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,762 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName46':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,869 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,982 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:16,985 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,040 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,042 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,103 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,111 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName52':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,115 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName52':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,126 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName53':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,180 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,234 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName54':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,339 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName54':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,397 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName57':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,470 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName61':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,487 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,651 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName65':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,656 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName65':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,661 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,769 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName65':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,791 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName70':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,899 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName72':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:17,901 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,068 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName78':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,137 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName83':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,151 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName87':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,267 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName96':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,279 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName98':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:16 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,335 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,337 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,342 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,345 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,348 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,354 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName7':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,356 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,410 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName7':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,522 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName13':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,526 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,532 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName13':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,606 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@18cda536
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:02:18,636 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,640 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName13':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,646 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,703 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName14':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,815 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName16':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,921 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,924 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName16':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,979 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,984 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName16':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:18,996 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,061 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName19':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,091 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,103 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,161 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName28':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,229 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,238 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,254 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,319 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName30':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,427 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,553 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,683 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName39':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,828 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,850 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName46':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,956 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:19,990 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,128 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,190 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName52':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,197 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,280 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName57':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,313 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,350 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,429 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName60':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,476 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,556 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName66':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,600 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName65':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,653 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName69':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,694 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName71':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,807 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,938 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:20,983 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName77':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,049 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName79':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,101 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,164 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,282 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,355 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,362 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName91':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,366 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName91':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,420 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,427 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,487 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,548 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName99':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,555 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName99':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,557 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName99':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:17 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,664 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,668 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,784 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName6':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,839 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName5':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,841 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,844 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName5':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,896 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,903 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,907 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,918 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,921 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,925 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,985 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,988 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName20':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:21,993 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName19':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,020 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,079 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,133 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName24':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,134 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,141 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,199 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,208 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,211 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,216 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,222 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,227 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,231 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName41':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,234 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,398 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,429 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,521 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,555 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName53':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,562 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,716 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName55':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,963 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:22,973 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName59':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,139 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,231 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,252 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,311 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,331 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,352 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,370 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,427 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName68':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,445 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName68':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,597 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,736 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,744 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName75':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,845 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,914 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:23,996 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName85':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:24,069 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:24,232 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@27577801
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-24 02:02:24,284 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:24,409 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:24,600 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:24,612 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:24,676 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:24,697 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName93':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:24,716 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName96':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:18 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:24,733 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:24,827 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:24,889 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:24,959 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,080 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName5':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,167 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName7':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,197 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName10':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,373 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,385 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,429 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName16':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,446 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,472 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,511 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,541 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName21':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,590 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName22':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,642 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName24':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,741 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,852 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName29':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,955 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:25,986 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,085 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,108 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,121 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName37':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,170 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName39':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,290 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,420 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,525 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,533 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,567 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,590 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName49':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,722 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,790 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName50':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,854 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,859 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,916 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName55':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:26,979 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,136 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,201 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,206 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName61':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,263 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,388 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,394 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,461 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,582 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName79':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,700 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,706 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,766 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName86':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,772 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName85':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,780 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,897 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,907 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName91':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:27,910 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName91':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,012 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName93':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,014 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,018 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName93':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,128 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName96':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,186 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,196 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName97':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:19 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,198 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,212 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,224 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName0':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,233 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName0':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,234 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,464 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,550 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,553 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,556 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,612 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,666 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,739 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,807 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,868 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,875 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName29':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,878 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:28,881 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName29':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:29,015 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:29,070 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:29,087 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:29,093 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:29,138 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutting down.
2021-04-24 02:02:29,138 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO paused.
2021-04-24 02:02:29,154 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName37':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:30,134 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:30,212 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:30,212 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:30,212 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:30,212 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:30,212 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:30,212 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler
2021-04-24 02:02:30,212 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:30,713 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutting down.
2021-04-24 02:02:30,713 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO paused.
2021-04-24 02:02:31,718 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:31,995 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:31,995 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:31,996 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:31,996 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:31,996 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:31,996 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler
2021-04-24 02:02:31,996 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:32,001 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:32,111 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:32,111 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:32,114 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:32,117 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:32,117 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO started.
2021-04-24 02:02:32,159 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:32,179 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutting down.
2021-04-24 02:02:32,179 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO paused.
2021-04-24 02:02:33,006 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:33,059 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:33,059 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:33,059 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:33,059 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:33,059 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:33,059 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler
2021-04-24 02:02:33,059 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:33,062 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:33,068 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:33,068 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:33,070 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:33,072 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:33,073 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO started.
2021-04-24 02:02:33,081 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:33,082 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:33,105 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:33,118 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutting down.
2021-04-24 02:02:33,118 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO paused.
2021-04-24 02:02:34,073 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:34,127 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:34,127 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:34,127 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:34,127 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:34,127 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:34,127 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler
2021-04-24 02:02:34,127 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:34,141 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:34,146 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:34,146 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:34,148 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:34,149 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:34,150 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO started.
2021-04-24 02:02:34,176 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutting down.
2021-04-24 02:02:34,176 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO paused.
2021-04-24 02:02:35,155 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:35,208 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:35,208 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:35,208 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:35,208 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:35,208 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:35,208 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler
2021-04-24 02:02:35,208 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:35,225 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutting down.
2021-04-24 02:02:35,225 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO paused.
2021-04-24 02:02:36,252 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:36,304 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:36,304 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:36,304 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:36,304 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:36,304 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:36,304 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler
2021-04-24 02:02:36,304 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:36,308 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:36,312 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:36,312 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:36,314 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:36,316 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:36,316 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO started.
2021-04-24 02:02:36,323 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:36,346 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:36,356 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'DEFAULT.6da64b5bd2ee-84aafccb-eb17-46a9-ab3c-96cbdef867b9':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:36,360 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'DEFAULT.6da64b5bd2ee-84aafccb-eb17-46a9-ab3c-96cbdef867b9':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:36,383 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutting down.
2021-04-24 02:02:36,383 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO paused.
2021-04-24 02:02:36,911 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:36,911 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-24 02:02:36,965 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:36,965 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:36,965 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:36,965 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:36,965 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:36,965 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler
2021-04-24 02:02:36,965 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:36,969 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:36,975 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:36,975 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:36,979 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:36,982 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:36,982 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO started.
2021-04-24 02:02:37,081 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'DEFAULT.6da64b5bd2ee-edd0cf95-075a-4dd8-942d-f26032940bb6':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:37,136 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'DEFAULT.6da64b5bd2ee-edd0cf95-075a-4dd8-942d-f26032940bb6':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:37,202 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutting down.
2021-04-24 02:02:37,202 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO paused.
2021-04-24 02:02:38,857 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:38,909 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:38,909 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:38,909 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:38,909 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:38,909 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:38,909 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler
2021-04-24 02:02:38,909 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:38,987 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-24 02:02:38,987 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO paused.
2021-04-24 02:02:39,916 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:39,965 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:39,965 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:39,965 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:39,965 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:39,965 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:39,965 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler
2021-04-24 02:02:39,965 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:39,970 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-24 02:02:39,970 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO paused.
2021-04-24 02:02:40,972 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:41,026 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:41,026 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:41,026 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:41,026 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:41,026 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testTriggerFiringScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:41,027 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testTriggerFiringScheduler
2021-04-24 02:02:41,027 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:41,106 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:41,113 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:41,113 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:41,116 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:41,119 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:41,119 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO started.
2021-04-24 02:02:42,366 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@b86d94b
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:02:43,800 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@27ac8350
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:02:46,247 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutting down.
2021-04-24 02:02:46,247 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO paused.
2021-04-24 02:02:47,233 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:47,288 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:47,288 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:47,288 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:47,288 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:47,288 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:47,288 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler
2021-04-24 02:02:47,288 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:47,789 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutting down.
2021-04-24 02:02:47,789 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO paused.
2021-04-24 02:02:48,795 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:49,046 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:49,046 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:49,046 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:49,046 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:49,046 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:49,046 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler
2021-04-24 02:02:49,046 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:49,049 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:49,054 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:49,054 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:49,056 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:49,058 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:49,058 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO started.
2021-04-24 02:02:49,071 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:49,101 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutting down.
2021-04-24 02:02:49,101 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO paused.
2021-04-24 02:02:50,054 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:50,107 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:50,107 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:50,107 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:50,107 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:50,107 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:50,107 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler
2021-04-24 02:02:50,107 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:50,110 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:50,115 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:50,115 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:50,117 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:50,119 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:50,119 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO started.
2021-04-24 02:02:50,169 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutting down.
2021-04-24 02:02:50,169 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO paused.
2021-04-24 02:02:51,117 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:51,170 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:51,170 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:51,170 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:51,170 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:51,170 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:51,170 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler
2021-04-24 02:02:51,170 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:51,188 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:51,193 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:51,193 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:51,194 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:51,196 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:51,196 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO started.
2021-04-24 02:02:51,203 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:51,225 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutting down.
2021-04-24 02:02:51,225 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO paused.
2021-04-24 02:02:52,176 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:52,236 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:52,236 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:52,236 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:52,236 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:52,236 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:52,236 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler
2021-04-24 02:02:52,236 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:52,253 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutting down.
2021-04-24 02:02:52,254 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO paused.
2021-04-24 02:02:53,278 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:53,332 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:53,332 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:53,332 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:53,332 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:53,332 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:53,332 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler
2021-04-24 02:02:53,332 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:53,336 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:53,341 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:53,341 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:53,343 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:53,344 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:53,344 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO started.
2021-04-24 02:02:53,351 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:53,413 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutting down.
2021-04-24 02:02:53,413 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO paused.
2021-04-24 02:02:53,927 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:53,927 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-24 02:02:53,979 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:53,979 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:53,979 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:53,979 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:53,979 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:53,979 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler
2021-04-24 02:02:53,979 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:53,983 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:53,987 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:53,988 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:53,989 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:53,991 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:53,991 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO started.
2021-04-24 02:02:54,155 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:54,185 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:54,208 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutting down.
2021-04-24 02:02:54,208 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO paused.
2021-04-24 02:02:55,734 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:55,791 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:55,791 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:55,791 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:55,791 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:55,791 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:55,792 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler
2021-04-24 02:02:55,792 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:55,994 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-24 02:02:55,994 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO paused.
2021-04-24 02:02:56,799 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:56,847 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:56,847 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:56,847 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:56,847 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:56,847 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:56,847 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler
2021-04-24 02:02:56,847 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:56,853 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-24 02:02:56,853 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO paused.
2021-04-24 02:02:57,871 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-24 02:02:57,922 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:02:57,922 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:02:57,922 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:02:57,922 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:02:57,922 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testTriggerFiringScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:02:57,922 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testTriggerFiringScheduler
2021-04-24 02:02:57,922 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:02:57,986 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:02:57,991 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:02:57,991 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:02:57,992 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:02:57,994 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:02:57,994 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO started.
2021-04-24 02:02:58,000 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:58,018 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:58,348 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:58,402 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName5':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:58,517 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:58,623 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName6':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:58,624 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:58,792 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName16':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:58,801 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName19':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:58,809 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName17':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:58,911 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:58,970 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName20':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:58,970 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:58,972 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName20':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:59,025 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:59,292 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:59,404 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:59,407 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:59,511 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:59,624 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:59,628 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:59,733 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:59,737 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:02:59,793 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName34':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:02:59,898 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName34':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:00,058 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:00,225 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:00,227 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:00,281 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:00,437 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:00,444 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName41':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:00,496 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:00,601 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName44':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:00,656 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName44':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:00,808 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@574f74e
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 5 more
2021-04-24 02:03:00,964 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName44':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:00,971 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:00,972 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:01,126 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:01,130 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:01,288 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:01,343 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:01,497 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:01,708 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:01,711 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:01,714 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:01,717 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:01,821 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:01,881 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName50':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:02,036 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName50':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:02,143 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:02,356 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@71e4cf3f
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:02,458 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:02,462 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName55':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:02,464 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@7f1520e0
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:02,675 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@3c370505
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-24 02:03:02,982 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName59':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:03,086 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:03,090 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:03,196 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName61':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:03,249 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName61':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:03,354 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:03,407 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName61':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:03,669 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName62':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:03,671 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:03,771 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:03,880 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName64':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:03,935 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName64':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:03,940 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:03,942 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName64':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:03,993 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:04,200 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:04,357 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:04,359 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:04,463 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:04,464 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:04,472 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:04,685 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName71':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:04,945 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:04,947 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName70':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:04,948 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:05,007 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName73':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:05,217 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName72':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:05,218 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:05,222 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName72':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:05,225 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:05,278 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName75':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:05,329 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:05,436 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:05,440 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:05,599 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:05,600 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName80':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:05,654 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName80':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:05,661 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:05,713 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:05,764 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName82':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:06,073 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@2d2adb7b
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:06,131 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName86':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:06,132 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@54b594c1
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:06,136 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName86':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:06,240 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:06,550 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@393c59f8
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-24 02:03:06,656 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:06,710 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:06,922 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:06,967 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@4837b723
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-24 02:03:06,976 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName90':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:07,129 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@678ac317
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-24 02:03:07,236 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:07,503 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:07,556 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName95':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:07,608 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:07,762 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@664e750f
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-24 02:03:07,864 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName95':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:57 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:08,171 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@19964b27
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-24 02:03:08,373 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@19964b27
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:08,478 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName98':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:08,644 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:08,798 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@13d36eda
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:08,807 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:08,900 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:08,954 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:08,968 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@769b4545
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:09,060 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName10':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:09,216 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:09,269 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName10':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:09,325 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:09,330 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName11':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:09,330 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:09,435 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:09,491 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName13':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:09,546 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName13':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:09,599 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName13':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:09,755 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:09,757 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:10,224 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:10,226 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName21':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:10,335 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:10,337 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName22':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:10,389 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:10,399 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:10,402 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:10,440 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:10,443 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:10,598 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:10,651 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:10,703 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:11,016 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@52149094
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-24 02:03:11,118 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:11,172 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:11,535 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:11,651 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:11,655 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:11,706 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:11,708 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:11,764 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:11,923 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:12,141 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:12,142 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName40':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:12,297 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName40':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:12,301 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName40':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:12,460 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:12,463 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:12,465 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:12,466 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:12,519 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:12,520 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:12,625 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:12,881 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@1ee521b7
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-24 02:03:12,932 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:12,935 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:12,938 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:13,049 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:13,154 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:13,259 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:13,312 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:13,368 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:13,477 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName50':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:13,525 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@83312d
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:13,586 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName49':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:13,739 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@56f0d7e7
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-24 02:03:13,941 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:13,945 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:13,949 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:14,006 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName55':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:14,006 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:14,116 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:14,170 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName61':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:14,275 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:14,537 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@6620196
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-24 02:03:14,642 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:14,694 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName62':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:14,905 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName65':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:14,914 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:14,916 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:15,069 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@12354461
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-24 02:03:15,227 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName69':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:15,271 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@6c1d247c
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-24 02:03:15,280 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName69':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:15,282 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:15,339 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:15,374 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:15,530 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName70':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:15,687 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:15,843 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName72':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:16,053 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:16,102 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@18cd3863
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-24 02:03:16,105 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName76':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:16,107 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:16,314 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:16,525 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:16,679 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:16,681 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:16,835 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@15455470
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-24 02:03:17,038 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@15455470
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-24 02:03:17,140 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:17,192 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:17,193 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:17,196 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:17,250 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:17,507 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:17,617 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName84':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:17,771 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName84':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:17,775 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName84':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:17,884 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName86':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:17,888 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName85':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:17,889 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName85':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:17,938 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:17,941 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:18,043 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@578c0152
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-24 02:03:18,044 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:18,046 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:18,049 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:18,102 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:58 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:18,253 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@7ce1e29b
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-24 02:03:18,358 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:18,422 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:18,572 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@5e4ac869
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:18,627 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName93':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:18,942 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName95':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:19,151 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:19,255 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:19,258 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:19,420 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:19,530 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName3':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:19,533 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:19,743 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName2':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:19,797 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:19,853 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName6':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:19,853 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:19,903 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:19,906 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName8':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:19,909 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:19,910 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName10':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:20,128 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:20,133 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:20,238 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName17':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:20,292 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:20,452 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:20,612 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:20,718 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:20,773 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:20,836 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:20,841 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:20,894 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:21,048 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:21,152 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:21,259 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName30':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:21,418 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName29':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:21,470 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:21,480 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:21,480 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:21,482 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:21,588 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:21,590 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:21,653 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName37':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:21,804 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@3aa18092
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:21,817 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:21,920 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:21,923 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:21,975 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:21,978 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:22,134 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@a6fc7bb
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-24 02:03:22,189 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:22,400 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName41':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:22,607 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName41':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:22,610 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:22,611 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName41':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:22,828 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:22,835 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:22,888 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:22,992 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:23,048 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:23,050 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName50':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:23,204 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:23,211 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:23,267 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName53':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:23,269 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName53':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:23,324 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:23,435 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:23,496 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:24,166 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:24,224 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:24,436 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName62':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:24,487 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@47626619
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:24,649 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:24,694 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@24d66ecd
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-24 02:03:24,857 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName66':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:24,859 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:24,863 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:24,865 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName69':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:25,022 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:25,228 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:25,334 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName71':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:25,334 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:25,505 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:25,609 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName76':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:25,660 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:25,815 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:25,930 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:26,087 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:26,099 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName85':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:26,156 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:26,269 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName90':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:26,323 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:26,533 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName93':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:26,685 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@7ee63eb7
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:26,685 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@2753b4ee
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 5 more
2021-04-24 02:03:26,791 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:27,205 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@1fc6d4f7
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:27,253 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@40248a3
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-24 02:03:27,304 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName95':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:27,457 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:27,562 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName95':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:27,663 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:27,666 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:27,668 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:27,668 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:27,669 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:27,822 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@7305f708
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-24 02:03:27,980 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName97':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:27,982 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName97':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:27,984 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:27,985 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName97':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:02:59 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:27,986 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:27,988 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:28,130 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@63cfbe94
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-24 02:03:28,199 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:28,506 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName99':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:28,618 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:28,722 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:28,726 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:28,730 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:28,732 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName2':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:28,885 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:29,045 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName5':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:29,102 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName5':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:29,155 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:29,316 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@200590a2
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:29,367 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:29,472 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName6':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:29,583 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName10':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:29,738 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName10':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:29,739 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:29,746 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:29,901 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@1a81ecae
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-24 02:03:29,955 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:29,960 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:30,065 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:30,122 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@18e98ba0
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:30,235 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:30,503 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:30,659 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@7c770590
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:30,703 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:30,708 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:30,763 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName30':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:30,920 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:30,922 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName29':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:30,931 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:31,036 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:31,089 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@6d2a8d33
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:31,201 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:31,300 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:31,307 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:31,514 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:31,522 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:31,578 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:31,632 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:31,730 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@45e6f9df
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:31,793 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@534d5eec
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-24 02:03:31,837 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:31,846 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:31,897 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:32,099 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName50':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:32,251 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:32,254 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName49':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:32,406 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@a581947
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-24 02:03:32,508 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:32,614 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:32,723 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName53':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:32,779 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:32,836 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName55':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:32,838 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName55':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:33,051 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@193c475c
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-24 02:03:33,102 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName57':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:33,110 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:33,262 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@1a2e60f7
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-24 02:03:33,366 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:33,522 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:33,626 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:33,830 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:33,832 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:33,833 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:33,886 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:33,991 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:34,047 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:34,049 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:34,050 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:34,052 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:34,056 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:34,472 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:34,630 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:34,631 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName63':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:34,738 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName62':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:34,740 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName62':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:34,744 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName62':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:34,747 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName62':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:34,901 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:35,267 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:35,370 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:35,476 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName66':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:35,530 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName66':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:35,734 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@4c3f29bf
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:35,737 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName68':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:35,793 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName68':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:35,796 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName68':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:35,800 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName71':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:35,953 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:35,958 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:36,014 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:36,017 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:36,171 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName72':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:36,225 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:36,228 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:36,383 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:36,589 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:36,847 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:36,901 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:36,903 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:37,213 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:37,267 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:37,321 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:37,429 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:37,433 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:37,485 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:37,487 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName78':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:37,490 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:37,743 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:37,898 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:37,898 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:38,006 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:38,014 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:38,168 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@44710e19
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-24 02:03:38,370 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@44710e19
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-24 02:03:38,424 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:38,590 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:38,696 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName92':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:38,849 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@25cbf91f
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-24 02:03:39,161 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName95':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:00 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:39,267 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName95':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:39,325 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:39,424 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:39,584 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:39,696 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName0':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:39,797 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:39,816 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:39,972 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@74be79b9
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-24 02:03:40,024 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:40,082 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName5':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:40,085 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:40,088 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:40,198 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName6':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:40,300 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:40,361 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:40,416 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:40,519 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:40,521 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:40,575 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:40,681 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:40,687 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName11':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:40,842 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName11':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:40,894 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName11':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:40,948 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName11':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:41,001 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName11':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:41,004 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:41,109 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:41,316 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:41,318 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:41,471 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:41,475 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:41,475 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:41,630 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@41d1fd25
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-24 02:03:41,631 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@41a3d782
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-24 02:03:41,781 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName16':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:41,784 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:41,894 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName18':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:42,052 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:42,057 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName21':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:42,062 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:42,064 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName23':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:42,171 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:42,227 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName22':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:42,433 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:42,435 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName22':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:42,747 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName24':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:42,749 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName24':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:42,958 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:42,958 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:43,063 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:43,118 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:43,172 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:43,438 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName28':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:43,529 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@5833f141
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-24 02:03:43,688 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName32':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:43,742 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:44,002 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@6b435352
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-24 02:03:44,205 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@6b435352
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-24 02:03:44,306 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:44,618 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@49de5c05
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-24 02:03:44,621 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@4db25a65
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-24 02:03:44,727 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:44,785 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:44,821 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:44,975 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@315b2838
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-24 02:03:45,127 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:45,128 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:45,134 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:45,137 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:45,139 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:45,250 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:45,352 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:45,558 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:45,561 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:45,619 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:45,623 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:03:01 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:45,677 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:45,732 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName50':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:45,885 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@32b71c1a
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-24 02:03:45,905 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutting down.
2021-04-24 02:03:45,905 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO paused.
2021-04-24 02:03:46,684 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutdown complete.
2021-04-24 02:03:46,733 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:03:46,733 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:03:46,733 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:03:46,733 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:03:46,733 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:03:46,733 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler
2021-04-24 02:03:46,733 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:03:47,234 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutting down.
2021-04-24 02:03:47,234 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO paused.
2021-04-24 02:03:48,248 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutdown complete.
2021-04-24 02:03:48,500 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:03:48,500 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:03:48,500 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:03:48,500 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:03:48,500 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:03:48,500 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler
2021-04-24 02:03:48,500 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:03:48,504 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:03:48,508 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:03:48,508 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:03:48,509 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:03:48,511 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:03:48,511 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO started.
2021-04-24 02:03:48,511 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedBefore': java.sql.SQLException: FlakyConnection failed on you on creation.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedBefore': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3246)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:48,553 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:48,553 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutting down.
2021-04-24 02:03:48,553 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO paused.
2021-04-24 02:03:49,512 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutdown complete.
2021-04-24 02:03:49,557 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:03:49,558 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:03:49,558 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:03:49,558 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:03:49,558 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:03:49,558 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler
2021-04-24 02:03:49,558 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:03:49,561 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:03:49,566 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:03:49,566 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:03:49,567 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:03:49,570 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:03:49,570 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO started.
2021-04-24 02:03:49,576 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:49,632 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:49,655 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutting down.
2021-04-24 02:03:49,656 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO paused.
2021-04-24 02:03:49,656 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:50,592 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutdown complete.
2021-04-24 02:03:50,639 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:03:50,639 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:03:50,639 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:03:50,639 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:03:50,639 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:03:50,639 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler
2021-04-24 02:03:50,639 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:03:50,657 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:03:50,661 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:03:50,661 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:03:50,663 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:03:50,664 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:03:50,664 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO started.
2021-04-24 02:03:50,692 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutting down.
2021-04-24 02:03:50,693 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO paused.
2021-04-24 02:03:50,745 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:51,725 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutdown complete.
2021-04-24 02:03:51,782 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:03:51,782 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:03:51,782 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:03:51,782 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:03:51,782 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:03:51,782 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler
2021-04-24 02:03:51,782 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:03:51,801 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutting down.
2021-04-24 02:03:51,801 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO paused.
2021-04-24 02:03:52,792 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutdown complete.
2021-04-24 02:03:52,840 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:03:52,841 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:03:52,841 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:03:52,841 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:03:52,841 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:03:52,841 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler
2021-04-24 02:03:52,841 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:03:52,844 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:03:52,848 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:03:52,848 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:03:52,850 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:03:52,851 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:03:52,851 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO started.
2021-04-24 02:03:52,851 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testShutdownWithoutWaitIsUnclean': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:53,017 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutting down.
2021-04-24 02:03:53,017 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO paused.
2021-04-24 02:03:53,529 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutdown complete.
2021-04-24 02:03:53,530 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-24 02:03:53,575 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:03:53,575 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:03:53,575 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:03:53,575 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:03:53,575 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:03:53,575 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler
2021-04-24 02:03:53,575 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:03:53,578 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:03:53,582 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:03:53,582 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:03:53,584 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:03:53,585 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:03:53,586 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO started.
2021-04-24 02:03:53,586 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testShutdownWithWaitIsClean': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-24 02:03:53,721 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-24 02:03:53,752 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutting down.
2021-04-24 02:03:53,752 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO paused.
2021-04-24 02:03:55,287 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutdown complete.
2021-04-24 02:03:55,337 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:03:55,337 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:03:55,337 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:03:55,337 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:03:55,337 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:03:55,337 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler
2021-04-24 02:03:55,337 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:03:55,410 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-24 02:03:55,410 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO paused.
2021-04-24 02:03:56,348 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-24 02:03:56,393 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:03:56,393 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:03:56,393 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:03:56,393 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:03:56,393 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:03:56,393 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler
2021-04-24 02:03:56,393 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:03:56,398 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-24 02:03:56,398 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO paused.
2021-04-24 02:03:57,407 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutdown complete.
Tests run: 50, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 140.327 sec
Running org.quartz.JobDetailTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.06 sec
Running org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test
2021-04-24 02:03:58,359 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Starting Database ---------------------
Sat Apr 24 02:03:58 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-24 02:03:59,395 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Database started ---------------------
2021-04-24 02:03:59,395 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Creating Database tables ---------------------
2021-04-24 02:03:59,397 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-24 02:04:16,529 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Database tables created ---------------------
2021-04-24 02:04:16,623 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:04:16,657 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-24 02:04:16,694 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-24 02:04:16,732 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:04:16,756 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:04:16,756 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:04:16,757 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:04:16,758 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:04:16,759 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:04:16,759 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:04:16,759 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:04:16,759 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Initializing ----------------------
2021-04-24 02:04:16,759 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Initialization Complete -----------
2021-04-24 02:04:16,759 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Scheduling Job  -------------------
2021-04-24 02:04:16,787 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahorc17nvssoq|48da64f2, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahorc17nvssoq|48da64f2, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:04:17,297 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:04:17,332 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:04:17,333 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:04:17,342 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:04:17,361 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:04:17,362 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:04:17,362 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Scheduler Started -----------------
2021-04-24 02:04:17,653 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:17 EDT 2021
2021-04-24 02:04:17,743 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:17 EDT 2021
2021-04-24 02:04:17,882 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:17 EDT 2021
2021-04-24 02:04:18,058 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:18 EDT 2021
2021-04-24 02:04:19,793 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:19 EDT 2021
2021-04-24 02:04:19,910 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:19 EDT 2021
2021-04-24 02:04:20,019 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:20 EDT 2021
2021-04-24 02:04:20,068 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:20 EDT 2021
2021-04-24 02:04:22,808 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:22 EDT 2021
2021-04-24 02:04:22,908 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:22 EDT 2021
2021-04-24 02:04:22,986 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:22 EDT 2021
2021-04-24 02:04:23,103 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:23 EDT 2021
2021-04-24 02:04:25,794 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:25 EDT 2021
2021-04-24 02:04:25,827 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:25 EDT 2021
2021-04-24 02:04:25,878 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:25 EDT 2021
2021-04-24 02:04:25,945 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:25 EDT 2021
2021-04-24 02:04:26,377 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Shutting down database ! -----------------
Sat Apr 24 02:04:26 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-24 02:04:27,375 INFO [com.mchange.v2.c3p0.stmt.GooGooStatementCache] - Problem with checked-in Statement, discarding.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.PreparedStatement.clearParameters(Unknown Source)
	at com.mchange.v2.c3p0.stmt.GooGooStatementCache.refreshStatement(GooGooStatementCache.java:622)
	at com.mchange.v2.c3p0.stmt.GooGooStatementCache.checkinStatement(GooGooStatementCache.java:272)
	at com.mchange.v2.c3p0.impl.NewPooledConnection.checkinStatement(NewPooledConnection.java:326)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.close(NewProxyPreparedStatement.java:1705)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.closeStatement(StdJDBCDelegate.java:3287)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.countMisfiredTriggersInState(StdJDBCDelegate.java:402)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3254)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Statement.checkForClosedStatement(Unknown Source)
	... 10 more
2021-04-24 02:04:27,377 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-24 02:04:27,377 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3273)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 12 more
2021-04-24 02:04:27,378 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Couldn't rollback jdbc connection. No current connection.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3273)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 12 more
2021-04-24 02:04:27,379 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-24 02:04:27,379 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.setAutoCommit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1656)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3283)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 7 more
2021-04-24 02:04:27,379 WARN [org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler] - Failed restore connection's original auto commit setting.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.setAutoCommit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1656)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3283)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 7 more
2021-04-24 02:04:27,381 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Database error recovering from misfires.
org.quartz.JobPersistenceException: Database error recovering from misfires. [See nested exception: java.sql.SQLNonTransientConnectionException: Insufficient data while reading from the network - expected a minimum of 6 bytes and received only 0 bytes.  The connection has been terminated.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3274)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLNonTransientConnectionException: Insufficient data while reading from the network - expected a minimum of 6 bytes and received only 0 bytes.  The connection has been terminated.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.PreparedStatement.executeQuery(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:379)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.countMisfiredTriggersInState(StdJDBCDelegate.java:393)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3254)
	... 2 more
Caused by: org.apache.derby.client.am.DisconnectException: Insufficient data while reading from the network - expected a minimum of 6 bytes and received only 0 bytes.  The connection has been terminated.
	at org.apache.derby.client.net.Reply.fill(Unknown Source)
	at org.apache.derby.client.net.Reply.ensureALayerDataInBuffer(Unknown Source)
	at org.apache.derby.client.net.Reply.readDssHeader(Unknown Source)
	at org.apache.derby.client.net.Reply.startSameIdChainParse(Unknown Source)
	at org.apache.derby.client.net.NetStatementReply.readOpenQuery(Unknown Source)
	at org.apache.derby.client.net.StatementReply.readOpenQuery(Unknown Source)
	at org.apache.derby.client.net.NetStatement.readOpenQuery_(Unknown Source)
	at org.apache.derby.client.am.Statement.readOpenQuery(Unknown Source)
	at org.apache.derby.client.am.PreparedStatement.flowExecute(Unknown Source)
	at org.apache.derby.client.am.PreparedStatement.executeQueryX(Unknown Source)
	... 6 more
2021-04-24 02:04:28,764 INFO [com.mchange.v2.c3p0.stmt.GooGooStatementCache] - Problem with checked-in Statement, discarding.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.PreparedStatement.clearParameters(Unknown Source)
	at com.mchange.v2.c3p0.stmt.GooGooStatementCache.refreshStatement(GooGooStatementCache.java:622)
	at com.mchange.v2.c3p0.stmt.GooGooStatementCache.checkinStatement(GooGooStatementCache.java:272)
	at com.mchange.v2.c3p0.impl.NewPooledConnection.checkinStatement(NewPooledConnection.java:326)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.close(NewProxyPreparedStatement.java:1705)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.closeStatement(StdJDBCDelegate.java:3287)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggerState(StdJDBCDelegate.java:1960)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggerFired(JobStoreSupport.java:3030)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$44.execute(JobStoreSupport.java:2985)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$44.execute(JobStoreSupport.java:2978)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3864)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Statement.checkForClosedStatement(Unknown Source)
	... 13 more
2021-04-24 02:04:28,765 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-24 02:04:28,765 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.commit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.commit(NewProxyConnection.java:1578)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 11 more
2021-04-24 02:04:28,766 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-24 02:04:28,766 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3868)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 12 more
2021-04-24 02:04:28,767 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Couldn't rollback jdbc connection. No current connection.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3868)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 12 more
2021-04-24 02:04:28,770 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-24 02:04:28,770 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3886)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 14 more
2021-04-24 02:04:28,771 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Couldn't rollback jdbc connection. No current connection.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3886)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 14 more
2021-04-24 02:04:28,772 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-24 02:04:28,772 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.setAutoCommit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1656)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3896)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 9 more
2021-04-24 02:04:28,773 WARN [org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler] - Failed restore connection's original auto commit setting.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.setAutoCommit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1656)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3896)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 9 more
2021-04-24 02:04:36,589 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Database back online ! -----------------
2021-04-24 02:04:42,388 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Handling 3 trigger(s) that missed their scheduled fire-time.
2021-04-24 02:04:43,787 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-24 02:04:43,787 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3886)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 12 more
2021-04-24 02:04:43,787 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Couldn't rollback jdbc connection. No current connection.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3886)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 12 more
2021-04-24 02:04:43,788 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-24 02:04:43,788 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.setAutoCommit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1656)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3896)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 7 more
2021-04-24 02:04:43,788 WARN [org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler] - Failed restore connection's original auto commit setting.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.setAutoCommit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1656)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3896)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 7 more
2021-04-24 02:04:43,789 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'group1.job1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Sat Apr 24 02:04:28 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. No current connection. [See nested exception: java.sql.SQLNonTransientConnectionException: No current connection.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.commit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.commit(NewProxyConnection.java:1578)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 11 more
2021-04-24 02:04:43,848 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:43 EDT 2021
2021-04-24 02:04:43,881 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:43 EDT 2021
2021-04-24 02:04:43,914 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:04:43 EDT 2021
2021-04-24 02:04:46,598 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Shutting Down Scheduler---------------------
2021-04-24 02:04:46,598 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:04:46,598 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:04:47,088 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:04:47,088 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Shutdown Complete -----------------
2021-04-24 02:04:47,088 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Destroying Database ---------------------
2021-04-24 02:04:48,561 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Database destroyed ---------------------
2021-04-24 02:04:48,663 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Database shutdown ---------------------
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 50.443 sec
Running org.quartz.integrations.tests.JobDataMapStorageTest
2021-04-24 02:04:49,117 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Sat Apr 24 02:04:49 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-24 02:04:50,044 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-24 02:04:50,045 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-24 02:04:50,050 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-24 02:05:00,895 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-24 02:05:00,998 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:05:01,025 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-24 02:05:01,065 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-24 02:05:01,106 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:05:01,131 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:05:01,131 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:05:01,132 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:05:01,132 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:05:01,133 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:05:01,133 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:05:01,133 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:05:01,133 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:05:01,155 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahosa9rvczxur|5a8b42a3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahosa9rvczxur|5a8b42a3, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:05:01,352 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:05:01,442 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:05:01,442 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:05:01,451 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:05:01,462 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:05:01,464 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:05:01,464 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:05:01,748 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:05:01,748 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:05:01,748 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:05:02,120 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:05:02,120 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:05:02,122 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-24 02:05:03,786 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Sat Apr 24 02:05:03 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-24 02:05:03,888 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 14.906 sec
Running org.quartz.integrations.tests.QuartzDatabaseCronTriggerTest
2021-04-24 02:05:04,387 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Sat Apr 24 02:05:04 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-24 02:05:05,337 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-24 02:05:05,337 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-24 02:05:05,342 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-24 02:05:15,990 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-24 02:05:16,113 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:05:16,164 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-24 02:05:16,204 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-24 02:05:16,253 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:05:16,287 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:05:16,288 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:05:16,289 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:05:16,290 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:05:16,291 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:05:16,291 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:05:16,291 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:05:16,291 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:05:16,317 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahosly9kwb2lv|5a8b42a3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahosly9kwb2lv|5a8b42a3, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:05:16,554 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:05:16,651 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:05:16,651 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:05:16,661 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:05:16,675 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:05:16,679 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:05:16,679 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:05:18,312 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:05:18,312 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:05:18,312 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:05:18,771 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:05:18,771 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:05:18,773 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-24 02:05:20,339 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Sat Apr 24 02:05:20 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-24 02:05:20,442 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.209 sec
Running org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test
2021-04-24 02:05:20,927 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Starting Database ---------------------
Sat Apr 24 02:05:21 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-24 02:05:21,910 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Database started ---------------------
2021-04-24 02:05:21,910 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Creating Database tables ---------------------
2021-04-24 02:05:21,913 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-24 02:05:32,659 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Database tables created ---------------------
2021-04-24 02:05:32,783 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:05:32,818 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-24 02:05:32,859 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-24 02:05:32,911 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:05:32,938 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:05:32,938 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:05:32,939 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:05:32,940 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:05:32,941 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:05:32,941 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:05:32,941 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:05:32,941 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Initializing ----------------------
2021-04-24 02:05:32,941 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Initialization Complete -----------
2021-04-24 02:05:32,941 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Scheduling Job  -------------------
2021-04-24 02:05:32,972 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahosysuwg8j1g|30665461, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahosysuwg8j1g|30665461, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:05:33,373 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:05:33,410 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:05:33,411 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:05:33,421 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:05:33,433 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:05:33,434 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:05:33,435 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Scheduler Started -----------------
2021-04-24 02:05:33,718 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:33 EDT 2021
2021-04-24 02:05:33,788 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:33 EDT 2021
2021-04-24 02:05:33,854 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:33 EDT 2021
2021-04-24 02:05:33,887 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:33 EDT 2021
2021-04-24 02:05:33,929 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:33 EDT 2021
2021-04-24 02:05:33,962 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:33 EDT 2021
2021-04-24 02:05:33,996 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:33 EDT 2021
2021-04-24 02:05:35,038 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:35 EDT 2021
2021-04-24 02:05:40,022 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:40 EDT 2021
2021-04-24 02:05:43,461 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Shutting Down Scheduler---------------------
2021-04-24 02:05:43,461 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:05:43,461 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:05:43,950 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:05:43,950 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Shutdown Complete -----------------
2021-04-24 02:05:43,950 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Destroying Database ---------------------
2021-04-24 02:05:45,508 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Database destroyed ---------------------
Sat Apr 24 02:05:45 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-24 02:05:45,609 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Database shutdown ---------------------
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 24.827 sec
Running org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest
2021-04-24 02:05:46,185 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:05:46,225 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:05:46,225 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:05:46,226 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:05:46,228 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:05:46,228 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:05:46,228 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:05:46,228 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:05:46,228 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:05:46,228 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:05:46,264 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:05:46,264 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:05:46,264 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:05:46,265 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:46 EDT 2021
2021-04-24 02:05:46,699 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:05:46,699 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:05:46,704 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:05:46,706 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:05:46,706 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:05:46,706 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:05:46,707 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:05:46,707 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:05:46,707 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:05:46,707 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:05:46,707 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:05:46,707 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:05:46,711 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:05:46,712 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:05:46,712 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:05:46,715 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:46 EDT 2021
2021-04-24 02:05:47,206 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:05:47,206 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:05:47,208 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:05:47,210 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:05:47,210 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:05:47,210 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:05:47,210 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:05:47,211 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:05:47,211 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:05:47,211 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:05:47,211 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:05:47,217 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:05:47,220 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:05:47,220 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:05:47,220 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:05:47,223 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:47 EDT 2021
2021-04-24 02:05:47,710 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:05:47,710 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:05:47,711 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:05:47,713 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:05:47,713 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:05:47,713 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:05:47,713 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:05:47,713 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:05:47,714 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:05:47,714 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:05:47,714 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:05:47,714 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:05:47,718 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:05:47,718 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:05:47,718 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:05:47,720 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:05:47 EDT 2021
2021-04-24 02:05:48,213 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:05:48,213 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.251 sec
Running org.quartz.integrations.tests.QuartzMemoryCronTriggerTest
2021-04-24 02:05:48,757 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:05:48,798 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:05:48,798 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:05:48,802 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:05:48,805 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:05:48,806 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:05:48,806 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:05:48,806 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:05:48,807 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:05:48,807 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:05:50,344 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:05:50,344 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:05:50,345 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:05:50,844 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:05:50,844 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.322 sec
Running org.quartz.integrations.tests.StdRowLockSemaphoreTest
2021-04-24 02:05:51,323 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Sat Apr 24 02:05:51 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-24 02:05:52,364 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-24 02:05:52,364 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-24 02:05:52,370 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-24 02:06:04,082 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-24 02:06:04,218 INFO [org.quartz.impl.StdSchedulerFactory] - Using custom data access locking (synchronization): org.quartz.integrations.tests.StdRowLockSemaphoreTest$MyLock
2021-04-24 02:06:04,219 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:06:04,255 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-24 02:06:04,297 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-24 02:06:04,345 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:06:04,374 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:06:04,375 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:06:04,376 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:06:04,377 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:06:04,377 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:06:04,377 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:06:04,377 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:06:04,403 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahotn2515fcjy6|2d2f09a4, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahotn2515fcjy6|2d2f09a4, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:06:04,776 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:06:04,829 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:06:04,829 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:06:04,840 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:06:04,853 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:06:04,870 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:06:04,871 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:06:04,976 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:06:04,976 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:06:04,976 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:06:05,360 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:06:05,360 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:06:05,364 INFO [org.quartz.impl.StdSchedulerFactory] - Using custom data access locking (synchronization): org.quartz.integrations.tests.StdRowLockSemaphoreTest$MyLock
2021-04-24 02:06:05,364 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:06:05,382 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:06:05,384 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:06:05,384 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:06:05,384 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:06:05,384 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:06:05,384 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:06:05,385 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:06:05,385 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:06:05,393 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahotn2515fcjy6|3705a85c, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahotn2515fcjy6|3705a85c, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:06:05,406 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 1 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:06:05,413 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:06:05,413 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:06:05,416 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:06:05,420 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 1 stale fired job entries.
2021-04-24 02:06:05,427 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:06:05,427 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:06:05,468 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:06:05,468 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:06:05,468 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:06:05,888 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:06:05,888 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:06:05,889 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-24 02:06:07,732 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Sat Apr 24 02:06:07 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-24 02:06:07,835 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.672 sec
Running org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest
2021-04-24 02:06:08,333 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Sat Apr 24 02:06:08 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-24 02:06:09,293 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-24 02:06:09,293 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-24 02:06:09,300 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-24 02:06:20,085 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-24 02:06:20,186 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:06:20,214 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-24 02:06:20,255 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-24 02:06:20,309 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:06:20,338 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:06:20,339 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:06:20,339 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:06:20,340 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:06:20,341 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:06:20,341 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:06:20,341 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:06:20,341 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:06:20,363 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahotzdg13roy5a|39ead1b7, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahotzdg13roy5a|39ead1b7, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:06:20,598 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:06:20,699 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:06:20,699 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:06:20,713 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:06:20,725 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:06:20,728 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:06:20,729 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:06:21,016 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Error retrieving job, setting trigger state to ERROR.
org.quartz.JobPersistenceException: Couldn't retrieve job because a required class was not found: null [See nested exception: java.lang.ClassNotFoundException]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retrieveJob(JobStoreSupport.java:1395)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTrigger(JobStoreSupport.java:2864)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$41.execute(JobStoreSupport.java:2805)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$41.execute(JobStoreSupport.java:2803)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3864)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.lang.ClassNotFoundException
	at org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest$SpecialClassLoadHelper.loadClass(JobClassNotFoundExceptionErrorsTriggersTest.java:81)
	at org.quartz.simpl.CascadingClassLoadHelper.loadClass(CascadingClassLoadHelper.java:138)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectJobDetail(StdJDBCDelegate.java:852)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retrieveJob(JobStoreSupport.java:1390)
	... 6 more
2021-04-24 02:06:21,163 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:06:21,163 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:06:21,163 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:06:21,325 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:06:21,325 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:06:21,328 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-24 02:06:22,843 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Sat Apr 24 02:06:22 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-24 02:06:22,945 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 14.766 sec
Running org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest
2021-04-24 02:06:23,592 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:06:23,597 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-24 02:06:23,640 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:06:23,640 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:06:23,642 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$SlowRAMJobStore] - RAMJobStore initialized.
2021-04-24 02:06:23,643 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$SlowRAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:06:23,644 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from an externally provided properties instance.
2021-04-24 02:06:23,644 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:06:23,644 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest] - ------- Initialization Complete -----------
2021-04-24 02:06:23,644 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest] - ------- Scheduling Job  -------------------
2021-04-24 02:06:23,660 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2021-04-24 02:06:23,660 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest] - ------- Scheduler Started -----------------
2021-04-24 02:06:24,662 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:24 EDT 2021
2021-04-24 02:06:25,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:25 EDT 2021
2021-04-24 02:06:26,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:26 EDT 2021
2021-04-24 02:06:27,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:27 EDT 2021
2021-04-24 02:06:28,651 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:28 EDT 2021
2021-04-24 02:06:29,656 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:29 EDT 2021
2021-04-24 02:06:30,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:30 EDT 2021
2021-04-24 02:06:31,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:31 EDT 2021
2021-04-24 02:06:32,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:32 EDT 2021
2021-04-24 02:06:33,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:33 EDT 2021
2021-04-24 02:06:34,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:34 EDT 2021
2021-04-24 02:06:35,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:35 EDT 2021
2021-04-24 02:06:36,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:36 EDT 2021
2021-04-24 02:06:37,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:37 EDT 2021
2021-04-24 02:06:38,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:38 EDT 2021
2021-04-24 02:06:39,656 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:39 EDT 2021
2021-04-24 02:06:40,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:40 EDT 2021
2021-04-24 02:06:41,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:41 EDT 2021
2021-04-24 02:06:42,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:42 EDT 2021
2021-04-24 02:06:43,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:43 EDT 2021
2021-04-24 02:06:44,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:44 EDT 2021
2021-04-24 02:06:45,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:45 EDT 2021
2021-04-24 02:06:46,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:46 EDT 2021
2021-04-24 02:06:47,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:47 EDT 2021
2021-04-24 02:06:48,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:48 EDT 2021
2021-04-24 02:06:49,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:49 EDT 2021
2021-04-24 02:06:50,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:50 EDT 2021
2021-04-24 02:06:51,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:51 EDT 2021
2021-04-24 02:06:52,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:52 EDT 2021
2021-04-24 02:06:53,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:53 EDT 2021
2021-04-24 02:06:54,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:54 EDT 2021
2021-04-24 02:06:55,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:55 EDT 2021
2021-04-24 02:06:56,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:56 EDT 2021
2021-04-24 02:06:57,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:57 EDT 2021
2021-04-24 02:06:58,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:58 EDT 2021
2021-04-24 02:06:59,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:06:59 EDT 2021
2021-04-24 02:07:00,651 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:00 EDT 2021
2021-04-24 02:07:01,651 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:01 EDT 2021
2021-04-24 02:07:02,651 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:02 EDT 2021
2021-04-24 02:07:03,651 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:03 EDT 2021
2021-04-24 02:07:04,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:04 EDT 2021
2021-04-24 02:07:05,651 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:05 EDT 2021
2021-04-24 02:07:06,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:06 EDT 2021
2021-04-24 02:07:07,651 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:07 EDT 2021
2021-04-24 02:07:08,651 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:08 EDT 2021
2021-04-24 02:07:09,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:09 EDT 2021
2021-04-24 02:07:10,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:10 EDT 2021
2021-04-24 02:07:11,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:11 EDT 2021
2021-04-24 02:07:12,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:12 EDT 2021
2021-04-24 02:07:13,652 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Sat Apr 24 02:07:13 EDT 2021
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 50.399 sec
Running org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest
2021-04-24 02:07:14,122 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Sat Apr 24 02:07:14 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-24 02:07:15,099 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-24 02:07:15,099 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-24 02:07:15,104 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-24 02:07:25,542 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-24 02:07:25,650 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:07:25,679 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-24 02:07:25,720 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-24 02:07:25,764 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:25,789 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:25,789 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:25,790 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:07:25,791 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:25,791 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:07:25,791 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:25,791 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:25,792 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:07:25,814 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahovdvy1l0oa|3a69014e, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahovdvy1l0oa|3a69014e, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:07:26,024 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:26,099 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:26,100 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:26,111 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:26,122 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:26,125 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:07:26,126 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:07:26,448 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:07:26,448 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:26,448 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:26,780 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:26,780 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:07:26,782 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:07:26,794 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:26,795 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:26,795 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:26,796 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:07:26,796 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:26,796 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:07:26,796 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:26,796 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:26,796 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:07:26,807 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahovdvy1l0oa|2ae0eb98, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahovdvy1l0oa|2ae0eb98, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:07:26,813 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 1 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:26,820 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:26,820 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:26,824 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:26,826 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 1 stale fired job entries.
2021-04-24 02:07:26,837 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:07:26,838 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:07:26,972 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:07:26,972 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:26,972 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:27,305 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:27,305 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:07:27,308 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:07:27,330 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:27,339 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:27,339 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:27,339 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:07:27,339 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:27,340 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:07:27,340 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:27,340 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:27,340 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:07:27,346 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahovdvy1l0oa|21f421b8, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahovdvy1l0oa|21f421b8, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:07:27,355 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:27,359 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:27,360 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:27,362 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:27,363 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:27,364 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:07:27,365 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:07:27,479 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:07:27 EDT 2021
2021-04-24 02:07:27,497 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:07:27,497 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:27,497 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:27,846 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:27,846 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:07:27,848 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-24 02:07:27,858 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:27,863 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:27,863 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:27,864 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:07:27,864 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:27,864 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:07:27,864 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:27,864 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:27,864 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-24 02:07:27,869 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxahovdvy1l0oa|7f82a71f, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxahovdvy1l0oa|7f82a71f, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-24 02:07:27,875 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 1 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:27,881 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:27,881 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:27,883 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:27,885 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 1 stale fired job entries.
2021-04-24 02:07:27,904 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:07:27,905 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-24 02:07:27,972 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:07:27 EDT 2021
2021-04-24 02:07:28,021 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:07:28 EDT 2021
2021-04-24 02:07:28,097 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-24 02:07:28,097 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:28,097 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:28,570 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:28,570 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-24 02:07:28,571 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-24 02:07:30,332 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Sat Apr 24 02:07:30 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-24 02:07:30,433 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.472 sec
Running org.quartz.Quartz601Test
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.071 sec
Running org.quartz.JobDataMapTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.106 sec
Running org.quartz.JobBuilderTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.073 sec
Running org.quartz.DisallowConcurrentExecutionJobTest
2021-04-24 02:07:32,283 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:32,317 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:32,318 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:32,319 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:32,321 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:32,321 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'QuartzScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:32,321 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:32,324 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2021-04-24 02:07:32,945 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:32,946 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:33,446 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:33,458 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:33,459 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:33,459 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:33,459 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:33,459 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:33,459 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'QuartzScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:33,459 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:33,460 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2021-04-24 02:07:34,162 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:34,162 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:34,662 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.643 sec
Running org.quartz.impl.DirectSchedulerFactoryTest
2021-04-24 02:07:35,198 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:35,198 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:35,204 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:35,207 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'SimpleQuartzScheduler' with instanceId 'SIMPLE_NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:35,207 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'SimpleQuartzScheduler
2021-04-24 02:07:35,207 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:35,211 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:35,211 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:35,211 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:35,211 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'MyScheduler' with instanceId 'Instance1'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:35,212 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'MyScheduler
2021-04-24 02:07:35,212 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:35,212 INFO [org.quartz.core.QuartzScheduler] - Scheduler MyScheduler_$_Instance1 started.
2021-04-24 02:07:35,212 INFO [org.quartz.core.QuartzScheduler] - Scheduler MyScheduler_$_Instance1 shutting down.
2021-04-24 02:07:35,212 INFO [org.quartz.core.QuartzScheduler] - Scheduler MyScheduler_$_Instance1 paused.
2021-04-24 02:07:35,212 INFO [org.quartz.core.QuartzScheduler] - Scheduler MyScheduler_$_Instance1 shutdown complete.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.222 sec
Running org.quartz.impl.JobDetailImplTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.107 sec
Running org.quartz.impl.SchedulerDetailsSetterTest
2021-04-24 02:07:36,171 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:36,207 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:36,207 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:36,208 INFO [org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore] - RAMJobStore initialized.
2021-04-24 02:07:36,210 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.impl.SchedulerDetailsSetterTest$MyThreadPool' - with 10 threads.
  Using job-store 'org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:36,210 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:36,210 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:36,213 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:36,214 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:36,214 INFO [org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore] - RAMJobStore initialized.
2021-04-24 02:07:36,214 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'SimpleQuartzScheduler' with instanceId 'SIMPLE_NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.impl.SchedulerDetailsSetterTest$MyThreadPool' - with -1 threads.
  Using job-store 'org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:36,214 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'SimpleQuartzScheduler
2021-04-24 02:07:36,214 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:36,230 WARN [org.quartz.impl.SchedulerDetailsSetter] - IncompleteThreadPool does not implement setInstanceName(String)
2021-04-24 02:07:36,230 WARN [org.quartz.impl.SchedulerDetailsSetter] - IncompleteThreadPool does not implement setInstanceId(String)
2021-04-24 02:07:36,230 WARN [org.quartz.impl.SchedulerDetailsSetter] - java.lang.Object does not contain public method setInstanceName(String)
2021-04-24 02:07:36,230 WARN [org.quartz.impl.SchedulerDetailsSetter] - java.lang.Object does not contain public method setInstanceId(String)
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.25 sec
Running org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
2021-04-24 02:07:38,123 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:38,123 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:38,127 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:07:38,127 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:38,130 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DeleteNonExistsJobTestScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:07:38,130 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'DeleteNonExistsJobTestScheduler
2021-04-24 02:07:38,130 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:38,298 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutting down.
2021-04-24 02:07:38,299 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO paused.
2021-04-24 02:07:38,598 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutdown complete.
2021-04-24 02:07:38,610 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:38,610 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:38,610 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:07:38,610 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:38,610 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DeleteNonExistsJobTestScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:07:38,610 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'DeleteNonExistsJobTestScheduler
2021-04-24 02:07:38,611 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:38,724 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutting down.
2021-04-24 02:07:38,724 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO paused.
2021-04-24 02:07:39,110 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutdown complete.
2021-04-24 02:07:39,120 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:39,120 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:39,121 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:07:39,121 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:39,121 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DeleteNonExistsJobTestScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:07:39,121 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'DeleteNonExistsJobTestScheduler
2021-04-24 02:07:39,121 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:39,133 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutting down.
2021-04-24 02:07:39,134 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO paused.
2021-04-24 02:07:39,621 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutdown complete.
2021-04-24 02:07:39,629 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:39,629 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:39,630 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:07:39,630 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:39,630 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DeleteNonExistsJobTestScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:07:39,630 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'DeleteNonExistsJobTestScheduler
2021-04-24 02:07:39,630 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:39,649 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutting down.
2021-04-24 02:07:39,649 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO paused.
2021-04-24 02:07:40,130 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutdown complete.
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.56 sec
Running org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.463 sec
Running org.quartz.impl.jdbcjobstore.JdbcJobStoreTest
2021-04-24 02:07:42,623 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:42,626 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:42,798 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:42,831 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:42,831 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:42,838 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:42,846 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:43,616 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:43,616 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:43,641 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:43,661 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:43,662 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:43,670 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:43,676 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:44,453 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:44,453 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:44,468 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:44,480 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:44,480 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:44,484 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:44,488 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:45,212 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:45,213 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:45,228 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:45,238 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:45,238 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:45,242 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:45,246 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:45,884 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:45,884 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:45,899 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:45,910 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:45,910 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:45,914 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:45,919 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:46,034 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:46,034 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:46,707 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:46,707 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:46,719 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:46,728 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:46,729 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:46,733 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:46,736 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:46,826 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:46,827 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:47,506 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:47,506 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:47,519 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:47,526 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:47,526 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:47,531 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:47,538 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:47,624 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:47,624 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:48,268 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:48,268 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:48,279 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:48,287 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:48,287 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:48,290 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:48,293 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:48,959 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:48,959 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:48,970 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:48,977 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:48,977 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:48,980 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:48,983 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:49,719 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:49,719 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:49,730 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:49,737 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:49,737 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:49,740 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:49,742 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:49,821 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:49,822 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:50,523 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:50,524 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:50,535 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:50,545 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:50,545 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:50,549 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:50,551 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:50,633 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:50,633 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:51,270 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:07:51,271 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:51,281 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:07:51,292 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:07:51,292 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:07:51,297 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:07:51,302 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:07:51,424 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Trigger triggerGroup1.trigger1 set to ERROR state.
2021-04-24 02:07:51,443 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Trigger triggerGroup1.trigger1 reset from ERROR state to: WAITING
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.666 sec
Running org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.365 sec
Running org.quartz.impl.matchers.GroupMatcherTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.05 sec
Running org.quartz.impl.RemoteMBeanSchedulerTest
2021-04-24 02:07:56,771 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:56,811 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:56,811 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:56,814 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:56,947 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:56,947 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:56,947 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:56,977 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:56,978 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:56,978 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-24 02:07:56,978 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:56,980 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:56,981 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:56,987 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:56,988 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:56,989 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:56,989 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:56,989 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:56,996 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:56,996 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:56,997 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-24 02:07:56,997 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:56,998 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:56,998 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:56,998 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:56,998 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:56,999 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:56,999 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:56,999 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:57,000 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:57,000 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:57,001 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-24 02:07:57,001 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:57,002 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:57,002 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:57,002 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:57,002 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:57,002 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:57,003 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:57,003 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:57,005 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:57,005 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:57,005 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-24 02:07:57,005 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:57,006 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:57,006 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:57,006 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:57,006 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:57,007 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:57,007 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:57,007 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:57,009 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:57,009 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:57,009 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-24 02:07:57,009 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:57,010 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:57,010 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:57,010 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:57,010 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:57,010 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:57,011 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:57,011 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:57,011 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-24 02:07:57,011 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:57,012 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:57,012 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:57,012 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-24 02:07:57,012 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:57,012 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:57,015 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:57,015 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:57,015 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:57,015 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:57,015 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:57,015 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:57,016 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:57,016 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:57,017 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-24 02:07:57,017 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:57,018 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:57,019 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:57,019 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:57,019 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:57,019 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:57,019 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:57,019 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:57,020 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:57,020 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:57,020 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-24 02:07:57,020 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:07:57,021 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:57,022 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:57,022 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:57,022 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:57,022 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:07:57,022 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-24 02:07:57,023 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:07:57,023 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:07:57,023 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:07:57,023 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-24 02:07:57,023 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.483 sec
Running org.quartz.impl.StdSchedulerFactoryCustomConnectionProviderTest
2021-04-24 02:07:57,782 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:07:57,819 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:07:57,819 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:07:57,820 INFO [org.quartz.core.QuartzScheduler] - JobFactory set to: org.quartz.simpl.SimpleJobFactory@1bc425e7
2021-04-24 02:07:57,821 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:07:57,822 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:07:57,824 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DatabaseScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:07:57,824 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DatabaseScheduler' initialized from the specified file : 'org/quartz/properties/quartzCustomConnectionProvider.properties' from the class resource path.
2021-04-24 02:07:57,824 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.348 sec
Running org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Tests run: 28, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.144 sec
Running org.quartz.impl.calendar.DailyCalendarTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.114 sec
Running org.quartz.impl.calendar.BaseCalendarTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 sec
Running org.quartz.simpl.RAMJobStoreTest
2021-04-24 02:07:59,630 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,651 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,653 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,655 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,656 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,674 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,676 INFO [org.quartz.simpl.RAMJobStore] - Trigger triggerGroup1.trigger1 set to ERROR state.
2021-04-24 02:07:59,676 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,676 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,681 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,682 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,684 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,684 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,685 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,685 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,687 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:07:59,687 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.206 sec
Running org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
2021-04-24 02:08:01,338 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:01,363 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:01,363 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:01,364 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-24 02:08:01,366 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:08:01,367 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'MeScheduler' with instanceId '1goo2'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is clustered.

2021-04-24 02:08:01,367 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'MeScheduler' initialized from an externally provided properties instance.
2021-04-24 02:08:01,367 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.371 sec
Running org.quartz.simpl.PropertySettingJobFactoryTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.13 sec
Running org.quartz.TriggerBuilderTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.109 sec
Running org.quartz.core.QTZ212_SchedulerListener_Test
2021-04-24 02:08:02,810 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:02,819 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-24 02:08:02,852 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:02,852 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:02,853 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:02,854 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:02,854 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2021-04-24 02:08:02,854 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
schedulerStarting was called
2021-04-24 02:08:02,857 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
schedulerStarted was called
2021-04-24 02:08:02,859 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:02,859 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:02,859 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:02,861 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:02,861 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-24 02:08:02,866 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:02,866 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:02,866 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:02,866 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:02,867 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2021-04-24 02:08:02,867 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
schedulerStarting was called
2021-04-24 02:08:02,867 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
schedulerStarted was called
2021-04-24 02:08:02,867 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:02,867 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:02,867 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.262 sec
Running org.quartz.core.RecoverJobsTest
2021-04-24 02:08:04,576 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:04,576 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:04,582 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:08:04,583 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:08:04,596 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'SimpleQuartzScheduler' with instanceId 'SIMPLE_NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:08:04,596 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'SimpleQuartzScheduler
2021-04-24 02:08:04,596 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:04,859 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:08:04,927 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:08:04,927 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:08:04,935 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:08:04,945 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:08:04,947 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED started.
2021-04-24 02:08:05,054 INFO [org.quartz.core.RecoverJobsTest$RecoverJobsTestJob] - Started - 1619244485054
2021-04-24 02:08:06,054 INFO [org.quartz.core.RecoverJobsTest$RecoverJobsTestJob] - Tic 1- 1619244485054
2021-04-24 02:08:06,947 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutting down.
2021-04-24 02:08:06,947 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED paused.
2021-04-24 02:08:06,964 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Couldn't rollback jdbc connection. No current connection.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.setupContextStack(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.rollback(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy3.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3273)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 17 more
2021-04-24 02:08:06,966 WARN [org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler] - Failed restore connection's original auto commit setting.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3283)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 11 more
2021-04-24 02:08:06,967 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Database error recovering from misfires.
org.quartz.JobPersistenceException: Database error recovering from misfires. [See nested exception: java.sql.SQLNonTransientConnectionException: Connection closed by unknown interrupt.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3274)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLNonTransientConnectionException: Connection closed by unknown interrupt.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.countMisfiredTriggersInState(StdJDBCDelegate.java:395)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3254)
	... 2 more
Caused by: java.sql.SQLException: Connection closed by unknown interrupt.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 13 more
Caused by: ERROR 08000: Connection closed by unknown interrupt.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.util.InterruptStatus.setInterrupted(Unknown Source)
	at org.apache.derby.iapi.util.InterruptStatus.throwIf(Unknown Source)
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.checkCancellationFlag(Unknown Source)
	at org.apache.derby.impl.sql.execute.BulkTableScanResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.ScalarAggregateResultSet.getRowFromResultSet(Unknown Source)
	at org.apache.derby.impl.sql.execute.ScalarAggregateResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)
	... 6 more
2021-04-24 02:08:06,968 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:07,055 INFO [org.quartz.core.RecoverJobsTest$RecoverJobsTestJob] - Tic 2- 1619244485054
2021-04-24 02:08:07,055 INFO [org.quartz.core.RecoverJobsTest$RecoverJobsTestJob] - Stopped - 1619244485054
2021-04-24 02:08:07,056 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-24 02:08:10,981 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:10,981 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:10,981 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:08:10,982 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'SimpleQuartzScheduler' with instanceId 'SIMPLE_NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:08:10,982 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'SimpleQuartzScheduler
2021-04-24 02:08:10,982 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:10,988 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 1 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:08:10,990 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Handling 1 trigger(s) that missed their scheduled fire-time.
2021-04-24 02:08:10,999 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:08:10,999 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:08:11,000 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:08:11,002 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 1 stale fired job entries.
2021-04-24 02:08:11,002 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED started.
2021-04-24 02:08:11,614 INFO [org.quartz.core.RecoverJobsTest$RecoverJobsTestJob] - Started - 1619244491614
2021-04-24 02:08:11,614 INFO [org.quartz.core.RecoverJobsTest$RecoverJobsTestJob] - Stopped - 1619244491614
2021-04-24 02:08:11,615 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-24 02:08:13,003 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutting down.
2021-04-24 02:08:13,003 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED paused.
2021-04-24 02:08:13,116 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutdown complete.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.418 sec
Running org.quartz.core.ListenerManagerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.145 sec
Running org.quartz.core.QTZ385Test
2021-04-24 02:08:15,711 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:15,711 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:15,721 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:08:15,722 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:08:15,724 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'SimpleQuartzScheduler' with instanceId 'SIMPLE_NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'com.sun.proxy.$Proxy3' - which supports persistence. and is not clustered.

2021-04-24 02:08:15,724 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'SimpleQuartzScheduler
2021-04-24 02:08:15,724 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:15,937 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:08:15,966 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:08:15,966 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:08:16,008 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:08:16,017 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:08:16,019 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED started.
2021-04-24 02:08:16,113 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutting down.
2021-04-24 02:08:16,113 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED paused.
2021-04-24 02:08:17,120 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Sat Apr 24 02:08:17 EDT 2021
2021-04-24 02:08:17,188 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:17,189 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:17,189 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:17,189 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:08:17,190 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'SimpleQuartzScheduler' with instanceId 'SIMPLE_NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:08:17,190 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'SimpleQuartzScheduler
2021-04-24 02:08:17,190 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:17,193 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-24 02:08:17,194 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-24 02:08:17,195 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-24 02:08:17,195 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-24 02:08:17,196 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-24 02:08:17,196 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED started.
2021-04-24 02:08:18,196 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutting down.
2021-04-24 02:08:18,197 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED paused.
2021-04-24 02:08:18,689 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutdown complete.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.824 sec
Running org.quartz.TriggerComparatorTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.082 sec
Running org.quartz.RAMSchedulerTest
2021-04-24 02:08:20,190 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:20,226 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:20,226 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:20,228 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:20,229 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:20,229 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' initialized from an externally provided properties instance.
2021-04-24 02:08:20,229 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:20,251 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_NON_CLUSTERED started.
2021-04-24 02:08:20,266 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:20,266 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:20,767 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:20,771 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:20,772 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:20,772 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:20,773 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:20,773 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:20,773 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler' initialized from an externally provided properties instance.
2021-04-24 02:08:20,773 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:20,774 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:20,774 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:21,272 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:21,274 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:21,275 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:21,276 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:21,276 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:21,276 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:21,276 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler' initialized from an externally provided properties instance.
2021-04-24 02:08:21,276 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:21,276 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_NON_CLUSTERED started.
2021-04-24 02:08:21,329 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:21,329 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:21,329 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:21,331 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:21,333 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:21,333 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:21,333 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:21,333 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:21,333 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler' initialized from an externally provided properties instance.
2021-04-24 02:08:21,334 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:21,334 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_NON_CLUSTERED started.
2021-04-24 02:08:21,385 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:21,386 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:22,386 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:22,388 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:22,389 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:22,389 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:22,389 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:22,389 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:22,389 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' initialized from an externally provided properties instance.
2021-04-24 02:08:22,390 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:22,390 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_NON_CLUSTERED started.
2021-04-24 02:08:22,393 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:22,393 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:22,893 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:22,895 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:22,896 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:22,896 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:22,896 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:22,896 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:22,897 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' initialized from an externally provided properties instance.
2021-04-24 02:08:22,897 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:22,897 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_NON_CLUSTERED started.
2021-04-24 02:08:22,902 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:22,902 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:23,402 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:23,403 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:23,404 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:23,404 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:23,404 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:23,405 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:23,405 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler' initialized from an externally provided properties instance.
2021-04-24 02:08:23,405 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:23,413 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:23,413 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:23,904 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:23,906 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:23,906 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:23,906 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:23,907 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:23,907 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:23,907 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler' initialized from an externally provided properties instance.
2021-04-24 02:08:23,907 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:23,908 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:23,908 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:24,407 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:24,408 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:24,409 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:24,409 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:24,410 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:24,410 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:24,410 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' initialized from an externally provided properties instance.
2021-04-24 02:08:24,410 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:24,911 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:24,912 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:25,410 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.657 sec
Running org.quartz.CronTriggerTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.139 sec
Running org.quartz.CalendarIntervalTriggerTest
Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.151 sec
Running org.quartz.xml.XMLSchedulingDataProcessorTest
2021-04-24 02:08:27,040 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:27,045 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-24 02:08:27,081 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:27,081 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:27,083 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:27,085 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:27,085 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from the specified file : 'org/quartz/xml/quartz-test.properties' from the class resource path.
2021-04-24 02:08:27,085 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:27,117 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/simple-job-trigger-no-repeat.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/simple-job-trigger-no-repeat.xml
2021-04-24 02:08:27,240 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 1 jobs, 1 triggers.
2021-04-24 02:08:27,240 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding job: DEFAULT.job1
2021-04-24 02:08:27,253 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:27,253 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:27,253 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:27,257 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:27,257 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-24 02:08:27,286 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:27,286 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:27,286 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:27,287 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:27,287 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from the specified file : 'org/quartz/xml/quartz-test.properties' from the class resource path.
2021-04-24 02:08:27,287 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:27,291 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/job-scheduling-data-2.0_trigger-samples.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/job-scheduling-data-2.0_trigger-samples.xml
2021-04-24 02:08:27,487 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 1 jobs, 35 triggers.
2021-04-24 02:08:27,487 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding job: DEFAULT.job1
2021-04-24 02:08:27,506 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:27,506 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:27,506 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:27,508 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:27,508 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-24 02:08:27,513 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:27,513 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:27,514 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:27,514 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:27,514 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from the specified file : 'org/quartz/xml/quartz-test.properties' from the class resource path.
2021-04-24 02:08:27,514 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:27,515 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/simple-job-trigger-with-timezones.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/simple-job-trigger-with-timezones.xml
2021-04-24 02:08:27,567 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 1 jobs, 2 triggers.
2021-04-24 02:08:27,567 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding job: DEFAULT.job1
2021-04-24 02:08:27,567 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:27,567 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:27,567 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:28,792 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:28,792 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:28,793 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:08:28,794 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:08:28,794 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'XmlDeleteNonExistsJobTestScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:08:28,794 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'XmlDeleteNonExistsJobTestScheduler
2021-04-24 02:08:28,794 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:29,029 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/delete-no-jobclass.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/delete-no-jobclass.xml
2021-04-24 02:08:29,042 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Deleting job: DEFAULT.testjob1
2021-04-24 02:08:29,133 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 1 jobs, 1 triggers.
2021-04-24 02:08:29,134 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding job: DEFAULT.job1
2021-04-24 02:08:29,158 INFO [org.quartz.core.QuartzScheduler] - Scheduler XmlDeleteNonExistsJobTestScheduler_$_AUTO shutting down.
2021-04-24 02:08:29,158 INFO [org.quartz.core.QuartzScheduler] - Scheduler XmlDeleteNonExistsJobTestScheduler_$_AUTO paused.
2021-04-24 02:08:29,158 INFO [org.quartz.core.QuartzScheduler] - Scheduler XmlDeleteNonExistsJobTestScheduler_$_AUTO shutdown complete.
2021-04-24 02:08:29,854 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:29,854 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:29,854 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-24 02:08:29,854 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-24 02:08:29,854 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'XmlDeleteNonExistsJobTestScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-24 02:08:29,855 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'XmlDeleteNonExistsJobTestScheduler
2021-04-24 02:08:29,855 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:29,912 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/overwrite-no-jobclass.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/overwrite-no-jobclass.xml
2021-04-24 02:08:29,923 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 1 jobs, 1 triggers.
2021-04-24 02:08:29,925 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Removing job: DEFAULT.job1
2021-04-24 02:08:29,973 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding job: DEFAULT.job1
2021-04-24 02:08:29,987 INFO [org.quartz.core.QuartzScheduler] - Scheduler XmlDeleteNonExistsJobTestScheduler_$_AUTO shutting down.
2021-04-24 02:08:29,987 INFO [org.quartz.core.QuartzScheduler] - Scheduler XmlDeleteNonExistsJobTestScheduler_$_AUTO paused.
2021-04-24 02:08:29,987 INFO [org.quartz.core.QuartzScheduler] - Scheduler XmlDeleteNonExistsJobTestScheduler_$_AUTO shutdown complete.
2021-04-24 02:08:30,496 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:30,496 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-24 02:08:30,497 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:30,497 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:30,497 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:30,498 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:30,498 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from the specified file : 'org/quartz/xml/quartz-test.properties' from the class resource path.
2021-04-24 02:08:30,498 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:30,501 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: quartz_data.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/quartz_data.xml
2021-04-24 02:08:30,515 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 1 jobs, 1 triggers.
2021-04-24 02:08:30,515 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:30,516 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:30,516 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:30,517 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:30,517 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-24 02:08:30,523 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:30,523 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:30,523 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:30,523 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:30,523 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from the specified file : 'org/quartz/xml/quartz-test.properties' from the class resource path.
2021-04-24 02:08:30,523 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:30,525 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/directives_overwrite_no-ignoredups.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/directives_overwrite_no-ignoredups.xml
2021-04-24 02:08:30,543 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 2 jobs, 2 triggers.
2021-04-24 02:08:30,544 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Replacing job: DEFAULT.job1
2021-04-24 02:08:30,544 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Replacing job: DEFAULT.job2
2021-04-24 02:08:30,544 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:30,545 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:30,545 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:30,546 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:30,546 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-24 02:08:30,552 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:30,552 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:30,553 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:30,553 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:30,553 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from the specified file : 'org/quartz/xml/quartz-test.properties' from the class resource path.
2021-04-24 02:08:30,553 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:30,555 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/directives_no-overwrite_ignoredups.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/directives_no-overwrite_ignoredups.xml
2021-04-24 02:08:30,576 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 2 jobs, 2 triggers.
2021-04-24 02:08:30,577 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Not overwriting existing job: DEFAULT.job1
2021-04-24 02:08:30,577 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Not overwriting existing job: DEFAULT.job2
2021-04-24 02:08:30,577 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Not overwriting existing trigger: DEFAULT.job1
2021-04-24 02:08:30,577 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Not overwriting existing trigger: DEFAULT.job2
2021-04-24 02:08:30,577 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:30,577 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:30,577 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.752 sec
Running org.quartz.DefaultSchedulerTest
2021-04-24 02:08:31,083 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:31,088 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-24 02:08:31,116 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:31,116 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:31,118 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:31,119 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:31,119 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2021-04-24 02:08:31,119 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.235 sec
Running org.quartz.DailyTimeIntervalScheduleBuilderTest
2021-04-24 02:08:31,641 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:31,647 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-24 02:08:31,672 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:31,672 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:31,674 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:31,675 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:31,675 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2021-04-24 02:08:31,675 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:31,700 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:31,700 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:31,700 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.274 sec
Running org.quartz.VersionTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.078 sec
Running org.quartz.CronExpressionTest
fireTime: Sat May 29 00:00:00 EDT 2021, previousFireTime: Wed Apr 28 00:00:00 EDT 2021
fireTime: Mon Jun 28 00:00:00 EDT 2021, previousFireTime: Sat May 29 00:00:00 EDT 2021
fireTime: Thu Jul 29 00:00:00 EDT 2021, previousFireTime: Mon Jun 28 00:00:00 EDT 2021
fireTime: Sun Aug 29 00:00:00 EDT 2021, previousFireTime: Thu Jul 29 00:00:00 EDT 2021
fireTime: Tue Sep 28 00:00:00 EDT 2021, previousFireTime: Sun Aug 29 00:00:00 EDT 2021
fireTime: Fri Oct 29 00:00:00 EDT 2021, previousFireTime: Tue Sep 28 00:00:00 EDT 2021
fireTime: Sun Nov 28 00:00:00 EST 2021, previousFireTime: Fri Oct 29 00:00:00 EDT 2021
fireTime: Wed Dec 29 00:00:00 EST 2021, previousFireTime: Sun Nov 28 00:00:00 EST 2021
fireTime: Sat Jan 29 00:00:00 EST 2022, previousFireTime: Wed Dec 29 00:00:00 EST 2021
fireTime: Sat Feb 26 00:00:00 EST 2022, previousFireTime: Sat Jan 29 00:00:00 EST 2022
fireTime: Tue Mar 29 00:00:00 EDT 2022, previousFireTime: Sat Feb 26 00:00:00 EST 2022
fireTime: Thu Apr 28 00:00:00 EDT 2022, previousFireTime: Tue Mar 29 00:00:00 EDT 2022
fireTime: Sun May 29 00:00:00 EDT 2022, previousFireTime: Thu Apr 28 00:00:00 EDT 2022
fireTime: Tue Jun 28 00:00:00 EDT 2022, previousFireTime: Sun May 29 00:00:00 EDT 2022
fireTime: Fri Jul 29 00:00:00 EDT 2022, previousFireTime: Tue Jun 28 00:00:00 EDT 2022
fireTime: Mon Aug 29 00:00:00 EDT 2022, previousFireTime: Fri Jul 29 00:00:00 EDT 2022
fireTime: Wed Sep 28 00:00:00 EDT 2022, previousFireTime: Mon Aug 29 00:00:00 EDT 2022
fireTime: Sat Oct 29 00:00:00 EDT 2022, previousFireTime: Wed Sep 28 00:00:00 EDT 2022
fireTime: Mon Nov 28 00:00:00 EST 2022, previousFireTime: Sat Oct 29 00:00:00 EDT 2022
fireTime: Thu Dec 29 00:00:00 EST 2022, previousFireTime: Mon Nov 28 00:00:00 EST 2022
fireTime: Sun Jan 29 00:00:00 EST 2023, previousFireTime: Thu Dec 29 00:00:00 EST 2022
fireTime: Sun Feb 26 00:00:00 EST 2023, previousFireTime: Sun Jan 29 00:00:00 EST 2023
fireTime: Wed Mar 29 00:00:00 EDT 2023, previousFireTime: Sun Feb 26 00:00:00 EST 2023
fireTime: Fri Apr 28 00:00:00 EDT 2023, previousFireTime: Wed Mar 29 00:00:00 EDT 2023
fireTime: Mon May 29 00:00:00 EDT 2023, previousFireTime: Fri Apr 28 00:00:00 EDT 2023
fireTime: Mon May 31 00:00:00 EDT 2021, previousFireTime: Fri Apr 30 00:00:00 EDT 2021
fireTime: Wed Jun 30 00:00:00 EDT 2021, previousFireTime: Mon May 31 00:00:00 EDT 2021
fireTime: Fri Jul 30 00:00:00 EDT 2021, previousFireTime: Wed Jun 30 00:00:00 EDT 2021
fireTime: Tue Aug 31 00:00:00 EDT 2021, previousFireTime: Fri Jul 30 00:00:00 EDT 2021
fireTime: Thu Sep 30 00:00:00 EDT 2021, previousFireTime: Tue Aug 31 00:00:00 EDT 2021
fireTime: Fri Oct 29 00:00:00 EDT 2021, previousFireTime: Thu Sep 30 00:00:00 EDT 2021
fireTime: Tue Nov 30 00:00:00 EST 2021, previousFireTime: Fri Oct 29 00:00:00 EDT 2021
fireTime: Fri Dec 31 00:00:00 EST 2021, previousFireTime: Tue Nov 30 00:00:00 EST 2021
fireTime: Mon Jan 31 00:00:00 EST 2022, previousFireTime: Fri Dec 31 00:00:00 EST 2021
fireTime: Mon Feb 28 00:00:00 EST 2022, previousFireTime: Mon Jan 31 00:00:00 EST 2022
fireTime: Thu Mar 31 00:00:00 EDT 2022, previousFireTime: Mon Feb 28 00:00:00 EST 2022
fireTime: Fri Apr 29 00:00:00 EDT 2022, previousFireTime: Thu Mar 31 00:00:00 EDT 2022
fireTime: Tue May 31 00:00:00 EDT 2022, previousFireTime: Fri Apr 29 00:00:00 EDT 2022
fireTime: Thu Jun 30 00:00:00 EDT 2022, previousFireTime: Tue May 31 00:00:00 EDT 2022
fireTime: Fri Jul 29 00:00:00 EDT 2022, previousFireTime: Thu Jun 30 00:00:00 EDT 2022
fireTime: Wed Aug 31 00:00:00 EDT 2022, previousFireTime: Fri Jul 29 00:00:00 EDT 2022
fireTime: Fri Sep 30 00:00:00 EDT 2022, previousFireTime: Wed Aug 31 00:00:00 EDT 2022
fireTime: Mon Oct 31 00:00:00 EDT 2022, previousFireTime: Fri Sep 30 00:00:00 EDT 2022
fireTime: Wed Nov 30 00:00:00 EST 2022, previousFireTime: Mon Oct 31 00:00:00 EDT 2022
fireTime: Fri Dec 30 00:00:00 EST 2022, previousFireTime: Wed Nov 30 00:00:00 EST 2022
fireTime: Tue Jan 31 00:00:00 EST 2023, previousFireTime: Fri Dec 30 00:00:00 EST 2022
fireTime: Tue Feb 28 00:00:00 EST 2023, previousFireTime: Tue Jan 31 00:00:00 EST 2023
fireTime: Fri Mar 31 00:00:00 EDT 2023, previousFireTime: Tue Feb 28 00:00:00 EST 2023
fireTime: Fri Apr 28 00:00:00 EDT 2023, previousFireTime: Fri Mar 31 00:00:00 EDT 2023
fireTime: Wed May 31 00:00:00 EDT 2023, previousFireTime: Fri Apr 28 00:00:00 EDT 2023
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.179 sec
Running org.quartz.DateBuilderTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.056 sec
Running org.quartz.InterruptableJobTest
2021-04-24 02:08:33,678 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:33,718 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:33,718 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:33,720 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:33,722 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'InterruptableJobTest_Scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:33,722 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'InterruptableJobTest_Scheduler' initialized from an externally provided properties instance.
2021-04-24 02:08:33,722 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:33,723 INFO [org.quartz.core.QuartzScheduler] - Scheduler InterruptableJobTest_Scheduler_$_NON_CLUSTERED started.
TestInterruptableJob is executing.
TestInterruptableJob.interrupt() called.
TestInterruptableJob main loop detected interrupt signal.
TestInterruptableJob exiting with interrupted = true
2021-04-24 02:08:33,806 INFO [org.quartz.core.QuartzScheduler] - Scheduler InterruptableJobTest_Scheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:33,806 INFO [org.quartz.core.QuartzScheduler] - Scheduler InterruptableJobTest_Scheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:33,806 INFO [org.quartz.core.QuartzScheduler] - Scheduler InterruptableJobTest_Scheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.457 sec
Running org.quartz.AnnualCalendarTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.122 sec

Results :

Tests run: 305, Failures: 0, Errors: 0, Skipped: 0

[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Loading execution data file /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] Analyzed bundle 'quartz-core' with 238 classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m------------< [0;36morg.quartz-scheduler.internal:quartz-commonj[0;1m >------------[m
[[1;34mINFO[m] [1mBuilding quartz-commonj 2.3.1                                     [4/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-commonj/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-commonj/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-commonj/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] Compiling 1 source file to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-commonj/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-commonj/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-------------< [0;36morg.quartz-scheduler.internal:quartz-jboss[0;1m >-------------[m
[[1;34mINFO[m] [1mBuilding quartz-jboss 2.3.1                                       [5/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jboss/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jboss/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jboss/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] Compiling 3 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jboss/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jboss/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-------------< [0;36morg.quartz-scheduler.internal:quartz-stubs[0;1m >-------------[m
[[1;34mINFO[m] [1mBuilding quartz-stubs 2.3.1                                       [6/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-stubs/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-stubs/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-stubs/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] Compiling 3 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-stubs/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-stubs/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m------------< [0;36morg.quartz-scheduler.internal:quartz-oracle[0;1m >-------------[m
[[1;34mINFO[m] [1mBuilding quartz-oracle 2.3.1                                      [7/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-oracle/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-oracle/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-oracle/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] Compiling 1 source file to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-oracle/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-oracle/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-----------< [0;36morg.quartz-scheduler.internal:quartz-weblogic[0;1m >------------[m
[[1;34mINFO[m] [1mBuilding quartz-weblogic 2.3.1                                    [8/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-weblogic/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-weblogic/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-weblogic/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] Compiling 3 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-weblogic/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-weblogic/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m------------------< [0;36morg.quartz-scheduler:quartz-jobs[0;1m >------------------[m
[[1;34mINFO[m] [1mBuilding quartz-jobs 2.3.1                                        [9/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jobs/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jobs/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jobs/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Compiling 16 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jobs/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Compiling 6 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jobs/target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.14.1:test[m [1m(default-test)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jobs/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.quartz.jobs.SendMailJobTest
2021-04-24 02:08:39,625 INFO [org.subethamail.smtp.server.SMTPServer] - SMTP server *:2500 starting
2021-04-24 02:08:39,632 INFO [org.subethamail.smtp.server.ServerThread] - SMTP server *:2500 started
2021-04-24 02:08:39,651 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-24 02:08:39,652 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-24 02:08:39,661 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-24 02:08:39,661 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-24 02:08:39,662 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-24 02:08:39,662 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-24 02:08:39,662 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2021-04-24 02:08:39,662 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-24 02:08:39,667 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2021-04-24 02:08:39,675 INFO [org.quartz.jobs.ee.mail.SendMailJob] - Sending message 'test subject' to: receiver@host.com
2021-04-24 02:08:39,676 DEBUG [org.quartz.jobs.ee.mail.SendMailJob] - Sending mail with properties: {mail.smtp.port=2500, mail.smtp.host=localhost}
Received: from daveroar-MS-7A32 (localhost [127.0.0.1])
        by daveroar-MS-7A32
        with SMTP (SubEthaSMTP 3.1.7) id KNVCDNPG
        for receiver@host.com;
        Sat, 24 Apr 2021 02:08:39 -0400 (EDT)
Date: Sat, 24 Apr 2021 02:08:39 -0400 (EDT)
From: sender@host.com
To: receiver@host.com
Message-ID: <662507190.0.1619244519728.JavaMail.daveroar@daveroar-MS-7A32>
Subject: test subject
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

do not reply

test subject
2021-04-24 02:08:39,771 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-24 02:08:39,771 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-24 02:08:39,772 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-24 02:08:39,772 INFO [org.subethamail.smtp.server.SMTPServer] - SMTP server *:2500 stopping
2021-04-24 02:08:39,772 INFO [org.subethamail.smtp.server.ServerThread] - SMTP server *:2500 stopped
Tests run: 2, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.271 sec

Results :

Tests run: 2, Failures: 0, Errors: 0, Skipped: 1

[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m------------< [0;36morg.quartz-scheduler.internal:quartz-plugins[0;1m >------------[m
[[1;34mINFO[m] [1mBuilding quartz-plugins 2.3.1                                    [10/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-plugins/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-plugins/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-plugins/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] Compiling 6 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-plugins/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 3 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] Compiling 4 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-plugins/target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-plugins[0;1m ---[m

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.quartz.integrations.tests.QTZ225_SchedulerClassLoadHelperForPlugins_Test
log4j:WARN No appenders could be found for logger (org.quartz.impl.StdSchedulerFactory).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.412 sec - in org.quartz.integrations.tests.QTZ225_SchedulerClassLoadHelperForPlugins_Test
Running org.quartz.integrations.tests.AutoInterruptableJobTest
TestInterruptableJob is executing.
TestInterruptableJob.interrupt() called.
TestInterruptableJob main loop detected interrupt signal.
TestInterruptableJob exiting with interrupted = true
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.025 sec - in org.quartz.integrations.tests.AutoInterruptableJobTest

Results :

Tests run: 2, Failures: 0, Errors: 0, Skipped: 0

[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] Loading execution data file /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-plugins/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] Analyzed bundle 'quartz-plugins' with 9 classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--------< [0;36morg.quartz-scheduler.internal:quartz-terracotta-root[0;1m >--------[m
[[1;34mINFO[m] [1mBuilding quartz-terracotta-root 2.3.1                            [11/13][m
[[1;34mINFO[m] [1m--------------------------------[ pom ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-terracotta-root[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-terracotta-root[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/terracotta/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-terracotta-root[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-----< [0;36morg.quartz-scheduler.internal:quartz-terracotta-bootstrap[0;1m >------[m
[[1;34mINFO[m] [1mBuilding quartz-terracotta-bootstrap 2.3.1                       [12/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/terracotta/bootstrap/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/terracotta/bootstrap/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/terracotta/bootstrap/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] Compiling 20 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/terracotta/bootstrap/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/terracotta/bootstrap/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--------------------< [0;36morg.quartz-scheduler:quartz[0;1m >---------------------[m
[[1;34mINFO[m] [1mBuilding quartz 2.3.1                                            [13/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 75 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] Compiling 23 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz/target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz[0;1m ---[m

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.terracotta.quartz.upgradability.serialization.CronCalendarSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.187 sec - in org.terracotta.quartz.upgradability.serialization.CronCalendarSerializationTest
Running org.terracotta.quartz.upgradability.serialization.JobKeySerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec - in org.terracotta.quartz.upgradability.serialization.JobKeySerializationTest
Running org.terracotta.quartz.upgradability.serialization.FiredTriggerSerializationTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec - in org.terracotta.quartz.upgradability.serialization.FiredTriggerSerializationTest
Running org.terracotta.quartz.upgradability.serialization.TimeOfDaySerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in org.terracotta.quartz.upgradability.serialization.TimeOfDaySerializationTest
Running org.terracotta.quartz.upgradability.serialization.SimpleTriggerImplSerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec - in org.terracotta.quartz.upgradability.serialization.SimpleTriggerImplSerializationTest
Running org.terracotta.quartz.upgradability.serialization.HolidayCalendarSerializationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec - in org.terracotta.quartz.upgradability.serialization.HolidayCalendarSerializationTest
Running org.terracotta.quartz.upgradability.serialization.DailyCalendarSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec - in org.terracotta.quartz.upgradability.serialization.DailyCalendarSerializationTest
Running org.terracotta.quartz.upgradability.serialization.CronExpressionSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec - in org.terracotta.quartz.upgradability.serialization.CronExpressionSerializationTest
Running org.terracotta.quartz.upgradability.serialization.TimeTriggerSerializationTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec - in org.terracotta.quartz.upgradability.serialization.TimeTriggerSerializationTest
Running org.terracotta.quartz.upgradability.serialization.CalendarIntervalTriggerImplSerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec - in org.terracotta.quartz.upgradability.serialization.CalendarIntervalTriggerImplSerializationTest
Running org.terracotta.quartz.upgradability.serialization.CronTriggerImplSerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec - in org.terracotta.quartz.upgradability.serialization.CronTriggerImplSerializationTest
Running org.terracotta.quartz.upgradability.serialization.JobDetailImplSerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec - in org.terracotta.quartz.upgradability.serialization.JobDetailImplSerializationTest
Running org.terracotta.quartz.upgradability.serialization.AnnualCalendarSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec - in org.terracotta.quartz.upgradability.serialization.AnnualCalendarSerializationTest
Running org.terracotta.quartz.upgradability.serialization.JobDataMapSerializationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec - in org.terracotta.quartz.upgradability.serialization.JobDataMapSerializationTest
Running org.terracotta.quartz.upgradability.serialization.TriggerKeySerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in org.terracotta.quartz.upgradability.serialization.TriggerKeySerializationTest
Running org.terracotta.quartz.upgradability.serialization.DailyTimeIntervalTriggerImplSerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec - in org.terracotta.quartz.upgradability.serialization.DailyTimeIntervalTriggerImplSerializationTest
Running org.terracotta.quartz.upgradability.serialization.TriggerWrapperSerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.199 sec - in org.terracotta.quartz.upgradability.serialization.TriggerWrapperSerializationTest
Running org.terracotta.quartz.upgradability.serialization.JobWrapperSerializationTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec - in org.terracotta.quartz.upgradability.serialization.JobWrapperSerializationTest
Running org.terracotta.quartz.upgradability.serialization.WeeklyCalendarSerializationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec - in org.terracotta.quartz.upgradability.serialization.WeeklyCalendarSerializationTest
Running org.terracotta.quartz.upgradability.serialization.MonthlyCalendarSerializationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec - in org.terracotta.quartz.upgradability.serialization.MonthlyCalendarSerializationTest
Running org.terracotta.quartz.upgradability.BasicUpgradabilityTest
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.286 sec - in org.terracotta.quartz.upgradability.BasicUpgradabilityTest

Results :

Tests run: 51, Failures: 0, Errors: 0, Skipped: 0

[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] Loading execution data file /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] Analyzed bundle 'quartz' with 0 classes
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1mReactor Summary for quartz-parent 2.3.1:[m
[[1;34mINFO[m] 
[[1;34mINFO[m] quartz-parent ...................................... [1;32mSUCCESS[m [  0.545 s]
[[1;34mINFO[m] quartz-checkstyle .................................. [1;32mSUCCESS[m [  0.353 s]
[[1;34mINFO[m] quartz-core ........................................ [1;32mSUCCESS[m [08:18 min]
[[1;34mINFO[m] quartz-commonj ..................................... [1;32mSUCCESS[m [  0.496 s]
[[1;34mINFO[m] quartz-jboss ....................................... [1;32mSUCCESS[m [  0.611 s]
[[1;34mINFO[m] quartz-stubs ....................................... [1;32mSUCCESS[m [  0.465 s]
[[1;34mINFO[m] quartz-oracle ...................................... [1;32mSUCCESS[m [  0.645 s]
[[1;34mINFO[m] quartz-weblogic .................................... [1;32mSUCCESS[m [  0.537 s]
[[1;34mINFO[m] quartz-jobs ........................................ [1;32mSUCCESS[m [  1.880 s]
[[1;34mINFO[m] quartz-plugins ..................................... [1;32mSUCCESS[m [  3.414 s]
[[1;34mINFO[m] quartz-terracotta-root ............................. [1;32mSUCCESS[m [  0.003 s]
[[1;34mINFO[m] quartz-terracotta-bootstrap ........................ [1;32mSUCCESS[m [  1.002 s]
[[1;34mINFO[m] quartz ............................................. [1;32mSUCCESS[m [  2.456 s]
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  08:30 min
[[1;34mINFO[m] Finished at: 2021-04-24T02:08:46-04:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
args[0]: org.quartz.RootDriver
args[1]: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/classes
args[2]: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes
args[3]: quartz-core/target/classes:quartz-core/target/test-classes::/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/asm-3.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/c3p0-0.9.5.3.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/derby-10.8.2.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/derbyclient-10.8.2.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/derbynet-10.8.2.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/hamcrest-core-1.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/hamcrest-library-1.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/HikariCP-java7-2.4.13.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/javaee-api-5.0-2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/junit-dep-4.8.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/log4j-1.2.16.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/mchange-commons-java-0.2.15.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/mockito-all-1.9.5.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/slf4j-api-1.7.7.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/slf4j-log4j12-1.7.7.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/typesafe-config-2.10.1.jar
args[4]: quartz_quartz_core_2.3.1
args[5]: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/analysis_output/MockAnalysis
Soot started on Sat Apr 24 02:08:46 EDT 2021
Number of methods to be analyzed: 4006
Statement: virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r9)
InnerBox value: r2
SootClass Type: java.util.HashSet
Statement: virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r9)
InnerBox value: r2
SootClass Type: java.util.HashSet
Statement: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r5)
InnerBox value: r7
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r5)
InnerBox value: r7
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r6)
InnerBox value: r7
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r6)
InnerBox value: r7
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r4)
InnerBox value: r7
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r4)
InnerBox value: r7
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r3)
InnerBox value: r7
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r3)
InnerBox value: r7
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r1)
InnerBox value: r7
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r1)
InnerBox value: r7
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r2)
InnerBox value: r7
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r2)
InnerBox value: r7
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r5)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r5)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r9)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r9)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r6)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r6)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r8)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r8)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r4)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r4)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r3)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r3)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r1)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r1)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r7)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r7)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r2)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r2)
InnerBox value: r10
SootClass Type: java.util.LinkedList
Statement: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r3
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r9)
InnerBox value: r4
SootClass Type: java.util.HashSet
Statement: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r10)
InnerBox value: r4
SootClass Type: java.util.HashSet
Statement: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r11)
InnerBox value: r4
SootClass Type: java.util.HashSet
Statement: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r12)
InnerBox value: r4
SootClass Type: java.util.HashSet
Statement: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r13)
InnerBox value: r4
SootClass Type: java.util.HashSet
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r8)
InnerBox value: r1
SootClass Type: java.util.HashSet
 ====================================== 
** CLASS org.quartz.core.ListenerManagerTest$TestSchedulerListener



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.ExecuteInJTATransaction



======== method timeout ======= : 

 ====================================== 
** CLASS org.quartz.impl.calendar.CronCalendar



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method clone ======= : 



======== method getTimeZone ======= : 



======== method setTimeZone ======= : 



======== method isTimeIncluded ======= : 



======== method getNextIncludedTime ======= : 



======== method toString ======= : 



======== method getCronExpression ======= : 



======== method setCronExpression ======= : 



======== method setCronExpression ======= : 

 ====================================== 
** CLASS org.quartz.simpl.SimpleThreadPool$WorkerThread



======== method <init> ======= : 



======== method <init> ======= : 



======== method shutdown ======= : 



======== method run ======= : 



======== method run ======= : 

 ====================================== 
** CLASS org.quartz.CronExpression



======== method <init> ======= : 



======== method <init> ======= : 



======== method isSatisfiedBy ======= : 



======== method getNextValidTimeAfter ======= : 



======== method getNextInvalidTimeAfter ======= : 



======== method getTimeZone ======= : 



======== method setTimeZone ======= : 



======== method toString ======= : 



======== method isValidExpression ======= : 



======== method validateExpression ======= : 



======== method buildExpression ======= : 



======== method storeExpressionVals ======= : 



======== method checkIncrementRange ======= : 



======== method checkNext ======= : 



======== method getCronExpression ======= : 



======== method getExpressionSummary ======= : 



======== method getExpressionSetSummary ======= : 



======== method getExpressionSetSummary ======= : 



======== method skipWhiteSpace ======= : 



======== method findNextWhiteSpace ======= : 



======== method addToSet ======= : 



======== method getSet ======= : 



======== method getValue ======= : 



======== method getNumericValue ======= : 



======== method getMonthNumber ======= : 



======== method getDayOfWeekNumber ======= : 



======== method getTimeAfter ======= : 



======== method setCalendarHour ======= : 



======== method getTimeBefore ======= : 



======== method getFinalFireTime ======= : 



======== method isLeapYear ======= : 



======== method getLastDayOfMonth ======= : 



======== method readObject ======= : 



======== method clone ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest$SpecialClassLoadHelper



======== method <init> ======= : 



======== method loadClass ======= : 

 ====================================== 
** CLASS org.quartz.DailyTimeIntervalScheduleBuilder



======== method <init> ======= : 



======== method dailyTimeIntervalSchedule ======= : 



======== method build ======= : 



======== method withInterval ======= : 



======== method withIntervalInSeconds ======= : 



======== method withIntervalInMinutes ======= : 



======== method withIntervalInHours ======= : 



======== method onDaysOfTheWeek ======= : 



======== method onDaysOfTheWeek ======= : 



======== method onMondayThroughFriday ======= : 



======== method onSaturdayAndSunday ======= : 



======== method onEveryDay ======= : 



======== method startingDailyAt ======= : 



======== method endingDailyAt ======= : 



======== method endingDailyAfterCount ======= : 



======== method withMisfireHandlingInstructionIgnoreMisfires ======= : 



======== method withMisfireHandlingInstructionDoNothing ======= : 



======== method withMisfireHandlingInstructionFireAndProceed ======= : 



======== method withRepeatCount ======= : 



======== method validateInterval ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.core.JobRunShell$VetoedException



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest$TestJobWithSync



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.DailyTimeIntervalScheduleBuilderTest



======== method <init> ======= : 



======== method testScheduleActualTrigger ======= : 

Unit: $r9 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r8)
Unit: interfaceinvoke r1.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r2, r3)
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r8 = virtualinvoke $r7.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInSeconds(int)>(3)
Unit: r2 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: r1 = staticinvoke <org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getDefaultScheduler()>()
Unit: $r4 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/DailyTimeIntervalScheduleBuilderTest$MyJob;")
Unit: r3 = (org.quartz.DailyTimeIntervalTrigger) $r10
Unit: interfaceinvoke r1.<org.quartz.Scheduler: void shutdown()>()
Unit: $r7 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: $r10 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: return


======== method testScheduleInMiddleOfDailyInterval ======= : 

Unit: specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
Unit: staticinvoke <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>("First fire time is not after now!", $z0)
Unit: r56 = virtualinvoke $r30.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r42 = <java.lang.System: java.io.PrintStream out>
Unit: r3 = staticinvoke <org.quartz.DateBuilder: java.util.Date todayAt(int,int,int)>(2, 15, 0)
Unit: $r37 = virtualinvoke $r32.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r36)
Unit: $r41 = new java.lang.StringBuilder
Unit: r58 = interfaceinvoke r2.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r40)
Unit: $r28 = interfaceinvoke r55.<org.quartz.Trigger: java.util.Date getNextFireTime()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void shutdown()>()
Unit: $r25 = interfaceinvoke r55.<org.quartz.Trigger: java.util.Date getNextFireTime()>()
Unit: r57 = virtualinvoke $r38.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r34 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(2, 15)
Unit: $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testScheduleInMiddleOfDailyInterval: startTime = ")
Unit: $z1 = virtualinvoke $r52.<java.util.Date: boolean equals(java.lang.Object)>(r3)
Unit: specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()
Unit: if i0 >= 3 goto r2 = staticinvoke <org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getDefaultScheduler()>()
Unit: $r8 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(2, 15)
Unit: $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49)
Unit: $r32 = virtualinvoke $r31.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test2")
Unit: $r38 = virtualinvoke $r37.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r3)
Unit: $r49 = interfaceinvoke r58.<org.quartz.Trigger: java.util.Date getNextFireTime()>()
Unit: $z0 = virtualinvoke $r28.<java.util.Date: boolean after(java.util.Date)>($r29)
Unit: $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testScheduleInMiddleOfDailyInterval: currTime = ")
Unit: $r52 = interfaceinvoke r58.<org.quartz.Trigger: java.util.Date getNextFireTime()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r53, r54)
Unit: $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Unit: r53 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
Unit: i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(10)
Unit: r55 = interfaceinvoke r2.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r15)
Unit: virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r51)
Unit: virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r27)
Unit: $r30 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/DailyTimeIntervalScheduleBuilderTest$MyJob;")
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: $r29 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r47 = <java.lang.System: java.io.PrintStream out>
Unit: $r10 = virtualinvoke $r9.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(5)
Unit: $r36 = virtualinvoke $r35.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(5)
Unit: $r15 = interfaceinvoke r54.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r56, r57)
Unit: $r17 = <java.lang.System: java.io.PrintStream out>
Unit: $r22 = new java.lang.StringBuilder
Unit: $r35 = virtualinvoke $r33.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r34)
Unit: $r9 = virtualinvoke $r7.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r8)
Unit: $r11 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r10)
Unit: virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r21)
Unit: $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r12 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r54 = virtualinvoke $r13.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: return
Unit: $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)
Unit: specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
Unit: $r33 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r46 = new java.lang.StringBuilder
Unit: $r13 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r12)
Unit: $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25)
Unit: $r23 = <java.lang.System: java.io.PrintStream out>
Unit: $r19 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: return
Unit: $r16 = new java.lang.StringBuilder
Unit: $r4 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/DailyTimeIntervalScheduleBuilderTest$MyJob;")
Unit: $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testScheduleInMiddleOfDailyInterval: computed first fire time = ")
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $r40 = interfaceinvoke r57.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testScheduleInMiddleOfDailyInterval: computed first fire time = ")
Unit: r2 = staticinvoke <org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getDefaultScheduler()>()
Unit: staticinvoke <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>("First fire time is not after now!", $z1)
Unit: $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r45)
Unit: $r7 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r31 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()


======== method testHourlyTrigger ======= : 

Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i1)
Unit: r2 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>($r15, null, 48)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: $r14 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("DEFAULT", $r12)
Unit: $r9 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $i1 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r10)
Unit: $r3 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r10 = virtualinvoke $r9.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: $r13 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: $r8 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r6 = virtualinvoke $r5.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInHours(int)>(1)
Unit: $r15 = (org.quartz.spi.OperableTrigger) r1
Unit: r1 = (org.quartz.DailyTimeIntervalTrigger) $r8
Unit: return
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i0)
Unit: $r5 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r12 = virtualinvoke $r11.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: $r7 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r6)
Unit: $r4 = virtualinvoke $r3.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $i0 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: int getRepeatInterval()>()
Unit: $r11 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()


======== method testMinutelyTriggerWithTimeOfDay ======= : 

Unit: staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z3)
Unit: $r25 = new org.quartz.TimeOfDay
Unit: if null != $r20 goto $z3 = 0
Unit: $r12 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r11)
Unit: $r23 = new org.quartz.TimeOfDay
Unit: $r27 = (org.quartz.spi.OperableTrigger) r1
Unit: $r24 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TimeOfDay getStartTimeOfDay()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r24)
Unit: $r7 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(8, 0)
Unit: $z3 = 1
Unit: specialinvoke $r23.<org.quartz.TimeOfDay: void <init>(int,int)>(8, 0)
Unit: $l1 = virtualinvoke $r19.<java.util.Date: long getTime()>()
Unit: $b2 = $l0 cmp $l1
Unit: $r5 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: goto [?= staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z2)]
Unit: r2 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>($r27, null, 48)
Unit: $r15 = virtualinvoke $r14.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: $r16 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("group", $r17)
Unit: $r22 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r20 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: java.util.Date getEndTime()>()
Unit: $r3 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: goto [?= staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z3)]
Unit: $r18 = new java.util.Date
Unit: staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z2)
Unit: $r8 = virtualinvoke $r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r7)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i4)
Unit: specialinvoke $r25.<org.quartz.TimeOfDay: void <init>(int,int)>(17, 0)
Unit: if $b2 < 0 goto $z2 = 0
Unit: r1 = (org.quartz.DailyTimeIntervalTrigger) $r13
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r25, $r26)
Unit: $r14 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $l0 = virtualinvoke $r18.<java.util.Date: long getTime()>()
Unit: $z2 = 0
Unit: $r26 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TimeOfDay getEndTimeOfDay()>()
Unit: $r9 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(17, 0)
Unit: $r10 = virtualinvoke $r8.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAt(org.quartz.TimeOfDay)>($r9)
Unit: $r4 = virtualinvoke $r3.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test", "group")
Unit: $r6 = virtualinvoke $r5.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(72)
Unit: $r19 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: java.util.Date getStartTime()>()
Unit: $i4 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: $r11 = virtualinvoke $r10.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder onMondayThroughFriday()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(72, $i3)
Unit: $i3 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: int getRepeatInterval()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22)
Unit: $r21 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: specialinvoke $r18.<java.util.Date: void <init>()>()
Unit: return
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r15)
Unit: $z3 = 0
Unit: $z2 = 1


======== method testSecondlyTriggerWithStartAndEndTime ======= : 

Unit: $z2 = 1
Unit: $r21 = virtualinvoke $r20.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z2)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27)
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: $r20 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r15 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r1)
Unit: $i6 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: int getRepeatInterval()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29)
Unit: $r29 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TimeOfDay getEndTimeOfDay()>()
Unit: $r11 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourMinuteAndSecondOfDay(int,int,int)>(23, 59, 59)
Unit: $l0 = virtualinvoke r1.<java.util.Date: long getTime()>()
Unit: goto [?= staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z3)]
Unit: $i7 = interfaceinvoke r4.<java.util.List: int size()>()
Unit: $r12 = virtualinvoke $r10.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAt(org.quartz.TimeOfDay)>($r11)
Unit: $r22 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: java.util.Date getStartTime()>()
Unit: $z3 = 0
Unit: $r28 = new org.quartz.TimeOfDay
Unit: $l4 = virtualinvoke $r23.<java.util.Date: long getTime()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z3)
Unit: $r26 = new org.quartz.TimeOfDay
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i7)
Unit: $r23 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: java.util.Date getEndTime()>()
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>($r30, null, 48)
Unit: if $b2 != 0 goto $z2 = 0
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(121, $i6)
Unit: specialinvoke $r26.<org.quartz.TimeOfDay: void <init>(int,int,int)>(10, 0, 0)
Unit: $r25 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: $r18 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r27 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TimeOfDay getStartTimeOfDay()>()
Unit: specialinvoke $r28.<org.quartz.TimeOfDay: void <init>(int,int,int)>(23, 59, 59)
Unit: r3 = (org.quartz.DailyTimeIntervalTrigger) $r17
Unit: return
Unit: $z2 = 0
Unit: $z3 = 1
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $b5 = $l3 cmp $l4
Unit: $r8 = virtualinvoke $r7.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInSeconds(int)>(121)
Unit: $r19 = virtualinvoke $r18.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 2, 1, 2011)
Unit: $r30 = (org.quartz.spi.OperableTrigger) r3
Unit: $r13 = virtualinvoke $r12.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder onSaturdayAndSunday()>()
Unit: $r16 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder endAt(java.util.Date)>(r2)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: goto [?= staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z2)]
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r19)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r21)
Unit: $r10 = virtualinvoke $r8.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r9)
Unit: $r9 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourMinuteAndSecondOfDay(int,int,int)>(10, 0, 0)
Unit: if $b5 != 0 goto $z3 = 0
Unit: $r7 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $b2 = $l0 cmp $l1
Unit: $l3 = virtualinvoke r2.<java.util.Date: long getTime()>()
Unit: $r24 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>
Unit: $l1 = virtualinvoke $r22.<java.util.Date: long getTime()>()
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test", "test")
Unit: $r14 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r13)


======== method testRepeatCountTrigger ======= : 

Unit: $r15 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: $r3 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r7 = virtualinvoke $r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withRepeatCount(int)>(9)
Unit: r1 = (org.quartz.DailyTimeIntervalTrigger) $r9
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $i0 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: int getRepeatInterval()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r11)
Unit: $r8 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("DEFAULT", $r13)
Unit: $r16 = (org.quartz.spi.OperableTrigger) r1
Unit: r2 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>($r16, null, 48)
Unit: $r11 = virtualinvoke $r10.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15)
Unit: $r4 = virtualinvoke $r3.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $r10 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r12 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $i1 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: return
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(10, $i1)
Unit: $r6 = virtualinvoke $r5.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInHours(int)>(1)
Unit: $r5 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r14 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i0)


======== method testEndingAtAfterCount ======= : 

Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: $r8 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(8, 0)
Unit: $r16 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r11 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r10)
Unit: $r15 = virtualinvoke $r14.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: $r24 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r7 = virtualinvoke $r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(15)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22)
Unit: $r20 = (org.quartz.spi.OperableTrigger) r2
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: return
Unit: specialinvoke $r25.<org.quartz.TimeOfDay: void <init>(int,int)>(10, 45)
Unit: $r18 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("DEFAULT", $r17)
Unit: $i0 = interfaceinvoke r3.<java.util.List: int size()>()
Unit: $r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: r2 = (org.quartz.DailyTimeIntervalTrigger) $r13
Unit: $r22 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r12 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: $r14 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r23 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(10, 45, 0, 4, 1, 2011)
Unit: $r6 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r19)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r24)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r25, $r26)
Unit: r3 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>($r20, null, 48)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r15)
Unit: $r26 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TimeOfDay getEndTimeOfDay()>()
Unit: $r9 = virtualinvoke $r7.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r8)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r10 = virtualinvoke $r9.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAfterCount(int)>(12)
Unit: $r19 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: $r25 = new org.quartz.TimeOfDay


======== method testEndingAtAfterCountOf1 ======= : 

Unit: $r26 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23)
Unit: $i0 = interfaceinvoke r3.<java.util.List: int size()>()
Unit: $r21 = (org.quartz.spi.OperableTrigger) r2
Unit: $r10 = virtualinvoke $r9.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAfterCount(int)>(1)
Unit: specialinvoke r0.<org.quartz.DailyTimeIntervalScheduleBuilderTest: void validateTrigger(org.quartz.DailyTimeIntervalTrigger)>(r2)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $r25 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r9 = virtualinvoke $r7.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r8)
Unit: $r20 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r11 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r10)
Unit: $r12 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r1)
Unit: $r16 = virtualinvoke $r15.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: $r6 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r23 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27)
Unit: $r22 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r8 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(8, 0)
Unit: $r14 = virtualinvoke $r13.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r20)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(java.lang.String,java.lang.String)>("testJob", "testJobGroup")
Unit: r2 = (org.quartz.DailyTimeIntervalTrigger) $r14
Unit: $r24 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 17, 2, 2011)
Unit: $r17 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r7 = virtualinvoke $r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(15)
Unit: $r15 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r18 = virtualinvoke $r17.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: r3 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>($r21, null, 48)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r16)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("DEFAULT", $r18)
Unit: $r19 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: specialinvoke $r26.<org.quartz.TimeOfDay: void <init>(int,int)>(8, 0)
Unit: $r27 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TimeOfDay getEndTimeOfDay()>()
Unit: return


======== method validateTrigger ======= : 



======== method testEndingAtAfterCountOf0 ======= : 

Unit: $r5 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(8, 0)
Unit: goto [?= r23 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)]
Unit: $r1 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r15 = virtualinvoke $r14.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAfterCount(int)>(1)
Unit: virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r14 = virtualinvoke $r13.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(15)
Unit: return
Unit: r23 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: r24 = $r20
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r23)
Unit: r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilderTest: void fail(java.lang.String)>("We should not accept endingDailyAfterCount(0)")
Unit: $r16 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r15)
Unit: $r7 = virtualinvoke $r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAfterCount(int)>(0)
Unit: $r19 := @caughtexception
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: $r6 = virtualinvoke $r4.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r5)
Unit: $r20 := @caughtexception
Unit: staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilderTest: void fail(java.lang.String)>("We should not accept endingDailyAfterCount(x) without first setting startingDailyAt.")
Unit: $r13 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r12 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: goto [?= return]
Unit: r22 = $r19
Unit: $r4 = virtualinvoke $r3.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(15)
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r21)
Unit: $r8 = virtualinvoke $r2.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: $r2 = virtualinvoke $r1.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $r3 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r11 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DBSemaphore



======== method <init> ======= : 



======== method getLog ======= : 



======== method getThreadLocks ======= : 



======== method executeSQL ======= : 



======== method obtainLock ======= : 



======== method releaseLock ======= : 



======== method isLockOwner ======= : 



======== method requiresConnection ======= : 



======== method getSQL ======= : 



======== method setSQL ======= : 



======== method setInsertSQL ======= : 



======== method setExpandedSQL ======= : 



======== method getSchedulerNameLiteral ======= : 



======== method getSchedName ======= : 



======== method setSchedName ======= : 



======== method getTablePrefix ======= : 



======== method setTablePrefix ======= : 

 ====================================== 
** CLASS org.quartz.simpl.SimpleThreadPool



======== method <init> ======= : 



======== method <init> ======= : 



======== method getLog ======= : 



======== method getPoolSize ======= : 



======== method setThreadCount ======= : 



======== method getThreadCount ======= : 



======== method setThreadPriority ======= : 



======== method getThreadPriority ======= : 



======== method setThreadNamePrefix ======= : 



======== method getThreadNamePrefix ======= : 



======== method isThreadsInheritContextClassLoaderOfInitializingThread ======= : 



======== method setThreadsInheritContextClassLoaderOfInitializingThread ======= : 



======== method isThreadsInheritGroupOfInitializingThread ======= : 



======== method setThreadsInheritGroupOfInitializingThread ======= : 



======== method isMakeThreadsDaemons ======= : 



======== method setMakeThreadsDaemons ======= : 



======== method setInstanceId ======= : 



======== method setInstanceName ======= : 



======== method initialize ======= : 



======== method createWorkerThreads ======= : 



======== method shutdown ======= : 



======== method shutdown ======= : 



======== method runInThread ======= : 



======== method blockForAvailableThreads ======= : 



======== method makeAvailable ======= : 



======== method clearFromBusyWorkersList ======= : 

 ====================================== 
** CLASS org.quartz.listeners.JobListenerSupport



======== method <init> ======= : 



======== method getLog ======= : 



======== method jobToBeExecuted ======= : 



======== method jobExecutionVetoed ======= : 



======== method jobWasExecuted ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdJDBCDelegate$1



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.QuartzMemoryCronTriggerTest



======== method <init> ======= : 



======== method testCronRepeatCount ======= : 

Unit: $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r21)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r24, $r26)
Unit: $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)
Unit: $i9 = lengthof r31
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r28, $r30)
Unit: $l2 = l0 % 1000L
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: r1 = (org.quartz.CronTrigger) $r8
Unit: $r30 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r29)
Unit: $r15 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: $r9 = new java.util.LinkedList
Unit: $r10 = r0.<org.quartz.integrations.tests.QuartzMemoryCronTriggerTest: org.quartz.Scheduler scheduler>
Unit: $r21 = newarray (java.lang.Long)[$i1]
Unit: virtualinvoke $r11.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>($r12, r2)
Unit: $r14 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/TrackingJob;")
Unit: r2 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r9)
Unit: r31 = (java.lang.Long[]) $r22
Unit: $r20 = staticinvoke <org.hamcrest.collection.IsCollectionWithSize: org.hamcrest.Matcher hasSize(org.hamcrest.Matcher)>($r19)
Unit: i7 = 0
Unit: if i8 >= $i9 goto return
Unit: $r26 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r25)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r2, $r20)
Unit: specialinvoke $r9.<java.util.LinkedList: void <init>()>()
Unit: $r11 = interfaceinvoke $r10.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: if $i6 >= 3 goto $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r6 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: i8 = i8 + 1
Unit: $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r23 = r31[0]
Unit: $i6 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: i7 = i7 + 1
Unit: $r8 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r28 = r31[i8]
Unit: goto [?= (branch)]
Unit: $r7 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r6)
Unit: $r16 = r0.<org.quartz.integrations.tests.QuartzMemoryCronTriggerTest: org.quartz.Scheduler scheduler>
Unit: r0 := @this: org.quartz.integrations.tests.QuartzMemoryCronTriggerTest
Unit: goto [?= $i9 = lengthof r31]
Unit: r3 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: l0 = virtualinvoke $r23.<java.lang.Long: long longValue()>()
Unit: i8 = 1
Unit: $l3 = (long) i8
Unit: interfaceinvoke $r16.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r3, r1)
Unit: $i1 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: $r12 = <org.quartz.integrations.tests.TrackingJob: java.lang.String SCHEDULED_TIMES_KEY>
Unit: $r27 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
Unit: return
Unit: $l4 = virtualinvoke $r27.<java.util.concurrent.TimeUnit: long toMillis(long)>($l3)
Unit: $l5 = l0 + $l4
Unit: $r19 = staticinvoke <org.hamcrest.number.OrderingComparison: org.hamcrest.Matcher greaterThanOrEqualTo(java.lang.Comparable)>($r18)
Unit: if i7 >= 20 goto $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(500L)
Unit: $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest



======== method <init> ======= : 



======== method beforeClass ======= : 

Unit: $r0 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: java.lang.String DB_NAME>
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void createDatabase(java.lang.String)>($r0)
Unit: return


======== method beforeTest ======= : 

Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceId(java.lang.String)>("AUTO")
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
Unit: $r2 = new org.quartz.impl.jdbcjobstore.JobStoreTX
Unit: specialinvoke r0.<org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: void resetDatabaseData()>()
Unit: $r7 = staticinvoke <org.quartz.impl.SchedulerRepository: org.quartz.impl.SchedulerRepository getInstance()>()
Unit: $r8 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: java.lang.String SCHEDULER_NAME>
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setDataSource(java.lang.String)>($r3)
Unit: $r5 = new org.quartz.simpl.SimpleThreadPool
Unit: $r4 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: r1 = $r2
Unit: virtualinvoke $r4.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(java.lang.String,java.lang.String,org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>($r6, "AUTO", $r5, r1)
Unit: return
Unit: specialinvoke $r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void <init>()>()
Unit: $r6 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: java.lang.String SCHEDULER_NAME>
Unit: specialinvoke $r5.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(4, 5)
Unit: $r3 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: java.lang.String DB_NAME>
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setTablePrefix(java.lang.String)>("QRTZ_")
Unit: $r9 = virtualinvoke $r7.<org.quartz.impl.SchedulerRepository: org.quartz.Scheduler lookup(java.lang.String)>($r8)
Unit: <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler> = $r9


======== method resetDatabaseData ======= : 



======== method afterTest ======= : 

Unit: $r1 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
Unit: interfaceinvoke $r1.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: return


======== method deleteJobDetailOnly ======= : 

Unit: $r7 = interfaceinvoke r1.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r5 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: $r6 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: specialinvoke r0.<org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: void modifyStoredJobClassName()>()
Unit: $r2 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/DeleteNonExistsJobTest$TestJob;")
Unit: return
Unit: $r3 = virtualinvoke $r2.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("testjob")
Unit: interfaceinvoke $r5.<org.quartz.Scheduler: void addJob(org.quartz.JobDetail,boolean)>(r1, 1)
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
Unit: r1 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: interfaceinvoke $r6.<org.quartz.Scheduler: boolean deleteJob(org.quartz.JobKey)>($r7)
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()


======== method deleteJobDetailWithTrigger ======= : 

Unit: $r9 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r8)
Unit: $r12 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: $r8 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r13 = interfaceinvoke r1.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r5 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: $r7 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("testjob2")
Unit: return
Unit: $r6 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: interfaceinvoke $r12.<org.quartz.Scheduler: boolean deleteJob(org.quartz.JobKey)>($r13)
Unit: r1 = virtualinvoke $r5.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("testjob2")
Unit: $r3 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/DeleteNonExistsJobTest$TestJob;")
Unit: r2 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: specialinvoke r0.<org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: void modifyStoredJobClassName()>()
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
Unit: $r10 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>


======== method deleteTrigger ======= : 

Unit: $r6 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r8 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r3 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/DeleteNonExistsJobTest$TestJob;")
Unit: return
Unit: $r10 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: r1 = virtualinvoke $r5.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r9 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r8)
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("testjob3")
Unit: $r12 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: $r13 = interfaceinvoke r2.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
Unit: interfaceinvoke $r12.<org.quartz.Scheduler: boolean unscheduleJob(org.quartz.TriggerKey)>($r13)
Unit: $r5 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: r2 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r7 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("testjob3")
Unit: specialinvoke r0.<org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: void modifyStoredJobClassName()>()


======== method replaceJobDetail ======= : 

Unit: $r9 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: $r13 = virtualinvoke $r12.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: $r14 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
Unit: $r7 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r11 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/DeleteNonExistsJobTest$TestJob;")
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: specialinvoke r0.<org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: void modifyStoredJobClassName()>()
Unit: r16 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: interfaceinvoke $r14.<org.quartz.Scheduler: void addJob(org.quartz.JobDetail,boolean)>(r16, 1)
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: interfaceinvoke $r9.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r15, r1)
Unit: $r12 = virtualinvoke $r11.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("testjob3")
Unit: $r2 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/DeleteNonExistsJobTest$TestJob;")
Unit: r1 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r15 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: return
Unit: $r8 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("testjob3")
Unit: $r3 = virtualinvoke $r2.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("testjob3")


======== method modifyStoredJobClassName ======= : 



======== method access$000 ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.core.RecoverJobsTest$RecoverJobsTestJob



======== method <init> ======= : 



======== method execute ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.CronScheduleBuilderTest



======== method <init> ======= : 



======== method testAtHourAndMinuteOnGivenDaysOfWeek ======= : 

Unit: $r3[1] = $r5
Unit: $r13[0] = $r14
Unit: $r15 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder atHourAndMinuteOnGivenDaysOfWeek(int,int,java.lang.Integer[])>(10, 0, $r13)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: return
Unit: r0 := @this: org.quartz.CronScheduleBuilderTest
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("0 0 10 ? * 4", $r18)
Unit: $r13 = newarray (java.lang.Integer)[1]
Unit: $r18 = interfaceinvoke r20.<org.quartz.CronTrigger: java.lang.String getCronExpression()>()
Unit: r20 = (org.quartz.CronTrigger) $r17
Unit: $r16 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r15)
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r7 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder atHourAndMinuteOnGivenDaysOfWeek(int,int,java.lang.Integer[])>(10, 0, $r3)
Unit: $r1 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r11 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r12 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r2 = virtualinvoke $r1.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("0 0 10 ? * 2,5,6", $r10)
Unit: $r3 = newarray (java.lang.Integer)[3]
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r3[0] = $r4
Unit: $r10 = interfaceinvoke r19.<org.quartz.CronTrigger: java.lang.String getCronExpression()>()
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r8 = virtualinvoke $r2.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: $r3[2] = $r6
Unit: r19 = (org.quartz.CronTrigger) $r9
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JTANonClusteredSemaphore



======== method <init> ======= : 



======== method getLog ======= : 



======== method setTransactionManagerJNDIName ======= : 



======== method getThreadLocks ======= : 



======== method obtainLock ======= : 



======== method getTransaction ======= : 



======== method releaseLock ======= : 



======== method releaseLock ======= : 



======== method isLockOwner ======= : 



======== method requiresConnection ======= : 

 ====================================== 
** CLASS org.quartz.simpl.PropertySettingJobFactory



======== method <init> ======= : 



======== method newJob ======= : 



======== method setBeanProps ======= : 



======== method handleError ======= : 



======== method handleError ======= : 



======== method getSetMethod ======= : 



======== method isThrowIfPropertyNotFound ======= : 



======== method setThrowIfPropertyNotFound ======= : 



======== method isWarnIfPropertyNotFound ======= : 



======== method setWarnIfPropertyNotFound ======= : 

 ====================================== 
** CLASS org.quartz.ObjectAlreadyExistsException



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.Semaphore



======== method obtainLock ======= : 



======== method releaseLock ======= : 



======== method requiresConnection ======= : 

 ====================================== 
** CLASS org.quartz.AbstractJobStoreTest$MyJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.core.QuartzScheduler$1



======== method <init> ======= : 



======== method run ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.EverythingMatcher



======== method <init> ======= : 



======== method allJobs ======= : 



======== method allTriggers ======= : 



======== method isMatch ======= : 



======== method equals ======= : 



======== method hashCode ======= : 

 ====================================== 
** CLASS org.quartz.UnableToInterruptJobException



======== method <init> ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.JobDetailTest$SomePersistentJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.calendar.CalendarComparator



======== method <init> ======= : 



======== method compare ======= : 



======== method compare ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities$DerbyEmbeddedConnectionProvider



======== method <init> ======= : 



======== method getConnection ======= : 



======== method shutdown ======= : 



======== method initialize ======= : 

 ====================================== 
** CLASS org.quartz.xml.XMLSchedulingDataProcessor$1



======== method <init> ======= : 



======== method getNamespaceURI ======= : 



======== method getPrefixes ======= : 



======== method getPrefix ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.CronTriggerPersistenceDelegate



======== method <init> ======= : 



======== method initialize ======= : 



======== method getHandledTriggerTypeDiscriminator ======= : 



======== method canHandleTriggerType ======= : 



======== method deleteExtendedTriggerProperties ======= : 



======== method insertExtendedTriggerProperties ======= : 



======== method loadExtendedTriggerProperties ======= : 



======== method updateExtendedTriggerProperties ======= : 

 ====================================== 
** CLASS org.quartz.JobPersistenceException



======== method <init> ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$VoidTransactionCallback



======== method <init> ======= : 



======== method execute ======= : 



======== method executeVoid ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.TriggerUtils



======== method <init> ======= : 



======== method computeFireTimes ======= : 



======== method computeEndTimeToAllowParticularNumberOfFirings ======= : 



======== method computeFireTimesBetween ======= : 

 ====================================== 
** CLASS org.quartz.spi.TriggerFiredResult



======== method <init> ======= : 



======== method <init> ======= : 



======== method getTriggerFiredBundle ======= : 



======== method getException ======= : 

 ====================================== 
** CLASS org.quartz.TriggerBuilder



======== method <init> ======= : 



======== method newTrigger ======= : 



======== method build ======= : 



======== method withIdentity ======= : 



======== method withIdentity ======= : 



======== method withIdentity ======= : 



======== method withDescription ======= : 



======== method withPriority ======= : 



======== method modifiedByCalendar ======= : 



======== method startAt ======= : 



======== method startNow ======= : 



======== method endAt ======= : 



======== method withSchedule ======= : 



======== method forJob ======= : 



======== method forJob ======= : 



======== method forJob ======= : 



======== method forJob ======= : 



======== method usingJobData ======= : 



======== method usingJobData ======= : 



======== method usingJobData ======= : 



======== method usingJobData ======= : 



======== method usingJobData ======= : 



======== method usingJobData ======= : 



======== method usingJobData ======= : 

 ====================================== 
** CLASS org.quartz.impl.JobDetailImpl



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method getName ======= : 



======== method setName ======= : 



======== method getGroup ======= : 



======== method setGroup ======= : 



======== method getFullName ======= : 



======== method getKey ======= : 



======== method setKey ======= : 



======== method getDescription ======= : 



======== method setDescription ======= : 



======== method getJobClass ======= : 



======== method setJobClass ======= : 



======== method getJobDataMap ======= : 



======== method setJobDataMap ======= : 



======== method setDurability ======= : 



======== method setRequestsRecovery ======= : 



======== method isDurable ======= : 



======== method isPersistJobDataAfterExecution ======= : 



======== method isConcurrentExectionDisallowed ======= : 



======== method requestsRecovery ======= : 



======== method toString ======= : 



======== method equals ======= : 



======== method hashCode ======= : 



======== method clone ======= : 



======== method getJobBuilder ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.QuartzDatabaseCronTriggerTest



======== method <init> ======= : 



======== method testCronRepeatCount ======= : 

Unit: virtualinvoke $r11.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>($r12, r2)
Unit: i8 = 1
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r24, $r26)
Unit: $i9 = lengthof r31
Unit: $r8 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r1 = (org.quartz.CronTrigger) $r8
Unit: r2 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r9)
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r21 = newarray (java.lang.Long)[$i1]
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: specialinvoke $r9.<java.util.LinkedList: void <init>()>()
Unit: $r15 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: $l3 = (long) i8
Unit: $r14 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/TrackingJob;")
Unit: $i6 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: $r26 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r25)
Unit: $r19 = staticinvoke <org.hamcrest.number.OrderingComparison: org.hamcrest.Matcher greaterThanOrEqualTo(java.lang.Comparable)>($r18)
Unit: $r27 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
Unit: $l5 = l0 + $l4
Unit: $r10 = r0.<org.quartz.integrations.tests.QuartzDatabaseCronTriggerTest: org.quartz.Scheduler scheduler>
Unit: if $i6 >= 3 goto $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r20 = staticinvoke <org.hamcrest.collection.IsCollectionWithSize: org.hamcrest.Matcher hasSize(org.hamcrest.Matcher)>($r19)
Unit: $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
Unit: $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)
Unit: $r11 = interfaceinvoke $r10.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r2, $r20)
Unit: goto [?= $i9 = lengthof r31]
Unit: $l4 = virtualinvoke $r27.<java.util.concurrent.TimeUnit: long toMillis(long)>($l3)
Unit: $r30 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r29)
Unit: $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r21)
Unit: $r6 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r28 = r31[i8]
Unit: $r7 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r6)
Unit: interfaceinvoke $r16.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r3, r1)
Unit: $r9 = new java.util.LinkedList
Unit: i7 = 0
Unit: if i8 >= $i9 goto return
Unit: i8 = i8 + 1
Unit: r0 := @this: org.quartz.integrations.tests.QuartzDatabaseCronTriggerTest
Unit: i7 = i7 + 1
Unit: $r16 = r0.<org.quartz.integrations.tests.QuartzDatabaseCronTriggerTest: org.quartz.Scheduler scheduler>
Unit: $r12 = <org.quartz.integrations.tests.TrackingJob: java.lang.String SCHEDULED_TIMES_KEY>
Unit: l0 = virtualinvoke $r23.<java.lang.Long: long longValue()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r28, $r30)
Unit: goto [?= (branch)]
Unit: $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(500L)
Unit: r31 = (java.lang.Long[]) $r22
Unit: $r23 = r31[0]
Unit: r3 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $l2 = l0 % 1000L
Unit: if i7 >= 20 goto $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $i1 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: return
 ====================================== 
** CLASS org.quartz.listeners.BroadcastTriggerListener



======== method <init> ======= : 



======== method <init> ======= : 



======== method getName ======= : 



======== method addListener ======= : 



======== method removeListener ======= : 



======== method removeListener ======= : 



======== method getListeners ======= : 



======== method triggerFired ======= : 



======== method vetoJobExecution ======= : 



======== method triggerMisfired ======= : 



======== method triggerComplete ======= : 

 ====================================== 
** CLASS org.quartz.core.ListenerManagerTest



======== method <init> ======= : 



======== method setUp ======= : 



======== method testManagementOfJobListeners ======= : 

Unit: r5 = (org.quartz.JobListener) $r16
Unit: $r6 = new org.quartz.core.ListenerManagerTest$TestJobListener
Unit: goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
Unit: $i1 = interfaceinvoke $r9.<java.util.List: int size()>()
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: boolean removeJobListener(java.lang.String)>("tl1")
Unit: specialinvoke $r8.<org.quartz.core.ListenerManagerImpl: void <init>()>()
Unit: $r12 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getJobListeners()>()
Unit: if i5 >= 15 goto r24 = virtualinvoke r23.<org.quartz.core.ListenerManagerImpl: java.util.List getJobListeners()>()
Unit: $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
Unit: r24 = virtualinvoke r23.<org.quartz.core.ListenerManagerImpl: java.util.List getJobListeners()>()
Unit: $i4 = interfaceinvoke $r14.<java.util.List: int size()>()
Unit: $r21 = r3[i5]
Unit: $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Unit: $r15 = new org.quartz.core.ListenerManagerImpl
Unit: i5 = 0
Unit: specialinvoke $r18.<org.quartz.core.ListenerManagerTest$TestJobListener: void <init>(java.lang.String)>($r20)
Unit: specialinvoke $r6.<org.quartz.core.ListenerManagerTest$TestJobListener: void <init>(java.lang.String)>("tl1")
Unit: r3 = newarray (org.quartz.JobListener)[15]
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: boolean addJobListenerMatcher(java.lang.String,org.quartz.Matcher)>("tl2", $r13)
Unit: return
Unit: $i3 = interfaceinvoke $r12.<java.util.List: int size()>()
Unit: $r14 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getJobListenerMatchers(java.lang.String)>("tl2")
Unit: virtualinvoke r23.<org.quartz.core.ListenerManagerImpl: void addJobListener(org.quartz.JobListener)>($r21)
Unit: $r13 = staticinvoke <org.quartz.impl.matchers.NameMatcher: org.quartz.impl.matchers.NameMatcher jobNameContains(java.lang.String)>("foo")
Unit: $r7 = new org.quartz.core.ListenerManagerTest$TestJobListener
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: void addJobListener(org.quartz.JobListener,org.quartz.Matcher)>(r2, $r10)
Unit: $r9 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getJobListeners()>()
Unit: r3[i5] = $r18
Unit: r2 = $r7
Unit: r23 = $r15
Unit: b0 = 15
Unit: $r8 = new org.quartz.core.ListenerManagerImpl
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener\'s matcher list", 2, $i4)
Unit: $r10 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("foo")
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 1, $i3)
Unit: if $z2 == 0 goto return
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 2, $i2)
Unit: $r20 = virtualinvoke $r19.<java.util.UUID: java.lang.String toString()>()
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("Unexpected order of listeners", $r17, r5)
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: void addJobListener(org.quartz.JobListener)>(r1)
Unit: $r17 = r3[i6]
Unit: i6 = i6 + 1
Unit: specialinvoke $r7.<org.quartz.core.ListenerManagerTest$TestJobListener: void <init>(java.lang.String)>("tl2")
Unit: r22 = $r8
Unit: goto [?= (branch)]
Unit: i6 = 0
Unit: r0 := @this: org.quartz.core.ListenerManagerTest
Unit: specialinvoke $r15.<org.quartz.core.ListenerManagerImpl: void <init>()>()
Unit: r4 = interfaceinvoke r24.<java.util.List: java.util.Iterator iterator()>()
Unit: $r11 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getJobListeners()>()
Unit: i5 = i5 + 1
Unit: r1 = $r6
Unit: $r19 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
Unit: $i2 = interfaceinvoke $r11.<java.util.List: int size()>()
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 1, $i1)
Unit: $r18 = new org.quartz.core.ListenerManagerTest$TestJobListener


======== method testManagementOfTriggerListeners ======= : 

Unit: $r14 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getTriggerListenerMatchers(java.lang.String)>("tl2")
Unit: $r18 = new org.quartz.core.ListenerManagerTest$TestTriggerListener
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: boolean addTriggerListenerMatcher(java.lang.String,org.quartz.Matcher)>("tl2", $r13)
Unit: r1 = $r6
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: boolean removeTriggerListener(java.lang.String)>("tl1")
Unit: i5 = i5 + 1
Unit: $r7 = new org.quartz.core.ListenerManagerTest$TestTriggerListener
Unit: r3 = newarray (org.quartz.TriggerListener)[15]
Unit: $r9 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getTriggerListeners()>()
Unit: specialinvoke $r6.<org.quartz.core.ListenerManagerTest$TestTriggerListener: void <init>(java.lang.String)>("tl1")
Unit: r5 = (org.quartz.TriggerListener) $r16
Unit: $r21 = r3[i5]
Unit: $i2 = interfaceinvoke $r11.<java.util.List: int size()>()
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("Unexpected order of listeners", $r17, r5)
Unit: r22 = $r8
Unit: $r10 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("foo")
Unit: r4 = interfaceinvoke r24.<java.util.List: java.util.Iterator iterator()>()
Unit: $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
Unit: r0 := @this: org.quartz.core.ListenerManagerTest
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 1, $i1)
Unit: $r15 = new org.quartz.core.ListenerManagerImpl
Unit: if i5 >= 15 goto r24 = virtualinvoke r23.<org.quartz.core.ListenerManagerImpl: java.util.List getTriggerListeners()>()
Unit: $r6 = new org.quartz.core.ListenerManagerTest$TestTriggerListener
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: void addTriggerListener(org.quartz.TriggerListener,org.quartz.Matcher)>(r2, $r10)
Unit: r24 = virtualinvoke r23.<org.quartz.core.ListenerManagerImpl: java.util.List getTriggerListeners()>()
Unit: r23 = $r15
Unit: specialinvoke $r7.<org.quartz.core.ListenerManagerTest$TestTriggerListener: void <init>(java.lang.String)>("tl2")
Unit: $r11 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getTriggerListeners()>()
Unit: i6 = 0
Unit: r3[i5] = $r18
Unit: $r8 = new org.quartz.core.ListenerManagerImpl
Unit: b0 = 15
Unit: i6 = i6 + 1
Unit: specialinvoke $r8.<org.quartz.core.ListenerManagerImpl: void <init>()>()
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener\'s matcher list", 2, $i4)
Unit: i5 = 0
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 2, $i2)
Unit: virtualinvoke r23.<org.quartz.core.ListenerManagerImpl: void addTriggerListener(org.quartz.TriggerListener)>($r21)
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 1, $i3)
Unit: $r17 = r3[i6]
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: void addTriggerListener(org.quartz.TriggerListener)>(r1)
Unit: $r13 = staticinvoke <org.quartz.impl.matchers.NameMatcher: org.quartz.impl.matchers.NameMatcher nameContains(java.lang.String)>("foo")
Unit: $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Unit: $i1 = interfaceinvoke $r9.<java.util.List: int size()>()
Unit: $i3 = interfaceinvoke $r12.<java.util.List: int size()>()
Unit: $r20 = virtualinvoke $r19.<java.util.UUID: java.lang.String toString()>()
Unit: $r19 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
Unit: if $z2 == 0 goto return
Unit: goto [?= (branch)]
Unit: r2 = $r7
Unit: $r12 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getTriggerListeners()>()
Unit: specialinvoke $r18.<org.quartz.core.ListenerManagerTest$TestTriggerListener: void <init>(java.lang.String)>($r20)
Unit: goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
Unit: $i4 = interfaceinvoke $r14.<java.util.List: int size()>()
Unit: specialinvoke $r15.<org.quartz.core.ListenerManagerImpl: void <init>()>()
Unit: return


======== method testManagementOfSchedulerListeners ======= : 

Unit: specialinvoke $r12.<org.quartz.core.ListenerManagerImpl: void <init>()>()
Unit: i5 = 0
Unit: specialinvoke $r6.<org.quartz.core.ListenerManagerTest$TestSchedulerListener: void <init>()>()
Unit: b0 = 15
Unit: $r6 = new org.quartz.core.ListenerManagerTest$TestSchedulerListener
Unit: $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Unit: $i2 = interfaceinvoke $r10.<java.util.List: int size()>()
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("Unexpected order of listeners", $r14, r5)
Unit: specialinvoke $r7.<org.quartz.core.ListenerManagerTest$TestSchedulerListener: void <init>()>()
Unit: r0 := @this: org.quartz.core.ListenerManagerTest
Unit: $r14 = r3[i5]
Unit: r2 = $r7
Unit: $i1 = interfaceinvoke $r9.<java.util.List: int size()>()
Unit: virtualinvoke r17.<org.quartz.core.ListenerManagerImpl: boolean removeSchedulerListener(org.quartz.SchedulerListener)>(r1)
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 1, $i3)
Unit: $r8 = new org.quartz.core.ListenerManagerImpl
Unit: virtualinvoke r17.<org.quartz.core.ListenerManagerImpl: void addSchedulerListener(org.quartz.SchedulerListener)>(r2)
Unit: r5 = (org.quartz.SchedulerListener) $r13
Unit: virtualinvoke r18.<org.quartz.core.ListenerManagerImpl: void addSchedulerListener(org.quartz.SchedulerListener)>($r16)
Unit: i5 = i5 + 1
Unit: r4 = interfaceinvoke r19.<java.util.List: java.util.Iterator iterator()>()
Unit: specialinvoke $r15.<org.quartz.core.ListenerManagerTest$TestSchedulerListener: void <init>()>()
Unit: r3[i4] = $r15
Unit: r1 = $r6
Unit: $r9 = virtualinvoke r17.<org.quartz.core.ListenerManagerImpl: java.util.List getSchedulerListeners()>()
Unit: return
Unit: i4 = 0
Unit: if $z1 == 0 goto return
Unit: r17 = $r8
Unit: r3 = newarray (org.quartz.SchedulerListener)[15]
Unit: i4 = i4 + 1
Unit: goto [?= (branch)]
Unit: $r10 = virtualinvoke r17.<org.quartz.core.ListenerManagerImpl: java.util.List getSchedulerListeners()>()
Unit: $r7 = new org.quartz.core.ListenerManagerTest$TestSchedulerListener
Unit: $r12 = new org.quartz.core.ListenerManagerImpl
Unit: r19 = virtualinvoke r18.<org.quartz.core.ListenerManagerImpl: java.util.List getSchedulerListeners()>()
Unit: $r11 = virtualinvoke r17.<org.quartz.core.ListenerManagerImpl: java.util.List getSchedulerListeners()>()
Unit: if i4 >= 15 goto r19 = virtualinvoke r18.<org.quartz.core.ListenerManagerImpl: java.util.List getSchedulerListeners()>()
Unit: $r15 = new org.quartz.core.ListenerManagerTest$TestSchedulerListener
Unit: $i3 = interfaceinvoke $r11.<java.util.List: int size()>()
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 1, $i1)
Unit: virtualinvoke r17.<org.quartz.core.ListenerManagerImpl: void addSchedulerListener(org.quartz.SchedulerListener)>(r1)
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 2, $i2)
Unit: $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
Unit: $r16 = r3[i4]
Unit: specialinvoke $r8.<org.quartz.core.ListenerManagerImpl: void <init>()>()
Unit: goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
Unit: r18 = $r12
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport



======== method <init> ======= : 



======== method setDataSource ======= : 



======== method getDataSource ======= : 



======== method setTablePrefix ======= : 



======== method getTablePrefix ======= : 



======== method setUseProperties ======= : 



======== method canUseProperties ======= : 



======== method setInstanceId ======= : 



======== method getInstanceId ======= : 



======== method setInstanceName ======= : 



======== method setThreadPoolSize ======= : 



======== method setThreadExecutor ======= : 



======== method getThreadExecutor ======= : 



======== method getInstanceName ======= : 



======== method getEstimatedTimeToReleaseAndAcquireTrigger ======= : 



======== method setIsClustered ======= : 



======== method isClustered ======= : 



======== method getClusterCheckinInterval ======= : 



======== method setClusterCheckinInterval ======= : 



======== method getMaxMisfiresToHandleAtATime ======= : 



======== method setMaxMisfiresToHandleAtATime ======= : 



======== method getDbRetryInterval ======= : 



======== method setDbRetryInterval ======= : 



======== method setUseDBLocks ======= : 



======== method getUseDBLocks ======= : 



======== method isLockOnInsert ======= : 



======== method setLockOnInsert ======= : 



======== method getMisfireThreshold ======= : 



======== method setMisfireThreshold ======= : 



======== method isDontSetAutoCommitFalse ======= : 



======== method setDontSetAutoCommitFalse ======= : 



======== method isTxIsolationLevelSerializable ======= : 



======== method setTxIsolationLevelSerializable ======= : 



======== method isAcquireTriggersWithinLock ======= : 



======== method setAcquireTriggersWithinLock ======= : 



======== method setDriverDelegateClass ======= : 



======== method getDriverDelegateClass ======= : 



======== method setDriverDelegateInitString ======= : 



======== method getDriverDelegateInitString ======= : 



======== method getSelectWithLockSQL ======= : 



======== method setSelectWithLockSQL ======= : 



======== method getClassLoadHelper ======= : 



======== method getMakeThreadsDaemons ======= : 



======== method setMakeThreadsDaemons ======= : 



======== method isThreadsInheritInitializersClassLoadContext ======= : 



======== method setThreadsInheritInitializersClassLoadContext ======= : 



======== method getDoubleCheckLockMisfireHandler ======= : 



======== method setDoubleCheckLockMisfireHandler ======= : 



======== method getAcquireRetryDelay ======= : 



======== method getLog ======= : 



======== method initialize ======= : 



======== method schedulerStarted ======= : 



======== method schedulerPaused ======= : 



======== method schedulerResumed ======= : 



======== method shutdown ======= : 



======== method supportsPersistence ======= : 



======== method getNonManagedTXConnection ======= : 



======== method getAttributeRestoringConnection ======= : 



======== method getConnection ======= : 



======== method releaseLock ======= : 



======== method recoverJobs ======= : 



======== method recoverJobs ======= : 



======== method getMisfireTime ======= : 



======== method recoverMisfiredJobs ======= : 



======== method updateMisfiredTrigger ======= : 



======== method doUpdateOfMisfiredTrigger ======= : 



======== method storeJobAndTrigger ======= : 



======== method storeJob ======= : 



======== method storeJob ======= : 



======== method jobExists ======= : 



======== method storeTrigger ======= : 



======== method storeTrigger ======= : 



======== method triggerExists ======= : 



======== method removeJob ======= : 



======== method removeJob ======= : 



======== method removeJobs ======= : 



======== method removeTriggers ======= : 



======== method storeJobsAndTriggers ======= : 



======== method deleteJobAndChildren ======= : 



======== method deleteTriggerAndChildren ======= : 



======== method retrieveJob ======= : 



======== method retrieveJob ======= : 



======== method removeTrigger ======= : 



======== method removeTrigger ======= : 



======== method replaceTrigger ======= : 



======== method replaceTrigger ======= : 



======== method retrieveTrigger ======= : 



======== method retrieveTrigger ======= : 



======== method getTriggerState ======= : 



======== method getTriggerState ======= : 



======== method resetTriggerFromErrorState ======= : 



======== method resetTriggerFromErrorState ======= : 



======== method storeCalendar ======= : 



======== method storeCalendar ======= : 



======== method calendarExists ======= : 



======== method removeCalendar ======= : 



======== method removeCalendar ======= : 



======== method retrieveCalendar ======= : 



======== method retrieveCalendar ======= : 



======== method getNumberOfJobs ======= : 



======== method getNumberOfJobs ======= : 



======== method getNumberOfTriggers ======= : 



======== method getNumberOfTriggers ======= : 



======== method getNumberOfCalendars ======= : 



======== method getNumberOfCalendars ======= : 



======== method getJobKeys ======= : 



======== method getJobNames ======= : 



======== method checkExists ======= : 



======== method checkExists ======= : 



======== method checkExists ======= : 



======== method checkExists ======= : 



======== method clearAllSchedulingData ======= : 



======== method clearAllSchedulingData ======= : 



======== method getTriggerKeys ======= : 



======== method getTriggerNames ======= : 



======== method getJobGroupNames ======= : 



======== method getJobGroupNames ======= : 



======== method getTriggerGroupNames ======= : 



======== method getTriggerGroupNames ======= : 



======== method getCalendarNames ======= : 



======== method getCalendarNames ======= : 



======== method getTriggersForJob ======= : 



======== method getTriggersForJob ======= : 



======== method pauseTrigger ======= : 



======== method pauseTrigger ======= : 



======== method pauseJob ======= : 



======== method pauseJobs ======= : 



======== method checkBlockedState ======= : 



======== method resumeTrigger ======= : 



======== method resumeTrigger ======= : 



======== method resumeJob ======= : 



======== method resumeJobs ======= : 



======== method pauseTriggers ======= : 



======== method pauseTriggerGroup ======= : 



======== method getPausedTriggerGroups ======= : 



======== method getPausedTriggerGroups ======= : 



======== method resumeTriggers ======= : 



======== method resumeTriggerGroup ======= : 



======== method pauseAll ======= : 



======== method pauseAll ======= : 



======== method resumeAll ======= : 



======== method resumeAll ======= : 



======== method getFiredTriggerRecordId ======= : 



======== method acquireNextTriggers ======= : 



======== method acquireNextTrigger ======= : 



======== method releaseAcquiredTrigger ======= : 



======== method releaseAcquiredTrigger ======= : 



======== method triggersFired ======= : 



======== method triggerFired ======= : 



======== method triggeredJobComplete ======= : 



======== method triggeredJobComplete ======= : 



======== method getDelegate ======= : 



======== method getLockHandler ======= : 



======== method setLockHandler ======= : 



======== method doRecoverMisfires ======= : 



======== method signalSchedulingChangeOnTxCompletion ======= : 



======== method clearAndGetSignalSchedulingChangeOnTxCompletion ======= : 



======== method signalSchedulingChangeImmediately ======= : 



======== method doCheckin ======= : 



======== method findFailedInstances ======= : 



======== method findOrphanedFailedInstances ======= : 



======== method calcFailedIfAfter ======= : 



======== method clusterCheckIn ======= : 



======== method clusterRecover ======= : 



======== method logWarnIfNonZero ======= : 



======== method cleanupConnection ======= : 



======== method closeConnection ======= : 



======== method rollbackConnection ======= : 



======== method commitConnection ======= : 



======== method executeWithoutLock ======= : 



======== method executeInLock ======= : 



======== method retryExecuteInNonManagedTXLock ======= : 



======== method executeInNonManagedTXLock ======= : 



======== method resumeJobs ======= : 



======== method resumeTriggers ======= : 



======== method pauseJobs ======= : 



======== method pauseTriggers ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.JobBuilderTest$TestAnnotatedJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider



======== method <init> ======= : 



======== method getConnection ======= : 



======== method shutdown ======= : 



======== method initialize ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.PostgreSQLDelegate



======== method <init> ======= : 



======== method getObjectFromBlob ======= : 



======== method getJobDataFromBlob ======= : 

 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap$DirtyFlagSet



======== method <init> ======= : 



======== method getWrappedSet ======= : 

 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap$DirtyFlagCollection



======== method <init> ======= : 



======== method getWrappedCollection ======= : 



======== method iterator ======= : 



======== method remove ======= : 



======== method removeAll ======= : 



======== method retainAll ======= : 



======== method clear ======= : 



======== method size ======= : 



======== method isEmpty ======= : 



======== method contains ======= : 



======== method add ======= : 



======== method addAll ======= : 



======== method containsAll ======= : 



======== method toArray ======= : 



======== method toArray ======= : 

 ====================================== 
** CLASS org.quartz.AbstractJobStoreTest$SampleSignaler



======== method <init> ======= : 



======== method notifyTriggerListenersMisfired ======= : 



======== method signalSchedulingChange ======= : 



======== method notifySchedulerListenersFinalized ======= : 



======== method notifySchedulerListenersJobDeleted ======= : 



======== method notifySchedulerListenersError ======= : 

 ====================================== 
** CLASS org.quartz.TriggerBuilderTest



======== method <init> ======= : 



======== method setUp ======= : 



======== method testTriggerBuilder ======= : 

Unit: $r49 = virtualinvoke $r48.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r1)
Unit: $z12 = 0
Unit: $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job description: ")
Unit: $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r18, $z6)
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected non-null trigger name ", $z5)
Unit: $z8 = 0
Unit: $i0 = interfaceinvoke r94.<org.quartz.Trigger: int getPriority()>()
Unit: $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)
Unit: $r84 = interfaceinvoke r95.<org.quartz.Trigger: java.util.Date getStartTime()>()
Unit: $r43 = virtualinvoke $r42.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("t1")
Unit: $r47 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(10, $r46)
Unit: $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61)
Unit: $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected trigger name ")
Unit: $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected trigger group: ")
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r70, $z11)]
Unit: $r30 = new java.lang.StringBuilder
Unit: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected trigger group: ")
Unit: $r6 = new java.lang.StringBuilder
Unit: $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end-time: ")
Unit: $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
Unit: $r16 = interfaceinvoke r94.<org.quartz.Trigger: org.quartz.JobKey getJobKey()>()
Unit: specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenSecondDateAfterNow()>()
Unit: $z8 = 1
Unit: $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected trigger priortiy: ")
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r92, $z13)
Unit: $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r76, $z3)
Unit: $r25 = interfaceinvoke r94.<org.quartz.Trigger: java.lang.String getDescription()>()
Unit: $r45 = virtualinvoke $r44.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withPriority(int)>(2)
Unit: $r82 = new java.lang.StringBuilder
Unit: $r19 = interfaceinvoke r94.<org.quartz.Trigger: org.quartz.JobKey getJobKey()>()
Unit: specialinvoke $r78.<java.lang.StringBuilder: void <init>()>()
Unit: specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: if $i1 != 5 goto $z8 = 0
Unit: $z1 = virtualinvoke $r57.<java.lang.String: boolean equals(java.lang.Object)>("t1")
Unit: $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38)
Unit: $r14 = new java.lang.StringBuilder
Unit: specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()
Unit: $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74)
Unit: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: specialinvoke $r72.<java.lang.StringBuilder: void <init>()>()
Unit: $r71 = interfaceinvoke r95.<org.quartz.Trigger: org.quartz.JobKey getJobKey()>()
Unit: $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $z5 = 0
Unit: $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16)
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r34, $z9)
Unit: $r61 = virtualinvoke $r60.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: $z11 = 1
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r55, $z1)
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r63, $z2)
Unit: $r41 = interfaceinvoke r94.<org.quartz.Trigger: java.util.Date getEndTime()>()
Unit: $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job key: ")
Unit: $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start-time: ")
Unit: specialinvoke $r88.<java.lang.StringBuilder: void <init>()>()
Unit: if $r35 == null goto $z9 = 0
Unit: $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end-time: ")
Unit: $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r57 = virtualinvoke $r56.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
Unit: if $i2 != 2 goto $z12 = 0
Unit: $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
Unit: $z10 = 0
Unit: $r42 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r12 = interfaceinvoke r94.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r40, $z10)]
Unit: $z4 = virtualinvoke $r87.<java.util.Date: boolean equals(java.lang.Object)>(r1)
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r92, $z13)]
Unit: $r4 = interfaceinvoke r94.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r34, $z9)]
Unit: $r87 = interfaceinvoke r95.<org.quartz.Trigger: java.util.Date getStartTime()>()
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r86, $z4)
Unit: $r64 = interfaceinvoke r95.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $z9 = 1
Unit: r0 := @this: org.quartz.TriggerBuilderTest
Unit: $z11 = 0
Unit: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job key: ")
Unit: $i1 = interfaceinvoke r94.<org.quartz.Trigger: int getPriority()>()
Unit: if $r41 != null goto $z10 = 0
Unit: $r48 = virtualinvoke $r45.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder endAt(java.util.Date)>($r47)
Unit: $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r68)
Unit: $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected trigger priortiy: ")
Unit: $z13 = 0
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected non-null trigger name ", $z5)]
Unit: $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r72 = new java.lang.StringBuilder
Unit: $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r95)
Unit: $z5 = 1
Unit: $r66 = new java.lang.StringBuilder
Unit: specialinvoke $r66.<java.lang.StringBuilder: void <init>()>()
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r81, $z12)]
Unit: if $r93 == null goto $z13 = 0
Unit: $r77 = interfaceinvoke r95.<org.quartz.Trigger: java.lang.String getDescription()>()
Unit: specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
Unit: $r93 = interfaceinvoke r95.<org.quartz.Trigger: java.util.Date getEndTime()>()
Unit: $z6 = 1
Unit: $z12 = 1
Unit: $z7 = 1
Unit: $r65 = virtualinvoke $r64.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: $r26 = new java.lang.StringBuilder
Unit: $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53)
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r24, $z7)]
Unit: $z2 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>("DEFAULT")
Unit: $z6 = 0
Unit: $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r29, $z8)
Unit: $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r90)
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r70, $z11)
Unit: $z9 = 0
Unit: specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()
Unit: r95 = virtualinvoke $r49.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r29, $z8)]
Unit: $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r56 = interfaceinvoke r95.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r46 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit WEEK>
Unit: $r44 = virtualinvoke $r43.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withDescription(java.lang.String)>("my description")
Unit: specialinvoke $r82.<java.lang.StringBuilder: void <init>()>()
Unit: $r68 = interfaceinvoke r95.<org.quartz.Trigger: org.quartz.JobKey getJobKey()>()
Unit: $z7 = 0
Unit: $z10 = 1
Unit: $r20 = new java.lang.StringBuilder
Unit: $r52 = interfaceinvoke r95.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start-time: ")
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r18, $z6)]
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: $r2 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r90 = interfaceinvoke r95.<org.quartz.Trigger: java.util.Date getEndTime()>()
Unit: if $r71 != null goto $z11 = 0
Unit: $r35 = interfaceinvoke r94.<org.quartz.Trigger: java.util.Date getStartTime()>()
Unit: $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r74 = interfaceinvoke r95.<org.quartz.Trigger: java.lang.String getDescription()>()
Unit: return
Unit: $r8 = interfaceinvoke r94.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $z13 = 1
Unit: $r50 = new java.lang.StringBuilder
Unit: specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
Unit: $r58 = new java.lang.StringBuilder
Unit: $r60 = interfaceinvoke r95.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r88 = new java.lang.StringBuilder
Unit: $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job description: ")
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r24, $z7)
Unit: $r53 = virtualinvoke $r52.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
Unit: if $r5 == null goto $z5 = 0
Unit: $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("DEFAULT")
Unit: $z3 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>("my description")
Unit: if $r25 != null goto $z7 = 0
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r81, $z12)
Unit: $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r84)
Unit: $r22 = interfaceinvoke r94.<org.quartz.Trigger: java.lang.String getDescription()>()
Unit: $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32)
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r11, $z0)
Unit: $r78 = new java.lang.StringBuilder
Unit: if $r19 != null goto $z6 = 0
Unit: $r36 = new java.lang.StringBuilder
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r40, $z10)
Unit: $i2 = interfaceinvoke r95.<org.quartz.Trigger: int getPriority()>()
Unit: $r32 = interfaceinvoke r94.<org.quartz.Trigger: java.util.Date getStartTime()>()
Unit: $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r38 = interfaceinvoke r94.<org.quartz.Trigger: java.util.Date getEndTime()>()
Unit: r94 = virtualinvoke $r2.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()


======== method testTriggerBuilderWithEndTimePriorCurrrentTime ======= : 

Unit: $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
Unit: virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $l1 = $l0 - 200000000L
Unit: specialinvoke $r6.<java.util.Date: void <init>(long)>($l3)
Unit: $r3 = virtualinvoke $r2.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(java.lang.String,java.lang.String)>("some job name", "some job group")
Unit: $r8 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("0 0 0 * * ?")
Unit: $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
Unit: $l3 = $l2 - 100000000L
Unit: $r7 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder endAt(java.util.Date)>($r6)
Unit: $r4 = new java.util.Date
Unit: $r1 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r6 = new java.util.Date
Unit: return
Unit: r0 := @this: org.quartz.TriggerBuilderTest
Unit: specialinvoke $r4.<java.util.Date: void <init>(long)>($l1)
Unit: $r5 = virtualinvoke $r3.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r4)
Unit: $r9 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r8)
Unit: $r2 = virtualinvoke $r1.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("some trigger name", "some trigger group")
 ====================================== 
** CLASS org.quartz.ee.servlet.QuartzInitializerListener



======== method <init> ======= : 



======== method contextInitialized ======= : 



======== method getSchedulerFactory ======= : 



======== method contextDestroyed ======= : 

 ====================================== 
** CLASS org.quartz.impl.calendar.AnnualCalendar



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method clone ======= : 



======== method getDaysExcluded ======= : 



======== method isDayExcluded ======= : 



======== method setDaysExcluded ======= : 



======== method setDayExcluded ======= : 



======== method removeExcludedDay ======= : 



======== method removeExcludedDay ======= : 



======== method isTimeIncluded ======= : 



======== method getNextIncludedTime ======= : 

 ====================================== 
** CLASS org.quartz.impl.RemoteMBeanSchedulerTest



======== method <init> ======= : 



======== method setUp ======= : 

Unit: r3 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r4 = staticinvoke <org.quartz.core.QuartzSchedulerResources: java.lang.String generateJMXObjectName(java.lang.String,java.lang.String)>($r24, $r26)
Unit: $r25 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r20 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: specialinvoke $r11.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1)
Unit: $r17 = new java.util.Date
Unit: specialinvoke $r27.<org.quartz.impl.RemoteMBeanSchedulerTest$TestRemoteScheduler: void <init>(java.lang.String)>(r4)
Unit: $r15 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r23 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r18 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r17)
Unit: $r27 = new org.quartz.impl.RemoteMBeanSchedulerTest$TestRemoteScheduler
Unit: specialinvoke $r5.<java.util.Properties: void <init>()>()
Unit: r1 = $r5
Unit: $r13 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/RemoteMBeanSchedulerTest$HelloJob;")
Unit: r2 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r26 = interfaceinvoke $r25.<org.quartz.Scheduler: java.lang.String getSchedulerInstanceId()>()
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.scheduler.instanceName", "TestScheduler")
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.threadPool.threadCount", "1")
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: return
Unit: $r5 = new java.util.Properties
Unit: $r14 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("job1", "group1")
Unit: $r11 = new org.quartz.impl.StdSchedulerFactory
Unit: r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler> = $r12
Unit: $r24 = interfaceinvoke $r23.<org.quartz.Scheduler: java.lang.String getSchedulerName()>()
Unit: $r21 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r16 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("trigger1", "group1")
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.class", "org.quartz.simpl.RAMJobStore")
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.scheduler.jmx.export", "true")
Unit: $r19 = new org.quartz.impl.calendar.BaseCalendar
Unit: interfaceinvoke $r20.<org.quartz.Scheduler: void addCalendar(java.lang.String,org.quartz.Calendar,boolean,boolean)>("calendar1", $r19, 0, 0)
Unit: $r12 = virtualinvoke $r11.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool")
Unit: specialinvoke $r17.<java.util.Date: void <init>()>()
Unit: specialinvoke $r19.<org.quartz.impl.calendar.BaseCalendar: void <init>()>()
Unit: interfaceinvoke $r21.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r2, r3)
Unit: r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler> = $r27


======== method tearDown ======= : 

Unit: $r1 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: interfaceinvoke $r1.<org.quartz.Scheduler: void shutdown()>()
Unit: return


======== method testJMXAttributesAccess ======= : 

Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r2, $r5)
Unit: $r18 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r14)
Unit: $r14 = interfaceinvoke $r13.<org.quartz.Scheduler: java.util.Set getPausedTriggerGroups()>()
Unit: $r25 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r24)
Unit: $r11 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r13 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r27, $r30)
Unit: $r27 = virtualinvoke $r26.<org.quartz.impl.RemoteMBeanScheduler: java.util.List getTriggerGroupNames()>()
Unit: $r29 = interfaceinvoke $r28.<org.quartz.Scheduler: java.util.List getTriggerGroupNames()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r7, $r10)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r17, $r20)
Unit: $r10 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r9)
Unit: $r21 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r5 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r4)
Unit: $r28 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r7 = virtualinvoke $r6.<org.quartz.impl.RemoteMBeanScheduler: java.util.List getJobGroupNames()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r12, $r15)
Unit: $r12 = virtualinvoke $r11.<org.quartz.impl.RemoteMBeanScheduler: java.util.Set getPausedTriggerGroups()>()
Unit: $r26 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r30 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r29)
Unit: $r20 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r19)
Unit: $r17 = virtualinvoke $r16.<org.quartz.impl.RemoteMBeanScheduler: java.lang.String getSchedulerInstanceId()>()
Unit: $r8 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r24 = interfaceinvoke $r23.<org.quartz.Scheduler: java.lang.String getSchedulerName()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r22, $r25)
Unit: return
Unit: $r2 = virtualinvoke $r1.<org.quartz.impl.RemoteMBeanScheduler: java.util.List getCalendarNames()>()
Unit: $r19 = interfaceinvoke $r18.<org.quartz.Scheduler: java.lang.String getSchedulerInstanceId()>()
Unit: $r4 = interfaceinvoke $r3.<org.quartz.Scheduler: java.util.List getCalendarNames()>()
Unit: $r16 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r6 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r23 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r1 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r22 = virtualinvoke $r21.<org.quartz.impl.RemoteMBeanScheduler: java.lang.String getSchedulerName()>()
Unit: $r9 = interfaceinvoke $r8.<org.quartz.Scheduler: java.util.List getJobGroupNames()>()


======== method testSchedulerMetaData ======= : 

Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $i1 = virtualinvoke r2.<org.quartz.SchedulerMetaData: int getNumberOfJobsExecuted()>()
Unit: $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r19, $r21)
Unit: $r39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9)
Unit: $r40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r8, $r10)
Unit: $r47 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r46)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r51, $r53)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r28, $r29)
Unit: $r38 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r37)
Unit: $r4 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $z5 = virtualinvoke r2.<org.quartz.SchedulerMetaData: boolean isInStandbyMode()>()
Unit: $r27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r26)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r39, $r41)
Unit: $r24 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r23)
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r18 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r17)
Unit: $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
Unit: $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r42, $r44)
Unit: $z8 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isJobStoreSupportsPersistence()>()
Unit: $r6 = virtualinvoke r2.<org.quartz.SchedulerMetaData: java.lang.String getSchedulerName()>()
Unit: $i0 = virtualinvoke r1.<org.quartz.SchedulerMetaData: int getNumberOfJobsExecuted()>()
Unit: $i3 = virtualinvoke r2.<org.quartz.SchedulerMetaData: int getThreadPoolSize()>()
Unit: $r50 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r49)
Unit: $r33 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.Class getJobStoreClass()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r33, $r35)
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r44 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r43)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r45, $r47)
Unit: $r29 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher nullValue()>()
Unit: r2 = interfaceinvoke $r4.<org.quartz.Scheduler: org.quartz.SchedulerMetaData getMetaData()>()
Unit: $r49 = virtualinvoke r2.<org.quartz.SchedulerMetaData: java.lang.String getVersion()>()
Unit: return
Unit: $r51 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.Class getJobStoreClass()>()
Unit: $r35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r34)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r16, $r18)
Unit: $r42 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.Class getThreadPoolClass()>()
Unit: $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6)
Unit: $z3 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isStarted()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r25, $r27)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r48, $r50)
Unit: $r41 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r40)
Unit: $z0 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isInStandbyMode()>()
Unit: $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8)
Unit: $z1 = virtualinvoke r2.<org.quartz.SchedulerMetaData: boolean isInStandbyMode()>()
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r21 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r20)
Unit: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $r32 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r31)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r30, $r32)
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7)
Unit: $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r14, $r15)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r22, $r24)
Unit: $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
Unit: $z6 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isShutdown()>()
Unit: $r28 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.util.Date getRunningSince()>()
Unit: $i2 = virtualinvoke r1.<org.quartz.SchedulerMetaData: int getThreadPoolSize()>()
Unit: $z9 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isJobStoreClustered()>()
Unit: $r10 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r9)
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>(class "Lorg/quartz/impl/RemoteMBeanSchedulerTest$TestRemoteScheduler;")
Unit: $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: $r7 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r6)
Unit: $z2 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isSchedulerRemote()>()
Unit: $r9 = virtualinvoke r2.<org.quartz.SchedulerMetaData: java.lang.String getSchedulerInstanceId()>()
Unit: $r34 = virtualinvoke r2.<org.quartz.SchedulerMetaData: java.lang.Class getJobStoreClass()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r11, $r13)
Unit: $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r5, $r7)
Unit: $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
Unit: $r52 = virtualinvoke r2.<org.quartz.SchedulerMetaData: java.lang.Class getJobStoreClass()>()
Unit: $r8 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.String getSchedulerInstanceId()>()
Unit: r1 = virtualinvoke $r3.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.SchedulerMetaData getMetaData()>()
Unit: $z7 = virtualinvoke r2.<org.quartz.SchedulerMetaData: boolean isShutdown()>()
Unit: $r43 = virtualinvoke r2.<org.quartz.SchedulerMetaData: java.lang.Class getThreadPoolClass()>()
Unit: $r53 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r52)
Unit: $r48 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.String getVersion()>()
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r5 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.String getSchedulerName()>()
Unit: $r13 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r12)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r36, $r38)
Unit: $r14 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.Class getSchedulerClass()>()
Unit: $z4 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isInStandbyMode()>()


======== method testCalendarOperations ======= : 

Unit: $r2 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r6 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: r11 = $r9
Unit: goto [?= $r5 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: virtualinvoke $r3.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.Calendar getCalendar(java.lang.String)>("test")
Unit: goto [?= $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r8 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher nullValue()>()
Unit: $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r1 = new org.quartz.impl.calendar.BaseCalendar
Unit: r12 = $r10
Unit: virtualinvoke $r2.<org.quartz.impl.RemoteMBeanScheduler: void addCalendar(java.lang.String,org.quartz.Calendar,boolean,boolean)>("testCal", $r1, 1, 1)
Unit: $r5 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r7, $r8)
Unit: specialinvoke $r1.<org.quartz.impl.calendar.BaseCalendar: void <init>()>()
Unit: $r7 = interfaceinvoke $r6.<org.quartz.Scheduler: org.quartz.Calendar getCalendar(java.lang.String)>("calendar1")
Unit: return
Unit: virtualinvoke $r5.<org.quartz.impl.RemoteMBeanScheduler: boolean deleteCalendar(java.lang.String)>("calendar1")
Unit: $r10 := @caughtexception
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r9 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")


======== method testTriggerOperations ======= : 

Unit: $r42 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r25 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r33 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: r51 = $r49
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r29, $r31)
Unit: $r36 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r35)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method had a different return type in MBean API")
Unit: return
Unit: specialinvoke $r3.<org.quartz.TriggerKey: void <init>(java.lang.String,java.lang.String)>("trigger1", "group1")
Unit: $r9 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: goto [?= $r9 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: virtualinvoke $r15.<org.quartz.impl.RemoteMBeanScheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>(r2)
Unit: $r6 = new org.quartz.JobKey
Unit: $r30 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r19 = interfaceinvoke $r18.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: $r28 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r11, $r14)
Unit: r54 = $r47
Unit: $r14 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r13)
Unit: $r43 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: virtualinvoke $r17.<org.quartz.impl.RemoteMBeanScheduler: void pauseTrigger(org.quartz.TriggerKey)>(r1)
Unit: r1 = $r3
Unit: $r21 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r20)
Unit: $r13 = interfaceinvoke $r12.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r19, $r21)
Unit: specialinvoke $r6.<org.quartz.JobKey: void <init>(java.lang.String,java.lang.String)>("job1", "group1")
Unit: $r4 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r34 = interfaceinvoke $r33.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: $r23 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: goto [?= $r17 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r17 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r38 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r44, $r46)
Unit: $r18 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r37 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r32 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: goto [?= $r7 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r50 := @caughtexception
Unit: $r39 = interfaceinvoke $r38.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: virtualinvoke $r37.<org.quartz.impl.RemoteMBeanScheduler: void pauseAll()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r34, $r36)
Unit: virtualinvoke $r42.<org.quartz.impl.RemoteMBeanScheduler: void resumeAll()>()
Unit: $r27 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r47 := @caughtexception
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r24, $r26)
Unit: virtualinvoke $r4.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>(r1)
Unit: $r24 = interfaceinvoke $r23.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: $r49 := @caughtexception
Unit: $r48 := @caughtexception
Unit: r53 = $r48
Unit: $r3 = new org.quartz.TriggerKey
Unit: virtualinvoke $r22.<org.quartz.impl.RemoteMBeanScheduler: void resumeTrigger(org.quartz.TriggerKey)>(r1)
Unit: $r11 = virtualinvoke $r10.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: goto [?= $r10 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r41 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r40)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method had a different return type in MBean API")
Unit: virtualinvoke $r9.<org.quartz.impl.RemoteMBeanScheduler: boolean checkExists(org.quartz.TriggerKey)>(r1)
Unit: $r31 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r30)
Unit: virtualinvoke $r7.<org.quartz.impl.RemoteMBeanScheduler: java.util.List getTriggersOfJob(org.quartz.JobKey)>($r6)
Unit: $r29 = interfaceinvoke $r28.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: $r45 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r10 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r35 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r39, $r41)
Unit: $r22 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r15 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r40 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: r52 = $r50
Unit: virtualinvoke $r32.<org.quartz.impl.RemoteMBeanScheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>(r2)
Unit: virtualinvoke $r27.<org.quartz.impl.RemoteMBeanScheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>(r2)
Unit: $r7 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r20 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r26 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r25)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: r2 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("group1")
Unit: $r44 = interfaceinvoke $r43.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: $r12 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r46 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r45)


======== method testJobOperations ======= : 

Unit: r2 = virtualinvoke $r6.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: r55 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("group1")
Unit: virtualinvoke $r25.<org.quartz.impl.RemoteMBeanScheduler: void triggerJob(org.quartz.JobKey)>(r1)
Unit: $r6 = virtualinvoke $r5.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: $r30 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r47 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method had different parameters in MBean API")
Unit: $r25 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r48 := @caughtexception
Unit: r62 = $r53
Unit: $r15 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r58 = $r50
Unit: goto [?= $r39 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $i0 = interfaceinvoke $r17.<java.util.Set: int size()>()
Unit: $r13 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $z1 = virtualinvoke $r21.<org.quartz.impl.RemoteMBeanScheduler: boolean interrupt(org.quartz.JobKey)>(r1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: $r3 = new org.quartz.JobKey
Unit: goto [?= $r12 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r5 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(org.quartz.JobKey)>(r1)
Unit: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: virtualinvoke $r36.<org.quartz.impl.RemoteMBeanScheduler: boolean unscheduleJobs(java.util.List)>(null)
Unit: virtualinvoke $r43.<org.quartz.impl.RemoteMBeanScheduler: boolean deleteJobs(java.util.List)>($r45)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r9, $r10)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r40, $r42)
Unit: $r7 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r12 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r39 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r60 = $r48
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method had different parameters in MBean API")
Unit: $r45 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r44)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r52 := @caughtexception
Unit: $r24 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r23)
Unit: $z2 = virtualinvoke $r31.<org.quartz.impl.RemoteMBeanScheduler: boolean unscheduleJob(org.quartz.TriggerKey)>($r32)
Unit: $r36 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method had different parameters in MBean API")
Unit: virtualinvoke $r30.<org.quartz.impl.RemoteMBeanScheduler: void scheduleJobs(java.util.Map,boolean)>(null, 0)
Unit: $r46 := @caughtexception
Unit: $r9 = virtualinvoke $r8.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>(r1)
Unit: $z4 = virtualinvoke $r39.<org.quartz.impl.RemoteMBeanScheduler: boolean deleteJob(org.quartz.JobKey)>(r1)
Unit: $r21 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r28 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r37 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: $r4 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/RemoteMBeanSchedulerTest$HelloJob;")
Unit: $r42 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r41)
Unit: virtualinvoke $r26.<org.quartz.impl.RemoteMBeanScheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(null, null)
Unit: $r35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r34)
Unit: $r40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r22, $r24)
Unit: $r8 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: goto [?= $r26 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: virtualinvoke $r13.<org.quartz.impl.RemoteMBeanScheduler: void resumeJob(org.quartz.JobKey)>(r1)
Unit: $r17 = virtualinvoke $r16.<org.quartz.impl.RemoteMBeanScheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>(r55)
Unit: $r14 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r56 = $r47
Unit: r59 = $r46
Unit: specialinvoke $r3.<org.quartz.JobKey: void <init>(java.lang.String,java.lang.String)>("job2", "group1")
Unit: virtualinvoke $r7.<org.quartz.impl.RemoteMBeanScheduler: void addJob(org.quartz.JobDetail,boolean)>(r2, 0)
Unit: virtualinvoke $r14.<org.quartz.impl.RemoteMBeanScheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>(r55)
Unit: virtualinvoke $r37.<org.quartz.impl.RemoteMBeanScheduler: java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)>(null, null)
Unit: $r43 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r44 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String,java.lang.String)>("job1", "group1")
Unit: r61 = $r49
Unit: virtualinvoke $r15.<org.quartz.impl.RemoteMBeanScheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>(r55)
Unit: goto [?= $r37 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: r57 = $r52
Unit: $r41 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r50 := @caughtexception
Unit: r1 = $r3
Unit: $r32 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("trigger1", "group1")
Unit: goto [?= return]
Unit: $r26 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r18, $r20)
Unit: $r31 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: return
Unit: r54 = $r51
Unit: $r11 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: goto [?= $r30 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r33, $r35)
Unit: $r51 := @caughtexception
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Unit: $r53 := @caughtexception
Unit: $r16 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: goto [?= $r28 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: goto [?= $r31 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r10 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>(r2)
Unit: $r20 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r19)
Unit: $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: virtualinvoke $r28.<org.quartz.impl.RemoteMBeanScheduler: java.util.Date scheduleJob(org.quartz.Trigger)>(null)
Unit: $r49 := @caughtexception
Unit: virtualinvoke $r11.<org.quartz.impl.RemoteMBeanScheduler: boolean checkExists(org.quartz.JobKey)>(r1)
Unit: virtualinvoke $r12.<org.quartz.impl.RemoteMBeanScheduler: void pauseJob(org.quartz.JobKey)>(r1)


======== method testLifecycleOperations ======= : 

Unit: $z1 = interfaceinvoke $r7.<org.quartz.Scheduler: boolean isStarted()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r8, $r10)
Unit: virtualinvoke $r20.<org.quartz.impl.RemoteMBeanScheduler: void shutdown(boolean)>(1)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r17, $r19)
Unit: r30 = $r27
Unit: virtualinvoke $r2.<org.quartz.impl.RemoteMBeanScheduler: void start()>()
Unit: virtualinvoke $r11.<org.quartz.impl.RemoteMBeanScheduler: void standby()>()
Unit: $r23 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $z3 = interfaceinvoke $r16.<org.quartz.Scheduler: boolean isInStandbyMode()>()
Unit: return
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r13, $r15)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r4, $r6)
Unit: $r21 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r19 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r18)
Unit: $r11 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r22.<org.quartz.impl.RemoteMBeanScheduler: boolean isShutdown()>()
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r6 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r5)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r24, $r26)
Unit: $r22 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r32 = $r28
Unit: $r28 := @caughtexception
Unit: r31 = $r29
Unit: $r1 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r1.<org.quartz.impl.RemoteMBeanScheduler: void startDelayed(int)>(60)
Unit: virtualinvoke $r21.<org.quartz.impl.RemoteMBeanScheduler: void shutdown()>()
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r16 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z0 = virtualinvoke $r3.<org.quartz.impl.RemoteMBeanScheduler: boolean isStarted()>()
Unit: goto [?= $r21 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r27 := @caughtexception
Unit: $r20 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r12 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z5 = interfaceinvoke $r23.<org.quartz.Scheduler: boolean isShutdown()>()
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Shutting down a scheduler un-registers it in JMX")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: $r7 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: goto [?= $r23 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>]
Unit: $r10 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r9)
Unit: $r29 := @caughtexception
Unit: $z2 = virtualinvoke $r12.<org.quartz.impl.RemoteMBeanScheduler: boolean isInStandbyMode()>()
Unit: $r2 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r26 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r25)
Unit: goto [?= $r2 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)


======== method testJMXOperations ======= : 

Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r4, $r6)
Unit: $r3 = virtualinvoke $r2.<org.quartz.impl.RemoteMBeanScheduler: java.util.List getJobGroupNames()>()
Unit: $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>()
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: return
Unit: $r6 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r5)
Unit: virtualinvoke $r1.<org.quartz.impl.RemoteMBeanScheduler: void clear()>()
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r1 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r2 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>


======== method testUnsupportedMethods ======= : 

Unit: r6 = $r5
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Operation should not be supported")
Unit: return
Unit: goto [?= $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: virtualinvoke $r1.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: virtualinvoke $r3.<org.quartz.impl.RemoteMBeanScheduler: void setJobFactory(org.quartz.spi.JobFactory)>(null)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Operation should not be supported")
Unit: $r5 := @caughtexception
Unit: $r1 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: goto [?= return]
Unit: r7 = $r4
Unit: $r4 := @caughtexception
Unit: $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>


======== method testListBrokenAttributes ======= : 

Unit: goto [?= return]
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r5 := @caughtexception
Unit: return
Unit: $r1 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r8 = $r5
Unit: r7 = $r6
Unit: virtualinvoke $r1.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.SchedulerContext getContext()>()
Unit: goto [?= $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: virtualinvoke $r3.<org.quartz.impl.RemoteMBeanScheduler: java.util.List getCurrentlyExecutingJobs()>()
Unit: $r6 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method had a different return type in MBean API")
 ====================================== 
** CLASS org.quartz.core.RemotableQuartzScheduler



======== method getSchedulerName ======= : 



======== method getSchedulerInstanceId ======= : 



======== method getSchedulerContext ======= : 



======== method start ======= : 



======== method startDelayed ======= : 



======== method standby ======= : 



======== method isInStandbyMode ======= : 



======== method shutdown ======= : 



======== method shutdown ======= : 



======== method isShutdown ======= : 



======== method runningSince ======= : 



======== method getVersion ======= : 



======== method numJobsExecuted ======= : 



======== method getJobStoreClass ======= : 



======== method supportsPersistence ======= : 



======== method isClustered ======= : 



======== method getThreadPoolClass ======= : 



======== method getThreadPoolSize ======= : 



======== method clear ======= : 



======== method getCurrentlyExecutingJobs ======= : 



======== method scheduleJob ======= : 



======== method scheduleJob ======= : 



======== method addJob ======= : 



======== method addJob ======= : 



======== method deleteJob ======= : 



======== method unscheduleJob ======= : 



======== method rescheduleJob ======= : 



======== method triggerJob ======= : 



======== method triggerJob ======= : 



======== method pauseTrigger ======= : 



======== method pauseTriggers ======= : 



======== method pauseJob ======= : 



======== method pauseJobs ======= : 



======== method resumeTrigger ======= : 



======== method resumeTriggers ======= : 



======== method getPausedTriggerGroups ======= : 



======== method resumeJob ======= : 



======== method resumeJobs ======= : 



======== method pauseAll ======= : 



======== method resumeAll ======= : 



======== method getJobGroupNames ======= : 



======== method getJobKeys ======= : 



======== method getTriggersOfJob ======= : 



======== method getTriggerGroupNames ======= : 



======== method getTriggerKeys ======= : 



======== method getJobDetail ======= : 



======== method getTrigger ======= : 



======== method getTriggerState ======= : 



======== method resetTriggerFromErrorState ======= : 



======== method addCalendar ======= : 



======== method deleteCalendar ======= : 



======== method getCalendar ======= : 



======== method getCalendarNames ======= : 



======== method interrupt ======= : 



======== method interrupt ======= : 



======== method checkExists ======= : 



======== method checkExists ======= : 



======== method deleteJobs ======= : 



======== method scheduleJobs ======= : 



======== method scheduleJob ======= : 



======== method unscheduleJobs ======= : 

 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledRateCounter



======== method increment ======= : 



======== method decrement ======= : 



======== method setValue ======= : 



======== method setNumeratorValue ======= : 



======== method setDenominatorValue ======= : 

 ====================================== 
** CLASS org.quartz.SchedulerConfigException



======== method <init> ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DB2v7Delegate



======== method <init> ======= : 



======== method setBytes ======= : 



======== method setBoolean ======= : 

 ====================================== 
** CLASS org.quartz.impl.SchedulerDetailsSetterTest



======== method <init> ======= : 



======== method testSetter ======= : 

Unit: specialinvoke $r13.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1)
Unit: $r10 = class "Lorg/quartz/impl/SchedulerDetailsSetterTest$MyJobStore;"
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetterTest: void assertEquals(int,int)>(5, $i2)
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetterTest: void assertEquals(int,int)>(3, $i1)
Unit: $i1 = virtualinvoke $r16.<java.util.concurrent.atomic.AtomicInteger: int get()>()
Unit: $r20 = <org.quartz.impl.SchedulerDetailsSetterTest: java.util.concurrent.atomic.AtomicInteger instanceNameCalls>
Unit: $r15 = <org.quartz.impl.SchedulerDetailsSetterTest: java.util.concurrent.atomic.AtomicInteger instanceIdCalls>
Unit: $r18 = new org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.jobStore.class", $r11)
Unit: $i0 = virtualinvoke $r15.<java.util.concurrent.atomic.AtomicInteger: int get()>()
Unit: r3 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.class", $r8)
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetterTest: void assertEquals(int,int)>(3, $i0)
Unit: r0 := @this: org.quartz.impl.SchedulerDetailsSetterTest
Unit: $r19 = <org.quartz.impl.SchedulerDetailsSetterTest: java.util.concurrent.atomic.AtomicInteger instanceIdCalls>
Unit: virtualinvoke r1.<java.util.Properties: void load(java.io.InputStream)>($r6)
Unit: $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Unit: $i3 = virtualinvoke $r20.<java.util.concurrent.atomic.AtomicInteger: int get()>()
Unit: virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: specialinvoke $r18.<org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore: void <init>()>()
Unit: virtualinvoke r3.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>($r17, $r18)
Unit: $r6 = virtualinvoke $r5.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/org/quartz/quartz.properties")
Unit: $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>()
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetterTest: void assertEquals(int,int)>(6, $i3)
Unit: $i2 = virtualinvoke $r19.<java.util.concurrent.atomic.AtomicInteger: int get()>()
Unit: $r4 = new java.util.Properties
Unit: $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>()
Unit: $r13 = new org.quartz.impl.StdSchedulerFactory
Unit: return
Unit: $r17 = new org.quartz.impl.SchedulerDetailsSetterTest$MyThreadPool
Unit: specialinvoke $r4.<java.util.Properties: void <init>()>()
Unit: $r7 = class "Lorg/quartz/impl/SchedulerDetailsSetterTest$MyThreadPool;"
Unit: r2 = $r13
Unit: specialinvoke $r17.<org.quartz.impl.SchedulerDetailsSetterTest$MyThreadPool: void <init>()>()
Unit: r1 = $r4
Unit: $r16 = <org.quartz.impl.SchedulerDetailsSetterTest: java.util.concurrent.atomic.AtomicInteger instanceNameCalls>


======== method testMissingSetterMethods ======= : 

Unit: $r1 = new java.lang.Object
Unit: return
Unit: r0 := @this: org.quartz.impl.SchedulerDetailsSetterTest
Unit: specialinvoke $r1.<java.lang.Object: void <init>()>()
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetter: void setDetails(java.lang.Object,java.lang.String,java.lang.String)>($r1, "name", "id")


======== method testUnimplementedMethods ======= : 

Unit: r0 := @this: org.quartz.impl.SchedulerDetailsSetterTest
Unit: interfaceinvoke r1.<org.quartz.spi.ThreadPool: void setInstanceName(java.lang.String)>("name")
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetterTest: void fail()>()
Unit: r2 = $r3
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetter: void setDetails(java.lang.Object,java.lang.String,java.lang.String)>(r1, "name", "id")
Unit: r1 = specialinvoke r0.<org.quartz.impl.SchedulerDetailsSetterTest: org.quartz.spi.ThreadPool makeIncompleteThreadPool()>()
Unit: return
Unit: $r3 := @caughtexception
Unit: goto [?= staticinvoke <org.quartz.impl.SchedulerDetailsSetter: void setDetails(java.lang.Object,java.lang.String,java.lang.String)>(r1, "name", "id")]


======== method makeIncompleteThreadPool ======= : 



======== method access$000 ======= : 



======== method access$100 ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.utils.ConnectionProvider



======== method getConnection ======= : 



======== method shutdown ======= : 



======== method initialize ======= : 

 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest$1



======== method <init> ======= : 



======== method run ======= : 

 ====================================== 
** CLASS org.quartz.spi.TimeBroker



======== method getCurrentTime ======= : 



======== method initialize ======= : 



======== method shutdown ======= : 

 ====================================== 
** CLASS org.quartz.impl.JobExecutionContextImpl



======== method <init> ======= : 



======== method getScheduler ======= : 



======== method getTrigger ======= : 



======== method getCalendar ======= : 



======== method isRecovering ======= : 



======== method getRecoveringTriggerKey ======= : 



======== method incrementRefireCount ======= : 



======== method getRefireCount ======= : 



======== method getMergedJobDataMap ======= : 



======== method getJobDetail ======= : 



======== method getJobInstance ======= : 



======== method getFireTime ======= : 



======== method getScheduledFireTime ======= : 



======== method getPreviousFireTime ======= : 



======== method getNextFireTime ======= : 



======== method toString ======= : 



======== method getResult ======= : 



======== method setResult ======= : 



======== method getJobRunTime ======= : 



======== method setJobRunTime ======= : 



======== method put ======= : 



======== method get ======= : 



======== method getFireInstanceId ======= : 

 ====================================== 
** CLASS org.quartz.spi.ClassLoadHelper



======== method initialize ======= : 



======== method loadClass ======= : 



======== method loadClass ======= : 



======== method getResource ======= : 



======== method getResourceAsStream ======= : 



======== method getClassLoader ======= : 

 ====================================== 
** CLASS org.quartz.core.QTZ385Test



======== method <init> ======= : 



======== method testShutdownOrdering ======= : 

Unit: specialinvoke $r9.<java.util.concurrent.CyclicBarrier: void <init>(int)>(2)
Unit: $r22 = virtualinvoke $r21.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $r35 := @caughtexception
Unit: r39 = $r29
Unit: r5 = virtualinvoke r4.<org.quartz.impl.DirectSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: goto [?= staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>("testShutdownOrdering")]
Unit: r37 = $r35
Unit: $z0 = virtualinvoke r39.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()
Unit: $r25 = virtualinvoke $r22.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r24)
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setDataSource(java.lang.String)>("testShutdownOrdering")
Unit: $r24 = virtualinvoke $r23.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInMilliseconds(long)>(1L)
Unit: virtualinvoke r1.<java.util.concurrent.CyclicBarrier: int await()>()
Unit: interfaceinvoke r5.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>($r20, $r26)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>("testShutdownOrdering")
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceName(java.lang.String)>("testShutdownOrdering")
Unit: virtualinvoke r1.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(1L, $r28)
Unit: $r36 := @caughtexception
Unit: interfaceinvoke r6.<org.quartz.Scheduler: void start()>()
Unit: $r21 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r38 = $r34
Unit: $r33 := @caughtexception
Unit: interfaceinvoke $r31.<org.quartz.ListenerManager: void addJobListener(org.quartz.JobListener)>($r32)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: throw r7
Unit: specialinvoke $r10.<org.quartz.impl.jdbcjobstore.JobStoreTX: void <init>()>()
Unit: $r19 = virtualinvoke $r18.<org.quartz.JobBuilder: org.quartz.JobBuilder requestRecovery()>()
Unit: $r13[0] = class "Lorg/quartz/spi/JobStore;"
Unit: $r31 = interfaceinvoke r6.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: specialinvoke $r14.<org.quartz.core.QTZ385Test$1: void <init>(org.quartz.core.QTZ385Test,org.quartz.impl.jdbcjobstore.JobStoreTX,java.util.concurrent.CyclicBarrier)>(r0, r2, r1)
Unit: specialinvoke $r29.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>("testShutdownOrdering")
Unit: goto [?= $r28 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>]
Unit: r4 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: r1 = $r9
Unit: $r9 = new java.util.concurrent.CyclicBarrier
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(1000L)
Unit: goto [?= return]
Unit: $r18 = virtualinvoke $r17.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: $r15 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r12, $r13, $r14)
Unit: $r32 = new org.quartz.core.QTZ385Test$2
Unit: interfaceinvoke r6.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: $r26 = virtualinvoke $r25.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r0 := @this: org.quartz.core.QTZ385Test
Unit: goto [?= $r29 = new java.util.concurrent.atomic.AtomicBoolean]
Unit: $r11 = class "Lorg/quartz/spi/JobStore;"
Unit: throw r8
Unit: $r13 = newarray (java.lang.Class)[1]
Unit: virtualinvoke r4.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>($r16, r3)
Unit: throw r37
Unit: $r30 = new org.quartz.simpl.SimpleThreadPool
Unit: r3 = (org.quartz.spi.JobStore) $r15
Unit: specialinvoke $r16.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(1, 5)
Unit: specialinvoke $r32.<org.quartz.core.QTZ385Test$2: void <init>(org.quartz.core.QTZ385Test,java.util.concurrent.atomic.AtomicBoolean)>(r0, r39)
Unit: r2 = $r10
Unit: $r23 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: virtualinvoke r4.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>($r30, r2)
Unit: r6 = virtualinvoke r4.<org.quartz.impl.DirectSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: specialinvoke $r30.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(1, 5)
Unit: r7 = $r36
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceId(java.lang.String)>("SINGLE_NODE_TEST")
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void createDatabase(java.lang.String)>("testShutdownOrdering")
Unit: interfaceinvoke r5.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: interfaceinvoke r5.<org.quartz.Scheduler: void start()>()
Unit: interfaceinvoke r6.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: $r16 = new org.quartz.simpl.SimpleThreadPool
Unit: $r10 = new org.quartz.impl.jdbcjobstore.JobStoreTX
Unit: $r14 = new org.quartz.core.QTZ385Test$1
Unit: $r28 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
Unit: interfaceinvoke r5.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
Unit: $r34 := @caughtexception
Unit: $r29 = new java.util.concurrent.atomic.AtomicBoolean
Unit: return
Unit: $r17 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r20 = virtualinvoke $r19.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: r8 = $r33


======== method access$000 ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeNonConcurrentPersistentJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.calendar.HolidayCalendar



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method clone ======= : 



======== method isTimeIncluded ======= : 



======== method getNextIncludedTime ======= : 



======== method addExcludedDate ======= : 



======== method removeExcludedDate ======= : 



======== method getExcludedDates ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JTANonClusteredSemaphore$SemaphoreSynchronization



======== method <init> ======= : 



======== method beforeCompletion ======= : 



======== method afterCompletion ======= : 

 ====================================== 
** CLASS org.quartz.ee.jta.JTAJobRunShell



======== method <init> ======= : 



======== method <init> ======= : 



======== method begin ======= : 



======== method complete ======= : 



======== method passivate ======= : 



======== method cleanupUserTransaction ======= : 

 ====================================== 
** CLASS org.quartz.utils.Key



======== method <init> ======= : 



======== method getName ======= : 



======== method getGroup ======= : 



======== method toString ======= : 



======== method hashCode ======= : 



======== method equals ======= : 



======== method compareTo ======= : 



======== method createUniqueName ======= : 



======== method compareTo ======= : 

 ====================================== 
** CLASS org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener



======== method <init> ======= : 



======== method getFireCount ======= : 



======== method getName ======= : 



======== method triggerFired ======= : 



======== method vetoJobExecution ======= : 



======== method triggerMisfired ======= : 



======== method triggerComplete ======= : 

 ====================================== 
** CLASS org.quartz.Qtz205SchedulerListenerTest$Qtz205ScheListener



======== method <init> ======= : 



======== method getTriggerFinalizedCount ======= : 



======== method jobScheduled ======= : 



======== method jobUnscheduled ======= : 



======== method triggerFinalized ======= : 



======== method triggerPaused ======= : 



======== method triggersPaused ======= : 



======== method triggerResumed ======= : 



======== method triggersResumed ======= : 



======== method jobAdded ======= : 



======== method jobDeleted ======= : 



======== method jobPaused ======= : 



======== method jobsPaused ======= : 



======== method jobResumed ======= : 



======== method jobsResumed ======= : 



======== method schedulerError ======= : 



======== method schedulerInStandbyMode ======= : 



======== method schedulerStarted ======= : 



======== method schedulerStarting ======= : 



======== method schedulerShutdown ======= : 



======== method schedulerShuttingdown ======= : 



======== method schedulingDataCleared ======= : 

 ====================================== 
** CLASS org.quartz.management.ManagementServer



======== method start ======= : 



======== method stop ======= : 



======== method register ======= : 



======== method unregister ======= : 



======== method hasRegistered ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest



======== method <init> ======= : 



======== method testPauseAndResumeTriggers ======= : 

Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r17)
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test_1", "abc")
Unit: $r14 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r33)
Unit: $r21 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_1", "abc")
Unit: $r23 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r22)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r25)
Unit: interfaceinvoke $r18.<org.quartz.Scheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>($r19)
Unit: $r17 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r16)
Unit: interfaceinvoke $r26.<org.quartz.Scheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>($r27)
Unit: $r28 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r13 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_1", "abc")
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test_1")
Unit: r0 := @this: org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest
Unit: $r27 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: $r22 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r24 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r32 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: $r19 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r31)
Unit: $r3 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r8 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: r35 = interfaceinvoke $r20.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r21)
Unit: $r10 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r23)
Unit: $r29 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_1", "abc")
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r1 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r7 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r25 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r24)
Unit: r36 = interfaceinvoke $r28.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r29)
Unit: $r16 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r31 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r30)
Unit: return
Unit: $r20 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r26 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r30 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r15)
Unit: $r33 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r32)
Unit: r2 = (org.quartz.CronTrigger) $r9
Unit: r34 = interfaceinvoke $r12.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r13)
Unit: $r18 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r12 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>


======== method testResumeTriggersBeforeAddJob ======= : 

Unit: $r27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r26)
Unit: interfaceinvoke $r22.<org.quartz.Scheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>($r23)
Unit: r39 = interfaceinvoke $r24.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r25)
Unit: interfaceinvoke $r3.<org.quartz.Scheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>($r4)
Unit: $r16 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r4 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: interfaceinvoke $r30.<org.quartz.Scheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>($r31)
Unit: $r7 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r26 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: r2 = (org.quartz.CronTrigger) $r13
Unit: $r20 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r37)
Unit: r0 := @this: org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest
Unit: $r11 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: r38 = interfaceinvoke $r16.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r17)
Unit: r1 = virtualinvoke $r8.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r23 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: $r19 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r18)
Unit: $r35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r34)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r27)
Unit: $r10 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test_2", "abc")
Unit: $r14 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r8 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test_2")
Unit: $r3 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r12 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r11)
Unit: $r25 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_2", "abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r29)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r35)
Unit: $r32 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r22 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r21 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r20)
Unit: $r17 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_2", "abc")
Unit: $r28 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r33 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_2", "abc")
Unit: $r31 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: $r36 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: r40 = interfaceinvoke $r32.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r33)
Unit: interfaceinvoke $r5.<org.quartz.Scheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>($r6)
Unit: $r9 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r19)
Unit: $r29 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r28)
Unit: $r30 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r37 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r36)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r21)
Unit: $r34 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r5 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r24 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: interfaceinvoke $r14.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r18 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r6 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")


======== method testPauseAndResumeJobs ======= : 

Unit: $r29 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_3", "abc")
Unit: $r18 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r25 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r24)
Unit: r1 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r16 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test_3", "abc")
Unit: $r28 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r36 = interfaceinvoke $r28.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r29)
Unit: $r12 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r26 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r10 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r17 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r16)
Unit: r2 = (org.quartz.CronTrigger) $r9
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r17)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r33)
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: $r22 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r3 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: interfaceinvoke $r18.<org.quartz.Scheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>($r19)
Unit: interfaceinvoke $r26.<org.quartz.Scheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>($r27)
Unit: $r27 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r33 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r32)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r23)
Unit: r35 = interfaceinvoke $r20.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r21)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r25)
Unit: $r19 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r20 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r23 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r22)
Unit: $r32 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: r0 := @this: org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("test_3", "abc")
Unit: $r7 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r8 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: $r31 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r30)
Unit: $r13 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_3", "abc")
Unit: $r30 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: return
Unit: $r24 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r31)
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r14 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r21 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_3", "abc")
Unit: r34 = interfaceinvoke $r12.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r13)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r15)


======== method testResumeJobsBeforeAddJobs ======= : 

Unit: $r14 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r38 = interfaceinvoke $r16.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r17)
Unit: $r3 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r20 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: return
Unit: r40 = interfaceinvoke $r32.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r33)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r5 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r6 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r27)
Unit: $r23 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r10 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test_4", "abc")
Unit: r2 = (org.quartz.CronTrigger) $r13
Unit: $r29 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r28)
Unit: $r16 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: interfaceinvoke $r30.<org.quartz.Scheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>($r31)
Unit: interfaceinvoke $r3.<org.quartz.Scheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>($r4)
Unit: interfaceinvoke $r14.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: r0 := @this: org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest
Unit: r39 = interfaceinvoke $r24.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r25)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r29)
Unit: interfaceinvoke $r22.<org.quartz.Scheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>($r23)
Unit: $r31 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r4 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r22 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r26 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r17 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_4", "abc")
Unit: $r7 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r24 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r32 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r33 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_4", "abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r37)
Unit: $r19 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r18)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r19)
Unit: $r34 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r8 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("test_4", "abc")
Unit: interfaceinvoke $r5.<org.quartz.Scheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>($r6)
Unit: $r25 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_4", "abc")
Unit: $r12 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r11)
Unit: $r36 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r18 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r30 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r37 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r36)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r35)
Unit: r1 = virtualinvoke $r8.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r21)
Unit: $r21 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r20)
Unit: $r28 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r34)
Unit: $r9 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r11 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r26)
 ====================================== 
** CLASS org.quartz.impl.RemoteMBeanScheduler$1



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap$DirtyFlagIterator



======== method <init> ======= : 



======== method remove ======= : 



======== method hasNext ======= : 



======== method next ======= : 

 ====================================== 
** CLASS org.quartz.simpl.Driver



======== method <init> ======= : 



======== method runall ======= : 

 ====================================== 
** CLASS org.quartz.RAMSchedulerTest



======== method <init> ======= : 



======== method createScheduler ======= : 

 ====================================== 
** CLASS org.quartz.JobBuilderTest



======== method <init> ======= : 



======== method setUp ======= : 



======== method testJobBuilder ======= : 

Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r25, $z2)
Unit: $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r46 = new java.lang.StringBuilder
Unit: specialinvoke $r56.<java.lang.StringBuilder: void <init>()>()
Unit: $r55 = virtualinvoke $r54.<org.quartz.JobBuilder: org.quartz.JobBuilder requestRecovery(boolean)>(0)
Unit: $r56 = new java.lang.StringBuilder
Unit: $r41 = virtualinvoke $r40.<org.quartz.JobBuilder: org.quartz.JobBuilder ofType(java.lang.Class)>(class "Lorg/quartz/JobBuilderTest$TestAnnotatedJob;")
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r32, $z18)
Unit: $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
Unit: $r16 = virtualinvoke $r15.<org.quartz.JobKey: java.lang.String getGroup()>()
Unit: specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
Unit: $z9 = interfaceinvoke r65.<org.quartz.JobDetail: boolean isDurable()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertFalse(java.lang.String,boolean)>("Expected requestsRecovery == false ", $z4)
Unit: $r5 = new java.lang.StringBuilder
Unit: $r54 = virtualinvoke $r53.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("j1", "g1")
Unit: r66 = virtualinvoke $r55.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r18, $z1)
Unit: specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
Unit: $r15 = interfaceinvoke r64.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $z18 = 1
Unit: $r2 = virtualinvoke $r1.<org.quartz.JobBuilder: org.quartz.JobBuilder ofType(java.lang.Class)>(class "Lorg/quartz/JobBuilderTest$TestJob;")
Unit: $z11 = interfaceinvoke r65.<org.quartz.JobDetail: boolean isConcurrentExectionDisallowed()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertFalse(java.lang.String,boolean)>("Expected isDurable == false ", $z14)
Unit: $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59)
Unit: $z17 = interfaceinvoke r66.<org.quartz.JobDetail: boolean isPersistJobDataAfterExecution()>()
Unit: $r28 = new java.lang.StringBuilder
Unit: $z13 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>("g1")
Unit: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job group: ")
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected isPersistJobDataAfterExecution == true ", $z12)
Unit: $r51 = interfaceinvoke r65.<org.quartz.JobDetail: java.lang.String getDescription()>()
Unit: $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23)
Unit: $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
Unit: $z7 = virtualinvoke $r39.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lorg/quartz/JobBuilderTest$TestJob;")
Unit: $r44 = virtualinvoke $r43.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably(boolean)>(1)
Unit: $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
Unit: specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
Unit: $r33 = interfaceinvoke r64.<org.quartz.JobDetail: java.lang.String getDescription()>()
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: r65 = virtualinvoke $r45.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $z16 = interfaceinvoke r66.<org.quartz.JobDetail: boolean isConcurrentExectionDisallowed()>()
Unit: $r20 = virtualinvoke $r19.<org.quartz.JobKey: java.lang.String getGroup()>()
Unit: $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)
Unit: specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
Unit: $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job class: ")
Unit: $z15 = interfaceinvoke r66.<org.quartz.JobDetail: boolean requestsRecovery()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertFalse(java.lang.String,boolean)>("Expected requestsRecovery == false ", $z15)
Unit: $r13 = new java.lang.StringBuilder
Unit: $r3 = virtualinvoke $r2.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("j1")
Unit: $z3 = interfaceinvoke r64.<org.quartz.JobDetail: boolean isDurable()>()
Unit: $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
Unit: $z5 = interfaceinvoke r64.<org.quartz.JobDetail: boolean isConcurrentExectionDisallowed()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r10, $z0)
Unit: $r62 = interfaceinvoke r66.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r1 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob()>()
Unit: $r23 = interfaceinvoke r64.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $z8 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>("my description")
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r38, $z7)
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected requestsRecovery == true ", $z10)
Unit: $r27 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String)>("j1")
Unit: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected isConcurrentExectionDisallowed == true ", $z16)
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r50, $z8)
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected isPersistJobDataAfterExecution == true ", $z17)
Unit: $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36)
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected isDurable == true ", $z9)
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r61, $z13)
Unit: goto [?= staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r32, $z18)]
Unit: $z4 = interfaceinvoke r64.<org.quartz.JobDetail: boolean requestsRecovery()>()
Unit: $r19 = interfaceinvoke r64.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r45 = virtualinvoke $r44.<org.quartz.JobBuilder: org.quartz.JobBuilder requestRecovery()>()
Unit: $r63 = virtualinvoke $r62.<org.quartz.JobKey: java.lang.String getGroup()>()
Unit: $r40 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertFalse(java.lang.String,boolean)>("Expected isConcurrentExectionDisallowed == false ", $z5)
Unit: $r52 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob()>()
Unit: $r21 = new java.lang.StringBuilder
Unit: $r48 = interfaceinvoke r65.<org.quartz.JobDetail: java.lang.String getDescription()>()
Unit: $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job description: ")
Unit: $r53 = virtualinvoke $r52.<org.quartz.JobBuilder: org.quartz.JobBuilder ofType(java.lang.Class)>(class "Lorg/quartz/JobBuilderTest$TestStatefulJob;")
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertFalse(java.lang.String,boolean)>("Expected isPersistJobDataAfterExecution == false ", $z6)
Unit: $r12 = virtualinvoke $r11.<org.quartz.JobKey: java.lang.String getName()>()
Unit: $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("j1")
Unit: $r39 = interfaceinvoke r64.<org.quartz.JobDetail: java.lang.Class getJobClass()>()
Unit: $z6 = interfaceinvoke r64.<org.quartz.JobDetail: boolean isPersistJobDataAfterExecution()>()
Unit: $z14 = interfaceinvoke r66.<org.quartz.JobDetail: boolean isDurable()>()
Unit: return
Unit: $z12 = interfaceinvoke r65.<org.quartz.JobDetail: boolean isPersistJobDataAfterExecution()>()
Unit: $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job group: ")
Unit: r0 := @this: org.quartz.JobBuilderTest
Unit: $r8 = virtualinvoke $r7.<org.quartz.JobKey: java.lang.String getName()>()
Unit: r64 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job key: ")
Unit: $r34 = new java.lang.StringBuilder
Unit: $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job description: ")
Unit: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job name: ")
Unit: $z2 = virtualinvoke $r26.<org.quartz.JobKey: boolean equals(java.lang.Object)>($r27)
Unit: $r36 = interfaceinvoke r64.<org.quartz.JobDetail: java.lang.Class getJobClass()>()
Unit: specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected isConcurrentExectionDisallowed == true ", $z11)
Unit: $r59 = virtualinvoke $r58.<org.quartz.JobKey: java.lang.String getName()>()
Unit: $z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("DEFAULT")
Unit: $r43 = virtualinvoke $r42.<org.quartz.JobBuilder: org.quartz.JobBuilder withDescription(java.lang.String)>("my description")
Unit: $r42 = virtualinvoke $r41.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("j1")
Unit: $z10 = interfaceinvoke r65.<org.quartz.JobDetail: boolean requestsRecovery()>()
Unit: $r30 = interfaceinvoke r64.<org.quartz.JobDetail: java.lang.String getDescription()>()
Unit: $z18 = 0
Unit: $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: if $r33 != null goto $z18 = 0
Unit: $r7 = interfaceinvoke r64.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r11 = interfaceinvoke r64.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r58 = interfaceinvoke r66.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r26 = interfaceinvoke r64.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected isDurable == true ", $z3)
 ====================================== 
** CLASS org.quartz.simpl.RAMJobStoreTest



======== method <init> ======= : 



======== method createJobStore ======= : 



======== method destroyJobStore ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.FiredTriggerRecord



======== method <init> ======= : 



======== method getFireInstanceId ======= : 



======== method getFireTimestamp ======= : 



======== method getScheduleTimestamp ======= : 



======== method isJobDisallowsConcurrentExecution ======= : 



======== method getJobKey ======= : 



======== method getSchedulerInstanceId ======= : 



======== method getTriggerKey ======= : 



======== method getFireInstanceState ======= : 



======== method setFireInstanceId ======= : 



======== method setFireTimestamp ======= : 



======== method setScheduleTimestamp ======= : 



======== method setJobDisallowsConcurrentExecution ======= : 



======== method setJobKey ======= : 



======== method setSchedulerInstanceId ======= : 



======== method setTriggerKey ======= : 



======== method setFireInstanceState ======= : 



======== method isJobRequestsRecovery ======= : 



======== method setJobRequestsRecovery ======= : 



======== method getPriority ======= : 



======== method setPriority ======= : 

 ====================================== 
** CLASS org.quartz.core.ListenerManagerTest$TestJobListener



======== method <init> ======= : 



======== method getName ======= : 

 ====================================== 
** CLASS org.quartz.core.SampledStatisticsImpl



======== method <init> ======= : 



======== method shutdown ======= : 



======== method createSampledCounter ======= : 



======== method clearStatistics ======= : 



======== method getJobsCompletedMostRecentSample ======= : 



======== method getJobsExecutingMostRecentSample ======= : 



======== method getJobsScheduledMostRecentSample ======= : 



======== method getName ======= : 



======== method jobScheduled ======= : 



======== method jobExecutionVetoed ======= : 



======== method jobToBeExecuted ======= : 



======== method jobWasExecuted ======= : 



======== method jobAdded ======= : 



======== method jobDeleted ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method clearDirtyFlag ======= : 



======== method isDirty ======= : 



======== method getWrappedMap ======= : 



======== method clear ======= : 



======== method containsKey ======= : 



======== method containsValue ======= : 



======== method entrySet ======= : 



======== method equals ======= : 



======== method hashCode ======= : 



======== method get ======= : 



======== method isEmpty ======= : 



======== method keySet ======= : 



======== method put ======= : 



======== method putAll ======= : 



======== method remove ======= : 



======== method size ======= : 



======== method values ======= : 



======== method clone ======= : 



======== method access$002 ======= : 

 ====================================== 
** CLASS org.quartz.Quartz601Test



======== method <init> ======= : 



======== method testNormal ======= : 

Unit: i0 = 0
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("0 15 10 * * ? 2005", i0)
Unit: goto [?= (branch)]
Unit: return
Unit: r0 := @this: org.quartz.Quartz601Test
Unit: i0 = i0 + 1
Unit: if i0 >= 6 goto return


======== method testSecond ======= : 

Unit: r0 := @this: org.quartz.Quartz601Test
Unit: return
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("58-4 5 21 ? * MON-FRI", 0)


======== method testMinute ======= : 

Unit: r0 := @this: org.quartz.Quartz601Test
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("0 58-4 21 ? * MON-FRI", 1)
Unit: return


======== method testHour ======= : 

Unit: return
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("0 0/5 21-3 ? * MON-FRI", 2)
Unit: r0 := @this: org.quartz.Quartz601Test


======== method testDayOfWeekNumber ======= : 

Unit: return
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("58 5 21 ? * 6-2", 5)
Unit: r0 := @this: org.quartz.Quartz601Test


======== method testDayOfWeek ======= : 

Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("58 5 21 ? * FRI-TUE", 5)
Unit: r0 := @this: org.quartz.Quartz601Test
Unit: return


======== method testDayOfMonth ======= : 

Unit: return
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("58 5 21 28-5 1 ?", 3)
Unit: r0 := @this: org.quartz.Quartz601Test


======== method testMonth ======= : 

Unit: r0 := @this: org.quartz.Quartz601Test
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("58 5 21 ? 11-2 FRI", 4)
Unit: return


======== method testAmbiguous ======= : 

Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("55-3 56-2 6 ? * FRI", 0)
Unit: return
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("0 0 14-6 ? * FRI-MON", 2)
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("0 0 14-6 ? * FRI-MON", 5)
Unit: r0 := @this: org.quartz.Quartz601Test
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("55-3 56-2 6 ? * FRI", 1)


======== method assertParsesForField ======= : 

 ====================================== 
** CLASS org.quartz.impl.DirectSchedulerFactory



======== method getLog ======= : 



======== method <init> ======= : 



======== method getInstance ======= : 



======== method createVolatileScheduler ======= : 



======== method createRemoteScheduler ======= : 



======== method createRemoteScheduler ======= : 



======== method createRemoteScheduler ======= : 



======== method createScheduler ======= : 



======== method createScheduler ======= : 



======== method createScheduler ======= : 



======== method createScheduler ======= : 



======== method createScheduler ======= : 



======== method createScheduler ======= : 



======== method getScheduler ======= : 



======== method getScheduler ======= : 



======== method getAllSchedulers ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.simpl.SimpleJobFactory



======== method <init> ======= : 



======== method getLog ======= : 



======== method newJob ======= : 

 ====================================== 
** CLASS org.quartz.utils.counter.CounterImpl



======== method <init> ======= : 



======== method <init> ======= : 



======== method increment ======= : 



======== method decrement ======= : 



======== method getAndSet ======= : 



======== method getValue ======= : 



======== method increment ======= : 



======== method decrement ======= : 



======== method setValue ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.GroupMatcher



======== method <init> ======= : 



======== method groupEquals ======= : 



======== method jobGroupEquals ======= : 



======== method triggerGroupEquals ======= : 



======== method groupStartsWith ======= : 



======== method jobGroupStartsWith ======= : 



======== method triggerGroupStartsWith ======= : 



======== method groupEndsWith ======= : 



======== method jobGroupEndsWith ======= : 



======== method triggerGroupEndsWith ======= : 



======== method groupContains ======= : 



======== method jobGroupContains ======= : 



======== method triggerGroupContains ======= : 



======== method anyGroup ======= : 



======== method anyJobGroup ======= : 



======== method anyTriggerGroup ======= : 



======== method getValue ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$TransactionValidator



======== method validate ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.QuartzMemoryTestSupport



======== method <init> ======= : 



======== method initSchedulerBeforeTest ======= : 

Unit: $r4 = interfaceinvoke r2.<org.quartz.SchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: specialinvoke $r3.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1)
Unit: r2 = $r3
Unit: $r3 = new org.quartz.impl.StdSchedulerFactory
Unit: r1 = virtualinvoke r0.<org.quartz.integrations.tests.QuartzMemoryTestSupport: java.util.Properties createSchedulerProperties()>()
Unit: return
Unit: r0.<org.quartz.integrations.tests.QuartzMemoryTestSupport: org.quartz.Scheduler scheduler> = $r4
Unit: r0 := @this: org.quartz.integrations.tests.QuartzMemoryTestSupport
Unit: virtualinvoke r0.<org.quartz.integrations.tests.QuartzMemoryTestSupport: void afterSchedulerInit()>()


======== method afterSchedulerInit ======= : 



======== method createSchedulerProperties ======= : 



======== method initSchedulerAfterTest ======= : 

Unit: interfaceinvoke $r2.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Scheduler shutdown complete.")
Unit: $r3 = <org.quartz.integrations.tests.QuartzMemoryTestSupport: org.slf4j.Logger LOG>
Unit: return
Unit: $r2 = r0.<org.quartz.integrations.tests.QuartzMemoryTestSupport: org.quartz.Scheduler scheduler>
Unit: $r1 = <org.quartz.integrations.tests.QuartzMemoryTestSupport: org.slf4j.Logger LOG>
Unit: interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Scheduler shutting down.")
Unit: r0 := @this: org.quartz.integrations.tests.QuartzMemoryTestSupport


======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext



======== method <init> ======= : 



======== method closeContext ======= : 



======== method finalize ======= : 



======== method getLog ======= : 



======== method begin ======= : 



======== method commit ======= : 



======== method rollback ======= : 



======== method setRollbackOnly ======= : 



======== method getStatus ======= : 



======== method setTransactionTimeout ======= : 

 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntrySet



======== method <init> ======= : 



======== method iterator ======= : 



======== method toArray ======= : 



======== method toArray ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.TablePrefixAware



======== method setTablePrefix ======= : 



======== method setSchedName ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.StdRowLockSemaphoreTest



======== method <init> ======= : 



======== method initSchedulerBeforeTest ======= : 



======== method initSchedulerBeforeTest ======= : 



======== method createDefaultProperties ======= : 



======== method createMyLockProperties ======= : 



======== method testDefaultStdRowLockSemaphore ======= : 

Unit: $r12 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: java.util.concurrent.CountDownLatch latch>
Unit: virtualinvoke $r12.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(1L, $r11)
Unit: $l1 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: long retryPeriod>
Unit: $i0 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: int maxRetry>
Unit: $r3 = virtualinvoke r0.<org.quartz.integrations.tests.StdRowLockSemaphoreTest: java.util.Properties createDefaultProperties()>()
Unit: $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: return
Unit: $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r16, $r18)
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L)
Unit: $r21 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r20)
Unit: virtualinvoke r0.<org.quartz.integrations.tests.StdRowLockSemaphoreTest: void initSchedulerBeforeTest(java.util.Properties)>($r3)
Unit: $r4 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: r2 = $r6
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: void scheduleJob(org.quartz.JobDetail,java.util.Set,boolean)>(r1, r2, 1)
Unit: virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r9)
Unit: specialinvoke $r6.<java.util.HashSet: void <init>()>()
Unit: $r7 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $z2 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: boolean myLockInvoked>
Unit: r1 = virtualinvoke $r5.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: r0 := @this: org.quartz.integrations.tests.StdRowLockSemaphoreTest
Unit: $r5 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: $r15 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: $r10 = r0.<org.quartz.integrations.tests.StdRowLockSemaphoreTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r19, $r21)
Unit: $r8 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r13, $r15)
Unit: $r18 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r17)
Unit: $r6 = new java.util.HashSet
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)


======== method testCustomStdRowLockSemaphore ======= : 

Unit: $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3000L)
Unit: specialinvoke $r6.<java.util.HashSet: void <init>()>()
Unit: return
Unit: $i0 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: int maxRetry>
Unit: $r4 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r6 = new java.util.HashSet
Unit: $r21 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r20)
Unit: $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>
Unit: virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r9)
Unit: $r12 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: java.util.concurrent.CountDownLatch latch>
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: r0 := @this: org.quartz.integrations.tests.StdRowLockSemaphoreTest
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: void scheduleJob(org.quartz.JobDetail,java.util.Set,boolean)>(r1, r2, 1)
Unit: $l1 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: long retryPeriod>
Unit: $r7 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r8 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r1)
Unit: $r5 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: virtualinvoke $r12.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(1L, $r11)
Unit: $z2 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: boolean myLockInvoked>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r16, $r18)
Unit: $r10 = r0.<org.quartz.integrations.tests.StdRowLockSemaphoreTest: org.quartz.Scheduler scheduler>
Unit: r2 = $r6
Unit: $r15 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: virtualinvoke r0.<org.quartz.integrations.tests.StdRowLockSemaphoreTest: void initSchedulerBeforeTest(java.util.Properties)>($r3)
Unit: r1 = virtualinvoke $r5.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r13, $r15)
Unit: $r18 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r17)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r19, $r21)
Unit: $r3 = virtualinvoke r0.<org.quartz.integrations.tests.StdRowLockSemaphoreTest: java.util.Properties createMyLockProperties()>()


======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.JobBuilder



======== method <init> ======= : 



======== method newJob ======= : 



======== method newJob ======= : 



======== method build ======= : 



======== method withIdentity ======= : 



======== method withIdentity ======= : 



======== method withIdentity ======= : 



======== method withDescription ======= : 



======== method ofType ======= : 



======== method requestRecovery ======= : 



======== method requestRecovery ======= : 



======== method storeDurably ======= : 



======== method storeDurably ======= : 



======== method usingJobData ======= : 



======== method usingJobData ======= : 



======== method usingJobData ======= : 



======== method usingJobData ======= : 



======== method usingJobData ======= : 



======== method usingJobData ======= : 



======== method usingJobData ======= : 



======== method setJobData ======= : 

 ====================================== 
** CLASS org.quartz.spi.JobStore



======== method initialize ======= : 



======== method schedulerStarted ======= : 



======== method schedulerPaused ======= : 



======== method schedulerResumed ======= : 



======== method shutdown ======= : 



======== method supportsPersistence ======= : 



======== method getEstimatedTimeToReleaseAndAcquireTrigger ======= : 



======== method isClustered ======= : 



======== method storeJobAndTrigger ======= : 



======== method storeJob ======= : 



======== method storeJobsAndTriggers ======= : 



======== method removeJob ======= : 



======== method removeJobs ======= : 



======== method retrieveJob ======= : 



======== method storeTrigger ======= : 



======== method removeTrigger ======= : 



======== method removeTriggers ======= : 



======== method replaceTrigger ======= : 



======== method retrieveTrigger ======= : 



======== method checkExists ======= : 



======== method checkExists ======= : 



======== method clearAllSchedulingData ======= : 



======== method storeCalendar ======= : 



======== method removeCalendar ======= : 



======== method retrieveCalendar ======= : 



======== method getNumberOfJobs ======= : 



======== method getNumberOfTriggers ======= : 



======== method getNumberOfCalendars ======= : 



======== method getJobKeys ======= : 



======== method getTriggerKeys ======= : 



======== method getJobGroupNames ======= : 



======== method getTriggerGroupNames ======= : 



======== method getCalendarNames ======= : 



======== method getTriggersForJob ======= : 



======== method getTriggerState ======= : 



======== method resetTriggerFromErrorState ======= : 



======== method pauseTrigger ======= : 



======== method pauseTriggers ======= : 



======== method pauseJob ======= : 



======== method pauseJobs ======= : 



======== method resumeTrigger ======= : 



======== method resumeTriggers ======= : 



======== method getPausedTriggerGroups ======= : 



======== method resumeJob ======= : 



======== method resumeJobs ======= : 



======== method pauseAll ======= : 



======== method resumeAll ======= : 



======== method acquireNextTriggers ======= : 



======== method releaseAcquiredTrigger ======= : 



======== method triggersFired ======= : 



======== method triggeredJobComplete ======= : 



======== method setInstanceId ======= : 



======== method setInstanceName ======= : 



======== method setThreadPoolSize ======= : 



======== method getAcquireRetryDelay ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$SlowRAMJobStore



======== method <init> ======= : 



======== method acquireNextTriggers ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest



======== method <init> ======= : 



======== method testSerializeJobData ======= : 

Unit: r0 := @this: org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
Unit: specialinvoke $r8.<org.quartz.JobDataMap: void <init>()>()
Unit: $r7 = new org.quartz.simpl.SimpleClassLoadHelper
Unit: $r9 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: java.io.ByteArrayOutputStream serializeJobData(org.quartz.JobDataMap)>(r2)
Unit: virtualinvoke r2.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("key2", null)
Unit: virtualinvoke $r10.<java.io.ByteArrayOutputStream: void close()>()
Unit: goto [?= return]
Unit: $r14 := @caughtexception
Unit: $r10 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: java.io.ByteArrayOutputStream serializeJobData(org.quartz.JobDataMap)>(r2)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void fail()>()
Unit: virtualinvoke r2.<org.quartz.JobDataMap: void clear()>()
Unit: return
Unit: virtualinvoke r2.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("key3", $r11)
Unit: $r4 = new org.quartz.impl.jdbcjobstore.StdJDBCDelegate
Unit: r3 = $r14
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void initialize(org.slf4j.Logger,java.lang.String,java.lang.String,java.lang.String,org.quartz.spi.ClassLoadHelper,boolean,java.lang.String)>($r6, "QRTZ_", "TESTSCHED", "INSTANCE", $r7, 0, "")
Unit: $r8 = new org.quartz.JobDataMap
Unit: $r15 = virtualinvoke r3.<java.io.NotSerializableException: java.lang.String getMessage()>()
Unit: goto [?= staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void assertTrue(boolean)>($z0)]
Unit: virtualinvoke r2.<org.quartz.JobDataMap: void clear()>()
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: java.io.ByteArrayOutputStream serializeJobData(org.quartz.JobDataMap)>(r2)
Unit: virtualinvoke r2.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("key", "value")
Unit: virtualinvoke r2.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("key2", null)
Unit: $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Unit: r2 = $r8
Unit: if $i0 < 0 goto $z0 = 0
Unit: specialinvoke $r7.<org.quartz.simpl.SimpleClassLoadHelper: void <init>()>()
Unit: virtualinvoke r2.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("key1", "value")
Unit: r1 = $r4
Unit: $r11 = new java.lang.Object
Unit: virtualinvoke $r9.<java.io.ByteArrayOutputStream: void close()>()
Unit: $i0 = virtualinvoke $r15.<java.lang.String: int indexOf(java.lang.String)>("key3")
Unit: $z0 = 1
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void assertTrue(boolean)>($z0)
Unit: $r6 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r5)
Unit: specialinvoke $r4.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void <init>()>()
Unit: specialinvoke $r11.<java.lang.Object: void <init>()>()
Unit: $z0 = 0


======== method testSelectBlobTriggerWithNoBlobContent ======= : 

Unit: r0 := @this: org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
Unit: $r15 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r14)
Unit: r1 = $r6
Unit: r3 = (java.sql.PreparedStatement) $r11
Local: r3
Must Mock: true

Unit: $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Unit: $z0 = interfaceinvoke r4.<java.sql.ResultSet: boolean next()>()
Unit: $r29 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String)>("test")
Unit: $r8 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r7)
Unit: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: r4 = (java.sql.ResultSet) $r12
Local: r4
Must Mock: true

Unit: $r26 = interfaceinvoke r4.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TRIGGER_TYPE")
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void initialize(org.slf4j.Logger,java.lang.String,java.lang.String,java.lang.String,org.quartz.spi.ClassLoadHelper,boolean,java.lang.String)>($r8, "QRTZ_", "TESTSCHED", "INSTANCE", $r9, 0, "")
Unit: $r14 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r13)
Unit: $r17 = interfaceinvoke r3.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>()
Unit: return
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r9 = new org.quartz.simpl.SimpleClassLoadHelper
Unit: r5 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: org.quartz.spi.OperableTrigger selectTrigger(java.sql.Connection,org.quartz.TriggerKey)>(r2, $r29)
Unit: specialinvoke $r6.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void <init>()>()
Unit: r2 = (java.sql.Connection) $r10
Local: r2
Must Mock: true

Unit: $r23 = interfaceinvoke $r21.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r22)
Unit: $r18 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r17)
Unit: specialinvoke $r9.<org.quartz.simpl.SimpleClassLoadHelper: void <init>()>()
Unit: $r12 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/ResultSet;")
Local: $r12
Must Mock: true

Unit: interfaceinvoke $r15.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r3)
Unit: $r27 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r26)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void assertNull(java.lang.Object)>(r5)
Unit: interfaceinvoke $r18.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r4)
Unit: interfaceinvoke $r23.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r24)
Unit: $r13 = staticinvoke <org.mockito.Matchers: java.lang.String anyString()>()
Unit: interfaceinvoke $r27.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>("BLOB")
Unit: $r10 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r10
Must Mock: true

Unit: $r6 = new org.quartz.impl.jdbcjobstore.StdJDBCDelegate
Unit: $r11 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/PreparedStatement;")
Local: $r11
Must Mock: true

Unit: $r21 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r20)


======== method testSelectSimpleTriggerWithExceptionWithExtendedProps ======= : 

Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: org.quartz.spi.OperableTrigger selectTrigger(java.sql.Connection,org.quartz.TriggerKey)>(r4, $r39)
Unit: $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()
Unit: interfaceinvoke $r33.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r34)
Unit: $r15 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r14)
Unit: $r26 = interfaceinvoke r4.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r25)
Unit: $r33 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r32)
Unit: $r39 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String)>("test")
Unit: interfaceinvoke $r15.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Throwable[])>($r16)
Unit: interfaceinvoke $r27.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5)
Unit: $r25 = staticinvoke <org.mockito.Matchers: java.lang.String anyString()>()
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void initialize(org.slf4j.Logger,java.lang.String,java.lang.String,java.lang.String,org.quartz.spi.ClassLoadHelper,boolean,java.lang.String)>($r20, "QRTZ_", "TESTSCHED", "INSTANCE", $r21, 0, "")
Unit: specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>()
Unit: $r36 = interfaceinvoke r6.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TRIGGER_TYPE")
Unit: $r37 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r36)
Unit: $r24 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/ResultSet;")
Local: $r24
Must Mock: true

Unit: r3 = $r18
Unit: $r20 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r19)
Unit: $r9 = new java.lang.IllegalStateException
Unit: interfaceinvoke $r37.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>("SIMPLE")
Unit: $r29 = interfaceinvoke r5.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>()
Unit: $r14 = interfaceinvoke r1.<org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate: org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle loadExtendedTriggerProperties(java.sql.Connection,org.quartz.TriggerKey)>($r11, $r13)
Unit: $r12 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Lorg/quartz/TriggerKey;")
Unit: r2 = $r9
Unit: r1 = (org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate) $r8
Local: r1
Must Mock: true

Unit: r6 = (java.sql.ResultSet) $r24
Local: r6
Must Mock: true

Unit: goto [?= $r41 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r1)]
Unit: $r43 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Ljava/sql/Connection;")
Unit: $r13 = (org.quartz.TriggerKey) $r12
Unit: $r16 = newarray (java.lang.Throwable)[1]
Unit: $r11 = (java.sql.Connection) $r10
Unit: $r18 = new org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest$TestStdJDBCDelegate
Unit: $r21 = new org.quartz.simpl.SimpleClassLoadHelper
Unit: r7 = $r48
Unit: $r10 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Ljava/sql/Connection;")
Unit: $r42 = (org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate) $r41
Local: $r42
Must Mock: true

Unit: $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: interfaceinvoke $r30.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r6)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void assertSame(java.lang.Object,java.lang.Object)>(r2, r7)
Unit: specialinvoke $r18.<org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest$TestStdJDBCDelegate: void <init>(org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate)>(r1)
Unit: $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r8 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/TriggerPersistenceDelegate;")
Local: $r8
Must Mock: true

Unit: $r19 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Unit: specialinvoke $r21.<org.quartz.simpl.SimpleClassLoadHelper: void <init>()>()
Unit: $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r22
Must Mock: true

Unit: return
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
Unit: r5 = (java.sql.PreparedStatement) $r23
Local: r5
Must Mock: true

Unit: $r41 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r1)
Local: $r41
Must Mock: true

Unit: $r16[0] = r2
Unit: $r23 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/PreparedStatement;")
Local: $r23
Must Mock: true

Unit: $r48 := @caughtexception
Unit: $r44 = (java.sql.Connection) $r43
Unit: $r27 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r26)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void fail(java.lang.String)>("Trigger selection should result in exception")
Unit: $r45 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Lorg/quartz/TriggerKey;")
Unit: $r46 = (org.quartz.TriggerKey) $r45
Unit: interfaceinvoke $r42.<org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate: org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle loadExtendedTriggerProperties(java.sql.Connection,org.quartz.TriggerKey)>($r44, $r46)
Unit: r4 = (java.sql.Connection) $r22
Local: r4
Must Mock: true

Unit: $r30 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r29)


======== method testSelectSimpleTriggerWithDeleteBeforeSelectExtendedProps ======= : 

Unit: $r13 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r12)
Unit: $z0 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>()
Unit: r1 = (org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate) $r7
Local: r1
Must Mock: true

Unit: r4 = (java.sql.PreparedStatement) $r22
Local: r4
Must Mock: true

Unit: $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r40 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String)>("test")
Unit: $r10 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Lorg/quartz/TriggerKey;")
Unit: $r9 = (java.sql.Connection) $r8
Unit: $r28 = interfaceinvoke r4.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>()
Unit: $r20 = new org.quartz.simpl.SimpleClassLoadHelper
Unit: $r25 = interfaceinvoke r3.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r24)
Unit: r5 = (java.sql.ResultSet) $r23
Local: r5
Must Mock: true

Unit: specialinvoke $r17.<org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest$TestStdJDBCDelegate: void <init>(org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate)>(r1)
Unit: $r7 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/TriggerPersistenceDelegate;")
Local: $r7
Must Mock: true

Unit: r0 := @this: org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
Unit: $r34 = interfaceinvoke $r32.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r33)
Unit: $r11 = (org.quartz.TriggerKey) $r10
Unit: $r26 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r25)
Unit: $r18 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Unit: $r8 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Ljava/sql/Connection;")
Unit: interfaceinvoke $r29.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5)
Unit: specialinvoke $r20.<org.quartz.simpl.SimpleClassLoadHelper: void <init>()>()
Unit: $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r37 = interfaceinvoke r5.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TRIGGER_TYPE")
Unit: $r21 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r21
Must Mock: true

Unit: $r46 = (org.quartz.TriggerKey) $r45
Unit: $r15 = new java.lang.IllegalStateException
Unit: $r17 = new org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest$TestStdJDBCDelegate
Unit: $r19 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r18)
Unit: $r32 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r31)
Unit: r6 = virtualinvoke r2.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: org.quartz.spi.OperableTrigger selectTrigger(java.sql.Connection,org.quartz.TriggerKey)>(r3, $r40)
Unit: $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r24 = staticinvoke <org.mockito.Matchers: java.lang.String anyString()>()
Unit: r3 = (java.sql.Connection) $r21
Local: r3
Must Mock: true

Unit: $r42 = (org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate) $r41
Local: $r42
Must Mock: true

Unit: staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void assertNull(java.lang.Object)>(r6)
Unit: interfaceinvoke $r34.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r35)
Unit: interfaceinvoke $r13.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Throwable[])>($r14)
Unit: $r44 = (java.sql.Connection) $r43
Unit: $r14 = newarray (java.lang.Throwable)[1]
Unit: $r38 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r37)
Unit: $r43 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Ljava/sql/Connection;")
Unit: specialinvoke $r15.<java.lang.IllegalStateException: void <init>()>()
Unit: interfaceinvoke $r38.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>("SIMPLE")
Unit: $r29 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r28)
Unit: $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/PreparedStatement;")
Local: $r22
Must Mock: true

Unit: $r23 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/ResultSet;")
Local: $r23
Must Mock: true

Unit: $r41 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r1)
Local: $r41
Must Mock: true

Unit: interfaceinvoke $r42.<org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate: org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle loadExtendedTriggerProperties(java.sql.Connection,org.quartz.TriggerKey)>($r44, $r46)
Unit: $r14[0] = $r15
Unit: return
Unit: r2 = $r17
Unit: $r12 = interfaceinvoke r1.<org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate: org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle loadExtendedTriggerProperties(java.sql.Connection,org.quartz.TriggerKey)>($r9, $r11)
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void initialize(org.slf4j.Logger,java.lang.String,java.lang.String,java.lang.String,org.quartz.spi.ClassLoadHelper,boolean,java.lang.String)>($r19, "QRTZ_", "TESTSCHED", "INSTANCE", $r20, 0, "")
Unit: $r45 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Lorg/quartz/TriggerKey;")
Unit: interfaceinvoke $r26.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r4)
 ====================================== 
** CLASS org.quartz.DisallowConcurrentExecution

 ====================================== 
** CLASS org.quartz.CronTrigger



======== method getCronExpression ======= : 



======== method getTimeZone ======= : 



======== method getExpressionSummary ======= : 



======== method getTriggerBuilder ======= : 

 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeExtendedNonConcurrentPersistentJob



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.Constants

 ====================================== 
** CLASS org.quartz.integrations.tests.StdRowLockSemaphoreTest$MyLock



======== method <init> ======= : 



======== method executeSQL ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate



======== method initialize ======= : 



======== method canHandleTriggerType ======= : 



======== method getHandledTriggerTypeDiscriminator ======= : 



======== method insertExtendedTriggerProperties ======= : 



======== method updateExtendedTriggerProperties ======= : 



======== method deleteExtendedTriggerProperties ======= : 



======== method loadExtendedTriggerProperties ======= : 

 ====================================== 
** CLASS org.quartz.JobDataMapTest



======== method <init> ======= : 



======== method getTargetObject ======= : 



======== method getVersions ======= : 



======== method verifyMatch ======= : 



======== method main ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.ee.servlet.QuartzInitializerServlet



======== method <init> ======= : 



======== method init ======= : 



======== method getSchedulerFactory ======= : 



======== method destroy ======= : 



======== method doPost ======= : 



======== method doGet ======= : 

 ====================================== 
** CLASS org.quartz.listeners.BroadcastJobListener



======== method <init> ======= : 



======== method <init> ======= : 



======== method getName ======= : 



======== method addListener ======= : 



======== method removeListener ======= : 



======== method removeListener ======= : 



======== method getListeners ======= : 



======== method jobToBeExecuted ======= : 



======== method jobExecutionVetoed ======= : 



======== method jobWasExecuted ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.LockException



======== method <init> ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.impl.StdSchedulerFactoryCustomConnectionProviderTest



======== method <init> ======= : 



======== method loadAndInitializeCustomConnectionProviderTest ======= : 

Unit: r0 := @this: org.quartz.impl.StdSchedulerFactoryCustomConnectionProviderTest
Unit: $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("org.quartz.impl.MockSQLException", $r15)
Unit: specialinvoke $r4.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/properties/quartzCustomConnectionProvider.properties")
Unit: r1 = $r4
Unit: $r13 = virtualinvoke $r12.<java.lang.Throwable: java.lang.Throwable getCause()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("initialize", $r8)
Unit: $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void start()>()
Unit: $r11 := @caughtexception
Unit: $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(1)
Unit: $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>()
Unit: $r4 = new org.quartz.impl.StdSchedulerFactory
Unit: $r5 = <org.quartz.impl.MockConnectionProvider: java.util.List methodsCalled>
Unit: $r7 = <org.quartz.impl.MockConnectionProvider: java.util.List methodsCalled>
Unit: r2 = virtualinvoke r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("setCustomProperty(customValue)", $r6)
Unit: $r9 = <org.quartz.impl.MockConnectionProvider: java.util.List methodsCalled>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("getConnection", $r10)
Unit: $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(2)
Unit: $r12 = virtualinvoke r3.<java.lang.Exception: java.lang.Throwable getCause()>()
Unit: r3 = $r11
Unit: goto [?= $r5 = <org.quartz.impl.MockConnectionProvider: java.util.List methodsCalled>]
Unit: return
 ====================================== 
** CLASS org.quartz.utils.counter.CounterManager



======== method createCounter ======= : 



======== method shutdown ======= : 



======== method shutdownCounter ======= : 

 ====================================== 
** CLASS org.quartz.utils.StringKeyDirtyFlagMap



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method equals ======= : 



======== method hashCode ======= : 



======== method getKeys ======= : 



======== method setAllowsTransientData ======= : 



======== method getAllowsTransientData ======= : 



======== method containsTransientData ======= : 



======== method removeTransientData ======= : 



======== method put ======= : 



======== method put ======= : 



======== method put ======= : 



======== method put ======= : 



======== method put ======= : 



======== method put ======= : 



======== method put ======= : 



======== method put ======= : 



======== method getInt ======= : 



======== method getLong ======= : 



======== method getFloat ======= : 



======== method getDouble ======= : 



======== method getBoolean ======= : 



======== method getChar ======= : 



======== method getString ======= : 



======== method put ======= : 

 ====================================== 
** CLASS org.quartz.xml.XMLSchedulingDataProcessor



======== method <init> ======= : 



======== method initDocumentParser ======= : 



======== method resolveSchemaSource ======= : 



======== method isOverWriteExistingData ======= : 



======== method setOverWriteExistingData ======= : 



======== method isIgnoreDuplicates ======= : 



======== method setIgnoreDuplicates ======= : 



======== method addJobGroupToNeverDelete ======= : 



======== method removeJobGroupToNeverDelete ======= : 



======== method getJobGroupsToNeverDelete ======= : 



======== method addTriggerGroupToNeverDelete ======= : 



======== method removeTriggerGroupToNeverDelete ======= : 



======== method getTriggerGroupsToNeverDelete ======= : 



======== method processFile ======= : 



======== method processFile ======= : 



======== method getSystemIdForFileName ======= : 



======== method getURL ======= : 



======== method prepForProcessing ======= : 



======== method processFile ======= : 



======== method processStreamAndScheduleJobs ======= : 



======== method process ======= : 



======== method getTrimmedToNullString ======= : 



======== method getBoolean ======= : 



======== method processFileAndScheduleJobs ======= : 



======== method processFileAndScheduleJobs ======= : 



======== method processFileAndScheduleJobs ======= : 



======== method getLoadedJobs ======= : 



======== method getLoadedTriggers ======= : 



======== method getInputStream ======= : 



======== method addJobToSchedule ======= : 



======== method addTriggerToSchedule ======= : 



======== method buildTriggersByFQJobNameMap ======= : 



======== method executePreProcessCommands ======= : 



======== method scheduleJobs ======= : 



======== method warning ======= : 



======== method error ======= : 



======== method fatalError ======= : 



======== method addValidationException ======= : 



======== method clearValidationExceptions ======= : 



======== method maybeThrowValidationException ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.GroupMatcherTest



======== method <init> ======= : 



======== method testAnyGroupMatchers ======= : 

Unit: $z1 = virtualinvoke r4.<org.quartz.impl.matchers.GroupMatcher: boolean isMatch(org.quartz.utils.Key)>(r2)
Unit: r0 := @this: org.quartz.impl.matchers.GroupMatcherTest
Unit: r4 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher anyJobGroup()>()
Unit: r1 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("booboo", "baz")
Unit: staticinvoke <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>("Expected match on trigger group", $z0)
Unit: r2 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String,java.lang.String)>("frumpwomp", "bazoo")
Unit: return
Unit: staticinvoke <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>("Expected match on job group", $z1)
Unit: r3 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher anyTriggerGroup()>()
Unit: $z0 = virtualinvoke r3.<org.quartz.impl.matchers.GroupMatcher: boolean isMatch(org.quartz.utils.Key)>(r1)
 ====================================== 
** CLASS org.quartz.CalendarIntervalTriggerTest



======== method <init> ======= : 



======== method testQTZ331FireTimeAfterBoundary ======= : 

Unit: specialinvoke $r10.<java.util.Date: void <init>(long)>($l1)
Unit: r3 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r8, $r9)
Unit: $r11 = virtualinvoke r4.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>(r5)
Unit: $r7 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>(java.lang.String,java.util.Date,java.util.Date,org.quartz.DateBuilder$IntervalUnit,int)>("test", r2, null, $r7, 1)
Unit: virtualinvoke r1.<java.util.Calendar: void clear()>()
Unit: $r8 = virtualinvoke r4.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>(r2)
Unit: $r10 = new java.util.Date
Unit: $r9 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>(r3)
Unit: $l0 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
Unit: r5 = $r10
Unit: r2 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r1.<java.util.Calendar: void add(int,int)>(5, 1)
Unit: $l1 = $l0 - 500L
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: return
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int)>(2013, 1, 15)
Unit: r4 = $r6
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r11, $r12)
Unit: $r12 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>(r3)


======== method testQTZ330DaylightSavingsCornerCase ======= : 

Unit: virtualinvoke r5.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setPreserveHourOfDayAcrossDaylightSavings(boolean)>(1)
Unit: $r16 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r15)
Unit: virtualinvoke r2.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(r1)
Unit: r4 = $r7
Unit: r6 = virtualinvoke r5.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r12)
Unit: $z0 = virtualinvoke r6.<java.util.Date: boolean after(java.util.Date)>($r13)
Unit: $r12 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r13 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int,int,int,int,int)>(2012, 2, 16, 2, 30, 0)
Unit: $r8 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("America/New_York")
Unit: virtualinvoke r3.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r14, $r16)
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r3.<java.util.Calendar: void clear()>()
Unit: specialinvoke $r8.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>(java.lang.String,java.util.Date,java.util.Date,org.quartz.DateBuilder$IntervalUnit,int)>("QTZ-330", $r9, null, $r10, 1)
Unit: $r7 = new org.quartz.impl.calendar.BaseCalendar
Unit: virtualinvoke r5.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(r4)
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r9 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: return
Unit: specialinvoke $r7.<org.quartz.impl.calendar.BaseCalendar: void <init>(java.util.TimeZone)>(r1)
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r5.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setTimeZone(java.util.TimeZone)>(r1)
Unit: r5 = $r8
Unit: virtualinvoke r2.<java.util.Calendar: void clear()>()
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2013, 3, 19, 2, 30, 0)


======== method testYearlyIntervalGetFireTimeAfter ======= : 

Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: r5 = (java.util.Date) $r9
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 4)
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2009, 5, 1, 9, 30, 17)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(2)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Year increment result not as expected.", $r10, r5)
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit YEAR>
Unit: return
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: r2 = $r6
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(2)


======== method testMonthlyIntervalGetFireTimeAfter ======= : 

Unit: virtualinvoke r3.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(5)
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Month increment result not as expected.", $r10, r5)
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r2 = $r6
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(2, 25)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MONTH>
Unit: r5 = (java.util.Date) $r9
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 6)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: return
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(5)
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)


======== method testWeeklyIntervalGetFireTimeAfter ======= : 

Unit: r2 = $r6
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(4)
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(6)
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: return
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: virtualinvoke r3.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: r5 = (java.util.Date) $r9
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 7)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit WEEK>
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(6, 168)
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Week increment result not as expected.", $r10, r5)


======== method testDailyIntervalGetFireTimeAfter ======= : 

Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 6)
Unit: return
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(90)
Unit: r2 = $r6
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(6, 360)
Unit: virtualinvoke r3.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: r5 = (java.util.Date) $r9
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Day increment result not as expected.", $r10, r5)
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(4)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)


======== method testHourlyIntervalGetFireTimeAfter ======= : 

Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Hour increment result not as expected.", $r10, r5)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: return
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: r5 = (java.util.Date) $r9
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 6)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r3.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r2 = $r6
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(100)
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(10, 400)
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(4)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>


======== method testMinutelyIntervalGetFireTimeAfter ======= : 

Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 6)
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(4)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(100)
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r2 = $r6
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(12, 400)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Minutes increment result not as expected.", $r10, r5)
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: return
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r3.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: r5 = (java.util.Date) $r9


======== method testSecondlyIntervalGetFireTimeAfter ======= : 

Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 6)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(4)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: r2 = $r6
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(100)
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r3.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: return
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(13, 400)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Seconds increment result not as expected.", $r10, r5)
Unit: r5 = (java.util.Date) $r9
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)


======== method testDaylightSavingsTransitions ======= : 

Unit: virtualinvoke r59.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setTimeZone(java.util.TimeZone)>($r17)
Unit: virtualinvoke r77.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r44)
Unit: r78 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r76, null, 6)
Unit: $r13 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: $r14 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: $z0 = 1
Unit: virtualinvoke r50.<java.util.Calendar: void add(int,int)>(6, 10)
Unit: virtualinvoke r59.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r16)
Unit: virtualinvoke r49.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r3)
Unit: $r19 = virtualinvoke r58.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r34 = virtualinvoke r70.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r24 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: $r39 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CEST")
Unit: $i5 = virtualinvoke r69.<java.util.Calendar: int get(int)>(11)
Unit: virtualinvoke r49.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r2)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertTrue(java.lang.String,boolean)>("Day increment time-of-day result not as expected over spring 2011 daylight savings transition.", $z1)
Unit: virtualinvoke r77.<java.util.Calendar: void add(int,int)>(6, 3)
Unit: $r45 = virtualinvoke r75.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r77.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r50.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r53.<java.util.Calendar: void set(int,int,int,int,int,int)>(2011, 2, 12, 1, 0, 0)
Unit: virtualinvoke r71.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r34)
Unit: $r47 = virtualinvoke r77.<java.util.Calendar: java.util.Date getTime()>()
Unit: r79 = (java.util.Date) $r46
Unit: virtualinvoke r59.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r15)
Unit: r76 = $r40
Unit: virtualinvoke r65.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setPreserveHourOfDayAcrossDaylightSavings(boolean)>(1)
Unit: virtualinvoke r66.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r28)
Unit: virtualinvoke r59.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: virtualinvoke r64.<java.util.Calendar: void clear(int)>(14)
Unit: $i2 = virtualinvoke r63.<java.util.Calendar: int get(int)>(11)
Unit: $r2 = virtualinvoke r48.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r48.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 2, 12, 9, 30, 17)
Unit: virtualinvoke r54.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: virtualinvoke r65.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r25)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Day increment result not as expected over fall 2010 daylight savings transition.", $r38, r74)
Unit: r58 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r61 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r59, null, 6)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Day increment result not as expected over spring 2010 daylight savings transition.", $r6, r52)
Unit: r53 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r54.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r8)
Unit: $r1 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: $r46 = interfaceinvoke r78.<java.util.List: java.lang.Object get(int)>(3)
Unit: r68 = (java.util.Date) $r30
Unit: specialinvoke $r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: $r17 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("EST")
Unit: r66 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r65.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: r55 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r49.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(5)
Unit: $r42 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: virtualinvoke r48.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r66.<java.util.Calendar: void clear(int)>(14)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertFalse(java.lang.String,boolean)>("Day increment time-of-day result not as expected over spring 2011 daylight savings transition.", $z0)
Unit: virtualinvoke r66.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: $r5 = interfaceinvoke r51.<java.util.List: java.lang.Object get(int)>(2)
Unit: $r16 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: $l3 = virtualinvoke r68.<java.util.Date: long getTime()>()
Unit: $r15 = virtualinvoke r58.<java.util.Calendar: java.util.Date getTime()>()
Unit: r48 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r23 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: r63 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r21)
Unit: $r25 = virtualinvoke r64.<java.util.Calendar: java.util.Date getTime()>()
Unit: r74 = (java.util.Date) $r37
Unit: specialinvoke $r7.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: $z1 = 0
Unit: virtualinvoke r72.<java.util.Calendar: void clear(int)>(14)
Unit: r71 = $r33
Unit: $r18 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: specialinvoke $r14.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: r51 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r49, null, 6)
Unit: virtualinvoke r64.<java.util.Calendar: void set(int,int,int,int,int,int)>(2011, 2, 26, 4, 0, 0)
Unit: $r28 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: r54 = $r7
Unit: virtualinvoke r76.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setTimeZone(java.util.TimeZone)>($r43)
Unit: virtualinvoke r72.<java.util.Calendar: void add(int,int)>(6, 15)
Unit: $i4 = virtualinvoke r66.<java.util.Calendar: int get(int)>(11)
Unit: $r33 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r58.<java.util.Calendar: void clear(int)>(14)
Unit: if $i1 != $i2 goto $z0 = 0
Unit: $r3 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: r56 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r54, null, 6)
Unit: virtualinvoke r71.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r35)
Unit: virtualinvoke r75.<java.util.Calendar: void set(int,int,int,int,int,int)>(2011, 9, 29, 1, 30, 0)
Unit: $r30 = interfaceinvoke r67.<java.util.List: java.lang.Object get(int)>(2)
Unit: virtualinvoke r58.<java.util.Calendar: void set(int,int,int,int,int,int)>(2011, 2, 26, 4, 0, 0)
Unit: r77 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r63.<java.util.Calendar: void setTimeInMillis(long)>($l0)
Unit: virtualinvoke r76.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r41)
Unit: virtualinvoke r60.<java.util.Calendar: void setTime(java.util.Date)>($r19)
Unit: virtualinvoke r50.<java.util.Calendar: void setTime(java.util.Date)>($r4)
Unit: goto [?= staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertTrue(java.lang.String,boolean)>("Day increment time-of-day result not as expected over spring 2011 daylight savings transition.", $z1)]
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: virtualinvoke r70.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 9, 31, 9, 30, 17)
Unit: virtualinvoke r50.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: virtualinvoke r66.<java.util.Calendar: void add(int,int)>(6, 2)
Unit: specialinvoke $r33.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: $r38 = virtualinvoke r72.<java.util.Calendar: java.util.Date getTime()>()
Unit: specialinvoke $r40.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r71.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(5)
Unit: $r21 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: $r37 = interfaceinvoke r73.<java.util.List: java.lang.Object get(int)>(3)
Unit: $r7 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: $r44 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CEST")
Unit: $l0 = virtualinvoke r62.<java.util.Date: long getTime()>()
Unit: r52 = (java.util.Date) $r5
Unit: $r8 = virtualinvoke r53.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r4 = virtualinvoke r48.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r27 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: virtualinvoke r66.<java.util.Calendar: void setTime(java.util.Date)>($r29)
Unit: virtualinvoke r69.<java.util.Calendar: void setTimeInMillis(long)>($l3)
Unit: r59 = $r14
Unit: $i1 = virtualinvoke r60.<java.util.Calendar: int get(int)>(11)
Unit: r73 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r71, null, 6)
Unit: $r41 = virtualinvoke r75.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r65.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r26)
Unit: $z1 = 1
Unit: r49 = $r1
Unit: specialinvoke $r24.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: r65 = $r24
Unit: virtualinvoke r55.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: r75 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r76.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r42)
Unit: r57 = (java.util.Date) $r11
Unit: virtualinvoke r77.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: r67 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r65, null, 6)
Unit: r50 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $z0 = 0
Unit: $r43 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("EST")
Unit: r64 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r64.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r23)
Unit: virtualinvoke r55.<java.util.Calendar: void add(int,int)>(6, 2)
Unit: virtualinvoke r60.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: r62 = (java.util.Date) $r20
Unit: goto [?= staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertFalse(java.lang.String,boolean)>("Day increment time-of-day result not as expected over spring 2011 daylight savings transition.", $z0)]
Unit: $r35 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: r72 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r29 = virtualinvoke r64.<java.util.Calendar: java.util.Date getTime()>()
Unit: if $i4 != $i5 goto $z1 = 0
Unit: r60 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r12 = virtualinvoke r55.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r31 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: r69 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r31)
Unit: virtualinvoke r55.<java.util.Calendar: void setTime(java.util.Date)>($r10)
Unit: virtualinvoke r70.<java.util.Calendar: void clear(int)>(14)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Day increment result not as expected over fall 2011 daylight savings transition.", $r47, r79)
Unit: virtualinvoke r55.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r76.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: r70 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r54.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: virtualinvoke r58.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r13)
Unit: virtualinvoke r60.<java.util.Calendar: void add(int,int)>(6, 2)
Unit: $r11 = interfaceinvoke r56.<java.util.List: java.lang.Object get(int)>(2)
Unit: virtualinvoke r60.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r18)
Unit: virtualinvoke r72.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: virtualinvoke r75.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r39)
Unit: $r10 = virtualinvoke r53.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r36 = virtualinvoke r70.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r65.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setTimeZone(java.util.TimeZone)>($r27)
Unit: $r20 = interfaceinvoke r61.<java.util.List: java.lang.Object get(int)>(2)
Unit: return
Unit: $r40 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Day increment result not as expected over spring 2011 daylight savings transition.", $r12, r57)
Unit: $r6 = virtualinvoke r50.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r60.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r72.<java.util.Calendar: void setTime(java.util.Date)>($r36)
Unit: virtualinvoke r77.<java.util.Calendar: void setTime(java.util.Date)>($r45)
Unit: $r26 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: virtualinvoke r53.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r75.<java.util.Calendar: void clear(int)>(14)


======== method testFinalFireTimes ======= : 

Unit: r18 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r16.<java.util.Calendar: void add(int,int)>(6, 10)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Final fire time not computed correctly for day interval.", $r6, r17)
Unit: $z0 = virtualinvoke $r12.<java.util.Date: boolean after(java.util.Date)>(r21)
Unit: $r2 = virtualinvoke r14.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r16.<java.util.Calendar: void clear(int)>(14)
Unit: r15 = $r1
Unit: virtualinvoke r20.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: virtualinvoke r14.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 2, 12, 9, 0, 0)
Unit: specialinvoke $r7.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: r20 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r7 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r16.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: virtualinvoke r15.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(5)
Unit: virtualinvoke r18.<java.util.Calendar: void clear(int)>(14)
Unit: r16 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r5 = virtualinvoke r16.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r3 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: r19 = $r7
Unit: virtualinvoke r19.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setEndTime(java.util.Date)>($r11)
Unit: $r4 = virtualinvoke r14.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r12 = virtualinvoke r20.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r19.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: $r6 = virtualinvoke r16.<java.util.Calendar: java.util.Date getTime()>()
Unit: $z1 = virtualinvoke $r13.<java.util.Date: boolean equals(java.lang.Object)>(r21)
Unit: specialinvoke $r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: $r10 = virtualinvoke r18.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r15.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setEndTime(java.util.Date)>($r5)
Unit: virtualinvoke r15.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r2)
Unit: return
Unit: virtualinvoke r20.<java.util.Calendar: void clear(int)>(14)
Unit: $r11 = virtualinvoke r20.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r19.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(5)
Unit: virtualinvoke r20.<java.util.Calendar: void add(int,int)>(12, -2)
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertTrue(java.lang.String,boolean)>("Final fire time not computed correctly for minutely interval.", $z1)
Unit: $r13 = virtualinvoke r20.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r8 = virtualinvoke r18.<java.util.Calendar: java.util.Date getTime()>()
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: r17 = virtualinvoke r15.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.Date getFinalFireTime()>()
Unit: virtualinvoke r19.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r8)
Unit: virtualinvoke r18.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 2, 12, 9, 0, 0)
Unit: virtualinvoke r14.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r15.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r3)
Unit: virtualinvoke r20.<java.util.Calendar: void setTime(java.util.Date)>($r10)
Unit: virtualinvoke r16.<java.util.Calendar: void setTime(java.util.Date)>($r4)
Unit: r14 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r20.<java.util.Calendar: void add(int,int)>(6, 15)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertTrue(java.lang.String,boolean)>("Final fire time not computed correctly for minutely interval.", $z0)
Unit: virtualinvoke r20.<java.util.Calendar: void add(int,int)>(12, -3)
Unit: $r1 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: r21 = virtualinvoke r19.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.Date getFinalFireTime()>()


======== method testMisfireInstructionValidity ======= : 

Unit: $r2 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: return
Unit: goto [?= return]
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setMisfireInstruction(int)>(3)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void fail(java.lang.String)>("Expected exception while setting invalid misfire instruction but did not get it.")
Unit: $r3 := @caughtexception
Unit: goto [?= virtualinvoke r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setMisfireInstruction(int)>(3)]
Unit: r5 = $r4
Unit: r1 = $r2
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setMisfireInstruction(int)>(0)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void fail(java.lang.String)>("Unexpected exception while setting misfire instruction.")
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setMisfireInstruction(int)>(2)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setMisfireInstruction(int)>(1)
Unit: $r4 := @caughtexception
Unit: r6 = $r3
Unit: specialinvoke $r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setMisfireInstruction(int)>(-1)


======== method getTargetObject ======= : 



======== method getVersions ======= : 



======== method verifyMatch ======= : 



======== method main ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeNonConcurrentJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.JobBuilderTest$TestStatefulJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.utils.CircularLossyQueue



======== method <init> ======= : 



======== method push ======= : 



======== method toArray ======= : 



======== method getIndex ======= : 



======== method peek ======= : 



======== method isEmtpy ======= : 



======== method getCurrentIndex ======= : 



======== method depth ======= : 

 ====================================== 
** CLASS org.quartz.simpl.SimpleClassLoadHelper



======== method <init> ======= : 



======== method initialize ======= : 



======== method loadClass ======= : 



======== method loadClass ======= : 



======== method getResource ======= : 



======== method getResourceAsStream ======= : 



======== method getClassLoader ======= : 

 ====================================== 
** CLASS org.quartz.core.QuartzSchedulerResources



======== method <init> ======= : 



======== method getName ======= : 



======== method setName ======= : 



======== method getInstanceId ======= : 



======== method setInstanceId ======= : 



======== method getUniqueIdentifier ======= : 



======== method getUniqueIdentifier ======= : 



======== method getRMIRegistryHost ======= : 



======== method setRMIRegistryHost ======= : 



======== method getRMIRegistryPort ======= : 



======== method setRMIRegistryPort ======= : 



======== method getRMIServerPort ======= : 



======== method setRMIServerPort ======= : 



======== method getRMICreateRegistryStrategy ======= : 



======== method getThreadName ======= : 



======== method setThreadName ======= : 



======== method setRMICreateRegistryStrategy ======= : 



======== method getThreadPool ======= : 



======== method setThreadPool ======= : 



======== method getJobStore ======= : 



======== method setJobStore ======= : 



======== method getJobRunShellFactory ======= : 



======== method setJobRunShellFactory ======= : 



======== method addSchedulerPlugin ======= : 



======== method getSchedulerPlugins ======= : 



======== method getMakeSchedulerThreadDaemon ======= : 



======== method setMakeSchedulerThreadDaemon ======= : 



======== method isThreadsInheritInitializersClassLoadContext ======= : 



======== method setThreadsInheritInitializersClassLoadContext ======= : 



======== method getRMIBindName ======= : 



======== method setRMIBindName ======= : 



======== method getJMXExport ======= : 



======== method setJMXExport ======= : 



======== method getJMXObjectName ======= : 



======== method setJMXObjectName ======= : 



======== method getThreadExecutor ======= : 



======== method setThreadExecutor ======= : 



======== method generateJMXObjectName ======= : 



======== method getBatchTimeWindow ======= : 



======== method setBatchTimeWindow ======= : 



======== method getMaxBatchSize ======= : 



======== method setMaxBatchSize ======= : 



======== method isInterruptJobsOnShutdown ======= : 



======== method setInterruptJobsOnShutdown ======= : 



======== method isInterruptJobsOnShutdownWithWait ======= : 



======== method setInterruptJobsOnShutdownWithWait ======= : 



======== method getManagementRESTServiceConfiguration ======= : 



======== method setManagementRESTServiceConfiguration ======= : 

 ====================================== 
** CLASS org.quartz.simpl.PropertySettingJobFactoryTest



======== method <init> ======= : 



======== method setUp ======= : 



======== method testSetBeanPropsPrimatives ======= : 

Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertTrue(boolean)>($z0)
Unit: $d1 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: double getDoubleValue()>()
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(int,int)>(1, $i0)
Unit: r1 = $r3
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("byteValue", $r16)
Unit: $l1 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: long getLongValue()>()
Unit: $f0 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: float getFloatValue()>()
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(int,int)>(5, $s2)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(double,double,double)>(4.0, $d1, 1.0E-4)
Unit: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: r2 = $r20
Unit: $r23 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: java.util.Map getMapValue()>()
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("floatValue", $r8)
Unit: $r18 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("A", "B")
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(long,long)>(2L, $l1)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertTrue(boolean)>($z1)
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(java.lang.String,java.lang.String)>("S1", $r22)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(byte,byte)>(6, $b4)
Unit: $r22 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: java.lang.String getStringValue()>()
Unit: $r21 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("doubleValue", $r10)
Unit: $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(3.0F)
Unit: $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: $z1 = interfaceinvoke $r23.<java.util.Map: boolean containsKey(java.lang.Object)>("A")
Unit: specialinvoke $r20.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("stringValue", "S1")
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("longValue", $r6)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,char)>("charValue", 97)
Unit: $r14 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(5)
Unit: $c3 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: char getCharValue()>()
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("mapValue", $r18)
Unit: $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(4.0)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(char,char)>(97, $c3)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("intValue", $r4)
Unit: $z0 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: boolean getBooleanValue()>()
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("shortValue", $r14)
Unit: $s2 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: short getShortValue()>()
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r16 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(6)
Unit: $r3 = new org.quartz.JobDataMap
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("booleanValue", $r12)
Unit: $b4 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: byte getByteValue()>()
Unit: $r20 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: virtualinvoke $r21.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>(r2, r1)
Unit: return
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: $d0 = (double) $f0
Unit: $i0 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: int getIntValue()>()
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(double,double,double)>(3.0, $d0, 1.0E-4)


======== method testSetBeanPropsUnknownProperty ======= : 

Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: virtualinvoke $r7.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>($r6, r1)
Unit: $r8 := @caughtexception
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r6 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: $r3 = new org.quartz.JobDataMap
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: $r7 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("bogusValue", $r4)
Unit: goto [?= return]
Unit: specialinvoke $r6.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void fail()>()
Unit: return
Unit: r1 = $r3
Unit: r2 = $r8


======== method testSetBeanPropsNullPrimative ======= : 

Unit: return
Unit: $r5 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: $r6 := @caughtexception
Unit: $r3 = new org.quartz.JobDataMap
Unit: r2 = $r6
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: $r4 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: virtualinvoke $r5.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>($r4, r1)
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("intValue", null)
Unit: goto [?= return]
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void fail()>()
Unit: specialinvoke $r4.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: r1 = $r3


======== method testSetBeanPropsNullNonPrimative ======= : 

Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertNull(java.lang.Object)>($r7)
Unit: specialinvoke $r4.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: r1 = $r3
Unit: virtualinvoke $r6.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>(r2, r1)
Unit: $r7 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: java.util.Map getMapValue()>()
Unit: virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void setMapValue(java.util.Map)>($r5)
Unit: $r6 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: r2 = $r4
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("mapValue", null)
Unit: $r3 = new org.quartz.JobDataMap
Unit: return
Unit: $r4 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: $r5 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("A", "B")


======== method testSetBeanPropsWrongPrimativeType ======= : 

Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: virtualinvoke $r7.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>($r6, r1)
Unit: $r6 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: return
Unit: $r3 = new org.quartz.JobDataMap
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void fail()>()
Unit: specialinvoke $r4.<java.lang.Float: void <init>(float)>(7.0F)
Unit: specialinvoke $r6.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: r1 = $r3
Unit: $r7 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("intValue", $r4)
Unit: r2 = $r8
Unit: $r8 := @caughtexception
Unit: $r4 = new java.lang.Float
Unit: goto [?= return]
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest


======== method testSetBeanPropsWrongNonPrimativeType ======= : 

Unit: virtualinvoke $r7.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>($r6, r1)
Unit: goto [?= return]
Unit: $r8 := @caughtexception
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: r2 = $r8
Unit: $r6 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: r1 = $r3
Unit: $r7 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: $r3 = new org.quartz.JobDataMap
Unit: return
Unit: specialinvoke $r6.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: specialinvoke $r4.<java.lang.Float: void <init>(float)>(7.0F)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void fail()>()
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("mapValue", $r4)
Unit: $r4 = new java.lang.Float
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()


======== method testSetBeanPropsCharStringTooShort ======= : 

Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void fail()>()
Unit: specialinvoke $r4.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: virtualinvoke $r5.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>($r4, r1)
Unit: return
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: $r4 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: $r6 := @caughtexception
Unit: $r3 = new org.quartz.JobDataMap
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("charValue", "")
Unit: goto [?= return]
Unit: r1 = $r3
Unit: $r5 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: r2 = $r6


======== method testSetBeanPropsCharStringTooLong ======= : 

Unit: r2 = $r6
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("charValue", "abba")
Unit: $r6 := @caughtexception
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: goto [?= return]
Unit: $r3 = new org.quartz.JobDataMap
Unit: specialinvoke $r4.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: $r5 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: $r4 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: r1 = $r3
Unit: return
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void fail()>()
Unit: virtualinvoke $r5.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>($r4, r1)


======== method testSetBeanPropsFromStrings ======= : 

Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: specialinvoke $r4.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("intValue", "1")
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("doubleValue", "4.0")
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(char,char)>(97, $c3)
Unit: $s2 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: short getShortValue()>()
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("charValue", "a")
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(double,double,double)>(3.0, $d0, 1.0E-4)
Unit: $c3 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: char getCharValue()>()
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(boolean,boolean)>(1, $z0)
Unit: r2 = $r4
Unit: $i0 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: int getIntValue()>()
Unit: $r3 = new org.quartz.JobDataMap
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(byte,byte)>(6, $b4)
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: return
Unit: $r4 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("booleanValue", "true")
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("byteValue", "6")
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(double,double,double)>(4.0, $d1, 1.0E-4)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("longValue", "2")
Unit: $d0 = (double) $f0
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("floatValue", "3.0")
Unit: virtualinvoke $r5.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>(r2, r1)
Unit: $b4 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: byte getByteValue()>()
Unit: $r5 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(long,long)>(2L, $l1)
Unit: $z0 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: boolean getBooleanValue()>()
Unit: $d1 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: double getDoubleValue()>()
Unit: r1 = $r3
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(int,int)>(1, $i0)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(int,int)>(5, $s2)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("shortValue", "5")
Unit: $l1 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: long getLongValue()>()
Unit: $f0 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: float getFloatValue()>()
 ====================================== 
** CLASS org.quartz.Job



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.RemoteMBeanSchedulerTest$TestRemoteScheduler



======== method <init> ======= : 



======== method initialize ======= : 



======== method getAttribute ======= : 



======== method getAttributes ======= : 



======== method invoke ======= : 

 ====================================== 
** CLASS org.quartz.SchedulerException



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method getUnderlyingException ======= : 



======== method toString ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest



======== method <init> ======= : 



======== method testPauseAndResumeTriggers ======= : 

Unit: r2 = (org.quartz.CronTrigger) $r9
Unit: r0 := @this: org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest
Unit: $r3 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r31 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r30)
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test", "abc")
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r29 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r16 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r33 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r32)
Unit: r35 = interfaceinvoke $r20.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r21)
Unit: $r27 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: $r21 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r12 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r1 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r14 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r30 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r25)
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r23 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r22)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r17)
Unit: $r26 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r28 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: $r7 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: r36 = interfaceinvoke $r28.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r29)
Unit: $r8 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: $r13 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r15)
Unit: $r19 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r23)
Unit: $r25 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r24)
Unit: $r17 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r16)
Unit: $r10 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r32 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r31)
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: $r22 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r18 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r20 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r24 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: interfaceinvoke $r26.<org.quartz.Scheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>($r27)
Unit: r34 = interfaceinvoke $r12.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r13)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r33)
Unit: interfaceinvoke $r18.<org.quartz.Scheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>($r19)


======== method testResumeTriggersBeforeAddJob ======= : 

Unit: $r30 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r14 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r0 := @this: org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest
Unit: r2 = (org.quartz.CronTrigger) $r13
Unit: interfaceinvoke $r3.<org.quartz.Scheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>($r4)
Unit: $r8 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r27)
Unit: $r19 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r18)
Unit: $r22 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r21)
Unit: $r26 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r9 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r40 = interfaceinvoke $r32.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r33)
Unit: $r37 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r36)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r35)
Unit: $r5 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r39 = interfaceinvoke $r24.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r25)
Unit: $r11 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r21 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r20)
Unit: $r28 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r34 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r3 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: interfaceinvoke $r14.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r6 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: interfaceinvoke $r30.<org.quartz.Scheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>($r31)
Unit: $r16 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r31 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r37)
Unit: $r10 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r36 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r7 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: interfaceinvoke $r5.<org.quartz.Scheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>($r6)
Unit: r38 = interfaceinvoke $r16.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r17)
Unit: $r32 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r4 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: interfaceinvoke $r22.<org.quartz.Scheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>($r23)
Unit: $r23 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: $r33 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r19)
Unit: $r20 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r34)
Unit: $r27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r26)
Unit: $r17 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r25 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r29 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r28)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r29)
Unit: r1 = virtualinvoke $r8.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r12 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r11)
Unit: $r18 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r24 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>


======== method testPauseAndResumeJobs ======= : 

Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r23)
Unit: $r18 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r20 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: interfaceinvoke $r18.<org.quartz.Scheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>($r19)
Unit: $r25 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r24)
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r15)
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r8 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: $r33 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r32)
Unit: $r29 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r32 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r33)
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r19 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: r34 = interfaceinvoke $r12.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r13)
Unit: $r31 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r30)
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r31)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r25)
Unit: $r3 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: r1 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r17 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r16)
Unit: $r24 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r13 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: r2 = (org.quartz.CronTrigger) $r9
Unit: $r26 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r12 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r35 = interfaceinvoke $r20.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r21)
Unit: $r16 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r17)
Unit: $r30 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: return
Unit: r36 = interfaceinvoke $r28.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r29)
Unit: $r22 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r7 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r14 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: interfaceinvoke $r26.<org.quartz.Scheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>($r27)
Unit: $r23 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r22)
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r10 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r21 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r28 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r27 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: r0 := @this: org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest


======== method testResumeJobsBeforeAddJobs ======= : 

Unit: $r28 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r9 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r6 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r19)
Unit: $r18 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: r0 := @this: org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest
Unit: $r12 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r11)
Unit: $r21 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r20)
Unit: $r27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r26)
Unit: $r31 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r37 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r36)
Unit: $r11 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: interfaceinvoke $r3.<org.quartz.Scheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>($r4)
Unit: r1 = virtualinvoke $r8.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r36 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r8 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r19 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r18)
Unit: $r4 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r20 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: r40 = interfaceinvoke $r32.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r33)
Unit: $r35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r34)
Unit: $r26 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r35)
Unit: $r3 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r2 = (org.quartz.CronTrigger) $r13
Unit: $r16 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r29)
Unit: $r25 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r27)
Unit: $r29 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r28)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r37)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: interfaceinvoke $r14.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: interfaceinvoke $r5.<org.quartz.Scheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>($r6)
Unit: r38 = interfaceinvoke $r16.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r17)
Unit: interfaceinvoke $r30.<org.quartz.Scheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>($r31)
Unit: $r30 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r21)
Unit: $r24 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r17 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r33 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r7 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r22 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r5 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: interfaceinvoke $r22.<org.quartz.Scheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>($r23)
Unit: $r23 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: r39 = interfaceinvoke $r24.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r25)
Unit: $r34 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r10 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test", "abc")
Unit: return
Unit: $r14 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r32 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
 ====================================== 
** CLASS org.quartz.DisallowConcurrentExecutionJobTest$TestJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream



======== method <init> ======= : 



======== method read ======= : 



======== method read ======= : 



======== method read ======= : 



======== method skip ======= : 



======== method available ======= : 



======== method close ======= : 



======== method mark ======= : 



======== method reset ======= : 



======== method markSupported ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreCMT



======== method <init> ======= : 



======== method setNonManagedTXDataSource ======= : 



======== method getNonManagedTXDataSource ======= : 



======== method isDontSetNonManagedTXConnectionAutoCommitFalse ======= : 



======== method setDontSetNonManagedTXConnectionAutoCommitFalse ======= : 



======== method isTxIsolationLevelReadCommitted ======= : 



======== method setTxIsolationLevelReadCommitted ======= : 



======== method initialize ======= : 



======== method shutdown ======= : 



======== method getNonManagedTXConnection ======= : 



======== method executeInLock ======= : 

 ====================================== 
** CLASS org.quartz.SimpleTrigger



======== method getRepeatCount ======= : 



======== method getRepeatInterval ======= : 



======== method getTimesTriggered ======= : 



======== method getTriggerBuilder ======= : 

 ====================================== 
** CLASS org.quartz.InterruptableJob



======== method interrupt ======= : 

 ====================================== 
** CLASS org.quartz.impl.StdScheduler



======== method <init> ======= : 



======== method getSchedulerName ======= : 



======== method getSchedulerInstanceId ======= : 



======== method getMetaData ======= : 



======== method getContext ======= : 



======== method start ======= : 



======== method startDelayed ======= : 



======== method standby ======= : 



======== method isStarted ======= : 



======== method isInStandbyMode ======= : 



======== method shutdown ======= : 



======== method shutdown ======= : 



======== method isShutdown ======= : 



======== method getCurrentlyExecutingJobs ======= : 



======== method clear ======= : 



======== method scheduleJob ======= : 



======== method scheduleJob ======= : 



======== method addJob ======= : 



======== method addJob ======= : 



======== method deleteJobs ======= : 



======== method scheduleJobs ======= : 



======== method scheduleJob ======= : 



======== method unscheduleJobs ======= : 



======== method deleteJob ======= : 



======== method unscheduleJob ======= : 



======== method rescheduleJob ======= : 



======== method triggerJob ======= : 



======== method triggerJob ======= : 



======== method pauseTrigger ======= : 



======== method pauseTriggers ======= : 



======== method pauseJob ======= : 



======== method getPausedTriggerGroups ======= : 



======== method pauseJobs ======= : 



======== method resumeTrigger ======= : 



======== method resumeTriggers ======= : 



======== method resumeJob ======= : 



======== method resumeJobs ======= : 



======== method pauseAll ======= : 



======== method resumeAll ======= : 



======== method getJobGroupNames ======= : 



======== method getTriggersOfJob ======= : 



======== method getJobKeys ======= : 



======== method getTriggerGroupNames ======= : 



======== method getTriggerKeys ======= : 



======== method getJobDetail ======= : 



======== method getTrigger ======= : 



======== method getTriggerState ======= : 



======== method resetTriggerFromErrorState ======= : 



======== method addCalendar ======= : 



======== method deleteCalendar ======= : 



======== method getCalendar ======= : 



======== method getCalendarNames ======= : 



======== method checkExists ======= : 



======== method checkExists ======= : 



======== method setJobFactory ======= : 



======== method getListenerManager ======= : 



======== method interrupt ======= : 



======== method interrupt ======= : 

 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntryIterator



======== method <init> ======= : 



======== method next ======= : 



======== method next ======= : 

 ====================================== 
** CLASS org.quartz.Qtz205SchedulerListenerTest$Qtz205Job



======== method <init> ======= : 



======== method execute ======= : 



======== method access$100 ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.simpl.SimpleInstanceIdGenerator



======== method <init> ======= : 



======== method generateInstanceId ======= : 

 ====================================== 
** CLASS org.quartz.SchedulerMetaData



======== method <init> ======= : 



======== method getSchedulerName ======= : 



======== method getSchedulerInstanceId ======= : 



======== method getSchedulerClass ======= : 



======== method getRunningSince ======= : 



======== method getNumberOfJobsExecuted ======= : 



======== method isSchedulerRemote ======= : 



======== method isStarted ======= : 



======== method isInStandbyMode ======= : 



======== method isShutdown ======= : 



======== method getJobStoreClass ======= : 



======== method isJobStoreSupportsPersistence ======= : 



======== method isJobStoreClustered ======= : 



======== method getThreadPoolClass ======= : 



======== method getThreadPoolSize ======= : 



======== method getVersion ======= : 



======== method toString ======= : 



======== method getSummary ======= : 

 ====================================== 
** CLASS org.quartz.FlakyJdbcSchedulerTest



======== method data ======= : 



======== method <init> ======= : 



======== method createScheduler ======= : 



======== method testTriggerFiring ======= : 



======== method createFailure ======= : 



======== method preCommitFailure ======= : 



======== method postCommitFailure ======= : 



======== method access$100 ======= : 



======== method access$200 ======= : 



======== method access$300 ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.NoSuchDelegateException



======== method <init> ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.core.ListenerManagerTest$TestTriggerListener



======== method <init> ======= : 



======== method getName ======= : 

 ====================================== 
** CLASS org.quartz.impl.DefaultThreadExecutor



======== method <init> ======= : 



======== method initialize ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$9



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest



======== method <init> ======= : 



======== method createSchedulerProperties ======= : 



======== method testJobClassNotFoundDoesntBlock ======= : 

Unit: $r20 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: specialinvoke $r25.<java.util.HashMap: void <init>()>()
Unit: specialinvoke $r18.<java.util.Date: void <init>(long)>($l1)
Unit: r0 := @this: org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest
Unit: r3 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r34, $r36)
Unit: $r15 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r5 = virtualinvoke $r24.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r9 = interfaceinvoke $r8.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: $r23 = new java.util.Date
Unit: $r24 = virtualinvoke $r22.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r23)
Unit: $r35 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState ERROR>
Unit: return
Unit: specialinvoke $r7.<java.util.concurrent.CyclicBarrier: void <init>(int)>(2)
Unit: interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r28)
Unit: $r22 = virtualinvoke $r21.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r3)
Unit: $r25 = new java.util.HashMap
Unit: r4 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r2)
Unit: specialinvoke $r23.<java.util.Date: void <init>(long)>(l0)
Unit: r6 = $r25
Unit: $r16 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("good")
Unit: $r12 = virtualinvoke $r11.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("good")
Unit: $r30 = r0.<org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest: org.quartz.Scheduler scheduler>
Unit: $r18 = new java.util.Date
Unit: $r21 = virtualinvoke $r20.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("bad")
Unit: interfaceinvoke $r30.<org.quartz.Scheduler: void scheduleJobs(java.util.Map,boolean)>(r6, 1)
Unit: $r26 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5)
Unit: $r8 = r0.<org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest: org.quartz.Scheduler scheduler>
Unit: $r33 = interfaceinvoke r5.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r32 = r0.<org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest: org.quartz.Scheduler scheduler>
Unit: $r19 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r18)
Unit: r1 = $r7
Unit: $r31 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
Unit: virtualinvoke $r9.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>("BARRIER", r1)
Unit: interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r26)
Unit: $r34 = interfaceinvoke $r32.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r33)
Unit: $r11 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/JobClassNotFoundExceptionErrorsTriggersTest$GoodJob;")
Unit: $r13 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/JobClassNotFoundExceptionErrorsTriggersTest$BadJob;")
Unit: $r14 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("bad")
Unit: $r28 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r4)
Unit: r2 = virtualinvoke $r12.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: virtualinvoke r1.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(20L, $r31)
Unit: $r36 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r35)
Unit: $l1 = l0 + 1L
Unit: $r7 = new java.util.concurrent.CyclicBarrier
Unit: l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$8



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$7



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.simpl.TriggerWrapperComparator



======== method <init> ======= : 



======== method compare ======= : 



======== method equals ======= : 



======== method hashCode ======= : 



======== method compare ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$6



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$5



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$4



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.core.QTZ212_SchedulerListener_Test$TestSchedulerListener



======== method <init> ======= : 



======== method schedulerStarted ======= : 



======== method schedulerStarting ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$3



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$2



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.simpl.JobWrapper



======== method <init> ======= : 



======== method equals ======= : 



======== method hashCode ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$1



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test



======== method <init> ======= : 



======== method initialize ======= : 

Unit: $z0 = interfaceinvoke $r94.<org.quartz.Scheduler: boolean checkExists(org.quartz.JobKey)>($r95)
Unit: specialinvoke $r10.<org.apache.derby.drda.NetworkServerControl: void <init>()>()
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.useProperties", "true")
Unit: $r71 = virtualinvoke $r70.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatForever()>()
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.class", "org.quartz.impl.jdbcjobstore.JobStoreTX")
Unit: specialinvoke $r17.<java.util.Properties: void <init>()>()
Unit: $r69 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: $r82[3] = $r86
Unit: $r9 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: $r12 = <java.lang.System: java.io.PrintStream out>
Unit: if i2 >= $i3 goto $r88 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Scheduler sched>
Unit: $r107 = virtualinvoke r109.<java.sql.SQLException: java.sql.SQLException getNextException()>()
Unit: interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>("------- Database tables created ---------------------")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("There should not be more than 1 trigger in ACQUIRED state in the DB.")
Unit: $r40 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: r6 = $r87
Unit: $r92 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.apache.derby.drda.NetworkServerControl derbyServer>
Unit: interfaceinvoke $r98.<org.quartz.Scheduler: java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)>($r99, r8)
Unit: goto [?= $r17 = new java.util.Properties]
Unit: $r82[1] = $r84
Unit: $r14 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: r112 = $r105
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.scheduler.skipUpdateCheck", "true")
Unit: $r74 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: throw $r101
Unit: $r85 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Trigger trigger2_1>
Unit: interfaceinvoke $r40.<org.slf4j.Logger: void info(java.lang.String)>("------- Initialization Complete -----------")
Unit: $i3 = lengthof r5
Unit: virtualinvoke $r102.<org.apache.derby.drda.NetworkServerControl: void ping()>()
Unit: return
Unit: r0 = $r37
Unit: $r68 = virtualinvoke $r67.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startNow()>()
Unit: interfaceinvoke $r96.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r7, r8)
Unit: virtualinvoke r112.<java.lang.Exception: void printStackTrace()>()
Unit: virtualinvoke $r107.<java.sql.SQLException: void printStackTrace()>()
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(9000L)
Unit: $r16 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Trigger trigger1_1> = $r57
Unit: $r82[2] = $r85
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(500L)
Unit: $r62 = virtualinvoke $r61.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInSeconds(int)>(3)
Unit: $r15 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: interfaceinvoke $r89.<org.slf4j.Logger: void info(java.lang.String)>("------- Scheduler Started -----------------")
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.dataSource.myDS.user", "quartz")
Unit: $r90 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: $r70 = virtualinvoke $r69.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInSeconds(int)>(3)
Unit: $r82[0] = $r83
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.dataSource.myDS.URL", $r32)
Unit: $r38 = interfaceinvoke r0.<org.quartz.SchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: r1 = virtualinvoke $r43.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: interfaceinvoke $r88.<org.quartz.Scheduler: void start()>()
Unit: $r53 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: $r61 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: goto [?= $i3 = lengthof r5]
Unit: $r81 = virtualinvoke $r80.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r91 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.apache.derby.drda.NetworkServerControl derbyServer>
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.driverDelegateClass", "org.quartz.impl.jdbcjobstore.StdJDBCDelegate")
Unit: $r78 = virtualinvoke $r77.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInSeconds(int)>(3)
Unit: interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>("------- Database started ---------------------")
Unit: $r42 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: r2 = virtualinvoke $r45.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r43 = virtualinvoke $r42.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("job1", "group1")
Unit: $r87[1] = r3
Unit: r111 = $r104
Unit: $r106 := @caughtexception
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.isClustered", "false")
Unit: $r51 = virtualinvoke $r50.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("job1", "group1")
Unit: $r99 = interfaceinvoke r8.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r58 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r109 = $r106
Unit: if i1 != 5 goto $r14 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: void createDatabase()>()
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.dataSource.myDS.maxConnections", "5")
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.threadPool.threadPriority", "5")
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.dataSource.myDS.driver", "org.apache.derby.jdbc.ClientDriver")
Unit: r4 = virtualinvoke $r49.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r55 = virtualinvoke $r54.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatForever()>()
Unit: $r88 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Scheduler sched>
Unit: $r98 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Scheduler sched>
Unit: $r95 = interfaceinvoke r7.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: goto [?= i2 = i2 + 1]
Unit: $r41 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: $r46 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r59 = virtualinvoke $r58.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("job2", "group1")
Unit: $r13 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.apache.derby.drda.NetworkServerControl derbyServer>
Unit: specialinvoke $r37.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r110)
Unit: $r11 = new java.io.PrintWriter
Unit: $i0 = staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: int triggersInAcquiredState()>()
Unit: r110 = $r17
Unit: interfaceinvoke $r93.<org.slf4j.Logger: void info(java.lang.String)>("------- Database back online ! -----------------")
Unit: $r17 = new java.util.Properties
Unit: $r82 = newarray (org.quartz.Trigger)[4]
Unit: $r87[0] = r1
Unit: $r94 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Scheduler sched>
Unit: $r66 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r64 = virtualinvoke $r60.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r63)
Unit: $r73 = virtualinvoke $r72.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.misfireThreshold", "10000")
Unit: r7 = r6[i2]
Unit: $r84 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Trigger trigger1_2>
Unit: interfaceinvoke $r90.<org.slf4j.Logger: void info(java.lang.String)>("------- Shutting down database ! -----------------")
Unit: $r105 := @caughtexception
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.dataSource.myDS.password", "quartz")
Unit: interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String)>("------- Initializing ----------------------")
Unit: $r77 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: goto [?= return]
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.scheduler.instanceName", "TestScheduler")
Unit: interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("------- Starting Database ---------------------")
Unit: $r83 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Trigger trigger1_1>
Unit: $r37 = new org.quartz.impl.StdSchedulerFactory
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.threadPool.threadCount", "12")
Unit: i1 = 0
Unit: $r54 = virtualinvoke $r53.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInSeconds(int)>(3)
Unit: $r52 = virtualinvoke $r51.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startNow()>()
Unit: r108 = $r103
Unit: $r87[3] = r4
Unit: $r93 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: i1 = i1 + 1
Unit: $r45 = virtualinvoke $r44.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("job2", "group1")
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.tablePrefix", "QRTZ_")
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(10000L)
Unit: $r86 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Trigger trigger2_2>
Unit: <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Trigger trigger2_1> = $r65
Unit: $r79 = virtualinvoke $r78.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatForever()>()
Unit: $r65 = virtualinvoke $r64.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r3 = virtualinvoke $r47.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String)>("------- Creating Database tables ---------------------")
Unit: <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Trigger trigger1_2> = $r73
Unit: if $i0 <= 1 goto $r90 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: $r49 = virtualinvoke $r48.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("job2", "group2")
Unit: $r102 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.apache.derby.drda.NetworkServerControl derbyServer>
Unit: $r63 = virtualinvoke $r62.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatForever()>()
Unit: $r75 = virtualinvoke $r74.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("job2", "group2")
Unit: $r87[2] = r2
Unit: $r87 = newarray (org.quartz.JobDetail)[4]
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(10000L)
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool")
Unit: $r76 = virtualinvoke $r75.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startNow()>()
Unit: goto [?= (branch)]
Unit: $r80 = virtualinvoke $r76.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r79)
Unit: if $z0 == 0 goto $r96 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Scheduler sched>
Unit: virtualinvoke r109.<java.sql.SQLException: void printStackTrace()>()
Unit: $r39 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: virtualinvoke $r91.<org.apache.derby.drda.NetworkServerControl: void shutdown()>()
Unit: <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.apache.derby.drda.NetworkServerControl derbyServer> = $r10
Unit: $r67 = virtualinvoke $r66.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("job1", "group2")
Unit: i2 = 0
Unit: $r57 = virtualinvoke $r56.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r50 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.dataSource", "myDS")
Unit: $r47 = virtualinvoke $r46.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("job1", "group2")
Unit: goto [?= $i0 = staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: int triggersInAcquiredState()>()]
Unit: r8 = r5[i2]
Unit: $r101 = new java.lang.Exception
Unit: $r10 = new org.apache.derby.drda.NetworkServerControl
Unit: $r103 := @caughtexception
Unit: <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Scheduler sched> = $r38
Unit: $r72 = virtualinvoke $r68.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r71)
Unit: $r48 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: virtualinvoke $r92.<org.apache.derby.drda.NetworkServerControl: void start(java.io.PrintWriter)>(null)
Unit: $r56 = virtualinvoke $r52.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r55)
Unit: $r60 = virtualinvoke $r59.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startNow()>()
Unit: $r104 := @caughtexception
Unit: $r96 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Scheduler sched>
Unit: interfaceinvoke $r41.<org.slf4j.Logger: void info(java.lang.String)>("------- Scheduling Job  -------------------")
Unit: $r32 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.lang.String DATABASE_CONNECTION_PREFIX>
Unit: specialinvoke $r101.<java.lang.Exception: void <init>(java.lang.String)>("Failed to start Derby!")
Unit: r5 = $r82
Unit: $r44 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Trigger trigger2_2> = $r81
Unit: virtualinvoke $r13.<org.apache.derby.drda.NetworkServerControl: void start(java.io.PrintWriter)>($r11)
Unit: i2 = i2 + 1
Unit: goto [?= (branch)]
Unit: $r89 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: specialinvoke $r11.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r12)
Unit: if i1 >= 5 goto (branch)
Unit: virtualinvoke r110.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.scheduler.instanceId", "AUTO")


======== method checkAll4TriggersStillRunningTest ======= : 

Unit: specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
Unit: $z0 = 1
Unit: return
Unit: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There should not be more than 1 trigger in ACQUIRED state in the DB, but found ")
Unit: r0 := @this: org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test
Unit: $z0 = 0
Unit: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
Unit: i0 = staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: int triggersInAcquiredState()>()
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r4, $z0)
Unit: $r1 = new java.lang.StringBuilder
Unit: if i0 <= 1 goto $z0 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r4, $z0)]


======== method shutdownDb ======= : 

Unit: goto [?= $r6 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.apache.derby.drda.NetworkServerControl derbyServer>]
Unit: staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: void destroyDatabase()>()
Unit: throw $r10
Unit: $r3 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: $r7 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: $r4 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: virtualinvoke $r6.<org.apache.derby.drda.NetworkServerControl: void shutdown()>()
Unit: virtualinvoke r0.<java.sql.SQLException: void printStackTrace()>()
Unit: virtualinvoke $r9.<java.sql.SQLException: void printStackTrace()>()
Unit: interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>("------- Database shutdown ---------------------")
Unit: $r1 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("------- Destroying Database ---------------------")
Unit: $r2 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.quartz.Scheduler sched>
Unit: $r9 = virtualinvoke r0.<java.sql.SQLException: java.sql.SQLException getNextException()>()
Unit: return
Unit: $r5 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.slf4j.Logger LOG>
Unit: r0 = $r8
Unit: $r6 = <org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test: org.apache.derby.drda.NetworkServerControl derbyServer>
Unit: interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("------- Database destroyed ---------------------")
Unit: interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("------- Shutting Down Scheduler---------------------")
Unit: $r10 = new java.lang.AssertionError
Unit: interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("------- Shutdown Complete -----------------")
Unit: specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>(r0)
Unit: interfaceinvoke $r2.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: $r8 := @caughtexception


======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.spi.MutableTrigger



======== method setKey ======= : 



======== method setJobKey ======= : 



======== method setDescription ======= : 



======== method setCalendarName ======= : 



======== method setJobDataMap ======= : 



======== method setPriority ======= : 



======== method setStartTime ======= : 



======== method setEndTime ======= : 



======== method setMisfireInstruction ======= : 



======== method clone ======= : 

 ====================================== 
** CLASS org.quartz.utils.ClassUtilsTest$1

 ====================================== 
** CLASS org.quartz.core.RecoverJobsTest



======== method <init> ======= : 



======== method testRecoveringRepeatJobWhichIsFiredAndMisfiredAtTheSameTime ======= : 

Unit: r1 = "recoverJobsTest"
Unit: r6 = interfaceinvoke r30.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("SELECT count(*) from QRTZ_FIRED_TRIGGERS")
Unit: <org.quartz.core.RecoverJobsTest$RecoverJobsTestJob: boolean runForever> = 1
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void start()>()
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(2000L)
Unit: interfaceinvoke r33.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: $r26 = interfaceinvoke r33.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: specialinvoke $r27.<org.quartz.core.RecoverJobsTest$1: void <init>(org.quartz.core.RecoverJobsTest,java.util.concurrent.atomic.AtomicBoolean)>(r0, r32)
Unit: specialinvoke $r10.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(1, 5)
Unit: return
Unit: specialinvoke $r9.<org.quartz.impl.jdbcjobstore.JobStoreTX: void <init>()>()
Unit: r33 = virtualinvoke r3.<org.quartz.impl.DirectSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: throw r8
Unit: $r11 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/core/RecoverJobsTest$RecoverJobsTestJob;")
Unit: r4 = virtualinvoke r3.<org.quartz.impl.DirectSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $z2 = virtualinvoke r32.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceId(java.lang.String)>("SINGLE_NODE_TEST")
Unit: specialinvoke $r25.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(1, 5)
Unit: interfaceinvoke $r26.<org.quartz.ListenerManager: void addJobListener(org.quartz.JobListener)>($r27)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>(r1)
Unit: r0 := @this: org.quartz.core.RecoverJobsTest
Unit: interfaceinvoke r33.<org.quartz.Scheduler: void start()>()
Unit: throw r7
Unit: $r12 = virtualinvoke $r11.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: r30 = interfaceinvoke r5.<java.sql.Connection: java.sql.Statement createStatement()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("BLOCKED", $r23)
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceName(java.lang.String)>(r1)
Unit: goto [?= return]
Unit: $r28 := @caughtexception
Unit: $r27 = new org.quartz.core.RecoverJobsTest$1
Unit: $r16 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: $r14 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r23 = interfaceinvoke r31.<java.sql.ResultSet: java.lang.String getString(int)>(1)
Unit: r7 = $r28
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(2000L)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l0)
Unit: interfaceinvoke r30.<java.sql.Statement: void close()>()
Unit: $r18 = virtualinvoke $r17.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatForever()>()
Unit: virtualinvoke r3.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>($r25, r2)
Unit: interfaceinvoke r5.<java.sql.Connection: void close()>()
Unit: r31 = interfaceinvoke r30.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("SELECT TRIGGER_STATE from QRTZ_TRIGGERS")
Unit: specialinvoke $r24.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0)
Unit: goto [?= <org.quartz.core.RecoverJobsTest$RecoverJobsTestJob: boolean runForever> = 0]
Unit: <org.quartz.core.RecoverJobsTest$RecoverJobsTestJob: boolean runForever> = 0
Unit: $r19 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r18)
Unit: $r24 = new java.util.concurrent.atomic.AtomicBoolean
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(0)
Unit: $r25 = new org.quartz.simpl.SimpleThreadPool
Unit: r3 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: interfaceinvoke r5.<java.sql.Connection: void close()>()
Unit: r2 = $r9
Unit: r8 = $r29
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>(r1)
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setMisfireThreshold(long)>(1000L)
Unit: interfaceinvoke r4.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>($r13, $r20)
Unit: interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()
Unit: $r17 = virtualinvoke $r16.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInMilliseconds(long)>(1000L)
Unit: $r9 = new org.quartz.impl.jdbcjobstore.JobStoreTX
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void createDatabase(java.lang.String)>(r1)
Unit: $r10 = new org.quartz.simpl.SimpleThreadPool
Unit: $r13 = virtualinvoke $r12.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r15 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: virtualinvoke r3.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>($r10, r2)
Unit: $l0 = interfaceinvoke r6.<java.sql.ResultSet: long getLong(int)>(1)
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setDataSource(java.lang.String)>(r1)
Unit: interfaceinvoke r31.<java.sql.ResultSet: boolean next()>()
Unit: r32 = $r24
Unit: r5 = virtualinvoke $r22.<org.quartz.utils.DBConnectionManager: java.sql.Connection getConnection(java.lang.String)>(r1)
Unit: $r29 := @caughtexception
Unit: $r20 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r22 = staticinvoke <org.quartz.utils.DBConnectionManager: org.quartz.utils.DBConnectionManager getInstance()>()
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(4000L)
 ====================================== 
** CLASS org.quartz.integrations.tests.JdbcQuartzDerbyUtilities$DerbyConnectionProvider



======== method <init> ======= : 



======== method getConnection ======= : 



======== method shutdown ======= : 



======== method initialize ======= : 

 ====================================== 
** CLASS org.quartz.simpl.HostnameInstanceIdGenerator



======== method <init> ======= : 



======== method generateInstanceId ======= : 

 ====================================== 
** CLASS org.quartz.utils.JNDIConnectionProvider



======== method <init> ======= : 



======== method <init> ======= : 



======== method getLog ======= : 



======== method init ======= : 



======== method getConnection ======= : 



======== method isAlwaysLookup ======= : 



======== method setAlwaysLookup ======= : 



======== method shutdown ======= : 



======== method initialize ======= : 

 ====================================== 
** CLASS org.quartz.DateBuilder$1



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore



======== method <init> ======= : 



======== method executeSQL ======= : 



======== method getUpdateLockRowSQL ======= : 



======== method setUpdateLockRowSQL ======= : 



======== method lockViaUpdate ======= : 



======== method lockViaInsert ======= : 

 ====================================== 
** CLASS org.quartz.core.jmx.TriggerSupport



======== method <init> ======= : 



======== method getItemNames ======= : 



======== method getItemDescriptions ======= : 



======== method getItemTypes ======= : 



======== method getIndexNames ======= : 



======== method toCompositeData ======= : 



======== method toTabularData ======= : 



======== method toCompositeList ======= : 



======== method initializeTrigger ======= : 



======== method initializeTrigger ======= : 



======== method newTrigger ======= : 



======== method newTrigger ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.management.ManagementRESTServiceConfiguration



======== method <init> ======= : 



======== method isEnabled ======= : 



======== method setEnabled ======= : 



======== method getSecurityServiceLocation ======= : 



======== method setSecurityServiceLocation ======= : 



======== method getSecurityServiceTimeout ======= : 



======== method setSecurityServiceTimeout ======= : 



======== method getBind ======= : 



======== method getHost ======= : 



======== method getPort ======= : 



======== method setBind ======= : 

 ====================================== 
** CLASS org.quartz.core.QuartzSchedulerMBeanImpl$Emitter



======== method <init> ======= : 



======== method getNotificationInfo ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.impl.SchedulerDetailsSetter



======== method <init> ======= : 



======== method setDetails ======= : 



======== method set ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.CronExpressionTest



======== method <init> ======= : 



======== method getTargetObject ======= : 



======== method getVersions ======= : 



======== method verifyMatch ======= : 



======== method testIsSatisfiedBy ======= : 

Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 10, 15, 0)
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 10, 16, 0)
Unit: $r2 = new org.quartz.CronExpression
Unit: $r6 = virtualinvoke r9.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r3 = virtualinvoke r7.<java.util.Calendar: java.util.Date getTime()>()
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 15 10 * * ? 2005")
Unit: $z2 = virtualinvoke r1.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r5)
Unit: r9 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: return
Unit: r8 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r4 = virtualinvoke r7.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r9.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 10, 14, 0)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertFalse(boolean)>($z3)
Unit: r7 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $z0 = virtualinvoke r1.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r3)
Unit: $z1 = virtualinvoke r1.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r4)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(boolean)>($z0)
Unit: $z3 = virtualinvoke r1.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r6)
Unit: r1 = $r2
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(1, 2006)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertFalse(boolean)>($z1)
Unit: $r5 = virtualinvoke r8.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertFalse(boolean)>($z2)


======== method testLastDayOffset ======= : 

Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 9, 26, 10, 15, 0)
Unit: $z2 = virtualinvoke r12.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r6)
Unit: $z1 = virtualinvoke r11.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r4)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 9, 28, 10, 15, 0)
Unit: $r4 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: specialinvoke $r5.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 15 10 L-5W * ? 2010")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertFalse(boolean)>($z1)
Unit: return
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(boolean)>($z0)
Unit: $r2 = new org.quartz.CronExpression
Unit: r14 = $r9
Unit: specialinvoke $r7.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 15 10 L-1 * ? 2010")
Unit: $r5 = new org.quartz.CronExpression
Unit: r13 = $r7
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 15 10 L-2 * ? 2010")
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 9, 29, 10, 15, 0)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(boolean)>($z3)
Unit: $r9 = new org.quartz.CronExpression
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: specialinvoke $r9.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 15 10 L-1W * ? 2010")
Unit: $z4 = virtualinvoke r14.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r10)
Unit: r12 = $r5
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $z0 = virtualinvoke r11.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r3)
Unit: $r8 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: $z3 = virtualinvoke r13.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r8)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 9, 30, 10, 15, 0)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(boolean)>($z4)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 9, 29, 10, 15, 0)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(boolean)>($z2)
Unit: $r10 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r11 = $r2
Unit: $r6 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r7 = new org.quartz.CronExpression
Unit: $r3 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()


======== method testQuartz571 ======= : 

Unit: $r9 = new java.io.ObjectOutputStream
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: specialinvoke $r9.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r2)
Unit: r4 = $r10
Unit: $r16 = new java.util.Date
Unit: specialinvoke $r12.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r4)
Unit: $r13 = virtualinvoke r5.<java.io.ObjectInputStream: java.lang.Object readObject()>()
Unit: r5 = $r12
Unit: $r14 = virtualinvoke r6.<org.quartz.CronExpression: java.lang.String getCronExpression()>()
Unit: $r8 = new java.io.ByteArrayOutputStream
Unit: virtualinvoke r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1)
Unit: $r15 = virtualinvoke r1.<org.quartz.CronExpression: java.lang.String getCronExpression()>()
Unit: specialinvoke $r16.<java.util.Date: void <init>()>()
Unit: r1 = $r7
Unit: r6 = (org.quartz.CronExpression) $r13
Unit: $r7 = new org.quartz.CronExpression
Unit: $r10 = new java.io.ByteArrayInputStream
Unit: specialinvoke $r7.<org.quartz.CronExpression: void <init>(java.lang.String)>("19 15 10 4 Apr ? ")
Unit: return
Unit: r2 = $r8
Unit: r3 = $r9
Unit: virtualinvoke r6.<org.quartz.CronExpression: java.util.Date getNextValidTimeAfter(java.util.Date)>($r16)
Unit: $r12 = new java.io.ObjectInputStream
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r14, $r15)
Unit: $r11 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
Unit: specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>()
Unit: specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11)


======== method testQtz259 ======= : 

Unit: r3 = interfaceinvoke r2.<org.quartz.Trigger: java.util.Date getFireTimeAfter(java.util.Date)>(r15)
Unit: $r7 = new java.util.Date
Unit: r15 = r3
Unit: r2 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: $r9 = <java.lang.System: java.io.PrintStream out>
Unit: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", previousFireTime: ")
Unit: $z0 = virtualinvoke r15.<java.util.Date: boolean equals(java.lang.Object)>(r3)
Unit: specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Unit: i0 = 0
Unit: r15 = interfaceinvoke r2.<org.quartz.Trigger: java.util.Date getFireTimeAfter(java.util.Date)>($r7)
Unit: $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fireTime: ")
Unit: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>(r1)
Unit: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15)
Unit: if i0 >= 26 goto return
Unit: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Unit: r1 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("0 0 0 L-2 * ? *")
Unit: $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r14)
Unit: i0 = i0 + 1
Unit: return
Unit: $r8 = new java.lang.StringBuilder
Unit: specialinvoke $r7.<java.util.Date: void <init>()>()
Unit: goto [?= i0 = i0 + 1]
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertFalse(java.lang.String,boolean)>("Next fire time is the same as previous fire time!", $z0)


======== method testQtz259LW ======= : 

Unit: $z0 = virtualinvoke r15.<java.util.Date: boolean equals(java.lang.Object)>(r3)
Unit: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15)
Unit: goto [?= i0 = i0 + 1]
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Unit: $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r15 = interfaceinvoke r2.<org.quartz.Trigger: java.util.Date getFireTimeAfter(java.util.Date)>($r7)
Unit: r1 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("0 0 0 LW * ? *")
Unit: i0 = 0
Unit: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", previousFireTime: ")
Unit: r15 = r3
Unit: i0 = i0 + 1
Unit: $r9 = <java.lang.System: java.io.PrintStream out>
Unit: $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fireTime: ")
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>(r1)
Unit: r2 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r8 = new java.lang.StringBuilder
Unit: return
Unit: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r14)
Unit: specialinvoke $r7.<java.util.Date: void <init>()>()
Unit: $r7 = new java.util.Date
Unit: r3 = interfaceinvoke r2.<org.quartz.Trigger: java.util.Date getFireTimeAfter(java.util.Date)>(r15)
Unit: if i0 >= 26 goto return
Unit: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertFalse(java.lang.String,boolean)>("Next fire time is the same as previous fire time!", $z0)
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")


======== method testQuartz574 ======= : 

Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: $r2 = new org.quartz.CronExpression
Unit: $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("Invalid Month value:")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for non-existent month")
Unit: return
Unit: $r6 = virtualinvoke r7.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r3 := @caughtexception
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: $r5 := @caughtexception
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("* * * * Jan-Foo ? ")
Unit: $r4 = virtualinvoke r8.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z1)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z0)
Unit: r8 = $r3
Unit: $r1 = new org.quartz.CronExpression
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("* * * * Foo ? ")
Unit: $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("Invalid Month value:")
Unit: r7 = $r5
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for non-existent month")
Unit: goto [?= return]


======== method testQuartz621 ======= : 

Unit: $r4 := @caughtexception
Unit: $r7 = virtualinvoke r12.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z0)
Unit: r12 = $r6
Unit: $z1 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("Support for specifying both a day-of-week AND a day-of-month parameter is not implemented.")
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 * 4 * *")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for wildcard day-of-month and day-of-week")
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 * * * 4")
Unit: $r1 = new org.quartz.CronExpression
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("Support for specifying both a day-of-week AND a day-of-month parameter is not implemented.")
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 * * * *")
Unit: $r8 := @caughtexception
Unit: $r3 = new org.quartz.CronExpression
Unit: $z2 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("Support for specifying both a day-of-week AND a day-of-month parameter is not implemented.")
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: return
Unit: goto [?= return]
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z1)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z2)
Unit: $r6 := @caughtexception
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: r11 = $r8
Unit: r10 = $r4
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for wildcard day-of-month and specified day-of-week")
Unit: $r2 = new org.quartz.CronExpression
Unit: $r5 = virtualinvoke r10.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for specified day-of-month and wildcard day-of-week")
Unit: $r9 = virtualinvoke r11.<java.text.ParseException: java.lang.String getMessage()>()


======== method testQuartz640 ======= : 

Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 43 9 1,5,29,L * ?")
Unit: $r2 = new org.quartz.CronExpression
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 43 9 ? * SAT,SUN,L")
Unit: $r3 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z1)
Unit: $r1 = new org.quartz.CronExpression
Unit: r14 = $r6
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 43 9 ? * 5L")
Unit: $z1 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("Support for specifying \'L\' and \'LW\' with other days of the month is not implemented")
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for L combined with other days of the week")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for L combined with other days of the week")
Unit: goto [?= return]
Unit: $r6 := @caughtexception
Unit: $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("Support for specifying \'L\' with other days of the week is not implemented")
Unit: r13 = $r10
Unit: r12 = $r8
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Unexpected ParseException thrown for supported \'5L\' expression.")
Unit: $r11 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 43 9 ? * 6,7,L")
Unit: $r9 = virtualinvoke r12.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z2)
Unit: $r8 := @caughtexception
Unit: $r4 = new org.quartz.CronExpression
Unit: $r5 := @caughtexception
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for L combined with other days of the month")
Unit: r15 = $r5
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: $r7 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r10 := @caughtexception
Unit: $z2 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("Support for specifying \'L\' with other days of the week is not implemented")
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: return
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z0)


======== method testQtz96 ======= : 

Unit: $r3 := @caughtexception
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0/5 * * 32W 1 ?")
Unit: r1 = $r3
Unit: $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("The \'W\' option does not make sense with values larger than")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z0)
Unit: return
Unit: $r4 = virtualinvoke r1.<java.text.ParseException: java.lang.String getMessage()>()
Unit: goto [?= return]
Unit: $r2 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for W with value larger than 31")
Unit: r0 := @this: org.quartz.CronExpressionTest


======== method testQtz395_CopyConstructorMustPreserveTimeZone ======= : 

Unit: r2 = $r5
Unit: $r6 = virtualinvoke r2.<org.quartz.CronExpression: java.util.TimeZone getTimeZone()>()
Unit: $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>()
Unit: specialinvoke $r5.<org.quartz.CronExpression: void <init>(org.quartz.CronExpression)>(r1)
Unit: r7 = <org.quartz.CronExpressionTest: java.util.TimeZone EST_TIME_ZONE>
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.Object,java.lang.Object)>(r7, $r6)
Unit: virtualinvoke r1.<org.quartz.CronExpression: void setTimeZone(java.util.TimeZone)>(r7)
Unit: r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("Europe/Brussels")
Unit: if $z0 == 0 goto $r4 = new org.quartz.CronExpression
Unit: return
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 15 10 * * ? 2005")
Unit: r1 = $r4
Unit: $z0 = virtualinvoke r7.<java.lang.Object: boolean equals(java.lang.Object)>($r3)
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: $r5 = new org.quartz.CronExpression
Unit: $r4 = new org.quartz.CronExpression


======== method testSecRangeIntervalAfterSlash ======= : 

Unit: $r4 = new org.quartz.CronExpression
Unit: $r1 = new org.quartz.CronExpression
Unit: $r9 := @caughtexception
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("/120 0 8-18 ? * 2-6")
Unit: $r8 = virtualinvoke r16.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/_blank\'")
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("/ 0 8-18 ? * 2-6")
Unit: r15 = $r9
Unit: $r10 = virtualinvoke r15.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r10, "\'/\' must be followed by an integer.")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'0/_blank\'")
Unit: return
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: r14 = $r5
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: goto [?= return]
Unit: $r7 := @caughtexception
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in in \'0/xxx\' form")
Unit: $r5 := @caughtexception
Unit: $r3 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r8, "\'/\' must be followed by an integer.")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/xxx\' form")
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: r16 = $r7
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0/ 0 8-18 ? * 2-6")
Unit: $r2 = new org.quartz.CronExpression
Unit: $r6 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r12, "Increment > 60 : 120")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r6, "Increment > 60 : 120")
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0/120 0 8-18 ? * 2-6")
Unit: $r11 := @caughtexception
Unit: r13 = $r11
Unit: $r12 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()


======== method testMinRangeIntervalAfterSlash ======= : 

Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 /120 8-18 ? * 2-6")
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: $r7 := @caughtexception
Unit: r15 = $r11
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0/ 8-18 ? * 2-6")
Unit: $r12 = virtualinvoke r15.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r8, "Increment > 60 : 120")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/_blank\'")
Unit: $r11 := @caughtexception
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 / 8-18 ? * 2-6")
Unit: $r5 := @caughtexception
Unit: return
Unit: $r1 = new org.quartz.CronExpression
Unit: r13 = $r7
Unit: $r4 = new org.quartz.CronExpression
Unit: r16 = $r9
Unit: $r10 = virtualinvoke r16.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r2 = new org.quartz.CronExpression
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/xxx\' form")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'0/_blank\'")
Unit: $r9 := @caughtexception
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: r14 = $r5
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r10, "\'/\' must be followed by an integer.")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in in \'0/xxx\' form")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r12, "\'/\' must be followed by an integer.")
Unit: $r8 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r3 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r6, "Increment > 60 : 120")
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0/120 8-18 ? * 2-6")
Unit: goto [?= return]
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: $r6 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()


======== method testHourRangeIntervalAfterSlash ======= : 

Unit: r13 = $r5
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: $r6 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: r16 = $r9
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r6, "Increment > 24 : 120")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r12, "Increment > 24 : 120")
Unit: $r7 := @caughtexception
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 / ? * 2-6")
Unit: r15 = $r7
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0/ ? * 2-6")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'0/_blank\'")
Unit: $r5 := @caughtexception
Unit: $r4 = new org.quartz.CronExpression
Unit: $r9 := @caughtexception
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: r14 = $r11
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0/120 ? * 2-6")
Unit: $r3 = new org.quartz.CronExpression
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 /120 ? * 2-6")
Unit: $r12 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r11 := @caughtexception
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/_blank\'")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r10, "\'/\' must be followed by an integer.")
Unit: return
Unit: $r2 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/xxx\' form")
Unit: $r8 = virtualinvoke r15.<java.text.ParseException: java.lang.String getMessage()>()
Unit: goto [?= return]
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r8, "\'/\' must be followed by an integer.")
Unit: $r10 = virtualinvoke r16.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r1 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in in \'0/xxx\' form")


======== method testDayOfMonthRangeIntervalAfterSlash ======= : 

Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r12, "\'/\' must be followed by an integer.")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/_blank\'")
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 /120 * 2-6")
Unit: $r11 := @caughtexception
Unit: $r2 = new org.quartz.CronExpression
Unit: r14 = $r7
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 / * 2-6")
Unit: $r5 := @caughtexception
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in in \'0/xxx\' form")
Unit: return
Unit: $r9 := @caughtexception
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r10, "Increment > 31 : 120")
Unit: goto [?= return]
Unit: $r6 = virtualinvoke r15.<java.text.ParseException: java.lang.String getMessage()>()
Unit: r13 = $r9
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'0/_blank\'")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r6, "\'/\' must be followed by an integer.")
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: r15 = $r5
Unit: $r7 := @caughtexception
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/xxx\' form")
Unit: $r4 = new org.quartz.CronExpression
Unit: $r12 = virtualinvoke r16.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r8 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: r16 = $r11
Unit: $r10 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 0/120 * 2-6")
Unit: $r1 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r8, "Increment > 31 : 120")
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 0/ * 2-6")
Unit: $r3 = new org.quartz.CronExpression
Unit: goto [?= $r3 = new org.quartz.CronExpression]


======== method testMonthRangeIntervalAfterSlash ======= : 

Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r12, "Increment > 12 : 120")
Unit: $r1 = new org.quartz.CronExpression
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? 0/120 2-6")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r6, "\'/\' must be followed by an integer.")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r10, "Increment > 12 : 120")
Unit: r13 = $r11
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: $r10 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r4 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r8, "\'/\' must be followed by an integer.")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/xxx\' form")
Unit: $r3 = new org.quartz.CronExpression
Unit: r15 = $r5
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? / 2-6")
Unit: $r8 = virtualinvoke r16.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r6 = virtualinvoke r15.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r5 := @caughtexception
Unit: goto [?= return]
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in in \'0/xxx\' form")
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? 0/ 2-6")
Unit: $r12 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r11 := @caughtexception
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? /120 2-6")
Unit: $r9 := @caughtexception
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: r14 = $r9
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: $r7 := @caughtexception
Unit: $r2 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/_blank\'")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'0/_blank\'")
Unit: return
Unit: r16 = $r7


======== method testDayOfWeekRangeIntervalAfterSlash ======= : 

Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r10, "Increment > 7 : 120")
Unit: r14 = $r11
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? * 0/")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r12, "Increment > 7 : 120")
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/xxx\' form")
Unit: $r12 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r8, "\'/\' must be followed by an integer.")
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: return
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? * /120")
Unit: r13 = $r9
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in in \'0/xxx\' form")
Unit: $r7 := @caughtexception
Unit: $r8 = virtualinvoke r15.<java.text.ParseException: java.lang.String getMessage()>()
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? * 0/120")
Unit: $r11 := @caughtexception
Unit: $r10 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: r16 = $r5
Unit: $r4 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'0/_blank\'")
Unit: $r9 := @caughtexception
Unit: $r3 = new org.quartz.CronExpression
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? * /")
Unit: r15 = $r7
Unit: $r2 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r6, "\'/\' must be followed by an integer.")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/_blank\'")
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: $r1 = new org.quartz.CronExpression
Unit: $r5 := @caughtexception
Unit: $r6 = virtualinvoke r16.<java.text.ParseException: java.lang.String getMessage()>()
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: goto [?= return]


======== method main ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.InterruptableJobTest$TestInterruptableJob



======== method <init> ======= : 



======== method execute ======= : 



======== method interrupt ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.triggers.Driver



======== method <init> ======= : 



======== method runall ======= : 

 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledRateCounterImpl



======== method <init> ======= : 



======== method setValue ======= : 



======== method increment ======= : 



======== method decrement ======= : 



======== method setDenominatorValue ======= : 



======== method setNumeratorValue ======= : 



======== method getValue ======= : 



======== method getAndReset ======= : 



======== method getAndSet ======= : 



======== method setValue ======= : 



======== method decrement ======= : 



======== method decrement ======= : 



======== method getMaxValue ======= : 



======== method getMinValue ======= : 



======== method increment ======= : 



======== method increment ======= : 

 ====================================== 
** CLASS org.quartz.impl.StdJobRunShellFactory



======== method <init> ======= : 



======== method initialize ======= : 



======== method createJobRunShell ======= : 

 ====================================== 
** CLASS org.quartz.impl.calendar.Driver



======== method <init> ======= : 



======== method runall ======= : 

 ====================================== 
** CLASS org.quartz.Matcher



======== method isMatch ======= : 



======== method hashCode ======= : 



======== method equals ======= : 

 ====================================== 
** CLASS org.quartz.StatefulJob

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate



======== method <init> ======= : 



======== method canHandleTriggerType ======= : 



======== method getHandledTriggerTypeDiscriminator ======= : 



======== method getTriggerProperties ======= : 



======== method getTriggerPropertyBundle ======= : 

 ====================================== 
** CLASS org.quartz.Trigger$TriggerState



======== method values ======= : 



======== method valueOf ======= : 



======== method <init> ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest



======== method <init> ======= : 



======== method createScheduler ======= : 



======== method testBasicStorageFunctions ======= : 



======== method testDurableStorageFunctions ======= : 



======== method testShutdownWithSleepReturnsAfterAllThreadsAreStopped ======= : 



======== method testAbilityToFireImmediatelyWhenStartedBefore ======= : 



======== method testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob ======= : 



======== method testAbilityToFireImmediatelyWhenStartedAfter ======= : 



======== method testScheduleMultipleTriggersForAJob ======= : 



======== method testShutdownWithoutWaitIsUnclean ======= : 



======== method testShutdownWithWaitIsClean ======= : 

 ====================================== 
** CLASS org.quartz.Calendar



======== method setBaseCalendar ======= : 



======== method getBaseCalendar ======= : 



======== method isTimeIncluded ======= : 



======== method getNextIncludedTime ======= : 



======== method getDescription ======= : 



======== method setDescription ======= : 



======== method clone ======= : 

 ====================================== 
** CLASS org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler



======== method <init> ======= : 



======== method invoke ======= : 

 ====================================== 
** CLASS org.quartz.core.Driver



======== method <init> ======= : 



======== method runall ======= : 

 ====================================== 
** CLASS org.quartz.JobKey



======== method <init> ======= : 



======== method <init> ======= : 



======== method jobKey ======= : 



======== method jobKey ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.Util



======== method <init> ======= : 



======== method rtp ======= : 



======== method getJobNameKey ======= : 



======== method getTriggerNameKey ======= : 



======== method closeResultSet ======= : 



======== method closeStatement ======= : 



======== method setBeanProps ======= : 



======== method getSetMethod ======= : 

 ====================================== 
** CLASS org.quartz.FlakyJdbcSchedulerTest$1

 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledRateCounterConfig



======== method <init> ======= : 



======== method <init> ======= : 



======== method createCounter ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate



======== method <init> ======= : 



======== method canHandleTriggerType ======= : 



======== method getHandledTriggerTypeDiscriminator ======= : 



======== method getTriggerProperties ======= : 



======== method join ======= : 



======== method getTriggerPropertyBundle ======= : 

 ====================================== 
** CLASS org.quartz.DisallowConcurrentExecutionJobTest



======== method <init> ======= : 



======== method testNoConcurrentExecOnSameJob ======= : 

Unit: specialinvoke $r9.<java.util.ArrayList: void <init>()>()
Unit: r1 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r9)
Unit: $r16 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r15)
Unit: l1 = virtualinvoke $r41.<java.util.Date: long getTime()>()
Unit: virtualinvoke $r28.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>("BARRIER", r2)
Unit: $r23 = virtualinvoke $r21.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobKey)>($r22)
Unit: $r11 = new java.util.Date
Unit: $r10 = new java.util.concurrent.CyclicBarrier
Unit: $r22 = interfaceinvoke r4.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r27 = new org.quartz.impl.StdSchedulerFactory
Unit: virtualinvoke $r30.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>("DATE_STAMPS", r1)
Unit: r4 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
Unit: interfaceinvoke r8.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.Trigger)>(r6)
Unit: return
Unit: $r30 = interfaceinvoke r8.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
Unit: $r14 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $l3 = $l2 + 100L
Unit: specialinvoke $r11.<java.util.Date: void <init>(long)>($l3)
Unit: virtualinvoke r7.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "2")
Unit: specialinvoke $r27.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r7)
Unit: specialinvoke $r10.<java.util.concurrent.CyclicBarrier: void <init>(int)>(2)
Unit: $r33 = new org.quartz.DisallowConcurrentExecutionJobTest$TestJobListener
Unit: $r39 = (java.util.Date) $r38
Unit: r8 = virtualinvoke $r27.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r41 = (java.util.Date) $r40
Unit: $r40 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1)
Unit: $r15 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: $r20 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r19)
Unit: $r37 = staticinvoke <org.hamcrest.collection.IsCollectionWithSize: org.hamcrest.Matcher hasSize(int)>(2)
Unit: $r44 = staticinvoke <org.hamcrest.number.OrderingComparison: org.hamcrest.Matcher greaterThanOrEqualTo(java.lang.Comparable)>($r43)
Unit: $l5 = l1 - l0
Unit: r0 := @this: org.quartz.DisallowConcurrentExecutionJobTest
Unit: virtualinvoke r2.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(125L, $r36)
Unit: $r24 = new java.util.Properties
Unit: $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(300L)
Unit: specialinvoke $r33.<org.quartz.DisallowConcurrentExecutionJobTest$TestJobListener: void <init>(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r42, $r44)
Unit: virtualinvoke r7.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.idleWaitTime", "1500")
Unit: interfaceinvoke r8.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: $r38 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
Unit: specialinvoke $r24.<java.util.Properties: void <init>()>()
Unit: l0 = virtualinvoke $r39.<java.util.Date: long getTime()>()
Unit: $r19 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: $r9 = new java.util.ArrayList
Unit: $r32 = interfaceinvoke r8.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: $r12 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/DisallowConcurrentExecutionJobTest$TestJob;")
Unit: $r36 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
Unit: r5 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r6 = virtualinvoke $r23.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r7 = $r24
Unit: $r28 = interfaceinvoke r8.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: interfaceinvoke r8.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r4, r5)
Unit: $r21 = virtualinvoke $r20.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r3)
Unit: r2 = $r10
Unit: interfaceinvoke r8.<org.quartz.Scheduler: void start()>()
Unit: $r13 = virtualinvoke $r12.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r1, $r37)
Unit: $r18 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r3 = $r11
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r3)
Unit: interfaceinvoke $r32.<org.quartz.ListenerManager: void addJobListener(org.quartz.JobListener)>($r33)


======== method testNoConcurrentExecOnSameJobWithBatching ======= : 

Unit: $r16 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r15)
Unit: $l5 = l1 - l0
Unit: virtualinvoke r7.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "2")
Unit: $r10 = new java.util.concurrent.CyclicBarrier
Unit: $r28 = new org.quartz.impl.StdSchedulerFactory
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r1, $r38)
Unit: l0 = virtualinvoke $r40.<java.util.Date: long getTime()>()
Unit: $r39 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
Unit: r1 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r9)
Unit: $r38 = staticinvoke <org.hamcrest.collection.IsCollectionWithSize: org.hamcrest.Matcher hasSize(int)>(2)
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r3)
Unit: $r23 = virtualinvoke $r21.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobKey)>($r22)
Unit: $r12 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/DisallowConcurrentExecutionJobTest$TestJob;")
Unit: $r18 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r13 = virtualinvoke $r12.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: specialinvoke $r9.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r8.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r4, r5)
Unit: virtualinvoke $r29.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>("BARRIER", r2)
Unit: $l3 = $l2 + 100L
Unit: r8 = virtualinvoke $r28.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r9 = new java.util.ArrayList
Unit: $r14 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: specialinvoke $r28.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r7)
Unit: $r15 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: $r19 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: r3 = $r11
Unit: r0 := @this: org.quartz.DisallowConcurrentExecutionJobTest
Unit: interfaceinvoke r8.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.Trigger)>(r6)
Unit: $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
Unit: virtualinvoke $r31.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>("DATE_STAMPS", r1)
Unit: r6 = virtualinvoke $r23.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r22 = interfaceinvoke r4.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r24 = new java.util.Properties
Unit: interfaceinvoke $r33.<org.quartz.ListenerManager: void addJobListener(org.quartz.JobListener)>($r34)
Unit: return
Unit: $r41 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1)
Unit: interfaceinvoke r8.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: r7 = $r24
Unit: specialinvoke $r34.<org.quartz.DisallowConcurrentExecutionJobTest$TestJobListener: void <init>(int)>(2)
Unit: virtualinvoke r7.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.idleWaitTime", "1500")
Unit: virtualinvoke r2.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(125L, $r37)
Unit: $r11 = new java.util.Date
Unit: $r37 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
Unit: $r33 = interfaceinvoke r8.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: $r40 = (java.util.Date) $r39
Unit: $r21 = virtualinvoke $r20.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r3)
Unit: r2 = $r10
Unit: virtualinvoke r7.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.batchTriggerAcquisitionMaxCount", "2")
Unit: $r34 = new org.quartz.DisallowConcurrentExecutionJobTest$TestJobListener
Unit: r4 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r43, $r45)
Unit: specialinvoke $r24.<java.util.Properties: void <init>()>()
Unit: r5 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r45 = staticinvoke <org.hamcrest.number.OrderingComparison: org.hamcrest.Matcher greaterThanOrEqualTo(java.lang.Comparable)>($r44)
Unit: $r42 = (java.util.Date) $r41
Unit: $r31 = interfaceinvoke r8.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: l1 = virtualinvoke $r42.<java.util.Date: long getTime()>()
Unit: $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(300L)
Unit: specialinvoke $r10.<java.util.concurrent.CyclicBarrier: void <init>(int)>(2)
Unit: $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
Unit: $r29 = interfaceinvoke r8.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: specialinvoke $r11.<java.util.Date: void <init>(long)>($l3)
Unit: interfaceinvoke r8.<org.quartz.Scheduler: void start()>()
Unit: $r20 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r19)
 ====================================== 
** CLASS org.quartz.core.QuartzSchedulerThread



======== method <init> ======= : 



======== method <init> ======= : 



======== method setIdleWaitTime ======= : 



======== method getRandomizedIdleWaitTime ======= : 



======== method togglePause ======= : 



======== method halt ======= : 



======== method isPaused ======= : 



======== method signalSchedulingChange ======= : 



======== method clearSignaledSchedulingChange ======= : 



======== method isScheduleChanged ======= : 



======== method getSignaledNextFireTime ======= : 



======== method run ======= : 



======== method computeDelayForRepeatedErrors ======= : 



======== method releaseIfScheduleChangedSignificantly ======= : 



======== method isCandidateNewTimeEarlierWithinReason ======= : 



======== method getLog ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest$TestAnnotatedJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.SchedulerListener



======== method jobScheduled ======= : 



======== method jobUnscheduled ======= : 



======== method triggerFinalized ======= : 



======== method triggerPaused ======= : 



======== method triggersPaused ======= : 



======== method triggerResumed ======= : 



======== method triggersResumed ======= : 



======== method jobAdded ======= : 



======== method jobDeleted ======= : 



======== method jobPaused ======= : 



======== method jobsPaused ======= : 



======== method jobResumed ======= : 



======== method jobsResumed ======= : 



======== method schedulerError ======= : 



======== method schedulerInStandbyMode ======= : 



======== method schedulerStarted ======= : 



======== method schedulerStarting ======= : 



======== method schedulerShutdown ======= : 



======== method schedulerShuttingdown ======= : 



======== method schedulingDataCleared ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.Driver



======== method <init> ======= : 



======== method runall ======= : 

 ====================================== 
** CLASS org.quartz.impl.DirectSchedulerFactoryTest



======== method <init> ======= : 



======== method testPlugins ======= : 

Unit: $r8 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void start()>()
Unit: interfaceinvoke r3.<org.quartz.spi.ThreadPool: void initialize()>()
Unit: r3 = $r7
Unit: specialinvoke $r6.<org.quartz.impl.DirectSchedulerFactoryTest$1: void <init>(org.quartz.impl.DirectSchedulerFactoryTest,java.lang.StringBuffer)>(r0, r1)
Unit: $r10 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("TestPlugin", r2)
Unit: $r6 = new org.quartz.impl.DirectSchedulerFactoryTest$1
Unit: virtualinvoke $r8.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(java.lang.String,java.lang.String,org.quartz.spi.ThreadPool,org.quartz.spi.JobStore,java.util.Map,java.lang.String,int,long,long,boolean,java.lang.String)>("MyScheduler", "Instance1", r3, $r9, $r10, null, -1, 0L, 0L, 0, null)
Unit: r0 := @this: org.quartz.impl.DirectSchedulerFactoryTest
Unit: return
Unit: $r11 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: specialinvoke $r5.<java.lang.StringBuffer: void <init>()>()
Unit: r1 = $r5
Unit: specialinvoke $r9.<org.quartz.simpl.RAMJobStore: void <init>()>()
Unit: r4 = virtualinvoke $r11.<org.quartz.impl.DirectSchedulerFactory: org.quartz.Scheduler getScheduler(java.lang.String)>("MyScheduler")
Unit: $r5 = new java.lang.StringBuffer
Unit: $r9 = new org.quartz.simpl.RAMJobStore
Unit: $r12 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()
Unit: specialinvoke $r7.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(1, 5)
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown()>()
Unit: staticinvoke <org.quartz.impl.DirectSchedulerFactoryTest: void assertEquals(java.lang.String,java.lang.String)>("TestPlugin|MyScheduler|start|shutdown", $r12)
Unit: r2 = $r6
Unit: $r7 = new org.quartz.simpl.SimpleThreadPool


======== method testThreadName ======= : 

Unit: return
Unit: r0 := @this: org.quartz.impl.DirectSchedulerFactoryTest
Unit: $r9 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: r3 = (org.quartz.core.QuartzSchedulerResources) $r11
Unit: $z1 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>($r13)
Unit: staticinvoke <org.quartz.impl.DirectSchedulerFactoryTest: void assertTrue(boolean)>($z1)
Unit: r5 = (java.util.List) $r12
Unit: $z0 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("null")
Unit: virtualinvoke $r8.<org.quartz.impl.DirectSchedulerFactory: void createVolatileScheduler(int)>(4)
Unit: $r11 = virtualinvoke r0.<org.quartz.impl.DirectSchedulerFactoryTest: java.lang.Object getField(java.lang.Object,java.lang.String)>(r2, "resources")
Unit: r4 = virtualinvoke r3.<org.quartz.core.QuartzSchedulerResources: org.quartz.spi.ThreadPool getThreadPool()>()
Unit: staticinvoke <org.quartz.impl.DirectSchedulerFactoryTest: void assertFalse(boolean)>($z0)
Unit: $r13 = interfaceinvoke r1.<org.quartz.Scheduler: java.lang.String getSchedulerName()>()
Unit: r6 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r12 = virtualinvoke r0.<org.quartz.impl.DirectSchedulerFactoryTest: java.lang.Object getField(java.lang.Object,java.lang.String)>(r4, "workers")
Unit: r2 = (org.quartz.core.QuartzScheduler) $r10
Unit: r1 = virtualinvoke $r9.<org.quartz.impl.DirectSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: r7 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>()
Unit: $r10 = virtualinvoke r0.<org.quartz.impl.DirectSchedulerFactoryTest: java.lang.Object getField(java.lang.Object,java.lang.String)>(r1, "sched")
Unit: $r8 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()


======== method getField ======= : 

 ====================================== 
** CLASS org.quartz.xml.Driver



======== method <init> ======= : 



======== method runall ======= : 

 ====================================== 
** CLASS org.quartz.impl.QuartzServer



======== method <init> ======= : 



======== method serve ======= : 



======== method schedulerError ======= : 



======== method schedulerShutdown ======= : 



======== method main ======= : 

 ====================================== 
** CLASS org.quartz.core.JobRunShell



======== method <init> ======= : 



======== method schedulerShuttingdown ======= : 



======== method getLog ======= : 



======== method initialize ======= : 



======== method requestShutdown ======= : 



======== method run ======= : 



======== method begin ======= : 



======== method complete ======= : 



======== method passivate ======= : 



======== method notifyListenersBeginning ======= : 



======== method notifyJobListenersComplete ======= : 



======== method notifyTriggerListenersComplete ======= : 

 ====================================== 
** CLASS org.quartz.simpl.RAMJobStore



======== method <init> ======= : 



======== method getLog ======= : 



======== method initialize ======= : 



======== method schedulerStarted ======= : 



======== method schedulerPaused ======= : 



======== method schedulerResumed ======= : 



======== method getMisfireThreshold ======= : 



======== method setMisfireThreshold ======= : 



======== method shutdown ======= : 



======== method supportsPersistence ======= : 



======== method clearAllSchedulingData ======= : 



======== method storeJobAndTrigger ======= : 



======== method storeJob ======= : 



======== method removeJob ======= : 



======== method removeJobs ======= : 



======== method removeTriggers ======= : 



======== method storeJobsAndTriggers ======= : 



======== method storeTrigger ======= : 



======== method removeTrigger ======= : 



======== method removeTrigger ======= : 



======== method replaceTrigger ======= : 



======== method retrieveJob ======= : 



======== method retrieveTrigger ======= : 



======== method checkExists ======= : 



======== method checkExists ======= : 



======== method getTriggerState ======= : 



======== method resetTriggerFromErrorState ======= : 



======== method storeCalendar ======= : 



======== method removeCalendar ======= : 



======== method retrieveCalendar ======= : 



======== method getNumberOfJobs ======= : 



======== method getNumberOfTriggers ======= : 



======== method getNumberOfCalendars ======= : 



======== method getJobKeys ======= : 



======== method getCalendarNames ======= : 



======== method getTriggerKeys ======= : 



======== method getJobGroupNames ======= : 



======== method getTriggerGroupNames ======= : 



======== method getTriggersForJob ======= : 



======== method getTriggerWrappersForJob ======= : 



======== method getTriggerWrappersForCalendar ======= : 



======== method pauseTrigger ======= : 



======== method pauseTriggers ======= : 



======== method pauseJob ======= : 



======== method pauseJobs ======= : 



======== method resumeTrigger ======= : 



======== method resumeTriggers ======= : 



======== method resumeJob ======= : 



======== method resumeJobs ======= : 



======== method pauseAll ======= : 



======== method resumeAll ======= : 



======== method applyMisfire ======= : 



======== method getFiredTriggerRecordId ======= : 



======== method acquireNextTriggers ======= : 



======== method releaseAcquiredTrigger ======= : 



======== method triggersFired ======= : 



======== method triggeredJobComplete ======= : 



======== method getAcquireRetryDelay ======= : 



======== method setAllTriggersOfJobToState ======= : 



======== method peekTriggers ======= : 



======== method getPausedTriggerGroups ======= : 



======== method setInstanceId ======= : 



======== method setInstanceName ======= : 



======== method setThreadPoolSize ======= : 



======== method getEstimatedTimeToReleaseAndAcquireTrigger ======= : 



======== method isClustered ======= : 



======== method resumeTriggers ======= : 



======== method pauseJobs ======= : 



======== method pauseTriggers ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.ee.jta.JTAAnnotationAwareJobRunShellFactory



======== method <init> ======= : 



======== method initialize ======= : 



======== method createJobRunShell ======= : 

 ====================================== 
** CLASS org.quartz.CalendarIntervalScheduleBuilder



======== method <init> ======= : 



======== method calendarIntervalSchedule ======= : 



======== method build ======= : 



======== method withInterval ======= : 



======== method withIntervalInSeconds ======= : 



======== method withIntervalInMinutes ======= : 



======== method withIntervalInHours ======= : 



======== method withIntervalInDays ======= : 



======== method withIntervalInWeeks ======= : 



======== method withIntervalInMonths ======= : 



======== method withIntervalInYears ======= : 



======== method withMisfireHandlingInstructionIgnoreMisfires ======= : 



======== method withMisfireHandlingInstructionDoNothing ======= : 



======== method withMisfireHandlingInstructionFireAndProceed ======= : 



======== method inTimeZone ======= : 



======== method preserveHourOfDayAcrossDaylightSavings ======= : 



======== method skipDayIfHourDoesNotExist ======= : 



======== method validateInterval ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher



======== method <init> ======= : 



======== method getValue ======= : 



======== method isMatch ======= : 



======== method hashCode ======= : 



======== method equals ======= : 



======== method getCompareToValue ======= : 



======== method getCompareWithOperator ======= : 

 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMapTest



======== method <init> ======= : 



======== method testClear ======= : 

Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clear()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: $z2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: specialinvoke $r2.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: return
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clear()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z2)
Unit: $r2 = new org.quartz.utils.DirtyFlagMap
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z0)
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("X", "Y")
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: r1 = $r2
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z1)


======== method testPut ======= : 

Unit: specialinvoke $r2.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: r1 = $r2
Unit: $r2 = new org.quartz.utils.DirtyFlagMap
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: return
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z0)


======== method testRemove ======= : 

Unit: $r2 = new org.quartz.utils.DirtyFlagMap
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z0)
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z1)
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object remove(java.lang.Object)>("a")
Unit: r1 = $r2
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object remove(java.lang.Object)>("b")
Unit: return
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: specialinvoke $r2.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()


======== method testEntrySetRemove ======= : 

Unit: $z4 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z4)
Unit: $r3 = new org.quartz.utils.DirtyFlagMap
Unit: specialinvoke $r3.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>()
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: $z2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: $r6 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z0)
Unit: interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>($r7)
Unit: r1 = $r3
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z2)
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: return
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object remove(java.lang.Object)>("a")
Unit: interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>("b")


======== method testEntrySetRetainAll ======= : 

Unit: $r8 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r7)
Unit: $z3 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: interfaceinvoke r2.<java.util.Set: boolean retainAll(java.util.Collection)>($r4)
Unit: interfaceinvoke r2.<java.util.Set: boolean retainAll(java.util.Collection)>($r9)
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: $r4 = <java.util.Collections: java.util.List EMPTY_LIST>
Unit: specialinvoke $r3.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: $r6 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z3)
Unit: r1 = $r3
Unit: return
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z1)
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z5)
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: $r9 = <java.util.Collections: java.util.List EMPTY_LIST>
Unit: $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>()
Unit: $z5 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: $r3 = new org.quartz.utils.DirtyFlagMap
Unit: interfaceinvoke r2.<java.util.Set: boolean retainAll(java.util.Collection)>($r8)


======== method testEntrySetRemoveAll ======= : 

Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z5)
Unit: interfaceinvoke r2.<java.util.Set: boolean removeAll(java.util.Collection)>($r9)
Unit: $r6 = <java.util.Collections: java.util.List EMPTY_LIST>
Unit: $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z3)
Unit: $r3 = new org.quartz.utils.DirtyFlagMap
Unit: specialinvoke $r3.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: $z5 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: return
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: r1 = $r3
Unit: interfaceinvoke r2.<java.util.Set: boolean removeAll(java.util.Collection)>($r6)
Unit: $r9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r8)
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z1)
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: $z3 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: $r7 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
Unit: interfaceinvoke r2.<java.util.Set: boolean removeAll(java.util.Collection)>($r4)
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: $r4 = <java.util.Collections: java.util.List EMPTY_LIST>
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()


======== method testEntrySetClear ======= : 

Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z0)
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: return
Unit: interfaceinvoke r2.<java.util.Set: void clear()>()
Unit: interfaceinvoke r2.<java.util.Set: void clear()>()
Unit: specialinvoke $r3.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: r1 = $r3
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: $r3 = new org.quartz.utils.DirtyFlagMap
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z1)


======== method testEntrySetIterator ======= : 

Unit: r5 = (java.lang.String) $r12
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: $z2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: r4 = (java.util.Map$Entry) $r11
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("c", "C")
Unit: $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Unit: $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: $z3 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean containsValue(java.lang.Object)>("BB")
Unit: $r7 = new org.quartz.utils.DirtyFlagMap
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: specialinvoke $r7.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Unit: interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("BB")
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z2)
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("b", "B")
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertEquals(int,int)>(2, $i0)
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean containsKey(java.lang.Object)>(r5)
Unit: interfaceinvoke r3.<java.util.Iterator: void remove()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: r6 = (java.util.Map$Entry) $r13
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "A")
Unit: r1 = $r7
Unit: $i0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: int size()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z0)
Unit: return
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z1)
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z3)


======== method testEntrySetToArray ======= : 

Unit: $r9 = r3[0]
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z0)
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: return
Unit: r1 = $r5
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertEquals(int,int)>(3, $i0)
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("b", "B")
Unit: specialinvoke $r5.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: r3 = interfaceinvoke r2.<java.util.Set: java.lang.Object[] toArray()>()
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean containsValue(java.lang.Object)>("BB")
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z1)
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("c", "C")
Unit: $i0 = lengthof r3
Unit: r4 = (java.util.Map$Entry) $r9
Unit: $r5 = new org.quartz.utils.DirtyFlagMap
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "A")
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("BB")


======== method testEntrySetToArrayWithArg ======= : 

Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "A")
Unit: $i0 = lengthof r3
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z0)
Unit: specialinvoke $r5.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("c", "C")
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: r4 = (java.util.Map$Entry) $r10
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean containsValue(java.lang.Object)>("BB")
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z1)
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertEquals(int,int)>(3, $i0)
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: return
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("b", "B")
Unit: $r9 = newarray (java.util.Map$Entry)[0]
Unit: r1 = $r5
Unit: interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("BB")
Unit: $r10 = r3[0]
Unit: r3 = interfaceinvoke r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r9)
Unit: $r5 = new org.quartz.utils.DirtyFlagMap


======== method testKeySetClear ======= : 

Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: interfaceinvoke r2.<java.util.Set: void clear()>()
Unit: interfaceinvoke r2.<java.util.Set: void clear()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertEquals(int,int)>(0, $i0)
Unit: return
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set keySet()>()
Unit: $r3 = new org.quartz.utils.DirtyFlagMap
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: $i0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: int size()>()
Unit: specialinvoke $r3.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z0)
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z1)
Unit: r1 = $r3


======== method testValuesClear ======= : 

Unit: $r3 = new org.quartz.utils.DirtyFlagMap
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: $i0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: int size()>()
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Collection values()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z1)
Unit: specialinvoke $r3.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: r1 = $r3
Unit: interfaceinvoke r2.<java.util.Collection: void clear()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: return
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z0)
Unit: interfaceinvoke r2.<java.util.Collection: void clear()>()
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertEquals(int,int)>(0, $i0)
 ====================================== 
** CLASS org.quartz.core.SampledStatistics



======== method getJobsScheduledMostRecentSample ======= : 



======== method getJobsExecutingMostRecentSample ======= : 



======== method getJobsCompletedMostRecentSample ======= : 



======== method shutdown ======= : 

 ====================================== 
** CLASS org.quartz.PriorityTest



======== method <init> ======= : 



======== method setUp ======= : 



======== method testSameDefaultPriority ======= : 

Unit: $r11 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: staticinvoke <org.quartz.PriorityTest: void assertEquals(java.lang.String,java.lang.String)>("T1T2", $r23)
Unit: $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>()
Unit: $r15 = new org.quartz.impl.JobDetailImpl
Unit: specialinvoke $r10.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1)
Unit: interfaceinvoke r5.<org.quartz.spi.MutableTrigger: void setJobKey(org.quartz.JobKey)>($r17)
Unit: $r18 = interfaceinvoke r6.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: r0 := @this: org.quartz.PriorityTest
Unit: r4 = $r11
Unit: r2 = virtualinvoke $r10.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: specialinvoke $r13.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>(java.lang.String,java.lang.String,java.util.Date)>("T2", null, $r14)
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void shutdown()>()
Unit: specialinvoke $r11.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>(java.lang.String,java.lang.String,java.util.Date)>("T1", null, $r12)
Unit: r1 = $r7
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r6, r4)
Unit: $r19 = virtualinvoke $r18.<org.quartz.JobKey: java.lang.String getName()>()
Unit: specialinvoke $r17.<org.quartz.JobKey: void <init>(java.lang.String)>($r19)
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "1")
Unit: r5 = $r13
Unit: $r14 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r22 = <org.quartz.PriorityTest: java.lang.StringBuffer result>
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool")
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.Trigger)>(r5)
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void start()>()
Unit: return
Unit: virtualinvoke $r21.<java.util.concurrent.CountDownLatch: void await()>()
Unit: $r17 = new org.quartz.JobKey
Unit: $r10 = new org.quartz.impl.StdSchedulerFactory
Unit: specialinvoke $r15.<org.quartz.impl.JobDetailImpl: void <init>(java.lang.String,java.lang.String,java.lang.Class)>("JD", null, class "Lorg/quartz/PriorityTest$TestJob;")
Unit: $r12 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: r6 = $r15
Unit: $r13 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(13, 1)
Unit: $r21 = <org.quartz.PriorityTest: java.util.concurrent.CountDownLatch latch>
Unit: $r7 = new java.util.Properties
Unit: specialinvoke $r7.<java.util.Properties: void <init>()>()
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()


======== method testDifferentPriority ======= : 

Unit: $r17 = new org.quartz.JobKey
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void start()>()
Unit: $r7 = new java.util.Properties
Unit: interfaceinvoke r5.<org.quartz.spi.MutableTrigger: void setJobKey(org.quartz.JobKey)>($r17)
Unit: r2 = virtualinvoke $r10.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>()
Unit: specialinvoke $r17.<org.quartz.JobKey: void <init>(java.lang.String,java.lang.String)>($r19, null)
Unit: staticinvoke <org.quartz.PriorityTest: void assertEquals(java.lang.String,java.lang.String)>("T2T1", $r23)
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool")
Unit: $r14 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r21 = <org.quartz.PriorityTest: java.util.concurrent.CountDownLatch latch>
Unit: r6 = $r15
Unit: $r13 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: $r12 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r22 = <org.quartz.PriorityTest: java.lang.StringBuffer result>
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void shutdown()>()
Unit: r1 = $r7
Unit: $r19 = virtualinvoke $r18.<org.quartz.JobKey: java.lang.String getName()>()
Unit: interfaceinvoke r4.<org.quartz.spi.MutableTrigger: void setPriority(int)>(5)
Unit: r5 = $r13
Unit: virtualinvoke $r21.<java.util.concurrent.CountDownLatch: void await()>()
Unit: specialinvoke $r7.<java.util.Properties: void <init>()>()
Unit: $r11 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: $r15 = new org.quartz.impl.JobDetailImpl
Unit: specialinvoke $r15.<org.quartz.impl.JobDetailImpl: void <init>(java.lang.String,java.lang.String,java.lang.Class)>("JD", null, class "Lorg/quartz/PriorityTest$TestJob;")
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.Trigger)>(r5)
Unit: specialinvoke $r11.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>(java.lang.String,java.lang.String,java.util.Date)>("T1", null, $r12)
Unit: r4 = $r11
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "1")
Unit: $r10 = new org.quartz.impl.StdSchedulerFactory
Unit: return
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(13, 1)
Unit: $r18 = interfaceinvoke r6.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: interfaceinvoke r5.<org.quartz.spi.MutableTrigger: void setPriority(int)>(10)
Unit: r0 := @this: org.quartz.PriorityTest
Unit: specialinvoke $r13.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>(java.lang.String,java.lang.String,java.util.Date)>("T2", null, $r14)
Unit: specialinvoke $r10.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1)
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r6, r4)


======== method access$000 ======= : 



======== method access$100 ======= : 

 ====================================== 
** CLASS org.quartz.JdbcSchedulerTest



======== method <init> ======= : 



======== method createScheduler ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.OrMatcher



======== method <init> ======= : 



======== method or ======= : 



======== method isMatch ======= : 



======== method getLeftOperand ======= : 



======== method getRightOperand ======= : 



======== method hashCode ======= : 



======== method equals ======= : 

 ====================================== 
** CLASS org.quartz.CronScheduleBuilder



======== method <init> ======= : 



======== method build ======= : 



======== method cronSchedule ======= : 



======== method cronScheduleNonvalidatedExpression ======= : 



======== method cronScheduleNoParseException ======= : 



======== method cronSchedule ======= : 



======== method dailyAtHourAndMinute ======= : 



======== method atHourAndMinuteOnGivenDaysOfWeek ======= : 



======== method weeklyOnDayAndHourAndMinute ======= : 



======== method monthlyOnDayAndHourAndMinute ======= : 



======== method inTimeZone ======= : 



======== method withMisfireHandlingInstructionIgnoreMisfires ======= : 



======== method withMisfireHandlingInstructionDoNothing ======= : 



======== method withMisfireHandlingInstructionFireAndProceed ======= : 

 ====================================== 
** CLASS org.quartz.TriggerBuilderTest$TestAnnotatedJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JdbcJobStoreTest



======== method <init> ======= : 



======== method testNothing ======= : 

Unit: r0 := @this: org.quartz.impl.jdbcjobstore.JdbcJobStoreTest
Unit: return


======== method createJobStore ======= : 



======== method destroyJobStore ======= : 

 ====================================== 
** CLASS org.quartz.ListenerManager



======== method addJobListener ======= : 



======== method addJobListener ======= : 



======== method addJobListener ======= : 



======== method addJobListener ======= : 



======== method addJobListenerMatcher ======= : 



======== method removeJobListenerMatcher ======= : 



======== method setJobListenerMatchers ======= : 



======== method getJobListenerMatchers ======= : 



======== method removeJobListener ======= : 



======== method getJobListeners ======= : 



======== method getJobListener ======= : 



======== method addTriggerListener ======= : 



======== method addTriggerListener ======= : 



======== method addTriggerListener ======= : 



======== method addTriggerListener ======= : 



======== method addTriggerListenerMatcher ======= : 



======== method removeTriggerListenerMatcher ======= : 



======== method setTriggerListenerMatchers ======= : 



======== method getTriggerListenerMatchers ======= : 



======== method removeTriggerListener ======= : 



======== method getTriggerListeners ======= : 



======== method getTriggerListener ======= : 



======== method addSchedulerListener ======= : 



======== method removeSchedulerListener ======= : 



======== method getSchedulerListeners ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest



======== method <init> ======= : 



======== method simpleScheduleAlwaysFiredUnder20s ======= : 

Unit: throw r41
Unit: $b3 = l0 cmp 20000L
Unit: $r40 := @caughtexception
Unit: virtualinvoke r2.<java.io.InputStream: void close()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r38, $z2)]
Unit: $r13 = new org.quartz.impl.StdSchedulerFactory
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.jobStore.class", $r11)
Unit: interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String)>("------- Scheduler Started -----------------")
Unit: $z0 = interfaceinvoke r44.<java.util.List: boolean isEmpty()>()
Unit: return
Unit: $r18 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r4 = virtualinvoke $r17.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: r0 := @this: org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest
Unit: r44 = staticinvoke <org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob: java.util.List getDurations()>()
Unit: r5 = (org.quartz.SimpleTrigger) $r27
Unit: l0 = virtualinvoke $r31.<java.lang.Long: long longValue()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r38, $z2)
Unit: $r15 = <org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest: org.slf4j.Logger LOG>
Unit: $r27 = virtualinvoke $r26.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (all: ")
Unit: $z2 = 1
Unit: specialinvoke $r13.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1)
Unit: $r7 = new java.util.Properties
Unit: $r10 = class "Lorg/quartz/integrations/tests/QTZ336_MissSchedulingChangeSignalTest$SlowRAMJobStore;"
Unit: $r23 = virtualinvoke $r22.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInSeconds(int)>(1)
Unit: $z2 = 0
Unit: r2 = virtualinvoke $r8.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/org/quartz/quartz.properties")
Unit: interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>("------- Initialization Complete -----------")
Unit: $r17 = virtualinvoke $r16.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("job", "group")
Unit: $r21 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r20)
Unit: specialinvoke $r20.<java.util.Date: void <init>(long)>($l2)
Unit: $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
Unit: $r16 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob;")
Unit: specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
Unit: goto [?= virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.skipUpdateCheck", "true")]
Unit: $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>()
Unit: $r24 = virtualinvoke $r23.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatForever()>()
Unit: r43 = $r39
Unit: interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String)>("------- Scheduling Job  -------------------")
Unit: $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missed an execution with one duration being between two fires: ")
Unit: $r31 = (java.lang.Long) $r30
Unit: r41 = $r40
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.skipUpdateCheck", "true")
Unit: $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
Unit: r6 = interfaceinvoke r44.<java.util.List: java.util.Iterator iterator()>()
Unit: r42 = $r13
Unit: if $z1 == 0 goto return
Unit: $r14 = <org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest: org.slf4j.Logger LOG>
Unit: $r32 = new java.lang.StringBuilder
Unit: $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
Unit: $r22 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: $r26 = virtualinvoke $r21.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r25)
Unit: interfaceinvoke r3.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r4, r5)
Unit: $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Unit: interfaceinvoke r3.<org.quartz.Scheduler: void start()>()
Unit: $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
Unit: $r29 = <org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest: org.slf4j.Logger LOG>
Unit: goto [?= r44 = staticinvoke <org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob: java.util.List getDurations()>()]
Unit: r1 = $r7
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(50000L)
Unit: goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
Unit: $r39 := @caughtexception
Unit: virtualinvoke r1.<java.util.Properties: void load(java.io.InputStream)>(r2)
Unit: $r20 = new java.util.Date
Unit: $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44)
Unit: $r25 = virtualinvoke $r24.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withMisfireHandlingInstructionIgnoreMisfires()>()
Unit: if $b3 >= 0 goto $z2 = 0
Unit: virtualinvoke r43.<java.lang.Exception: void printStackTrace()>()
Unit: virtualinvoke r2.<java.io.InputStream: void close()>()
Unit: specialinvoke $r7.<java.util.Properties: void <init>()>()
Unit: $l2 = $l1 + 1000L
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("Job was not executed once!", $z0)
Unit: $r30 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
Unit: $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: r3 = interfaceinvoke r42.<org.quartz.SchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r19 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("trigger1", "group1")


======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.CronTriggerTest



======== method <init> ======= : 



======== method getVersions ======= : 



======== method getTargetObject ======= : 



======== method verifyMatch ======= : 



======== method testClone ======= : 

Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setGroup(java.lang.String)>("testGroup")
Unit: staticinvoke <org.quartz.CronTriggerTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Cloning failed for the cron expression", "0 0 12 * * ?", $r5)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setCronExpression(java.lang.String)>("0 0 12 * * ?")
Unit: $r3 = new org.quartz.impl.triggers.CronTriggerImpl
Unit: r1 = $r3
Unit: r2 = (org.quartz.CronTrigger) $r4
Unit: $r5 = interfaceinvoke r2.<org.quartz.CronTrigger: java.lang.String getCronExpression()>()
Unit: return
Unit: staticinvoke <org.quartz.CronTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Cloning failed", r1, r2)
Unit: specialinvoke $r3.<org.quartz.impl.triggers.CronTriggerImpl: void <init>()>()
Unit: r0 := @this: org.quartz.CronTriggerTest
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setName(java.lang.String)>("test")
Unit: $r4 = virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: java.lang.Object clone()>()


======== method testQuartz558 ======= : 

Unit: $r4 = virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: java.lang.Object clone()>()
Unit: r0 := @this: org.quartz.CronTriggerTest
Unit: staticinvoke <org.quartz.CronTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Cloning failed", r1, r2)
Unit: return
Unit: specialinvoke $r3.<org.quartz.impl.triggers.CronTriggerImpl: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setGroup(java.lang.String)>("testGroup")
Unit: $r3 = new org.quartz.impl.triggers.CronTriggerImpl
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setName(java.lang.String)>("test")
Unit: r1 = $r3
Unit: r2 = (org.quartz.CronTrigger) $r4


======== method testMisfireInstructionValidity ======= : 

Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setMisfireInstruction(int)>(0)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setMisfireInstruction(int)>(2)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setMisfireInstruction(int)>(-1)
Unit: staticinvoke <org.quartz.CronTriggerTest: void fail(java.lang.String)>("Expected exception while setting invalid misfire instruction but did not get it.")
Unit: return
Unit: $r2 = new org.quartz.impl.triggers.CronTriggerImpl
Unit: r0 := @this: org.quartz.CronTriggerTest
Unit: r5 = $r4
Unit: specialinvoke $r2.<org.quartz.impl.triggers.CronTriggerImpl: void <init>()>()
Unit: $r4 := @caughtexception
Unit: $r3 := @caughtexception
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setMisfireInstruction(int)>(3)
Unit: r6 = $r3
Unit: goto [?= virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setMisfireInstruction(int)>(3)]
Unit: goto [?= return]
Unit: r1 = $r2
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setMisfireInstruction(int)>(1)
Unit: staticinvoke <org.quartz.CronTriggerTest: void fail(java.lang.String)>("Unexpected exception while setting misfire instruction.")


======== method main ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.JobListener



======== method getName ======= : 



======== method jobToBeExecuted ======= : 



======== method jobExecutionVetoed ======= : 



======== method jobWasExecuted ======= : 

 ====================================== 
** CLASS org.quartz.Trigger$TriggerTimeComparator



======== method <init> ======= : 



======== method compare ======= : 



======== method compare ======= : 



======== method compare ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler



======== method <init> ======= : 



======== method initialize ======= : 



======== method shutdown ======= : 



======== method manage ======= : 



======== method run ======= : 

 ====================================== 
** CLASS org.quartz.impl.DirectSchedulerFactoryTest$1



======== method <init> ======= : 



======== method initialize ======= : 



======== method start ======= : 



======== method shutdown ======= : 

 ====================================== 
** CLASS org.quartz.Scheduler



======== method getSchedulerName ======= : 



======== method getSchedulerInstanceId ======= : 



======== method getContext ======= : 



======== method start ======= : 



======== method startDelayed ======= : 



======== method isStarted ======= : 



======== method standby ======= : 



======== method isInStandbyMode ======= : 



======== method shutdown ======= : 



======== method shutdown ======= : 



======== method isShutdown ======= : 



======== method getMetaData ======= : 



======== method getCurrentlyExecutingJobs ======= : 



======== method setJobFactory ======= : 



======== method getListenerManager ======= : 



======== method scheduleJob ======= : 



======== method scheduleJob ======= : 



======== method scheduleJobs ======= : 



======== method scheduleJob ======= : 



======== method unscheduleJob ======= : 



======== method unscheduleJobs ======= : 



======== method rescheduleJob ======= : 



======== method addJob ======= : 



======== method addJob ======= : 



======== method deleteJob ======= : 



======== method deleteJobs ======= : 



======== method triggerJob ======= : 



======== method triggerJob ======= : 



======== method pauseJob ======= : 



======== method pauseJobs ======= : 



======== method pauseTrigger ======= : 



======== method pauseTriggers ======= : 



======== method resumeJob ======= : 



======== method resumeJobs ======= : 



======== method resumeTrigger ======= : 



======== method resumeTriggers ======= : 



======== method pauseAll ======= : 



======== method resumeAll ======= : 



======== method getJobGroupNames ======= : 



======== method getJobKeys ======= : 



======== method getTriggersOfJob ======= : 



======== method getTriggerGroupNames ======= : 



======== method getTriggerKeys ======= : 



======== method getPausedTriggerGroups ======= : 



======== method getJobDetail ======= : 



======== method getTrigger ======= : 



======== method getTriggerState ======= : 



======== method resetTriggerFromErrorState ======= : 



======== method addCalendar ======= : 



======== method deleteCalendar ======= : 



======== method getCalendar ======= : 



======== method getCalendarNames ======= : 



======== method interrupt ======= : 



======== method interrupt ======= : 



======== method checkExists ======= : 



======== method checkExists ======= : 



======== method clear ======= : 

 ====================================== 
** CLASS org.quartz.ee.jta.JTAJobRunShellFactory



======== method <init> ======= : 



======== method initialize ======= : 



======== method createJobRunShell ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.QuartzDatabaseTestSupport



======== method <init> ======= : 



======== method initialize ======= : 

Unit: $r3 = <java.lang.System: java.io.PrintStream out>
Unit: interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Creating Database tables for Quartz.")
Unit: $r7 = <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.slf4j.Logger LOG>
Unit: specialinvoke $r1.<org.apache.derby.drda.NetworkServerControl: void <init>()>()
Unit: $r9 = <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.apache.derby.drda.NetworkServerControl derbyServer>
Unit: specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>("Failed to start Derby!")
Unit: $r12 = new java.lang.Exception
Unit: if i0 >= 5 goto (branch)
Unit: interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("Database started.")
Unit: goto [?= (branch)]
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(500L)
Unit: r14 = $r11
Unit: $r4 = <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.apache.derby.drda.NetworkServerControl derbyServer>
Unit: if i0 != 5 goto $r5 = <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.slf4j.Logger LOG>
Unit: i0 = 0
Unit: <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.apache.derby.drda.NetworkServerControl derbyServer> = $r1
Unit: throw $r12
Unit: interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Starting DERBY database.")
Unit: i0 = i0 + 1
Unit: $r11 := @caughtexception
Unit: return
Unit: goto [?= return]
Unit: virtualinvoke $r9.<org.apache.derby.drda.NetworkServerControl: void ping()>()
Unit: $r10 := @caughtexception
Unit: r13 = $r10
Unit: specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Failed to create Quartz tables.", r14)
Unit: $r6 = <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.slf4j.Logger LOG>
Unit: $r1 = new org.apache.derby.drda.NetworkServerControl
Unit: specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r3)
Unit: $r8 = new java.lang.Exception
Unit: goto [?= (branch)]
Unit: interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>("Database tables created.")
Unit: $r0 = <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.slf4j.Logger LOG>
Unit: virtualinvoke $r4.<org.apache.derby.drda.NetworkServerControl: void start(java.io.PrintWriter)>($r2)
Unit: $r5 = <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.slf4j.Logger LOG>
Unit: throw $r8
Unit: staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: void createDatabase()>()
Unit: $r2 = new java.io.PrintWriter


======== method shutdownDb ======= : 

Unit: r0 = $r5
Unit: virtualinvoke $r6.<java.sql.SQLException: void printStackTrace()>()
Unit: $r5 := @caughtexception
Unit: interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Database destroyed.")
Unit: $r6 = virtualinvoke r0.<java.sql.SQLException: java.sql.SQLException getNextException()>()
Unit: $r7 = new java.lang.AssertionError
Unit: interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Destroying Database.")
Unit: $r2 = <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.slf4j.Logger LOG>
Unit: interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Database shutdown.")
Unit: virtualinvoke r0.<java.sql.SQLException: void printStackTrace()>()
Unit: $r4 = <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.slf4j.Logger LOG>
Unit: virtualinvoke $r3.<org.apache.derby.drda.NetworkServerControl: void shutdown()>()
Unit: specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>(r0)
Unit: goto [?= $r3 = <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.apache.derby.drda.NetworkServerControl derbyServer>]
Unit: $r3 = <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.apache.derby.drda.NetworkServerControl derbyServer>
Unit: return
Unit: throw $r7
Unit: staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: void destroyDatabase()>()
Unit: $r1 = <org.quartz.integrations.tests.QuartzDatabaseTestSupport: org.slf4j.Logger LOG>


======== method createSchedulerProperties ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore



======== method <init> ======= : 



======== method setInstanceId ======= : 



======== method setInstanceName ======= : 

 ====================================== 
** CLASS org.quartz.simpl.ThreadContextClassLoadHelper



======== method <init> ======= : 



======== method initialize ======= : 



======== method loadClass ======= : 



======== method loadClass ======= : 



======== method getResource ======= : 



======== method getResourceAsStream ======= : 



======== method getClassLoader ======= : 

 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledCounterConfig



======== method <init> ======= : 



======== method getHistorySize ======= : 



======== method getIntervalSecs ======= : 



======== method isResetOnSample ======= : 



======== method createCounter ======= : 

 ====================================== 
** CLASS org.quartz.ValueSet



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.utils.counter.CounterManagerImpl



======== method <init> ======= : 



======== method shutdown ======= : 



======== method createCounter ======= : 



======== method shutdownCounter ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.JdbcQuartzDerbyUtilities



======== method createDatabase ======= : 



======== method triggersInAcquiredState ======= : 



======== method timesTriggered ======= : 



======== method destroyDatabase ======= : 



======== method <init> ======= : 



======== method delete ======= : 



======== method access$000 ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.simpl.ZeroSizeThreadPool



======== method <init> ======= : 



======== method getLog ======= : 



======== method getPoolSize ======= : 



======== method initialize ======= : 



======== method shutdown ======= : 



======== method shutdown ======= : 



======== method runInThread ======= : 



======== method blockForAvailableThreads ======= : 



======== method setInstanceId ======= : 



======== method setInstanceName ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.CacheDelegate



======== method <init> ======= : 



======== method setBytes ======= : 



======== method getObjectFromBlob ======= : 



======== method getJobDataFromBlob ======= : 

 ====================================== 
** CLASS org.quartz.TimeOfDay



======== method <init> ======= : 



======== method <init> ======= : 



======== method validate ======= : 



======== method hourMinuteAndSecondOfDay ======= : 



======== method hourAndMinuteOfDay ======= : 



======== method getHour ======= : 



======== method getMinute ======= : 



======== method getSecond ======= : 



======== method before ======= : 



======== method equals ======= : 



======== method hashCode ======= : 



======== method getTimeOfDayForDate ======= : 



======== method hourAndMinuteAndSecondFromDate ======= : 



======== method hourAndMinuteAndSecondFromDate ======= : 



======== method hourAndMinuteFromDate ======= : 



======== method hourAndMinuteFromDate ======= : 



======== method toString ======= : 

 ====================================== 
** CLASS org.quartz.impl.SchedulerDetailsSetterTest$1



======== method <init> ======= : 



======== method defineClass ======= : 

 ====================================== 
** CLASS org.quartz.core.jmx.QuartzSchedulerMBean



======== method getSchedulerName ======= : 



======== method getSchedulerInstanceId ======= : 



======== method isStandbyMode ======= : 



======== method isShutdown ======= : 



======== method getVersion ======= : 



======== method getJobStoreClassName ======= : 



======== method getThreadPoolClassName ======= : 



======== method getThreadPoolSize ======= : 



======== method getJobsScheduledMostRecentSample ======= : 



======== method getJobsExecutedMostRecentSample ======= : 



======== method getJobsCompletedMostRecentSample ======= : 



======== method getPerformanceMetrics ======= : 



======== method getCurrentlyExecutingJobs ======= : 



======== method getAllJobDetails ======= : 



======== method getAllTriggers ======= : 



======== method getJobGroupNames ======= : 



======== method getJobNames ======= : 



======== method getJobDetail ======= : 



======== method isStarted ======= : 



======== method start ======= : 



======== method shutdown ======= : 



======== method standby ======= : 



======== method clear ======= : 



======== method scheduleJob ======= : 



======== method scheduleBasicJob ======= : 



======== method scheduleJob ======= : 



======== method scheduleJob ======= : 



======== method unscheduleJob ======= : 



======== method interruptJob ======= : 



======== method interruptJob ======= : 



======== method triggerJob ======= : 



======== method deleteJob ======= : 



======== method addJob ======= : 



======== method addJob ======= : 



======== method pauseJobGroup ======= : 



======== method pauseJobsStartingWith ======= : 



======== method pauseJobsEndingWith ======= : 



======== method pauseJobsContaining ======= : 



======== method pauseJobsAll ======= : 



======== method resumeJobGroup ======= : 



======== method resumeJobsStartingWith ======= : 



======== method resumeJobsEndingWith ======= : 



======== method resumeJobsContaining ======= : 



======== method resumeJobsAll ======= : 



======== method pauseJob ======= : 



======== method resumeJob ======= : 



======== method getTriggerGroupNames ======= : 



======== method getTriggerNames ======= : 



======== method getTrigger ======= : 



======== method getTriggerState ======= : 



======== method getTriggersOfJob ======= : 



======== method getPausedTriggerGroups ======= : 



======== method pauseAllTriggers ======= : 



======== method resumeAllTriggers ======= : 



======== method pauseTriggerGroup ======= : 



======== method pauseTriggersStartingWith ======= : 



======== method pauseTriggersEndingWith ======= : 



======== method pauseTriggersContaining ======= : 



======== method pauseTriggersAll ======= : 



======== method resumeTriggerGroup ======= : 



======== method resumeTriggersStartingWith ======= : 



======== method resumeTriggersEndingWith ======= : 



======== method resumeTriggersContaining ======= : 



======== method resumeTriggersAll ======= : 



======== method pauseTrigger ======= : 



======== method resumeTrigger ======= : 



======== method getCalendarNames ======= : 



======== method deleteCalendar ======= : 



======== method setSampledStatisticsEnabled ======= : 



======== method isSampledStatisticsEnabled ======= : 

 ====================================== 
** CLASS org.quartz.spi.SchedulerPlugin



======== method initialize ======= : 



======== method start ======= : 



======== method shutdown ======= : 

 ====================================== 
** CLASS org.quartz.utils.HikariCpPoolingConnectionProvider



======== method <init> ======= : 



======== method <init> ======= : 



======== method initialize ======= : 



======== method getDataSource ======= : 



======== method getConnection ======= : 



======== method shutdown ======= : 



======== method initialize ======= : 



======== method getDataSource ======= : 

 ====================================== 
** CLASS org.quartz.TriggerComparatorTest



======== method <init> ======= : 



======== method testTriggerSort ======= : 

Unit: r5 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r8 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r21 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(0)
Unit: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r2)
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r21)
Unit: $r22 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(1)
Unit: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r5)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("c")
Unit: $r19 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("a", "c")
Unit: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r6)
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("a", "b")
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r4, $r24)
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r22)
Unit: $r26 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(5)
Unit: r6 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r20 = new java.util.LinkedList
Unit: $r11 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("b")
Unit: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r1)
Unit: r7 = $r20
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("a")
Unit: $r16 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r25)
Unit: r4 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: specialinvoke $r20.<java.util.LinkedList: void <init>()>()
Unit: $r18 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r10 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r25 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(4)
Unit: $r12 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r1 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r3 = virtualinvoke $r13.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r4)
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r3, $r23)
Unit: r2 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: return
Unit: staticinvoke <java.util.Collections: void sort(java.util.List)>(r7)
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r6, $r26)
Unit: r0 := @this: org.quartz.TriggerComparatorTest
Unit: $r15 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("a", "a")
Unit: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r3)
Unit: $r23 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(2)
Unit: $r14 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r24 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(3)


======== method testTriggerTimeSort ======= : 

Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r7, $r83)
Unit: $r15 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r14)
Unit: $r85 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(8)
Unit: $r40 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: interfaceinvoke $r67.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: r10 = $r76
Unit: $r11 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r78 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(1)
Unit: $r59 = virtualinvoke $r58.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withPriority(int)>(2)
Unit: $r41 = virtualinvoke $r40.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("e")
Unit: $r22 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r21)
Unit: $r50 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(5, $r49)
Unit: $r72 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(7, $r71)
Unit: $r35 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(5, $r34)
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r9)
Unit: $r51 = virtualinvoke $r48.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r50)
Unit: $r71 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r54 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r1)
Unit: $r13 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r3 = virtualinvoke $r29.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r9, $r85)
Unit: $r55 = virtualinvoke $r54.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("h")
Unit: $r52 = (org.quartz.spi.OperableTrigger) r6
Unit: $r73 = virtualinvoke $r70.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r72)
Unit: r9 = virtualinvoke $r73.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r80 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(3)
Unit: $r29 = virtualinvoke $r26.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r28)
Unit: r4 = virtualinvoke $r37.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <java.util.Collections: void sort(java.util.List)>(r10)
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r6)
Unit: $r14 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(1, $r13)
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r6, $r82)
Unit: $r77 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r20 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r8 = virtualinvoke $r66.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r49 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r74 = (org.quartz.spi.OperableTrigger) r9
Unit: $r32 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r4, $r80)
Unit: interfaceinvoke $r38.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r3)
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r5)
Unit: $r84 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(7)
Unit: $r23 = (org.quartz.spi.OperableTrigger) r2
Unit: $r36 = virtualinvoke $r33.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r35)
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r2)
Unit: $r38 = (org.quartz.spi.OperableTrigger) r4
Unit: interfaceinvoke $r16.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: $r30 = (org.quartz.spi.OperableTrigger) r3
Unit: $r42 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r1 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r27 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: interfaceinvoke $r23.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: $r63 = virtualinvoke $r62.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("i")
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r8, $r84)
Unit: $r26 = virtualinvoke $r25.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("c")
Unit: $r43 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(5, $r42)
Unit: $r18 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: specialinvoke $r76.<java.util.LinkedList: void <init>()>()
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r8)
Unit: $r25 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(2, $r20)
Unit: $r56 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r7)
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r77)
Unit: $r67 = (org.quartz.spi.OperableTrigger) r8
Unit: $r16 = (org.quartz.spi.OperableTrigger) r1
Unit: $r79 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(2)
Unit: r5 = virtualinvoke $r44.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r45 = (org.quartz.spi.OperableTrigger) r5
Unit: $r69 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r64 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r78)
Unit: $r19 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("b")
Unit: $r70 = virtualinvoke $r69.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("j")
Unit: r6 = virtualinvoke $r51.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r66 = virtualinvoke $r63.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r65)
Unit: $r48 = virtualinvoke $r47.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("g")
Unit: $r65 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(6, $r64)
Unit: $r44 = virtualinvoke $r41.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r43)
Unit: return
Unit: $r12 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("a")
Unit: $r28 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(3, $r27)
Unit: $r76 = new java.util.LinkedList
Unit: $r83 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(6)
Unit: $r81 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(4)
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r81)
Unit: $r60 = (org.quartz.spi.OperableTrigger) r7
Unit: interfaceinvoke $r30.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: r2 = virtualinvoke $r22.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r57 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(5, $r56)
Unit: $r82 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(5)
Unit: $r33 = virtualinvoke $r32.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("d")
Unit: r7 = virtualinvoke $r59.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r0 := @this: org.quartz.TriggerComparatorTest
Unit: $r58 = virtualinvoke $r55.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r57)
Unit: $r47 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r3, $r79)
Unit: interfaceinvoke $r52.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: interfaceinvoke $r60.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: $r34 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r37 = virtualinvoke $r36.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withPriority(int)>(7)
Unit: interfaceinvoke $r45.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r4)
Unit: $r62 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: interfaceinvoke $r74.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeExtendedNonConcurrentJob



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest$TestJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest$BadJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.TriggerListener



======== method getName ======= : 



======== method triggerFired ======= : 



======== method vetoJobExecution ======= : 



======== method triggerMisfired ======= : 



======== method triggerComplete ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle



======== method <init> ======= : 



======== method getScheduleBuilder ======= : 



======== method getStatePropertyNames ======= : 



======== method getStatePropertyValues ======= : 

 ====================================== 
** CLASS org.quartz.core.QuartzScheduler



======== method <init> ======= : 



======== method initialize ======= : 



======== method getVersion ======= : 



======== method getVersionMajor ======= : 



======== method getVersionMinor ======= : 



======== method getVersionIteration ======= : 



======== method getSchedulerSignaler ======= : 



======== method getLog ======= : 



======== method registerJMX ======= : 



======== method unregisterJMX ======= : 



======== method bind ======= : 



======== method unBind ======= : 



======== method getSchedulerName ======= : 



======== method getSchedulerInstanceId ======= : 



======== method getSchedulerThreadGroup ======= : 



======== method addNoGCObject ======= : 



======== method removeNoGCObject ======= : 



======== method getSchedulerContext ======= : 



======== method isSignalOnSchedulingChange ======= : 



======== method setSignalOnSchedulingChange ======= : 



======== method start ======= : 



======== method startDelayed ======= : 



======== method standby ======= : 



======== method isInStandbyMode ======= : 



======== method runningSince ======= : 



======== method numJobsExecuted ======= : 



======== method getJobStoreClass ======= : 



======== method supportsPersistence ======= : 



======== method isClustered ======= : 



======== method getThreadPoolClass ======= : 



======== method getThreadPoolSize ======= : 



======== method shutdown ======= : 



======== method shutdown ======= : 



======== method isShutdown ======= : 



======== method isShuttingDown ======= : 



======== method isStarted ======= : 



======== method validateState ======= : 



======== method getCurrentlyExecutingJobs ======= : 



======== method scheduleJob ======= : 



======== method scheduleJob ======= : 



======== method addJob ======= : 



======== method addJob ======= : 



======== method deleteJob ======= : 



======== method deleteJobs ======= : 



======== method scheduleJobs ======= : 



======== method scheduleJob ======= : 



======== method unscheduleJobs ======= : 



======== method unscheduleJob ======= : 



======== method rescheduleJob ======= : 



======== method newTriggerId ======= : 



======== method triggerJob ======= : 



======== method triggerJob ======= : 



======== method pauseTrigger ======= : 



======== method pauseTriggers ======= : 



======== method pauseJob ======= : 



======== method pauseJobs ======= : 



======== method resumeTrigger ======= : 



======== method resumeTriggers ======= : 



======== method getPausedTriggerGroups ======= : 



======== method resumeJob ======= : 



======== method resumeJobs ======= : 



======== method pauseAll ======= : 



======== method resumeAll ======= : 



======== method getJobGroupNames ======= : 



======== method getJobKeys ======= : 



======== method getTriggersOfJob ======= : 



======== method getTriggerGroupNames ======= : 



======== method getTriggerKeys ======= : 



======== method getJobDetail ======= : 



======== method getTrigger ======= : 



======== method checkExists ======= : 



======== method checkExists ======= : 



======== method clear ======= : 



======== method getTriggerState ======= : 



======== method resetTriggerFromErrorState ======= : 



======== method addCalendar ======= : 



======== method deleteCalendar ======= : 



======== method getCalendar ======= : 



======== method getCalendarNames ======= : 



======== method getListenerManager ======= : 



======== method addInternalJobListener ======= : 



======== method removeInternalJobListener ======= : 



======== method getInternalJobListeners ======= : 



======== method getInternalJobListener ======= : 



======== method addInternalTriggerListener ======= : 



======== method removeinternalTriggerListener ======= : 



======== method getInternalTriggerListeners ======= : 



======== method getInternalTriggerListener ======= : 



======== method addInternalSchedulerListener ======= : 



======== method removeInternalSchedulerListener ======= : 



======== method getInternalSchedulerListeners ======= : 



======== method notifyJobStoreJobComplete ======= : 



======== method notifyJobStoreJobVetoed ======= : 



======== method notifySchedulerThread ======= : 



======== method buildTriggerListenerList ======= : 



======== method buildJobListenerList ======= : 



======== method buildSchedulerListenerList ======= : 



======== method matchJobListener ======= : 



======== method matchTriggerListener ======= : 



======== method notifyTriggerListenersFired ======= : 



======== method notifyTriggerListenersMisfired ======= : 



======== method notifyTriggerListenersComplete ======= : 



======== method notifyJobListenersToBeExecuted ======= : 



======== method notifyJobListenersWasVetoed ======= : 



======== method notifyJobListenersWasExecuted ======= : 



======== method notifySchedulerListenersError ======= : 



======== method notifySchedulerListenersSchduled ======= : 



======== method notifySchedulerListenersUnscheduled ======= : 



======== method notifySchedulerListenersFinalized ======= : 



======== method notifySchedulerListenersPausedTrigger ======= : 



======== method notifySchedulerListenersPausedTriggers ======= : 



======== method notifySchedulerListenersResumedTrigger ======= : 



======== method notifySchedulerListenersResumedTriggers ======= : 



======== method notifySchedulerListenersPausedJob ======= : 



======== method notifySchedulerListenersPausedJobs ======= : 



======== method notifySchedulerListenersResumedJob ======= : 



======== method notifySchedulerListenersResumedJobs ======= : 



======== method notifySchedulerListenersInStandbyMode ======= : 



======== method notifySchedulerListenersStarted ======= : 



======== method notifySchedulerListenersStarting ======= : 



======== method notifySchedulerListenersShutdown ======= : 



======== method notifySchedulerListenersShuttingdown ======= : 



======== method notifySchedulerListenersJobAdded ======= : 



======== method notifySchedulerListenersJobDeleted ======= : 



======== method setJobFactory ======= : 



======== method getJobFactory ======= : 



======== method interrupt ======= : 



======== method interrupt ======= : 



======== method shutdownPlugins ======= : 



======== method startPlugins ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.NotMatcher



======== method <init> ======= : 



======== method not ======= : 



======== method isMatch ======= : 



======== method getOperand ======= : 



======== method hashCode ======= : 



======== method equals ======= : 

 ====================================== 
** CLASS org.quartz.impl.calendar.WeeklyCalendar



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method clone ======= : 



======== method getDaysExcluded ======= : 



======== method isDayExcluded ======= : 



======== method setDaysExcluded ======= : 



======== method setDayExcluded ======= : 



======== method areAllDaysExcluded ======= : 



======== method isTimeIncluded ======= : 



======== method getNextIncludedTime ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager



======== method <init> ======= : 



======== method initialize ======= : 



======== method shutdown ======= : 



======== method manage ======= : 



======== method run ======= : 

 ====================================== 
** CLASS org.quartz.utils.FindbugsSuppressWarnings



======== method value ======= : 

 ====================================== 
** CLASS org.quartz.impl.triggers.SimpleTriggerImpl



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method getStartTime ======= : 



======== method setStartTime ======= : 



======== method getEndTime ======= : 



======== method setEndTime ======= : 



======== method getRepeatCount ======= : 



======== method setRepeatCount ======= : 



======== method getRepeatInterval ======= : 



======== method setRepeatInterval ======= : 



======== method getTimesTriggered ======= : 



======== method setTimesTriggered ======= : 



======== method validateMisfireInstruction ======= : 



======== method updateAfterMisfire ======= : 



======== method triggered ======= : 



======== method updateWithNewCalendar ======= : 



======== method computeFirstFireTime ======= : 



======== method getNextFireTime ======= : 



======== method getPreviousFireTime ======= : 



======== method setNextFireTime ======= : 



======== method setPreviousFireTime ======= : 



======== method getFireTimeAfter ======= : 



======== method getFireTimeBefore ======= : 



======== method computeNumTimesFiredBetween ======= : 



======== method getFinalFireTime ======= : 



======== method mayFireAgain ======= : 



======== method validate ======= : 



======== method hasAdditionalProperties ======= : 



======== method getScheduleBuilder ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.SimpleTriggerPersistenceDelegate



======== method <init> ======= : 



======== method initialize ======= : 



======== method getHandledTriggerTypeDiscriminator ======= : 



======== method canHandleTriggerType ======= : 



======== method deleteExtendedTriggerProperties ======= : 



======== method insertExtendedTriggerProperties ======= : 



======== method loadExtendedTriggerProperties ======= : 



======== method updateExtendedTriggerProperties ======= : 

 ====================================== 
** CLASS org.quartz.impl.StdSchedulerFactory



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method getLog ======= : 



======== method initialize ======= : 



======== method overrideWithSysProps ======= : 



======== method initialize ======= : 



======== method initialize ======= : 



======== method initialize ======= : 



======== method instantiate ======= : 



======== method populateProviderWithExtraProps ======= : 



======== method shutdownFromInstantiateException ======= : 



======== method instantiate ======= : 



======== method setBeanProps ======= : 



======== method getSetMethod ======= : 



======== method loadClass ======= : 



======== method findClassloader ======= : 



======== method getSchedulerName ======= : 



======== method getScheduler ======= : 



======== method getDefaultScheduler ======= : 



======== method getScheduler ======= : 



======== method getAllSchedulers ======= : 

 ====================================== 
** CLASS org.quartz.simpl.LoadingLoaderClassLoadHelper



======== method <init> ======= : 



======== method initialize ======= : 



======== method loadClass ======= : 



======== method loadClass ======= : 



======== method getResource ======= : 



======== method getResourceAsStream ======= : 



======== method getClassLoader ======= : 

 ====================================== 
** CLASS org.quartz.utils.ClassUtilsTest$BaseJob



======== method <init> ======= : 



======== method execute ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.utils.HikariCpPoolingConnectionProviderTest



======== method <init> ======= : 



======== method testHikariCpPoolProviderWithExtraProps ======= : 

Unit: specialinvoke r0.<org.quartz.utils.HikariCpPoolingConnectionProviderTest: void validateHikariCpPoolProviderClassWithExtraProps()>()
Unit: return
Unit: r0 := @this: org.quartz.utils.HikariCpPoolingConnectionProviderTest
Unit: r0.<org.quartz.utils.HikariCpPoolingConnectionProviderTest: boolean testConnectionProviderClass> = 1


======== method testHikariCpPoolProviderClassWithExtraProps ======= : 

Unit: r0.<org.quartz.utils.HikariCpPoolingConnectionProviderTest: boolean testConnectionProviderClass> = 0
Unit: specialinvoke r0.<org.quartz.utils.HikariCpPoolingConnectionProviderTest: void validateHikariCpPoolProviderClassWithExtraProps()>()
Unit: return
Unit: r0 := @this: org.quartz.utils.HikariCpPoolingConnectionProviderTest


======== method validateHikariCpPoolProviderClassWithExtraProps ======= : 



======== method createSchedulerProperties ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest$TestStdJDBCDelegate



======== method <init> ======= : 



======== method findTriggerPersistenceDelegate ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DB2v6Delegate



======== method <init> ======= : 



======== method selectNumJobs ======= : 



======== method selectNumTriggersForJob ======= : 



======== method selectNumTriggers ======= : 



======== method selectNumCalendars ======= : 

 ====================================== 
** CLASS org.quartz.DateBuilder



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method newDate ======= : 



======== method newDateInTimezone ======= : 



======== method newDateInLocale ======= : 



======== method newDateInTimeZoneAndLocale ======= : 



======== method build ======= : 



======== method atHourOfDay ======= : 



======== method atMinute ======= : 



======== method atSecond ======= : 



======== method atHourMinuteAndSecond ======= : 



======== method onDay ======= : 



======== method inMonth ======= : 



======== method inMonthOnDay ======= : 



======== method inYear ======= : 



======== method inTimeZone ======= : 



======== method inLocale ======= : 



======== method futureDate ======= : 



======== method translate ======= : 



======== method tomorrowAt ======= : 



======== method todayAt ======= : 



======== method dateOf ======= : 



======== method dateOf ======= : 



======== method dateOf ======= : 



======== method evenHourDateAfterNow ======= : 



======== method evenHourDate ======= : 



======== method evenHourDateBefore ======= : 



======== method evenMinuteDateAfterNow ======= : 



======== method evenMinuteDate ======= : 



======== method evenMinuteDateBefore ======= : 



======== method evenSecondDateAfterNow ======= : 



======== method evenSecondDate ======= : 



======== method evenSecondDateBefore ======= : 



======== method nextGivenMinuteDate ======= : 



======== method nextGivenSecondDate ======= : 



======== method translateTime ======= : 



======== method validateDayOfWeek ======= : 



======== method validateHour ======= : 



======== method validateMinute ======= : 



======== method validateSecond ======= : 



======== method validateDayOfMonth ======= : 



======== method validateMonth ======= : 



======== method validateYear ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.CalendarIntervalTrigger



======== method getRepeatIntervalUnit ======= : 



======== method getRepeatInterval ======= : 



======== method getTimesTriggered ======= : 



======== method getTimeZone ======= : 



======== method isPreserveHourOfDayAcrossDaylightSavings ======= : 



======== method isSkipDayIfHourDoesNotExist ======= : 



======== method getTriggerBuilder ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest



======== method <init> ======= : 



======== method testSingleSuccessUsingUpdate ======= : 

Unit: $r4 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r4
Must Mock: true

Unit: r2 = (java.sql.Connection) $r4
Local: r2
Must Mock: true

Unit: interfaceinvoke $r9.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Class[])>($r10)
Unit: return
Unit: $r8 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement GOOD_STATEMENT>
Unit: $r5 = staticinvoke <org.mockito.Mockito: java.lang.String startsWith(java.lang.String)>("UPDATE")
Unit: $r10[0] = class "Ljava/lang/AssertionError;"
Unit: $r6 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r5)
Unit: $r3 = new org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
Unit: $r10 = newarray (java.lang.Class)[1]
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: boolean obtainLock(java.sql.Connection,java.lang.String)>(r2, "test")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void setSchedName(java.lang.String)>("test")
Unit: $r9 = interfaceinvoke $r7.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r8)
Unit: specialinvoke $r3.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void <init>()>()
Unit: r1 = $r3
Unit: $r7 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r6)
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest


======== method testSingleFailureFollowedBySuccessUsingUpdate ======= : 

Unit: $r12 = newarray (java.lang.Class)[1]
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: boolean obtainLock(java.sql.Connection,java.lang.String)>(r2, "test")
Unit: specialinvoke $r3.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void <init>()>()
Unit: $r5 = staticinvoke <org.mockito.Mockito: java.lang.String startsWith(java.lang.String)>("UPDATE")
Unit: $r11 = interfaceinvoke $r9.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r10)
Unit: return
Unit: $r3 = new org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest
Unit: r1 = $r3
Unit: $r8 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement BAD_STATEMENT>
Unit: $r12[0] = class "Ljava/lang/AssertionError;"
Unit: interfaceinvoke $r11.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Class[])>($r12)
Unit: $r4 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r4
Must Mock: true

Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void setSchedName(java.lang.String)>("test")
Unit: $r7 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r6)
Unit: $r9 = interfaceinvoke $r7.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r8)
Unit: $r10 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement GOOD_STATEMENT>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: r2 = (java.sql.Connection) $r4
Local: r2
Must Mock: true

Unit: $r6 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r5)


======== method testDoubleFailureFollowedBySuccessUsingUpdate ======= : 

Unit: $r7 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r6)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r13[0] = class "Ljava/lang/AssertionError;"
Unit: $r15 := @caughtexception
Unit: $r9[0] = $r10
Unit: $r6 = staticinvoke <org.mockito.Mockito: java.lang.String startsWith(java.lang.String)>("UPDATE")
Unit: $r9 = newarray (java.sql.PreparedStatement)[1]
Unit: $r10 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement BAD_STATEMENT>
Unit: specialinvoke $r4.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void <init>()>()
Unit: r1 = $r4
Unit: $r11 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement BAD_STATEMENT>
Unit: interfaceinvoke $r12.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Class[])>($r13)
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: boolean obtainLock(java.sql.Connection,java.lang.String)>(r2, "test")
Unit: goto [?= return]
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest
Unit: $r13 = newarray (java.lang.Class)[1]
Unit: $r8 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r7)
Unit: $r12 = interfaceinvoke $r8.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object,java.lang.Object[])>($r11, $r9)
Unit: $r4 = new org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
Unit: r2 = (java.sql.Connection) $r5
Local: r2
Must Mock: true

Unit: r3 = $r15
Unit: $r5 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r5
Must Mock: true

Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void setSchedName(java.lang.String)>("test")
Unit: return


======== method testFallThroughToInsert ======= : 

Unit: interfaceinvoke $r9.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Class[])>($r10)
Unit: return
Unit: $r10 = newarray (java.lang.Class)[1]
Unit: $r14 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r13)
Unit: $r5 = staticinvoke <org.mockito.Mockito: java.lang.String startsWith(java.lang.String)>("UPDATE")
Unit: $r8 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement FAIL_STATEMENT>
Unit: r1 = $r3
Unit: specialinvoke $r3.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void <init>()>()
Unit: $r17[0] = class "Ljava/lang/AssertionError;"
Unit: $r15 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement GOOD_STATEMENT>
Unit: $r16 = interfaceinvoke $r14.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r15)
Unit: $r6 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r5)
Unit: $r7 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r6)
Unit: $r12 = staticinvoke <org.mockito.Mockito: java.lang.String startsWith(java.lang.String)>("INSERT")
Unit: $r3 = new org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
Unit: r2 = (java.sql.Connection) $r4
Local: r2
Must Mock: true

Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void setSchedName(java.lang.String)>("test")
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest
Unit: $r13 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r12)
Unit: $r10[0] = class "Ljava/lang/AssertionError;"
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r17 = newarray (java.lang.Class)[1]
Unit: $r9 = interfaceinvoke $r7.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r8)
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: boolean obtainLock(java.sql.Connection,java.lang.String)>(r2, "test")
Unit: interfaceinvoke $r16.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Class[])>($r17)
Unit: $r4 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r4
Must Mock: true



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.SchedulerContext



======== method <init> ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.simpl.CascadingClassLoadHelper



======== method <init> ======= : 



======== method initialize ======= : 



======== method loadClass ======= : 



======== method loadClass ======= : 



======== method getResource ======= : 



======== method getResourceAsStream ======= : 



======== method getClassLoader ======= : 

 ====================================== 
** CLASS org.quartz.core.QTZ212_SchedulerListener_Test



======== method <init> ======= : 



======== method stdSchedulerCallsStartingBeforeStartedTest ======= : 

Unit: specialinvoke $r5.<org.quartz.core.QTZ212_SchedulerListener_Test$TestSchedulerListener: void <init>()>()
Unit: $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(1)
Unit: $r5 = new org.quartz.core.QTZ212_SchedulerListener_Test$TestSchedulerListener
Unit: $r3 = new org.quartz.impl.StdSchedulerFactory
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("SCHEDULER_STARTING", $r8)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("SCHEDULER_STARTED", $r11)
Unit: r0 := @this: org.quartz.core.QTZ212_SchedulerListener_Test
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void shutdown()>()
Unit: return
Unit: r2 = interfaceinvoke r1.<org.quartz.SchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r4 = interfaceinvoke r2.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: $r11 = (java.lang.String) $r10
Unit: specialinvoke $r3.<org.quartz.impl.StdSchedulerFactory: void <init>()>()
Unit: $r6 = <org.quartz.core.QTZ212_SchedulerListener_Test: java.util.List methodsCalledInSchedulerListener>
Unit: $r8 = (java.lang.String) $r7
Unit: r1 = $r3
Unit: $r9 = <org.quartz.core.QTZ212_SchedulerListener_Test: java.util.List methodsCalledInSchedulerListener>
Unit: interfaceinvoke $r4.<org.quartz.ListenerManager: void addSchedulerListener(org.quartz.SchedulerListener)>($r5)
Unit: $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void start()>()


======== method broadcastSchedulerListenerCallsSchedulerStartingOnAllItsListeners ======= : 

Unit: return
Unit: $r13 = <org.quartz.core.QTZ212_SchedulerListener_Test: java.util.List methodsCalledInSchedulerListener>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("SCHEDULER_STARTED", $r15)
Unit: specialinvoke $r7.<org.quartz.core.QTZ212_SchedulerListener_Test$TestSchedulerListener: void <init>()>()
Unit: $r12 = (java.lang.String) $r11
Unit: r0 := @this: org.quartz.core.QTZ212_SchedulerListener_Test
Unit: $r10 = <org.quartz.core.QTZ212_SchedulerListener_Test: java.util.List methodsCalledInSchedulerListener>
Unit: $r7 = new org.quartz.core.QTZ212_SchedulerListener_Test$TestSchedulerListener
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void shutdown()>()
Unit: $r15 = (java.lang.String) $r14
Unit: $r5 = new org.quartz.impl.StdSchedulerFactory
Unit: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: r2 = interfaceinvoke r1.<org.quartz.SchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>()>()
Unit: r1 = $r5
Unit: <org.quartz.core.QTZ212_SchedulerListener_Test: java.util.List methodsCalledInSchedulerListener> = $r4
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void start()>()
Unit: $r8 = interfaceinvoke r2.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: $r6 = new java.util.ArrayList
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: $r9 = new org.quartz.listeners.BroadcastSchedulerListener
Unit: specialinvoke $r9.<org.quartz.listeners.BroadcastSchedulerListener: void <init>(java.util.List)>(r3)
Unit: $r4 = new java.util.ArrayList
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: r3 = $r6
Unit: interfaceinvoke $r8.<org.quartz.ListenerManager: void addSchedulerListener(org.quartz.SchedulerListener)>($r9)
Unit: $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("SCHEDULER_STARTING", $r12)


======== method access$000 ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.InvalidConfigurationException



======== method <init> ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.simpl.PropertySettingJobFactoryTest$1

 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$StringOperatorName



======== method values ======= : 



======== method valueOf ======= : 



======== method <init> ======= : 



======== method evaluate ======= : 



======== method <init> ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.RemoteScheduler



======== method <init> ======= : 



======== method getRemoteScheduler ======= : 



======== method invalidateHandleCreateException ======= : 



======== method getSchedulerName ======= : 



======== method getSchedulerInstanceId ======= : 



======== method getMetaData ======= : 



======== method getContext ======= : 



======== method start ======= : 



======== method startDelayed ======= : 



======== method standby ======= : 



======== method isStarted ======= : 



======== method isInStandbyMode ======= : 



======== method shutdown ======= : 



======== method shutdown ======= : 



======== method isShutdown ======= : 



======== method getCurrentlyExecutingJobs ======= : 



======== method scheduleJob ======= : 



======== method scheduleJob ======= : 



======== method addJob ======= : 



======== method addJob ======= : 



======== method deleteJobs ======= : 



======== method scheduleJobs ======= : 



======== method scheduleJob ======= : 



======== method unscheduleJobs ======= : 



======== method deleteJob ======= : 



======== method unscheduleJob ======= : 



======== method rescheduleJob ======= : 



======== method triggerJob ======= : 



======== method triggerJob ======= : 



======== method pauseTrigger ======= : 



======== method pauseTriggers ======= : 



======== method pauseJob ======= : 



======== method pauseJobs ======= : 



======== method resumeTrigger ======= : 



======== method resumeTriggers ======= : 



======== method resumeJob ======= : 



======== method resumeJobs ======= : 



======== method pauseAll ======= : 



======== method resumeAll ======= : 



======== method getJobGroupNames ======= : 



======== method getJobKeys ======= : 



======== method getTriggersOfJob ======= : 



======== method getTriggerGroupNames ======= : 



======== method getTriggerKeys ======= : 



======== method getJobDetail ======= : 



======== method checkExists ======= : 



======== method checkExists ======= : 



======== method clear ======= : 



======== method getTrigger ======= : 



======== method getTriggerState ======= : 



======== method resetTriggerFromErrorState ======= : 



======== method addCalendar ======= : 



======== method deleteCalendar ======= : 



======== method getCalendar ======= : 



======== method getCalendarNames ======= : 



======== method getPausedTriggerGroups ======= : 



======== method getListenerManager ======= : 



======== method interrupt ======= : 



======== method interrupt ======= : 



======== method setJobFactory ======= : 

 ====================================== 
** CLASS org.quartz.core.JobRunShellFactory



======== method initialize ======= : 



======== method createJobRunShell ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$RecoverMisfiredJobsResult



======== method <init> ======= : 



======== method hasMoreMisfiredTriggers ======= : 



======== method getProcessedMisfiredTriggerCount ======= : 



======== method getEarliestNewTime ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.DailyTimeIntervalTrigger



======== method getRepeatIntervalUnit ======= : 



======== method getRepeatCount ======= : 



======== method getRepeatInterval ======= : 



======== method getStartTimeOfDay ======= : 



======== method getEndTimeOfDay ======= : 



======== method getDaysOfWeek ======= : 



======== method getTimesTriggered ======= : 



======== method getTriggerBuilder ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler



======== method <init> ======= : 



======== method getLog ======= : 



======== method invoke ======= : 



======== method setAutoCommit ======= : 



======== method setTransactionIsolation ======= : 



======== method getWrappedConnection ======= : 



======== method restoreOriginalAtributes ======= : 



======== method close ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob



======== method <init> ======= : 



======== method execute ======= : 



======== method getDurations ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.PointbaseDelegate



======== method <init> ======= : 



======== method insertJobDetail ======= : 



======== method updateJobDetail ======= : 



======== method insertTrigger ======= : 



======== method updateTrigger ======= : 



======== method updateJobData ======= : 



======== method insertCalendar ======= : 



======== method updateCalendar ======= : 



======== method getObjectFromBlob ======= : 



======== method getJobDataFromBlob ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties



======== method <init> ======= : 



======== method getString1 ======= : 



======== method setString1 ======= : 



======== method getString2 ======= : 



======== method setString2 ======= : 



======== method getString3 ======= : 



======== method setString3 ======= : 



======== method getInt1 ======= : 



======== method setInt1 ======= : 



======== method getInt2 ======= : 



======== method setInt2 ======= : 



======== method getLong1 ======= : 



======== method setLong1 ======= : 



======== method getLong2 ======= : 



======== method setLong2 ======= : 



======== method getDecimal1 ======= : 



======== method setDecimal1 ======= : 



======== method getDecimal2 ======= : 



======== method setDecimal2 ======= : 



======== method isBoolean1 ======= : 



======== method setBoolean1 ======= : 



======== method isBoolean2 ======= : 



======== method setBoolean2 ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$StringOperatorName$1



======== method <init> ======= : 



======== method evaluate ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$StringOperatorName$2



======== method <init> ======= : 



======== method evaluate ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$StringOperatorName$3



======== method <init> ======= : 



======== method evaluate ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$StringOperatorName$4



======== method <init> ======= : 



======== method evaluate ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$StringOperatorName$5



======== method <init> ======= : 



======== method evaluate ======= : 

 ====================================== 
** CLASS org.quartz.spi.ThreadPool



======== method runInThread ======= : 



======== method blockForAvailableThreads ======= : 



======== method initialize ======= : 



======== method shutdown ======= : 



======== method getPoolSize ======= : 



======== method setInstanceId ======= : 



======== method setInstanceName ======= : 

 ====================================== 
** CLASS org.quartz.utils.ClassUtilsTest$ExtendedJob



======== method <init> ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.JobDataMap



======== method <init> ======= : 



======== method <init> ======= : 



======== method putAsString ======= : 



======== method putAsString ======= : 



======== method putAsString ======= : 



======== method putAsString ======= : 



======== method putAsString ======= : 



======== method putAsString ======= : 



======== method putAsString ======= : 



======== method putAsString ======= : 



======== method putAsString ======= : 



======== method putAsString ======= : 



======== method putAsString ======= : 



======== method putAsString ======= : 



======== method getIntFromString ======= : 



======== method getIntValue ======= : 



======== method getIntegerFromString ======= : 



======== method getBooleanValueFromString ======= : 



======== method getBooleanValue ======= : 



======== method getBooleanFromString ======= : 



======== method getCharFromString ======= : 



======== method getCharacterFromString ======= : 



======== method getDoubleValueFromString ======= : 



======== method getDoubleValue ======= : 



======== method getDoubleFromString ======= : 



======== method getFloatValueFromString ======= : 



======== method getFloatValue ======= : 



======== method getFloatFromString ======= : 



======== method getLongValueFromString ======= : 



======== method getLongValue ======= : 



======== method getLongFromString ======= : 

 ====================================== 
** CLASS org.quartz.impl.calendar.BaseCalendar



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method clone ======= : 



======== method setBaseCalendar ======= : 



======== method getBaseCalendar ======= : 



======== method getDescription ======= : 



======== method setDescription ======= : 



======== method getTimeZone ======= : 



======== method setTimeZone ======= : 



======== method isTimeIncluded ======= : 



======== method getNextIncludedTime ======= : 



======== method createJavaCalendar ======= : 



======== method createJavaCalendar ======= : 



======== method getStartOfDayJavaCalendar ======= : 



======== method getEndOfDayJavaCalendar ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test



======== method <init> ======= : 



======== method initialize ======= : 

Unit: $r12 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("------- Database started ---------------------")
Unit: interfaceinvoke $r54.<org.slf4j.Logger: void info(java.lang.String)>("------- Scheduler Started -----------------")
Unit: $r44 = virtualinvoke $r43.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInSeconds(int)>(5)
Unit: interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("------- Starting Database ---------------------")
Unit: r3 = (org.quartz.SimpleTrigger) $r48
Unit: specialinvoke $r58.<java.lang.Exception: void <init>(java.lang.String)>("Failed to start Derby!")
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.dataSource.myDS.password", "quartz")
Unit: $r36 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: $r41 = virtualinvoke $r40.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("trigger1", "group1")
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(500L)
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.dataSource", "myDS")
Unit: interfaceinvoke $r53.<org.quartz.Scheduler: void start()>()
Unit: r64 = $r62
Unit: i0 = 0
Unit: $r50 = interfaceinvoke r1.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: if $z0 == 0 goto $r51 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.quartz.Scheduler sched>
Unit: r1 = virtualinvoke $r39.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r38 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r56 = interfaceinvoke r3.<org.quartz.SimpleTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r5 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.dataSource.myDS.URL", $r28)
Unit: $r40 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.tablePrefix", "QRTZ_")
Unit: interfaceinvoke $r37.<org.slf4j.Logger: void info(java.lang.String)>("------- Scheduling Job  -------------------")
Unit: staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: void createDatabase()>()
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool")
Unit: $z0 = interfaceinvoke $r49.<org.quartz.Scheduler: boolean checkExists(org.quartz.JobKey)>($r50)
Unit: $r61 = virtualinvoke r65.<java.sql.SQLException: java.sql.SQLException getNextException()>()
Unit: $r9 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.apache.derby.drda.NetworkServerControl derbyServer>
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.threadPool.threadCount", "12")
Unit: i0 = i0 + 1
Unit: $r53 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.quartz.Scheduler sched>
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.misfireThreshold", "10000")
Unit: goto [?= (branch)]
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.scheduler.instanceName", "TestScheduler")
Unit: $r34 = interfaceinvoke r0.<org.quartz.SchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r6 = new org.apache.derby.drda.NetworkServerControl
Unit: virtualinvoke r4.<java.lang.Exception: void printStackTrace()>()
Unit: $r11 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: $r51 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.quartz.Scheduler sched>
Unit: $r55 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.quartz.Scheduler sched>
Unit: interfaceinvoke $r55.<org.quartz.Scheduler: java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)>($r56, r3)
Unit: $r60 := @caughtexception
Unit: interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String)>("------- Initialization Complete -----------")
Unit: $r37 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(10000L)
Unit: $r48 = virtualinvoke $r47.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r10 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: return
Unit: if i0 >= 5 goto (branch)
Unit: $r42 = virtualinvoke $r41.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r2)
Unit: virtualinvoke $r59.<org.apache.derby.drda.NetworkServerControl: void ping()>()
Unit: $r59 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.apache.derby.drda.NetworkServerControl derbyServer>
Unit: goto [?= (branch)]
Unit: specialinvoke $r13.<java.util.Properties: void <init>()>()
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.class", "org.quartz.impl.jdbcjobstore.JobStoreTX")
Unit: $r58 = new java.lang.Exception
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.dataSource.myDS.user", "quartz")
Unit: virtualinvoke r65.<java.sql.SQLException: void printStackTrace()>()
Unit: specialinvoke $r33.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r66)
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.isClustered", "false")
Unit: $r49 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.quartz.Scheduler sched>
Unit: $r33 = new org.quartz.impl.StdSchedulerFactory
Unit: interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String)>("------- Creating Database tables ---------------------")
Unit: specialinvoke $r6.<org.apache.derby.drda.NetworkServerControl: void <init>()>()
Unit: throw $r58
Unit: goto [?= $r13 = new java.util.Properties]
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.useProperties", "true")
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenMinuteDateBefore(java.util.Date)>(null)
Unit: $r43 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.threadPool.threadPriority", "5")
Unit: virtualinvoke $r61.<java.sql.SQLException: void printStackTrace()>()
Unit: $r47 = virtualinvoke $r42.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r46)
Unit: r0 = $r33
Unit: <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.quartz.Scheduler sched> = $r34
Unit: $r39 = virtualinvoke $r38.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("job1", "group1")
Unit: interfaceinvoke $r51.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r3)
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.scheduler.skipUpdateCheck", "true")
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.dataSource.myDS.maxConnections", "5")
Unit: $r8 = <java.lang.System: java.io.PrintStream out>
Unit: specialinvoke $r7.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r8)
Unit: $r35 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: $r45 = virtualinvoke $r44.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatForever()>()
Unit: $r46 = virtualinvoke $r45.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withMisfireHandlingInstructionIgnoreMisfires()>()
Unit: r4 = $r63
Unit: $r13 = new java.util.Properties
Unit: $r54 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.driverDelegateClass", "org.quartz.impl.jdbcjobstore.StdJDBCDelegate")
Unit: $r62 := @caughtexception
Unit: interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("------- Database tables created ---------------------")
Unit: r66 = $r13
Unit: $r63 := @caughtexception
Unit: virtualinvoke $r9.<org.apache.derby.drda.NetworkServerControl: void start(java.io.PrintWriter)>($r7)
Unit: goto [?= $r53 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.quartz.Scheduler sched>]
Unit: r65 = $r60
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.dataSource.myDS.driver", "org.apache.derby.jdbc.ClientDriver")
Unit: $r7 = new java.io.PrintWriter
Unit: if i0 != 5 goto $r10 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: goto [?= return]
Unit: virtualinvoke r66.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.scheduler.instanceId", "AUTO")
Unit: <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.apache.derby.drda.NetworkServerControl derbyServer> = $r6
Unit: $r28 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.lang.String DATABASE_CONNECTION_PREFIX>
Unit: interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String)>("------- Initializing ----------------------")


======== method checkOldTriggerGetsFired ======= : 

Unit: r1 = staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.math.BigDecimal timesTriggered(java.lang.String,java.lang.String)>("trigger1", "group1")
Unit: $r3 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r2)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>("The old trigger has never been fired, even if the policy is ignore", r1, $r4)
Unit: $r2 = <java.math.BigDecimal: java.math.BigDecimal ZERO>
Unit: r0 := @this: org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test
Unit: $r4 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher not(org.hamcrest.Matcher)>($r3)
Unit: return


======== method shutdownDb ======= : 

Unit: staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: void destroyDatabase()>()
Unit: specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>(r0)
Unit: interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("------- Database destroyed ---------------------")
Unit: $r6 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.apache.derby.drda.NetworkServerControl derbyServer>
Unit: $r2 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.quartz.Scheduler sched>
Unit: throw $r10
Unit: $r3 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: interfaceinvoke $r2.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: r0 = $r8
Unit: goto [?= $r6 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.apache.derby.drda.NetworkServerControl derbyServer>]
Unit: $r1 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: $r9 = virtualinvoke r0.<java.sql.SQLException: java.sql.SQLException getNextException()>()
Unit: virtualinvoke $r9.<java.sql.SQLException: void printStackTrace()>()
Unit: $r8 := @caughtexception
Unit: return
Unit: virtualinvoke r0.<java.sql.SQLException: void printStackTrace()>()
Unit: interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("------- Shutdown Complete -----------------")
Unit: $r10 = new java.lang.AssertionError
Unit: interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("------- Destroying Database ---------------------")
Unit: $r5 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: $r7 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: $r4 = <org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test: org.slf4j.Logger LOG>
Unit: interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("------- Shutting Down Scheduler---------------------")
Unit: virtualinvoke $r6.<org.apache.derby.drda.NetworkServerControl: void shutdown()>()
Unit: interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>("------- Database shutdown ---------------------")


======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.TriggerKey



======== method <init> ======= : 



======== method <init> ======= : 



======== method triggerKey ======= : 



======== method triggerKey ======= : 

 ====================================== 
** CLASS org.quartz.listeners.JobChainingJobListener



======== method <init> ======= : 



======== method getName ======= : 



======== method addJobChainLink ======= : 



======== method jobWasExecuted ======= : 

 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest$TestStatefulJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method getStartTime ======= : 



======== method setStartTime ======= : 



======== method getEndTime ======= : 



======== method setEndTime ======= : 



======== method getRepeatIntervalUnit ======= : 



======== method setRepeatIntervalUnit ======= : 



======== method getRepeatInterval ======= : 



======== method setRepeatInterval ======= : 



======== method getTimesTriggered ======= : 



======== method setTimesTriggered ======= : 



======== method validateMisfireInstruction ======= : 



======== method updateAfterMisfire ======= : 



======== method triggered ======= : 



======== method updateWithNewCalendar ======= : 



======== method computeFirstFireTime ======= : 



======== method createCalendarTime ======= : 



======== method getNextFireTime ======= : 



======== method getPreviousFireTime ======= : 



======== method setNextFireTime ======= : 



======== method setPreviousFireTime ======= : 



======== method getFireTimeAfter ======= : 



======== method isSameDay ======= : 



======== method advanceToNextDayOfWeekIfNecessary ======= : 



======== method getFinalFireTime ======= : 



======== method mayFireAgain ======= : 



======== method validate ======= : 



======== method getDaysOfWeek ======= : 



======== method setDaysOfWeek ======= : 



======== method getStartTimeOfDay ======= : 



======== method setStartTimeOfDay ======= : 



======== method getEndTimeOfDay ======= : 



======== method setEndTimeOfDay ======= : 



======== method getScheduleBuilder ======= : 



======== method hasAdditionalProperties ======= : 



======== method getRepeatCount ======= : 



======== method setRepeatCount ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.JobDataMapStorageTest



======== method <init> ======= : 



======== method testJobDataMapDirtyFlag ======= : 

Unit: $r23 = r0.<org.quartz.integrations.tests.JobDataMapStorageTest: org.quartz.Scheduler scheduler>
Unit: $r24 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String)>("test")
Unit: interfaceinvoke $r16.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: r5 = interfaceinvoke $r23.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r24)
Unit: $r11 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: r1 = virtualinvoke $r9.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r8 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: $z0 = virtualinvoke r4.<org.quartz.JobDataMap: boolean isDirty()>()
Unit: $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r18 = r0.<org.quartz.integrations.tests.JobDataMapStorageTest: org.quartz.Scheduler scheduler>
Unit: r4 = interfaceinvoke r3.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r13 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r12)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r20, $r22)
Unit: r0 := @this: org.quartz.integrations.tests.JobDataMapStorageTest
Unit: $r7 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r19 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String)>("test")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r25, $r27)
Unit: $r22 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r21)
Unit: r6 = interfaceinvoke r5.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r12 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("0 0 0 * * ?")
Unit: $r14 = virtualinvoke $r13.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder usingJobData(java.lang.String,java.lang.String)>("tfoo", "bar")
Unit: $r10 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r3 = interfaceinvoke $r18.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r19)
Unit: r2 = (org.quartz.CronTrigger) $r15
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r26)
Unit: $z1 = virtualinvoke r6.<org.quartz.JobDataMap: boolean isDirty()>()
Unit: $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r15 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: return
Unit: $r9 = virtualinvoke $r8.<org.quartz.JobBuilder: org.quartz.JobBuilder usingJobData(java.lang.String,java.lang.String)>("jfoo", "bar")
Unit: $r16 = r0.<org.quartz.integrations.tests.JobDataMapStorageTest: org.quartz.Scheduler scheduler>
 ====================================== 
** CLASS org.quartz.impl.triggers.AbstractTrigger



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method getName ======= : 



======== method setName ======= : 



======== method getGroup ======= : 



======== method setGroup ======= : 



======== method setKey ======= : 



======== method getJobName ======= : 



======== method setJobName ======= : 



======== method getJobGroup ======= : 



======== method setJobGroup ======= : 



======== method setJobKey ======= : 



======== method getFullName ======= : 



======== method getKey ======= : 



======== method getJobKey ======= : 



======== method getFullJobName ======= : 



======== method getDescription ======= : 



======== method setDescription ======= : 



======== method setCalendarName ======= : 



======== method getCalendarName ======= : 



======== method getJobDataMap ======= : 



======== method setJobDataMap ======= : 



======== method getPriority ======= : 



======== method setPriority ======= : 



======== method triggered ======= : 



======== method computeFirstFireTime ======= : 



======== method executionComplete ======= : 



======== method mayFireAgain ======= : 



======== method getStartTime ======= : 



======== method setStartTime ======= : 



======== method setEndTime ======= : 



======== method getEndTime ======= : 



======== method getNextFireTime ======= : 



======== method getPreviousFireTime ======= : 



======== method getFireTimeAfter ======= : 



======== method getFinalFireTime ======= : 



======== method setMisfireInstruction ======= : 



======== method validateMisfireInstruction ======= : 



======== method getMisfireInstruction ======= : 



======== method updateAfterMisfire ======= : 



======== method updateWithNewCalendar ======= : 



======== method validate ======= : 



======== method setFireInstanceId ======= : 



======== method getFireInstanceId ======= : 



======== method toString ======= : 



======== method compareTo ======= : 



======== method equals ======= : 



======== method hashCode ======= : 



======== method clone ======= : 



======== method getTriggerBuilder ======= : 



======== method getScheduleBuilder ======= : 



======== method compareTo ======= : 

 ====================================== 
** CLASS org.quartz.Trigger



======== method getKey ======= : 



======== method getJobKey ======= : 



======== method getDescription ======= : 



======== method getCalendarName ======= : 



======== method getJobDataMap ======= : 



======== method getPriority ======= : 



======== method mayFireAgain ======= : 



======== method getStartTime ======= : 



======== method getEndTime ======= : 



======== method getNextFireTime ======= : 



======== method getPreviousFireTime ======= : 



======== method getFireTimeAfter ======= : 



======== method getFinalFireTime ======= : 



======== method getMisfireInstruction ======= : 



======== method getTriggerBuilder ======= : 



======== method getScheduleBuilder ======= : 



======== method equals ======= : 



======== method compareTo ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$1

 ====================================== 
** CLASS org.quartz.SimpleScheduleBuilder



======== method <init> ======= : 



======== method simpleSchedule ======= : 



======== method repeatMinutelyForever ======= : 



======== method repeatMinutelyForever ======= : 



======== method repeatSecondlyForever ======= : 



======== method repeatSecondlyForever ======= : 



======== method repeatHourlyForever ======= : 



======== method repeatHourlyForever ======= : 



======== method repeatMinutelyForTotalCount ======= : 



======== method repeatMinutelyForTotalCount ======= : 



======== method repeatSecondlyForTotalCount ======= : 



======== method repeatSecondlyForTotalCount ======= : 



======== method repeatHourlyForTotalCount ======= : 



======== method repeatHourlyForTotalCount ======= : 



======== method build ======= : 



======== method withIntervalInMilliseconds ======= : 



======== method withIntervalInSeconds ======= : 



======== method withIntervalInMinutes ======= : 



======== method withIntervalInHours ======= : 



======== method withRepeatCount ======= : 



======== method repeatForever ======= : 



======== method withMisfireHandlingInstructionIgnoreMisfires ======= : 



======== method withMisfireHandlingInstructionFireNow ======= : 



======== method withMisfireHandlingInstructionNextWithExistingCount ======= : 



======== method withMisfireHandlingInstructionNextWithRemainingCount ======= : 



======== method withMisfireHandlingInstructionNowWithExistingCount ======= : 



======== method withMisfireHandlingInstructionNowWithRemainingCount ======= : 

 ====================================== 
** CLASS org.quartz.impl.SchedulerDetailsSetterTest$MyThreadPool



======== method <init> ======= : 



======== method initialize ======= : 



======== method setInstanceId ======= : 



======== method setInstanceName ======= : 

 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest$UncleanShutdownJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.SerializationTestSupport



======== method <init> ======= : 



======== method getTargetObject ======= : 



======== method getVersions ======= : 



======== method verifyMatch ======= : 



======== method testSerialization ======= : 



======== method deserialize ======= : 



======== method writeJobDataFile ======= : 



======== method getSerializedFileName ======= : 

 ====================================== 
** CLASS org.quartz.TriggerBuilderTest$TestStatefulJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.spi.JobFactory



======== method newJob ======= : 

 ====================================== 
** CLASS org.quartz.core.jmx.JobDataMapSupport



======== method <init> ======= : 



======== method newJobDataMap ======= : 



======== method newJobDataMap ======= : 



======== method toCompositeData ======= : 



======== method toTabularData ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.AbstractJobStoreTest



======== method <init> ======= : 



======== method setUp ======= : 



======== method tearDown ======= : 



======== method createJobStore ======= : 



======== method destroyJobStore ======= : 



======== method testAcquireNextTrigger ======= : 



======== method testAcquireNextTriggerBatch ======= : 



======== method testTriggerStates ======= : 



======== method testStoreTriggerReplacesTrigger ======= : 



======== method testPauseJobGroupPausesNewJob ======= : 



======== method testStoreAndRetrieveJobs ======= : 



======== method testStoreAndRetriveTriggers ======= : 



======== method testMatchers ======= : 



======== method testAcquireTriggers ======= : 



======== method testAcquireTriggersInBatch ======= : 



======== method testResetErrorTrigger ======= : 

 ====================================== 
** CLASS org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest



======== method <init> ======= : 



======== method testNormalExample ======= : 

Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(10, 24, 0, 16, 1, 2011)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(72)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: r2 = $r6
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: r4 = $r8
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: r3 = $r7
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(11, 0, 0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: return


======== method testQuartzCalendarExclusion ======= : 

Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, r3, 48)
Unit: $r7 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r10 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r8 = new org.quartz.impl.calendar.CronCalendar
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int)>(8, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(23, 0, 0, 4, 1, 2011)
Unit: return
Unit: r3 = $r8
Unit: $r12 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(13, 0, 0, 1, 1, 2011)
Unit: $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>($r6)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: specialinvoke $r8.<org.quartz.impl.calendar.CronCalendar: void <init>(java.lang.String)>("* * 9-12 * * ?")
Unit: r2 = $r5
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $i0 = interfaceinvoke r4.<java.util.List: int size()>()
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r7)
Unit: $r5 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: specialinvoke $r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)


======== method testValidateTimeOfDayOrder ======= : 

Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>($r4)
Unit: specialinvoke $r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r4 = new org.quartz.TimeOfDay
Unit: r2 = $r6
Unit: $r5 = new org.quartz.TimeOfDay
Unit: return
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void validate()>()
Unit: $r6 := @caughtexception
Unit: $r3 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: goto [?= return]
Unit: r1 = $r3
Unit: staticinvoke <org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: void fail(java.lang.String)>("Trigger should be invalidate when time of day is not in order.")
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>($r5)
Unit: specialinvoke $r4.<org.quartz.TimeOfDay: void <init>(int,int,int)>(12, 0, 0)
Unit: specialinvoke $r5.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)


======== method testValidateInterval ======= : 

Unit: r17 = $r10
Unit: $r7 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: staticinvoke <org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: void fail(java.lang.String)>("Trigger should be invalidate when interval is greater than 24 hours.")
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(0)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: staticinvoke <org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: void fail(java.lang.String)>("Trigger should be invalidate when interval is zero.")
Unit: $r9 := @caughtexception
Unit: goto [?= $r6 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>]
Unit: staticinvoke <org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: void fail(java.lang.String)>("Trigger should be invalidate when interval unit > HOUR.")
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: r18 = $r9
Unit: $r6 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setJobKey(org.quartz.JobKey)>($r3)
Unit: $r13 := @caughtexception
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(90000)
Unit: staticinvoke <org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: void fail(java.lang.String)>("Trigger should be invalidate when interval is greater than 24 hours.")
Unit: $r10 := @caughtexception
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setName(java.lang.String)>("test")
Unit: $r3 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String)>("test")
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r4)
Unit: $r11 := @caughtexception
Unit: r16 = $r11
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void validate()>()
Unit: r14 = $r12
Unit: r15 = $r13
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(25)
Unit: r1 = $r2
Unit: $r12 := @caughtexception
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r5)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void validate()>()
Unit: goto [?= return]
Unit: return
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r6)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r7)
Unit: $r2 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void validate()>()
Unit: $r5 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r4 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void validate()>()
Unit: goto [?= $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>]
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(1500)
Unit: specialinvoke $r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setGroup(java.lang.String)>("test")
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>
Unit: staticinvoke <org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: void fail(java.lang.String)>("Trigger should be invalidate when interval is greater than 24 hours.")
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void validate()>()
Unit: goto [?= $r7 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>]
Unit: goto [?= $r5 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>]


======== method testStartTimeWithoutStartTimeOfDay ======= : 

Unit: $r4 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: r3 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 48)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r8 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(23, 0, 0, 2, 1, 2011)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: return
Unit: specialinvoke $r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r5)
Unit: $i0 = interfaceinvoke r3.<java.util.List: int size()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7)
Unit: $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r5 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r2 = $r4
Unit: $r6 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)


======== method testEndTimeWithoutEndTimeOfDay ======= : 

Unit: $r6 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: return
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(22, 0, 0, 2, 1, 2011)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTime(java.util.Date)>(r2)
Unit: r3 = $r5
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r6)
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(22, 0, 0, 2, 1, 2011)
Unit: $r10 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(46)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r5 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r3, null, 48)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(47, $i0)
Unit: specialinvoke $r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r7 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r8 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0)
Unit: $i0 = interfaceinvoke r4.<java.util.List: int size()>()


======== method testStartTimeBeforeStartTimeOfDay ======= : 

Unit: specialinvoke $r6.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: specialinvoke $r5.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: r2 = $r5
Unit: $i0 = interfaceinvoke r4.<java.util.List: int size()>()
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: $r8 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r7)
Unit: r3 = $r6
Unit: $r7 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: $r5 = new org.quartz.TimeOfDay
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(47)
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r3, null, 48)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(23, 0, 0, 3, 1, 2011)
Unit: return
Unit: $r6 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)


======== method testStartTimeBeforeStartTimeOfDayOnInvalidDay ======= : 

Unit: $r16 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(6, 0, 0, 22, 5, 2010)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21)
Unit: $r8 = new java.util.HashSet
Unit: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r10)
Unit: return
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r19)
Unit: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r13)
Unit: specialinvoke $r7.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: r2 = $r6
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r9)
Unit: $r14 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r19 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r12)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 3, 1, 2011)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setDaysOfWeek(java.util.Set)>(r4)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: specialinvoke $r8.<java.util.HashSet: void <init>()>()
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r17 = virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r16)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)
Unit: $r20 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(23, 0, 0, 5, 1, 2011)
Unit: $r21 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(47)
Unit: r3 = $r7
Unit: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r11)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r7 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r14)
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: r4 = $r8
Unit: $r18 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 3, 1, 2011)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r3, null, 48)


======== method testStartTimeAfterStartTimeOfDay ======= : 

Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r7)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: specialinvoke $r5.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: r3 = $r6
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r3, null, 48)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 0, 0, 4, 1, 2011)
Unit: r2 = $r5
Unit: $r8 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(10, 0, 0, 1, 1, 2011)
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0)
Unit: return
Unit: $r5 = new org.quartz.TimeOfDay
Unit: specialinvoke $r6.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r7 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r6 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 23, 0, 1, 1, 2011)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $i0 = interfaceinvoke r4.<java.util.List: int size()>()


======== method testEndTimeBeforeEndTimeOfDay ======= : 

Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTime(java.util.Date)>(r2)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(35, $i0)
Unit: $r10 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: r3 = $r6
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r7 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(16, 0, 0, 2, 1, 2011)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 1, 1, 2011)
Unit: $r12 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(17)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: $r14 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(34)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: r4 = $r7
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: return
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: specialinvoke $r7.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(16, 0, 0, 2, 1, 2011)


======== method testEndTimeAfterEndTimeOfDay ======= : 

Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: specialinvoke $r7.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(36, $i0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: return
Unit: r4 = $r7
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: $r14 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(35)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: $r7 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTime(java.util.Date)>(r2)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r10 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: $r12 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(17)
Unit: r3 = $r6
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(18, 0, 0, 2, 1, 2011)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 2, 1, 2011)


======== method testTimeOfDayWithStartTime ======= : 

Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: r2 = $r6
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(9)
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(47)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 1, 1, 2011)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: return
Unit: $r14 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(15, 0, 0, 5, 1, 2011)
Unit: r3 = $r7
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: r4 = $r8


======== method testTimeOfDayWithEndTime ======= : 

Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r10)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 4, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: $r14 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(9)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTime(java.util.Date)>(r2)
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: r3 = $r7
Unit: $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(29)
Unit: specialinvoke $r9.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(30, $i0)
Unit: r5 = $r9
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r7 = new org.quartz.TimeOfDay
Unit: specialinvoke $r8.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 3, 1, 2011)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 1, 1, 2011)
Unit: $r8 = new org.quartz.TimeOfDay
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: return
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: $r9 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: r4 = $r8


======== method testTimeOfDayWithEndTime2 ======= : 

Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r6 = new org.quartz.TimeOfDay
Unit: r3 = $r7
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 23, 0)
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(23, 23, 0, 3, 1, 2011)
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: r4 = $r8
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(23, 59, 59)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: return
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: r2 = $r6
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 23, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(47)


======== method testAllDaysOfTheWeek ======= : 

Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: r3 = $r7
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: r4 = $r8
Unit: specialinvoke $r9.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(15, 0, 0, 5, 1, 2011)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: r1 = <org.quartz.DailyTimeIntervalScheduleBuilder: java.util.Set ALL_DAYS_OF_THE_WEEK>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r14 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(9)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setDaysOfWeek(java.util.Set)>(r1)
Unit: specialinvoke $r8.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r8 = new org.quartz.TimeOfDay
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r10)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r2)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: r5 = $r9
Unit: return
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: $r9 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 1, 1, 2011)


======== method testMonThroughFri ======= : 

Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 4, 1, 2011)
Unit: $i1 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r14)
Unit: $r19 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(15, 0, 0, 7, 1, 2011)
Unit: $r21 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $r9 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: r5 = $r9
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i1)
Unit: $r17 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(10)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r20)
Unit: specialinvoke $r8.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: specialinvoke $r9.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(10)
Unit: return
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: $r18 = (java.util.Date) $r17
Unit: $i2 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r18)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r10)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r14 = (java.util.Date) $r13
Unit: $r20 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r2)
Unit: r1 = <org.quartz.DailyTimeIntervalScheduleBuilder: java.util.Set MONDAY_THROUGH_FRIDAY>
Unit: $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r13 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r22 = (java.util.Date) $r21
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setDaysOfWeek(java.util.Set)>(r1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(6, $i3)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i2)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 3, 1, 2011)
Unit: $i3 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r22)
Unit: r4 = $r8
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: $r8 = new org.quartz.TimeOfDay
Unit: r3 = $r7


======== method testSatAndSun ======= : 

Unit: $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r18 = (java.util.Date) $r17
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: r5 = $r9
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(7, $i3)
Unit: return
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(7, $i1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r20)
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: $i1 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r14)
Unit: $r19 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(15, 0, 0, 15, 1, 2011)
Unit: $r8 = new org.quartz.TimeOfDay
Unit: $r17 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(10)
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 2, 1, 2011)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setDaysOfWeek(java.util.Set)>(r1)
Unit: $r9 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r20 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: r4 = $r8
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r2)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r21 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r22 = (java.util.Date) $r21
Unit: r3 = $r7
Unit: $r14 = (java.util.Date) $r13
Unit: $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(10)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r10)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: specialinvoke $r9.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r13 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: r1 = <org.quartz.DailyTimeIntervalScheduleBuilder: java.util.Set SATURDAY_AND_SUNDAY>
Unit: specialinvoke $r8.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2)
Unit: $i3 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r22)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: $i2 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r18)


======== method testMonOnly ======= : 

Unit: specialinvoke $r7.<java.util.HashSet: void <init>()>()
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: r3 = $r9
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $i2 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r20)
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r8)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r2)
Unit: $r23 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: r5 = $r11
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i1)
Unit: $r20 = (java.util.Date) $r19
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: specialinvoke $r10.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: $r12 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $i3 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r24)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: specialinvoke $r11.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r18 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(10)
Unit: $r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(15, 0, 0, 31, 1, 2011)
Unit: $r15 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r19 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(10)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r12)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i2)
Unit: $r17 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 10, 1, 2011)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 3, 1, 2011)
Unit: $r22 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: specialinvoke $r9.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i3)
Unit: $r7 = new java.util.HashSet
Unit: $r9 = new org.quartz.TimeOfDay
Unit: r4 = $r10
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $r16 = (java.util.Date) $r15
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: $r14 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r24 = (java.util.Date) $r23
Unit: $r11 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r10 = new org.quartz.TimeOfDay
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setDaysOfWeek(java.util.Set)>(r1)
Unit: return
Unit: r1 = $r7
Unit: $i1 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r16)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18)


======== method getDayOfWeek ======= : 



======== method testTimeOfDayWithEndTimeOddInterval ======= : 

Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: r5 = $r9
Unit: $r8 = new org.quartz.TimeOfDay
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTime(java.util.Date)>(r2)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(17)
Unit: $r14 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(5)
Unit: specialinvoke $r8.<org.quartz.TimeOfDay: void <init>(int,int,int)>(10, 0, 0)
Unit: specialinvoke $r9.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(23)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 4, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r10)
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 55, 0, 3, 1, 2011)
Unit: return
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 55, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: r4 = $r8
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: r3 = $r7
Unit: $r7 = new org.quartz.TimeOfDay
Unit: $r9 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(18, $i0)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)


======== method testHourInterval ======= : 

Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 1, 15)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: r3 = $r7
Unit: r5 = $r9
Unit: specialinvoke $r8.<org.quartz.TimeOfDay: void <init>(int,int,int)>(16, 1, 15)
Unit: $r8 = new org.quartz.TimeOfDay
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTime(java.util.Date)>(r2)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(12, 1, 15, 10, 1, 2011)
Unit: $r14 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: r4 = $r8
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: return
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 1, 15, 1, 1, 2011)
Unit: specialinvoke $r9.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r10)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(2)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(13, 0, 0, 15, 1, 2011)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $r9 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)


======== method testSecondInterval ======= : 

Unit: return
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(13, 30, 0)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 2, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(47)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 2)
Unit: r2 = $r6
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(72)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r7 = new org.quartz.TimeOfDay
Unit: r4 = $r8
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 56, 26, 1, 1, 2011)
Unit: r3 = $r7
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)


======== method testRepeatCountInf ======= : 

Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: r4 = $r8
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(11, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(72)
Unit: $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(47)
Unit: r3 = $r7
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatCount(int)>(-1)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: return
Unit: r2 = $r6
Unit: $r7 = new org.quartz.TimeOfDay
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(10, 24, 0, 16, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()


======== method testRepeatCount ======= : 

Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(8, $i0)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: r2 = $r6
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatCount(int)>(7)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(11, 0, 0)
Unit: r3 = $r7
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(72)
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r7 = new org.quartz.TimeOfDay
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: r4 = $r8
Unit: $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(7)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: return
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 12, 0, 3, 1, 2011)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r6 = new org.quartz.TimeOfDay


======== method testRepeatCount0 ======= : 

Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(72)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatCount(int)>(0)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(11, 0, 0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: $r6 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: return
Unit: $r7 = new org.quartz.TimeOfDay
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: r2 = $r6
Unit: r4 = $r8
Unit: r3 = $r7
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>


======== method testGetFireTime ======= : 

Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r24 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(13, 0, 0, 1, 1, 2011)
Unit: $r29 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r28)
Unit: $r7 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r22 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r29)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(13, 0, 0)
Unit: return
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r26)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(7, 0, 0, 1, 1, 2011)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: specialinvoke $r5.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: r3 = $r6
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r11)
Unit: $r17 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r16)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r11 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r10)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r20)
Unit: $r18 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 0, 0, 1, 1, 2011)
Unit: $r20 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r19)
Unit: r4 = $r7
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r14)
Unit: $r16 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(7, 59, 59, 1, 1, 2011)
Unit: $r19 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r26 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r25)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r14 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r13)
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: r2 = $r5
Unit: $r27 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 2, 1, 2011)
Unit: $r5 = new org.quartz.TimeOfDay
Unit: specialinvoke $r7.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r23)
Unit: $r23 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r22)
Unit: $r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(10, 0, 0, 1, 1, 2011)
Unit: $r25 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(12, 59, 59, 1, 1, 2011)
Unit: $r28 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(13, 0, 0, 1, 1, 2011)


======== method testGetFireTimeWithDateBeforeStartTime ======= : 

Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: $r33 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 2, 1, 2012)
Unit: $r20 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r19)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r20)
Unit: specialinvoke $r5.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: r4 = $r7
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r32)
Unit: $r24 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r11)
Unit: specialinvoke $r7.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r7 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r33, $r35)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $r11 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r10)
Unit: $r23 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r22)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r26)
Unit: $r32 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r31)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r22 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 0, 0, 1, 1, 2011)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(7, 0, 0, 1, 1, 2011)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r34 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(13, 0, 0, 1, 1, 2012)
Unit: $r27 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r23)
Unit: $r16 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(7, 59, 59, 1, 1, 2011)
Unit: r2 = $r5
Unit: $r35 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r34)
Unit: $r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: $r26 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r25)
Unit: $r19 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r28 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(13, 0, 0, 1, 1, 2011)
Unit: return
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r14 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r13)
Unit: $r5 = new org.quartz.TimeOfDay
Unit: $r17 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r16)
Unit: $r25 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(12, 59, 59, 1, 1, 2011)
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2012)
Unit: $r30 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: r3 = $r6
Unit: $r31 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2012)
Unit: $r29 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r28)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r29)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r14)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: $r18 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(13, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)


======== method testGetFireTimeWhenStartTimeAndTimeOfDayIsSame ======= : 

Unit: $r6 = new org.quartz.TimeOfDay
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: r4 = $r7
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: return
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: r2 = $r5
Unit: $r11 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r10)
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2012)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r11)
Unit: specialinvoke $r5.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(13, 0, 0)
Unit: $r5 = new org.quartz.TimeOfDay
Unit: r3 = $r6
Unit: specialinvoke $r7.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: $r7 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl


======== method testExtraConstructors ======= : 

Unit: $r28 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: $r31 = new org.quartz.TimeOfDay
Unit: $r1 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r24 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getName()>()
Unit: $r26 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getJobName()>()
Unit: $r19 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("triggerGroup", $r7)
Unit: $r20 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: $r27 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getJobGroup()>()
Unit: $r9 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getJobGroup()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: $r17 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: $r7 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getGroup()>()
Unit: $r13 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("triggerName", $r24)
Unit: $r35 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: $r21 = new org.quartz.TimeOfDay
Unit: r37 = $r1
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r35, $r36)
Unit: specialinvoke $r4.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: specialinvoke $r13.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: specialinvoke $r19.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,org.quartz.TimeOfDay,org.quartz.TimeOfDay,org.quartz.DateBuilder$IntervalUnit,int)>("triggerName", "triggerGroup", $r20, null, $r21, $r22, $r23, 1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r30)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r11 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getStartTime()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>(null, $r26)
Unit: $r29 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getStartTime()>()
Unit: $r36 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: $r15 = new org.quartz.TimeOfDay
Unit: $r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: specialinvoke $r15.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: $r32 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.TimeOfDay getStartTimeOfDay()>()
Unit: return
Unit: $r22 = new org.quartz.TimeOfDay
Unit: $r8 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getJobName()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18)
Unit: specialinvoke $r21.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $r25 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getGroup()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r33, $r34)
Unit: $r30 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getEndTime()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("DEFAULT", $r27)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("jobGroup", $r9)
Unit: $r5 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: $r14 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.TimeOfDay getStartTimeOfDay()>()
Unit: $r16 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.TimeOfDay getEndTimeOfDay()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i1)
Unit: $i0 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: int getRepeatInterval()>()
Unit: $r23 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: specialinvoke $r31.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12)
Unit: specialinvoke $r22.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("jobName", $r8)
Unit: r38 = $r19
Unit: $r4 = new org.quartz.TimeOfDay
Unit: $r12 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getEndTime()>()
Unit: $r34 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.TimeOfDay getEndTimeOfDay()>()
Unit: $r6 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getName()>()
Unit: $i1 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: int getRepeatInterval()>()
Unit: $r18 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r31, $r32)
Unit: specialinvoke $r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,java.util.Date,org.quartz.TimeOfDay,org.quartz.TimeOfDay,org.quartz.DateBuilder$IntervalUnit,int)>("triggerName", "triggerGroup", "jobName", "jobGroup", $r2, null, $r3, $r4, $r5, 1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("triggerName", $r6)
Unit: specialinvoke $r33.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: $r3 = new org.quartz.TimeOfDay
Unit: $r33 = new org.quartz.TimeOfDay
Unit: specialinvoke $r3.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("triggerGroup", $r25)
 ====================================== 
** CLASS org.quartz.impl.calendar.DailyCalendar



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method clone ======= : 



======== method isTimeIncluded ======= : 



======== method getNextIncludedTime ======= : 



======== method getTimeRangeStartingTimeInMillis ======= : 



======== method getTimeRangeEndingTimeInMillis ======= : 



======== method getInvertTimeRange ======= : 



======== method setInvertTimeRange ======= : 



======== method toString ======= : 



======== method split ======= : 



======== method setTimeRange ======= : 



======== method setTimeRange ======= : 



======== method setTimeRange ======= : 



======== method setTimeRange ======= : 



======== method validate ======= : 

 ====================================== 
** CLASS org.quartz.core.jmx.JobExecutionContextSupport



======== method <init> ======= : 



======== method toCompositeData ======= : 



======== method toTabularData ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.SchedulerFactory



======== method getScheduler ======= : 



======== method getScheduler ======= : 



======== method getAllSchedulers ======= : 

 ====================================== 
** CLASS org.quartz.utils.ClassUtilsTest



======== method <init> ======= : 



======== method testIsAnnotationPresentOnSuperClass ======= : 

Unit: staticinvoke <org.quartz.utils.ClassUtilsTest: void assertTrue(boolean)>($z4)
Unit: r0 := @this: org.quartz.utils.ClassUtilsTest
Unit: staticinvoke <org.quartz.utils.ClassUtilsTest: void assertTrue(boolean)>($z0)
Unit: $z0 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$BaseJob;", class "Lorg/quartz/DisallowConcurrentExecution;")
Unit: $z4 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$ReallyExtendedJob;", class "Lorg/quartz/DisallowConcurrentExecution;")
Unit: return
Unit: $z5 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$ReallyExtendedJob;", class "Lorg/quartz/PersistJobDataAfterExecution;")
Unit: $z3 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$ExtendedJob;", class "Lorg/quartz/PersistJobDataAfterExecution;")
Unit: staticinvoke <org.quartz.utils.ClassUtilsTest: void assertTrue(boolean)>($z5)
Unit: staticinvoke <org.quartz.utils.ClassUtilsTest: void assertFalse(boolean)>($z1)
Unit: staticinvoke <org.quartz.utils.ClassUtilsTest: void assertTrue(boolean)>($z2)
Unit: $z2 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$ExtendedJob;", class "Lorg/quartz/DisallowConcurrentExecution;")
Unit: staticinvoke <org.quartz.utils.ClassUtilsTest: void assertFalse(boolean)>($z3)
Unit: $z1 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$BaseJob;", class "Lorg/quartz/PersistJobDataAfterExecution;")
 ====================================== 
** CLASS org.quartz.integrations.tests.Driver



======== method <init> ======= : 



======== method runall ======= : 

 ====================================== 
** CLASS org.quartz.impl.MockSQLException



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.utils.C3p0PoolingConnectionProvider



======== method <init> ======= : 



======== method <init> ======= : 



======== method initialize ======= : 



======== method getDataSource ======= : 



======== method getConnection ======= : 



======== method shutdown ======= : 



======== method initialize ======= : 



======== method getDataSource ======= : 

 ====================================== 
** CLASS org.quartz.simpl.InitThreadContextClassLoadHelper



======== method <init> ======= : 



======== method initialize ======= : 



======== method loadClass ======= : 



======== method loadClass ======= : 



======== method getResource ======= : 



======== method getResourceAsStream ======= : 



======== method getClassLoader ======= : 

 ====================================== 
** CLASS org.quartz.core.ListenerManagerImpl



======== method <init> ======= : 



======== method addJobListener ======= : 



======== method addJobListener ======= : 



======== method addJobListener ======= : 



======== method addJobListener ======= : 



======== method addJobListenerMatcher ======= : 



======== method removeJobListenerMatcher ======= : 



======== method getJobListenerMatchers ======= : 



======== method setJobListenerMatchers ======= : 



======== method removeJobListener ======= : 



======== method getJobListeners ======= : 



======== method getJobListener ======= : 



======== method addTriggerListener ======= : 



======== method addTriggerListener ======= : 



======== method addTriggerListener ======= : 



======== method addTriggerListener ======= : 



======== method addTriggerListenerMatcher ======= : 



======== method removeTriggerListenerMatcher ======= : 



======== method getTriggerListenerMatchers ======= : 



======== method setTriggerListenerMatchers ======= : 



======== method removeTriggerListener ======= : 



======== method getTriggerListeners ======= : 



======== method getTriggerListener ======= : 



======== method addSchedulerListener ======= : 



======== method removeSchedulerListener ======= : 



======== method getSchedulerListeners ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest$GoodJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.simpl.PropertySettingJobFactoryTest$TestBean



======== method <init> ======= : 



======== method getBooleanValue ======= : 



======== method setBooleanValue ======= : 



======== method getDoubleValue ======= : 



======== method setDoubleValue ======= : 



======== method getFloatValue ======= : 



======== method setFloatValue ======= : 



======== method getIntValue ======= : 



======== method setIntValue ======= : 



======== method getLongValue ======= : 



======== method setLongValue ======= : 



======== method getMapValue ======= : 



======== method setMapValue ======= : 



======== method getStringValue ======= : 



======== method setStringValue ======= : 



======== method getByteValue ======= : 



======== method setByteValue ======= : 



======== method getCharValue ======= : 



======== method setCharValue ======= : 



======== method getShortValue ======= : 



======== method setShortValue ======= : 



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.MSSQLDelegate



======== method <init> ======= : 



======== method getObjectFromBlob ======= : 



======== method getJobDataFromBlob ======= : 

 ====================================== 
** CLASS org.quartz.impl.RemoteMBeanScheduler



======== method <init> ======= : 



======== method getSchedulerObjectName ======= : 



======== method setSchedulerObjectName ======= : 



======== method setSchedulerObjectName ======= : 



======== method initialize ======= : 



======== method getAttribute ======= : 



======== method getAttributes ======= : 



======== method invoke ======= : 



======== method getSchedulerName ======= : 



======== method getSchedulerInstanceId ======= : 



======== method getMetaData ======= : 



======== method getAttribute ======= : 



======== method getContext ======= : 



======== method start ======= : 



======== method startDelayed ======= : 



======== method standby ======= : 



======== method isStarted ======= : 



======== method isInStandbyMode ======= : 



======== method shutdown ======= : 



======== method shutdown ======= : 



======== method isShutdown ======= : 



======== method getCurrentlyExecutingJobs ======= : 



======== method scheduleJob ======= : 



======== method scheduleJob ======= : 



======== method addJob ======= : 



======== method addJob ======= : 



======== method deleteJob ======= : 



======== method unscheduleJob ======= : 



======== method deleteJobs ======= : 



======== method scheduleJobs ======= : 



======== method scheduleJob ======= : 



======== method unscheduleJobs ======= : 



======== method rescheduleJob ======= : 



======== method triggerJob ======= : 



======== method triggerJob ======= : 



======== method pauseTrigger ======= : 



======== method pauseTriggers ======= : 



======== method pauseJob ======= : 



======== method pauseJobs ======= : 



======== method resumeTrigger ======= : 



======== method resumeTriggers ======= : 



======== method resumeJob ======= : 



======== method resumeJobs ======= : 



======== method pauseAll ======= : 



======== method resumeAll ======= : 



======== method getJobGroupNames ======= : 



======== method getJobKeys ======= : 



======== method getTriggersOfJob ======= : 



======== method getTriggerGroupNames ======= : 



======== method getTriggerKeys ======= : 



======== method getJobDetail ======= : 



======== method getTrigger ======= : 



======== method checkExists ======= : 



======== method checkExists ======= : 



======== method clear ======= : 



======== method getTriggerState ======= : 



======== method resetTriggerFromErrorState ======= : 



======== method addCalendar ======= : 



======== method deleteCalendar ======= : 



======== method getCalendar ======= : 



======== method getCalendarNames ======= : 



======== method getPausedTriggerGroups ======= : 



======== method getListenerManager ======= : 



======== method interrupt ======= : 



======== method interrupt ======= : 



======== method setJobFactory ======= : 

 ====================================== 
** CLASS org.quartz.core.jmx.JobDetailSupport



======== method <init> ======= : 



======== method newJobDetail ======= : 



======== method newJobDetail ======= : 



======== method toCompositeData ======= : 



======== method toTabularData ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest$TestJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.simpl.RAMJobStore$1



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.core.QuartzScheduler_Stub



======== method <clinit> ======= : 



======== method <init> ======= : 



======== method addCalendar ======= : 



======== method addJob ======= : 



======== method addJob ======= : 



======== method checkExists ======= : 



======== method checkExists ======= : 



======== method class$ ======= : 



======== method clear ======= : 



======== method deleteCalendar ======= : 



======== method deleteJob ======= : 



======== method deleteJobs ======= : 



======== method getCalendar ======= : 



======== method getCalendarNames ======= : 



======== method getCurrentlyExecutingJobs ======= : 



======== method getJobDetail ======= : 



======== method getJobGroupNames ======= : 



======== method getJobKeys ======= : 



======== method getJobStoreClass ======= : 



======== method getPausedTriggerGroups ======= : 



======== method getSchedulerContext ======= : 



======== method getSchedulerInstanceId ======= : 



======== method getSchedulerName ======= : 



======== method getThreadPoolClass ======= : 



======== method getThreadPoolSize ======= : 



======== method getTrigger ======= : 



======== method getTriggerGroupNames ======= : 



======== method getTriggerKeys ======= : 



======== method getTriggerState ======= : 



======== method getTriggersOfJob ======= : 



======== method getVersion ======= : 



======== method interrupt ======= : 



======== method interrupt ======= : 



======== method isClustered ======= : 



======== method isInStandbyMode ======= : 



======== method isShutdown ======= : 



======== method numJobsExecuted ======= : 



======== method pauseAll ======= : 



======== method pauseJob ======= : 



======== method pauseJobs ======= : 



======== method pauseTrigger ======= : 



======== method pauseTriggers ======= : 



======== method rescheduleJob ======= : 



======== method resetTriggerFromErrorState ======= : 



======== method resumeAll ======= : 



======== method resumeJob ======= : 



======== method resumeJobs ======= : 



======== method resumeTrigger ======= : 



======== method resumeTriggers ======= : 



======== method runningSince ======= : 



======== method scheduleJob ======= : 



======== method scheduleJob ======= : 



======== method scheduleJob ======= : 



======== method scheduleJobs ======= : 



======== method shutdown ======= : 



======== method shutdown ======= : 



======== method standby ======= : 



======== method start ======= : 



======== method startDelayed ======= : 



======== method supportsPersistence ======= : 



======== method triggerJob ======= : 



======== method triggerJob ======= : 



======== method unscheduleJob ======= : 



======== method unscheduleJobs ======= : 

 ====================================== 
** CLASS org.quartz.simpl.SimpleTimeBroker



======== method <init> ======= : 



======== method getCurrentTime ======= : 



======== method initialize ======= : 



======== method shutdown ======= : 

 ====================================== 
** CLASS org.quartz.RootDriver



======== method <init> ======= : 



======== method main ======= : 

 ====================================== 
** CLASS org.quartz.simpl.TriggerWrapper



======== method <init> ======= : 



======== method equals ======= : 



======== method hashCode ======= : 



======== method getTrigger ======= : 

 ====================================== 
** CLASS org.quartz.Qtz205SchedulerListenerTest



======== method <init> ======= : 



======== method testTriggerFinalized ======= : 

Unit: virtualinvoke r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.idleWaitTime", "1500")
Unit: interfaceinvoke r4.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r5, r6)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i1)
Unit: virtualinvoke r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "2")
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(5000L)
Unit: specialinvoke $r8.<org.quartz.Qtz205SchedulerListenerTest$Qtz205ScheListener: void <init>()>()
Unit: $r22 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r21)
Unit: r1 = $r7
Unit: $r21 = virtualinvoke $r20.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withRepeatCount(int)>(2)
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void start()>()
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void standby()>()
Unit: $r20 = virtualinvoke $r19.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInMilliseconds(long)>(250L)
Unit: $i1 = virtualinvoke r1.<org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener: int getFireCount()>()
Unit: $r9 = new java.util.Properties
Unit: r3 = $r9
Unit: $r13 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: interfaceinvoke $r14.<org.quartz.ListenerManager: void addTriggerListener(org.quartz.TriggerListener)>(r1)
Unit: $r15 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/Qtz205SchedulerListenerTest$Qtz205Job;")
Unit: $r16 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void start()>()
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: r2 = $r8
Unit: r4 = virtualinvoke $r12.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $i0 = staticinvoke <org.quartz.Qtz205SchedulerListenerTest$Qtz205Job: int access$100()>()
Unit: $r12 = new org.quartz.impl.StdSchedulerFactory
Unit: $i2 = virtualinvoke r2.<org.quartz.Qtz205SchedulerListenerTest$Qtz205ScheListener: int getTriggerFinalizedCount()>()
Unit: r6 = virtualinvoke $r22.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2)
Unit: r0 := @this: org.quartz.Qtz205SchedulerListenerTest
Unit: $r18 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: specialinvoke $r7.<org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener: void <init>()>()
Unit: $r7 = new org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener
Unit: $r17 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: return
Unit: r5 = virtualinvoke $r16.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r8 = new org.quartz.Qtz205SchedulerListenerTest$Qtz205ScheListener
Unit: interfaceinvoke $r13.<org.quartz.ListenerManager: void addSchedulerListener(org.quartz.SchedulerListener)>(r2)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i0)
Unit: $r14 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: specialinvoke $r9.<java.util.Properties: void <init>()>()
Unit: specialinvoke $r12.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r3)
Unit: $r19 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()


======== method access$000 ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$16



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$17



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$18



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$19



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$12



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.HelloJob



======== method <init> ======= : 



======== method execute ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$13



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$14



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$15



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeExtendedStatefulJob



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$10



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$11



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledCounterImpl$1



======== method <init> ======= : 



======== method run ======= : 

 ====================================== 
** CLASS org.quartz.JobExecutionContext



======== method getScheduler ======= : 



======== method getTrigger ======= : 



======== method getCalendar ======= : 



======== method isRecovering ======= : 



======== method getRecoveringTriggerKey ======= : 



======== method getRefireCount ======= : 



======== method getMergedJobDataMap ======= : 



======== method getJobDetail ======= : 



======== method getJobInstance ======= : 



======== method getFireTime ======= : 



======== method getScheduledFireTime ======= : 



======== method getPreviousFireTime ======= : 



======== method getNextFireTime ======= : 



======== method getFireInstanceId ======= : 



======== method getResult ======= : 



======== method setResult ======= : 



======== method getJobRunTime ======= : 



======== method put ======= : 



======== method get ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.CacheDelegate$1

 ====================================== 
** CLASS org.quartz.impl.calendar.DailyCalendarTest



======== method <init> ======= : 



======== method testStringStartEndTimes ======= : 

Unit: goto [?= staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z1)]
Unit: specialinvoke $r3.<org.quartz.impl.calendar.DailyCalendar: void <init>(java.lang.String,java.lang.String)>("1:20:1:456", "14:50:15:2")
Unit: r6 = $r3
Unit: if $i0 <= 0 goto $z0 = 0
Unit: $z1 = 0
Unit: goto [?= staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z0)]
Unit: $z0 = 0
Unit: $r3 = new org.quartz.impl.calendar.DailyCalendar
Unit: r0 := @this: org.quartz.impl.calendar.DailyCalendarTest
Unit: $r1 = new org.quartz.impl.calendar.DailyCalendar
Unit: specialinvoke $r1.<org.quartz.impl.calendar.DailyCalendar: void <init>(java.lang.String,java.lang.String)>("1:20", "14:50")
Unit: staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z1)
Unit: $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("01:20:00:000 - 14:50:00:000")
Unit: r5 = $r1
Unit: $r2 = virtualinvoke r5.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>()
Unit: $r4 = virtualinvoke r6.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>()
Unit: $z0 = 1
Unit: if $i1 <= 0 goto $z1 = 0
Unit: $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("01:20:01:456 - 14:50:15:002")
Unit: return
Unit: staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z0)
Unit: $z1 = 1


======== method testStringInvertTimeRange ======= : 

Unit: if $i1 <= 0 goto $z1 = 0
Unit: $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("inverted: false")
Unit: $z0 = 1
Unit: $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("inverted: true")
Unit: specialinvoke $r2.<org.quartz.impl.calendar.DailyCalendar: void <init>(java.lang.String,java.lang.String)>("1:20", "14:50")
Unit: return
Unit: goto [?= staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z1)]
Unit: $r4 = virtualinvoke r1.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>()
Unit: $z0 = 0
Unit: $r3 = virtualinvoke r1.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>()
Unit: $z1 = 0
Unit: r0 := @this: org.quartz.impl.calendar.DailyCalendarTest
Unit: goto [?= staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z0)]
Unit: if $i0 <= 0 goto $z0 = 0
Unit: staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z0)
Unit: r1 = $r2
Unit: $z1 = 1
Unit: $r2 = new org.quartz.impl.calendar.DailyCalendar
Unit: virtualinvoke r1.<org.quartz.impl.calendar.DailyCalendar: void setInvertTimeRange(boolean)>(0)
Unit: virtualinvoke r1.<org.quartz.impl.calendar.DailyCalendar: void setInvertTimeRange(boolean)>(1)
Unit: staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z1)


======== method getTargetObject ======= : 



======== method getVersions ======= : 



======== method verifyMatch ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.calendar.BaseCalendarTest



======== method <init> ======= : 



======== method testClone ======= : 

Unit: staticinvoke <org.quartz.impl.calendar.BaseCalendarTest: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: staticinvoke <org.quartz.impl.calendar.BaseCalendarTest: void assertEquals(java.lang.String,java.lang.String)>($r5, $r6)
Unit: $r8 = virtualinvoke r2.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar getBaseCalendar()>()
Unit: r2 = (org.quartz.impl.calendar.BaseCalendar) $r4
Unit: return
Unit: $r6 = virtualinvoke r2.<org.quartz.impl.calendar.BaseCalendar: java.lang.String getDescription()>()
Unit: $r9 = virtualinvoke r1.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone getTimeZone()>()
Unit: $r10 = virtualinvoke r2.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone getTimeZone()>()
Unit: staticinvoke <org.quartz.impl.calendar.BaseCalendarTest: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r5 = virtualinvoke r1.<org.quartz.impl.calendar.BaseCalendar: java.lang.String getDescription()>()
Unit: $r3 = new org.quartz.impl.calendar.BaseCalendar
Unit: $r4 = virtualinvoke r1.<org.quartz.impl.calendar.BaseCalendar: java.lang.Object clone()>()
Unit: r1 = $r3
Unit: specialinvoke $r3.<org.quartz.impl.calendar.BaseCalendar: void <init>()>()
Unit: $r7 = virtualinvoke r1.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar getBaseCalendar()>()
Unit: r0 := @this: org.quartz.impl.calendar.BaseCalendarTest
 ====================================== 
** CLASS org.quartz.SimpleTriggerTest



======== method <init> ======= : 



======== method getTargetObject ======= : 



======== method getVersions ======= : 



======== method verifyMatch ======= : 



======== method testUpdateAfterMisfire ======= : 

Unit: $r9 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r5 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: void setEndTime(java.util.Date)>($r6)
Unit: $r8 = virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: java.util.Date getStartTime()>()
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: void setStartTime(java.util.Date)>($r5)
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: specialinvoke $r4.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>()>()
Unit: virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(2)
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: void setRepeatCount(int)>(5)
Unit: $r11 = virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: java.util.Date getNextFireTime()>()
Unit: r0 := @this: org.quartz.SimpleTriggerTest
Unit: $r10 = virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: java.util.Date getEndTime()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 6, 5, 10, 0, 0)
Unit: return
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertNull(java.lang.Object)>($r11)
Unit: $r6 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r4 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r3 = $r4
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 6, 5, 9, 0, 0)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: void updateAfterMisfire(org.quartz.Calendar)>(null)


======== method testGetFireTimeAfter ======= : 

Unit: r0 := @this: org.quartz.SimpleTriggerTest
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(long,long)>(40L, $l0)
Unit: $r3 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setRepeatInterval(long)>(10L)
Unit: specialinvoke $r5.<java.util.Date: void <init>(long)>(34L)
Unit: specialinvoke $r4.<java.util.Date: void <init>(long)>(0L)
Unit: return
Unit: r2 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r5)
Unit: $r4 = new java.util.Date
Unit: $r5 = new java.util.Date
Unit: specialinvoke $r3.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>()>()
Unit: $l0 = virtualinvoke r2.<java.util.Date: long getTime()>()
Unit: r1 = $r3
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setStartTime(java.util.Date)>($r4)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setRepeatCount(int)>(4)


======== method testClone ======= : 

Unit: virtualinvoke $r13.<org.quartz.JobDataMap: java.lang.Object remove(java.lang.Object)>("K1")
Unit: virtualinvoke $r6.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("K2", "V2")
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(int,int)>(2, $i1)
Unit: $r17 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r9 = interfaceinvoke r22.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: r1 = $r2
Unit: r21 = (org.quartz.Trigger) $r3
Unit: $r4 = interfaceinvoke r21.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: $i2 = virtualinvoke $r15.<org.quartz.JobDataMap: int size()>()
Unit: $r5 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: org.quartz.JobDataMap getJobDataMap()>()
Unit: return
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(java.lang.Object,java.lang.Object)>("V2", $r12)
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(int,int)>(2, $i3)
Unit: $i1 = virtualinvoke $r8.<org.quartz.JobDataMap: int size()>()
Unit: $r10 = virtualinvoke $r9.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>("K1")
Unit: $r19 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: org.quartz.JobDataMap getJobDataMap()>()
Unit: r0 := @this: org.quartz.SimpleTriggerTest
Unit: $i0 = virtualinvoke $r4.<org.quartz.JobDataMap: int size()>()
Unit: $r11 = interfaceinvoke r22.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(int,int)>(1, $i2)
Unit: $r16 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: org.quartz.JobDataMap getJobDataMap()>()
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(java.lang.Object,java.lang.Object)>("V2", $r20)
Unit: $r3 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: java.lang.Object clone()>()
Unit: $r2 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: $r18 = virtualinvoke $r17.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>("K1")
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(int,int)>(0, $i0)
Unit: $r6 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r13 = interfaceinvoke r22.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r12 = virtualinvoke $r11.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>("K2")
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(java.lang.Object,java.lang.Object)>("V1", $r18)
Unit: $r8 = interfaceinvoke r22.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r15 = interfaceinvoke r22.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: virtualinvoke $r5.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("K1", "V1")
Unit: $r20 = virtualinvoke $r19.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>("K2")
Unit: r22 = (org.quartz.Trigger) $r7
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(java.lang.Object,java.lang.Object)>("V1", $r10)
Unit: specialinvoke $r2.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>()>()
Unit: $r7 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: java.lang.Object clone()>()
Unit: $i3 = virtualinvoke $r16.<org.quartz.JobDataMap: int size()>()


======== method testQuartz665 ======= : 

Unit: r0 := @this: org.quartz.SimpleTriggerTest
Unit: $r1 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: specialinvoke $r2.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>()>()
Unit: specialinvoke $r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>()>()
Unit: $r2 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: virtualinvoke $r1.<org.quartz.impl.triggers.SimpleTriggerImpl: boolean equals(java.lang.Object)>($r2)
Unit: return


======== method testMisfireInstructionValidity ======= : 

Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(1)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(0)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(4)
Unit: goto [?= virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(6)]
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(5)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(6)
Unit: specialinvoke $r2.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>()>()
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void fail(java.lang.String)>("Expected exception while setting invalid misfire instruction but did not get it.")
Unit: r1 = $r2
Unit: return
Unit: $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
Unit: goto [?= return]
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(-1)
Unit: $r3 := @caughtexception
Unit: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected exception while setting misfire instruction: ")
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void fail(java.lang.String)>($r9)
Unit: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r2 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
Unit: $r5 = new java.lang.StringBuilder
Unit: r11 = $r3
Unit: $r4 := @caughtexception
Unit: r10 = $r4
Unit: $r7 = virtualinvoke r10.<java.lang.Exception: java.lang.String getMessage()>()
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(3)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(2)
Unit: r0 := @this: org.quartz.SimpleTriggerTest


======== method main ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.xml.XMLSchedulingDataProcessorTest



======== method <init> ======= : 



======== method testOverwriteFlag ======= : 

Unit: interfaceinvoke r37.<org.quartz.Scheduler: void shutdown()>()
Unit: $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove test file ")
Unit: r37 = null
Unit: r3 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: throw $r31
Unit: $r20 = interfaceinvoke r37.<org.quartz.Scheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>($r19)
Unit: $r12 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $i1 = interfaceinvoke $r22.<java.util.Set: int size()>()
Unit: if r37 == null goto throw r6
Unit: specialinvoke $r8.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/xml/quartz-test.properties")
Unit: r1 = $r7
Unit: $r10 = virtualinvoke $r9.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: $r24 = interfaceinvoke r40.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>()
Unit: $z1 = virtualinvoke r1.<java.io.File: boolean delete()>()
Unit: interfaceinvoke r37.<org.quartz.Scheduler: void shutdown()>()
Unit: r4 = $r17
Unit: $r23 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String)>("job1")
Unit: if $z3 != 0 goto (branch)
Unit: $r8 = new org.quartz.impl.StdSchedulerFactory
Unit: r40 = interfaceinvoke r37.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r23)
Unit: $r31 = new java.lang.RuntimeException
Unit: r37 = virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: void copyResourceToFile(java.lang.String,java.io.File)>("/org/quartz/xml/simple-job-trigger.xml", r1)
Unit: specialinvoke $r18.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r4)
Unit: $r15 = virtualinvoke $r13.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r14)
Unit: interfaceinvoke r4.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: $r25 = new java.lang.RuntimeException
Unit: virtualinvoke r5.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(org.quartz.Scheduler,boolean)>(r37, 0)
Unit: $r22 = interfaceinvoke r37.<org.quartz.Scheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>($r21)
Unit: r5 = $r18
Unit: goto [?= return]
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: $r32 = new java.lang.StringBuilder
Unit: $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(java.lang.String,java.lang.String)>("dont_chg_me", r41)
Unit: $r19 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("DEFAULT")
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("job1")
Unit: $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String)>($r35)
Unit: specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.String)>($r29)
Unit: $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: throw $r25
Unit: $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove test file ")
Unit: $r14 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatHourlyForever()>()
Unit: return
Unit: $r36 := @caughtexception
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void fail(java.lang.String)>("OverWriteExisting flag didn\'t work. We should get Exception when overwrite is set to false.")
Unit: $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Unit: $r9 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: r41 = virtualinvoke $r24.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("foo")
Unit: r6 = $r30
Unit: $z2 = virtualinvoke r1.<java.io.File: boolean exists()>()
Unit: specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>("quartz_data.xml")
Unit: throw r6
Unit: interfaceinvoke r37.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r38, r3)
Unit: r39 = $r36
Unit: if $z2 == 0 goto (branch)
Unit: $r30 := @caughtexception
Unit: $r7 = new java.io.File
Unit: $r17 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
Unit: if $z0 == 0 goto (branch)
Unit: specialinvoke $r17.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: $r11 = virtualinvoke $r10.<org.quartz.JobBuilder: org.quartz.JobBuilder usingJobData(java.lang.String,java.lang.String)>("foo", "dont_chg_me")
Unit: $i0 = interfaceinvoke $r20.<java.util.Set: int size()>()
Unit: if r37 == null goto return
Unit: r38 = virtualinvoke $r11.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: goto [?= $r19 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("DEFAULT")]
Unit: $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(1, $i1)
Unit: $z3 = virtualinvoke r1.<java.io.File: boolean delete()>()
Unit: r2 = $r8
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(1, $i0)
Unit: specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
Unit: if $z1 != 0 goto (branch)
Unit: $r26 = new java.lang.StringBuilder
Unit: $r21 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("DEFAULT")
Unit: $r18 = new org.quartz.xml.XMLSchedulingDataProcessor


======== method copyResourceToFile ======= : 



======== method testDirectivesNoOverwriteWithIgnoreDups ======= : 

Unit: r27 = null
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(2, $i1)
Unit: $r18 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r17)
Unit: goto [?= return]
Unit: if r27 == null goto return
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("job1")
Unit: $r10 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatHourlyForever()>()
Unit: interfaceinvoke r27.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r28, r29)
Unit: $r14 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job2")
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(2, $i0)
Unit: $i1 = interfaceinvoke $r25.<java.util.Set: int size()>()
Unit: interfaceinvoke r2.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: interfaceinvoke r27.<org.quartz.Scheduler: void shutdown()>()
Unit: return
Unit: if r27 == null goto throw r4
Unit: r2 = $r20
Unit: $r17 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatHourlyForever()>()
Unit: $r22 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("DEFAULT")
Unit: $r26 := @caughtexception
Unit: r3 = $r21
Unit: r31 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: interfaceinvoke r27.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r30, r31)
Unit: $r21 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: specialinvoke $r20.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: $r15 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r1 = $r5
Unit: virtualinvoke r3.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/directives_no-overwrite_ignoredups.xml", r27)
Unit: r28 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r20 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: specialinvoke $r21.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r2)
Unit: throw r4
Unit: interfaceinvoke r27.<org.quartz.Scheduler: void shutdown()>()
Unit: $r5 = new org.quartz.impl.StdSchedulerFactory
Unit: $r11 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r10)
Unit: $r16 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("job2")
Unit: $i0 = interfaceinvoke $r23.<java.util.Set: int size()>()
Unit: $r13 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: $r23 = interfaceinvoke r27.<org.quartz.Scheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>($r22)
Unit: r27 = virtualinvoke r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: r29 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r8 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r30 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r6 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: $r25 = interfaceinvoke r27.<org.quartz.Scheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>($r24)
Unit: specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/xml/quartz-test.properties")
Unit: $r24 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("DEFAULT")
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: $r7 = virtualinvoke $r6.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: r4 = $r26


======== method testDirectivesOverwriteWithNoIgnoreDups ======= : 

Unit: if r27 == null goto throw r4
Unit: $r7 = virtualinvoke $r6.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/xml/quartz-test.properties")
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("job1")
Unit: interfaceinvoke r27.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r30, r31)
Unit: if r27 == null goto return
Unit: r30 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r14 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job2")
Unit: r4 = $r26
Unit: $r11 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r10)
Unit: $i0 = interfaceinvoke $r23.<java.util.Set: int size()>()
Unit: $r15 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r27 = virtualinvoke r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: $r24 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("DEFAULT")
Unit: r27 = null
Unit: return
Unit: virtualinvoke r3.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/directives_overwrite_no-ignoredups.xml", r27)
Unit: r1 = $r5
Unit: r3 = $r21
Unit: $i1 = interfaceinvoke $r25.<java.util.Set: int size()>()
Unit: $r5 = new org.quartz.impl.StdSchedulerFactory
Unit: $r23 = interfaceinvoke r27.<org.quartz.Scheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>($r22)
Unit: $r6 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: r28 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r13 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: r2 = $r20
Unit: $r18 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r17)
Unit: interfaceinvoke r27.<org.quartz.Scheduler: void shutdown()>()
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(2, $i0)
Unit: $r17 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatHourlyForever()>()
Unit: $r21 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: $r16 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("job2")
Unit: $r26 := @caughtexception
Unit: r31 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: interfaceinvoke r27.<org.quartz.Scheduler: void shutdown()>()
Unit: specialinvoke $r21.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r2)
Unit: $r8 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(2, $i1)
Unit: $r10 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatHourlyForever()>()
Unit: goto [?= return]
Unit: throw r4
Unit: interfaceinvoke r27.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r28, r29)
Unit: $r25 = interfaceinvoke r27.<org.quartz.Scheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>($r24)
Unit: r29 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r20 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: specialinvoke $r20.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: interfaceinvoke r2.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: $r22 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("DEFAULT")


======== method testXsdSchemaValidationOnVariousTriggers ======= : 

Unit: $r11 = interfaceinvoke r13.<org.quartz.Scheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>($r10)
Unit: $r7 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: if r13 == null goto return
Unit: interfaceinvoke r13.<org.quartz.Scheduler: void shutdown()>()
Unit: $r9 = interfaceinvoke r13.<org.quartz.Scheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>($r8)
Unit: r13 = null
Unit: goto [?= return]
Unit: return
Unit: $i0 = interfaceinvoke $r9.<java.util.Set: int size()>()
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(1, $i0)
Unit: $r8 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("DEFAULT")
Unit: $i1 = interfaceinvoke $r11.<java.util.Set: int size()>()
Unit: r13 = virtualinvoke r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r10 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("DEFAULT")
Unit: r2 = $r6
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: r1 = $r5
Unit: specialinvoke $r6.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/xml/quartz-test.properties")
Unit: specialinvoke $r7.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r2)
Unit: r3 = $r7
Unit: interfaceinvoke r2.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: $r6 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: throw r4
Unit: $r5 = new org.quartz.impl.StdSchedulerFactory
Unit: interfaceinvoke r13.<org.quartz.Scheduler: void shutdown()>()
Unit: if r13 == null goto throw r4
Unit: r4 = $r12
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(35, $i1)
Unit: $r12 := @caughtexception
Unit: virtualinvoke r3.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/job-scheduling-data-2.0_trigger-samples.xml", r13)


======== method testQTZ327SimpleTriggerNoRepeat ======= : 

Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(1, $i1)
Unit: $r9 = interfaceinvoke r13.<org.quartz.Scheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>($r8)
Unit: specialinvoke $r7.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r2)
Unit: interfaceinvoke r13.<org.quartz.Scheduler: void shutdown()>()
Unit: return
Unit: virtualinvoke r3.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/simple-job-trigger-no-repeat.xml", r13)
Unit: $r10 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("DEFAULT")
Unit: if r13 == null goto throw r4
Unit: if r13 == null goto return
Unit: r3 = $r7
Unit: throw r4
Unit: $r6 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: r2 = $r6
Unit: r13 = virtualinvoke r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: interfaceinvoke r13.<org.quartz.Scheduler: void shutdown()>()
Unit: $r7 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: r13 = null
Unit: $r11 = interfaceinvoke r13.<org.quartz.Scheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>($r10)
Unit: $i1 = interfaceinvoke $r11.<java.util.Set: int size()>()
Unit: r4 = $r12
Unit: goto [?= return]
Unit: $r8 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("DEFAULT")
Unit: r1 = $r5
Unit: specialinvoke $r6.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: $r12 := @caughtexception
Unit: interfaceinvoke r2.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: $i0 = interfaceinvoke $r9.<java.util.Set: int size()>()
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(1, $i0)
Unit: specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/xml/quartz-test.properties")
Unit: $r5 = new org.quartz.impl.StdSchedulerFactory


======== method dateOfGMT_UTC ======= : 



======== method dateOfLocalTime ======= : 



======== method testTimeZones ======= : 

Unit: $r12 = interfaceinvoke r20.<org.quartz.Trigger: java.util.Date getEndTime()>()
Unit: if r19 == null goto throw r4
Unit: virtualinvoke r3.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/simple-job-trigger-with-timezones.xml", r19)
Unit: interfaceinvoke r2.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: $r8 = new org.quartz.TriggerKey
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: $r5 = new org.quartz.impl.StdSchedulerFactory
Unit: r19 = null
Unit: r19 = virtualinvoke r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: specialinvoke $r6.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: $r14 = specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: java.util.Date dateOfLocalTime(int,int,int,int,int,int)>(6, 0, 0, 1, 0, 2012)
Unit: $r11 = specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: java.util.Date dateOfGMT_UTC(int,int,int,int,int,int)>(19, 0, 0, 1, 0, 2012)
Unit: specialinvoke $r7.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r2)
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r17)
Unit: if r19 == null goto return
Unit: r1 = $r5
Unit: goto [?= return]
Unit: r20 = interfaceinvoke r19.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r8)
Unit: r21 = interfaceinvoke r19.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r13)
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15)
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: interfaceinvoke r19.<org.quartz.Scheduler: void shutdown()>()
Unit: specialinvoke $r13.<org.quartz.TriggerKey: void <init>(java.lang.String,java.lang.String)>("job2", "DEFAULT")
Unit: $r9 = specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: java.util.Date dateOfGMT_UTC(int,int,int,int,int,int)>(18, 0, 0, 1, 0, 2012)
Unit: return
Unit: throw r4
Unit: specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/xml/quartz-test.properties")
Unit: $r7 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertNotNull(java.lang.Object)>(r20)
Unit: interfaceinvoke r19.<org.quartz.Scheduler: void shutdown()>()
Unit: $r10 = interfaceinvoke r20.<org.quartz.Trigger: java.util.Date getStartTime()>()
Unit: r2 = $r6
Unit: r3 = $r7
Unit: $r16 = specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: java.util.Date dateOfGMT_UTC(int,int,int,int,int,int)>(19, 0, 0, 1, 0, 2012)
Unit: r4 = $r18
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r6 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: $r17 = interfaceinvoke r21.<org.quartz.Trigger: java.util.Date getEndTime()>()
Unit: specialinvoke $r8.<org.quartz.TriggerKey: void <init>(java.lang.String,java.lang.String)>("job1", "DEFAULT")
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertNotNull(java.lang.Object)>(r21)
Unit: $r18 := @caughtexception
Unit: $r13 = new org.quartz.TriggerKey
Unit: $r15 = interfaceinvoke r21.<org.quartz.Trigger: java.util.Date getStartTime()>()


======== method testRemoveJobClassNotFound ======= : 

Unit: specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: void modifyStoredJobClassName()>()
Unit: $r36 = interfaceinvoke r45.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>()
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(0)
Unit: $r17 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r7 = $r28
Unit: $r16 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobBuilder usingJobData(java.lang.String,java.lang.String)>("foo", "foo")
Unit: $r28 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: interfaceinvoke r7.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: r46 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r35)
Unit: $r10 = new org.quartz.impl.jdbcjobstore.JobStoreTX
Unit: $r11 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: $r37 = virtualinvoke $r36.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("foo")
Unit: $r13 = staticinvoke <org.quartz.impl.SchedulerRepository: org.quartz.impl.SchedulerRepository getInstance()>()
Unit: r44 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r31)
Unit: $r29 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: $r38 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("bar")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r43, $r33)
Unit: throw r9
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: r4 = virtualinvoke $r13.<org.quartz.impl.SchedulerRepository: org.quartz.Scheduler lookup(java.lang.String)>(r2)
Unit: $r35 = new org.quartz.TriggerKey
Unit: virtualinvoke $r11.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(java.lang.String,java.lang.String,org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>(r2, "AUTO", $r12, r3)
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setTablePrefix(java.lang.String)>("QRTZ_")
Unit: $r26 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("foo")
Unit: virtualinvoke r8.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/delete-no-jobclass.xml", r4)
Unit: r42 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r23)
Unit: r1 = "XmlDeleteNonExistsJobTestDatasase"
Unit: specialinvoke $r35.<org.quartz.TriggerKey: void <init>(java.lang.String,java.lang.String)>("job1", "DEFAULT")
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>(r1)
Unit: $r33 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher nullValue()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r46, $r39)
Unit: $r32 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher nullValue()>()
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>(r1)
Unit: $r22 = interfaceinvoke r5.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r18 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("testjob1", "DEFAULT")
Unit: specialinvoke $r10.<org.quartz.impl.jdbcjobstore.JobStoreTX: void <init>()>()
Unit: $r14 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: specialinvoke $r28.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: $r12 = new org.quartz.simpl.SimpleThreadPool
Unit: r43 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r30)
Unit: $r40 := @caughtexception
Unit: r8 = $r29
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(0)
Unit: specialinvoke $r12.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(4, 5)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r37, $r38)
Unit: interfaceinvoke r4.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r5, r6)
Unit: $r24 = interfaceinvoke r41.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r44, $r32)
Unit: r9 = $r40
Unit: goto [?= return]
Unit: $r20 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r19)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r25, $r26)
Unit: return
Unit: $r23 = interfaceinvoke r6.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: r3 = $r10
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r42, $r27)
Unit: $r39 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher instanceOf(java.lang.Class)>(class "Lorg/quartz/SimpleTrigger;")
Unit: r5 = virtualinvoke $r16.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: specialinvoke $r34.<org.quartz.JobKey: void <init>(java.lang.String,java.lang.String)>("job1", "DEFAULT")
Unit: $r25 = virtualinvoke $r24.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("foo")
Unit: r2 = "XmlDeleteNonExistsJobTestScheduler"
Unit: specialinvoke $r29.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r7)
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceId(java.lang.String)>("AUTO")
Unit: $r31 = interfaceinvoke r6.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void createDatabase(java.lang.String)>(r1)
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setDataSource(java.lang.String)>(r1)
Unit: $r34 = new org.quartz.JobKey
Unit: r41 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r22)
Unit: $r30 = interfaceinvoke r5.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: r45 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r34)
Unit: $r15 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("testjob1", "DEFAULT")
Unit: r6 = virtualinvoke $r20.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r27 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher instanceOf(java.lang.Class)>(class "Lorg/quartz/CronTrigger;")
Unit: $r19 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")


======== method testOverwriteJobClassNotFound ======= : 

Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: specialinvoke $r28.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: r37 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r22)
Unit: $r27 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher instanceOf(java.lang.Class)>(class "Lorg/quartz/CronTrigger;")
Unit: $r16 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobBuilder usingJobData(java.lang.String,java.lang.String)>("foo", "foo")
Unit: $r18 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("job1", "DEFAULT")
Unit: r5 = virtualinvoke $r16.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: interfaceinvoke r7.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setTablePrefix(java.lang.String)>("QRTZ_")
Unit: r7 = $r28
Unit: $r20 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r19)
Unit: $r10 = new org.quartz.impl.jdbcjobstore.JobStoreTX
Unit: virtualinvoke $r11.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(java.lang.String,java.lang.String,org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>(r2, "AUTO", $r12, r3)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>(r1)
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(0)
Unit: r9 = $r36
Unit: $r13 = staticinvoke <org.quartz.impl.SchedulerRepository: org.quartz.impl.SchedulerRepository getInstance()>()
Unit: throw r9
Unit: goto [?= return]
Unit: r1 = "XmlDeleteNonExistsJobTestDatasase"
Unit: r38 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r23)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r33, $r34)
Unit: $r14 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: specialinvoke $r10.<org.quartz.impl.jdbcjobstore.JobStoreTX: void <init>()>()
Unit: r39 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r30)
Unit: $r32 = interfaceinvoke r39.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r35)
Unit: $r35 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher instanceOf(java.lang.Class)>(class "Lorg/quartz/SimpleTrigger;")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r25, $r26)
Unit: specialinvoke $r29.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r7)
Unit: return
Unit: $r25 = virtualinvoke $r24.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("foo")
Unit: specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: void modifyStoredJobClassName()>()
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(0)
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceId(java.lang.String)>("AUTO")
Unit: $r24 = interfaceinvoke r37.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>()
Unit: r8 = $r29
Unit: r3 = $r10
Unit: r2 = "XmlDeleteNonExistsJobTestScheduler"
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void createDatabase(java.lang.String)>(r1)
Unit: r6 = virtualinvoke $r20.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: interfaceinvoke r4.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r5, r6)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r27)
Unit: $r36 := @caughtexception
Unit: r4 = virtualinvoke $r13.<org.quartz.impl.SchedulerRepository: org.quartz.Scheduler lookup(java.lang.String)>(r2)
Unit: $r28 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: virtualinvoke r8.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/overwrite-no-jobclass.xml", r4)
Unit: $r30 = interfaceinvoke r5.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r11 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: $r33 = virtualinvoke $r32.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("foo")
Unit: specialinvoke $r12.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(4, 5)
Unit: $r15 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("job1", "DEFAULT")
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setDataSource(java.lang.String)>(r1)
Unit: $r17 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r19 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r22 = interfaceinvoke r5.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r26 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("foo")
Unit: $r29 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: $r31 = interfaceinvoke r6.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: r40 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r31)
Unit: $r23 = interfaceinvoke r6.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>(r1)
Unit: $r34 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("bar")
Unit: $r12 = new org.quartz.simpl.SimpleThreadPool


======== method modifyStoredJobClassName ======= : 

 ====================================== 
** CLASS org.quartz.utils.DBConnectionManager



======== method <init> ======= : 



======== method addConnectionProvider ======= : 



======== method getConnection ======= : 



======== method getInstance ======= : 



======== method shutdown ======= : 



======== method getConnectionProvider ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.core.jmx.CronTriggerSupport



======== method <init> ======= : 



======== method getItemNames ======= : 



======== method getItemDescriptions ======= : 



======== method getItemTypes ======= : 



======== method toCompositeData ======= : 



======== method toTabularData ======= : 



======== method newTrigger ======= : 



======== method newTrigger ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.Driver



======== method <init> ======= : 



======== method runall ======= : 

 ====================================== 
** CLASS org.quartz.FlakyJdbcSchedulerTest$TestJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.SimpleSemaphore



======== method <init> ======= : 



======== method getLog ======= : 



======== method getThreadLocks ======= : 



======== method obtainLock ======= : 



======== method releaseLock ======= : 



======== method isLockOwner ======= : 



======== method requiresConnection ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdJDBCDelegate



======== method <init> ======= : 



======== method initialize ======= : 



======== method addDefaultTriggerPersistenceDelegates ======= : 



======== method canUseProperties ======= : 



======== method addTriggerPersistenceDelegate ======= : 



======== method findTriggerPersistenceDelegate ======= : 



======== method findTriggerPersistenceDelegate ======= : 



======== method updateTriggerStatesFromOtherStates ======= : 



======== method selectMisfiredTriggers ======= : 



======== method selectTriggersInState ======= : 



======== method selectMisfiredTriggersInState ======= : 



======== method hasMisfiredTriggersInState ======= : 



======== method countMisfiredTriggersInState ======= : 



======== method selectMisfiredTriggersInGroupInState ======= : 



======== method selectTriggersForRecoveringJobs ======= : 



======== method deleteFiredTriggers ======= : 



======== method deleteFiredTriggers ======= : 



======== method clearData ======= : 



======== method insertJobDetail ======= : 



======== method updateJobDetail ======= : 



======== method selectTriggerKeysForJob ======= : 



======== method deleteJobDetail ======= : 



======== method isJobNonConcurrent ======= : 



======== method jobExists ======= : 



======== method updateJobData ======= : 



======== method selectJobDetail ======= : 



======== method getMapFromProperties ======= : 



======== method selectNumJobs ======= : 



======== method selectJobGroups ======= : 



======== method selectJobsInGroup ======= : 



======== method isMatcherEquals ======= : 



======== method toSqlEqualsClause ======= : 



======== method toSqlLikeClause ======= : 



======== method insertTrigger ======= : 



======== method insertBlobTrigger ======= : 



======== method updateTrigger ======= : 



======== method updateBlobTrigger ======= : 



======== method triggerExists ======= : 



======== method updateTriggerState ======= : 



======== method updateTriggerStateFromOtherStates ======= : 



======== method updateTriggerGroupStateFromOtherStates ======= : 



======== method updateTriggerStateFromOtherState ======= : 



======== method updateTriggerGroupStateFromOtherState ======= : 



======== method updateTriggerStatesForJob ======= : 



======== method updateTriggerStatesForJobFromOtherState ======= : 



======== method deleteBlobTrigger ======= : 



======== method deleteTrigger ======= : 



======== method deleteTriggerExtension ======= : 



======== method selectNumTriggersForJob ======= : 



======== method selectJobForTrigger ======= : 



======== method selectJobForTrigger ======= : 



======== method selectTriggersForJob ======= : 



======== method selectTriggersForCalendar ======= : 



======== method selectTrigger ======= : 



======== method isTriggerStillPresent ======= : 



======== method setTriggerStateProperties ======= : 



======== method selectTriggerJobDataMap ======= : 



======== method selectTriggerState ======= : 



======== method selectTriggerStatus ======= : 



======== method selectNumTriggers ======= : 



======== method selectTriggerGroups ======= : 



======== method selectTriggerGroups ======= : 



======== method selectTriggersInGroup ======= : 



======== method insertPausedTriggerGroup ======= : 



======== method deletePausedTriggerGroup ======= : 



======== method deletePausedTriggerGroup ======= : 



======== method deleteAllPausedTriggerGroups ======= : 



======== method isTriggerGroupPaused ======= : 



======== method isExistingTriggerGroup ======= : 



======== method insertCalendar ======= : 



======== method updateCalendar ======= : 



======== method calendarExists ======= : 



======== method selectCalendar ======= : 



======== method calendarIsReferenced ======= : 



======== method deleteCalendar ======= : 



======== method selectNumCalendars ======= : 



======== method selectCalendars ======= : 



======== method selectNextFireTime ======= : 



======== method selectTriggerForFireTime ======= : 



======== method selectTriggerToAcquire ======= : 



======== method selectTriggerToAcquire ======= : 



======== method insertFiredTrigger ======= : 



======== method updateFiredTrigger ======= : 



======== method selectFiredTriggerRecords ======= : 



======== method selectFiredTriggerRecordsByJob ======= : 



======== method selectInstancesFiredTriggerRecords ======= : 



======== method selectFiredTriggerInstanceNames ======= : 



======== method deleteFiredTrigger ======= : 



======== method selectJobExecutionCount ======= : 



======== method insertSchedulerState ======= : 



======== method deleteSchedulerState ======= : 



======== method updateSchedulerState ======= : 



======== method selectSchedulerStateRecords ======= : 



======== method rtp ======= : 



======== method getSchedulerNameLiteral ======= : 



======== method serializeObject ======= : 



======== method serializeJobData ======= : 



======== method getKeyOfNonSerializableValue ======= : 



======== method serializeProperties ======= : 



======== method convertFromProperty ======= : 



======== method convertToProperty ======= : 



======== method getObjectFromBlob ======= : 



======== method getJobDataFromBlob ======= : 



======== method selectPausedTriggerGroups ======= : 



======== method closeResultSet ======= : 



======== method closeStatement ======= : 



======== method setBoolean ======= : 



======== method getBoolean ======= : 



======== method getBoolean ======= : 



======== method setBytes ======= : 



======== method selectTriggerForFireTime ======= : 

 ====================================== 
** CLASS org.quartz.impl.RemoteMBeanSchedulerTest$HelloJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$TransactionCallback



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.DailyTimeIntervalScheduleBuilderTest$MyJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.spi.ThreadExecutor



======== method execute ======= : 



======== method initialize ======= : 

 ====================================== 
** CLASS org.quartz.core.SchedulerSignalerImpl



======== method <init> ======= : 



======== method notifyTriggerListenersMisfired ======= : 



======== method notifySchedulerListenersFinalized ======= : 



======== method signalSchedulingChange ======= : 



======== method notifySchedulerListenersJobDeleted ======= : 



======== method notifySchedulerListenersError ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.SybaseDelegate



======== method <init> ======= : 



======== method getObjectFromBlob ======= : 



======== method getJobDataFromBlob ======= : 



======== method setBytes ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$40



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.NameMatcher



======== method <init> ======= : 



======== method nameEquals ======= : 



======== method jobNameEquals ======= : 



======== method triggerNameEquals ======= : 



======== method nameStartsWith ======= : 



======== method jobNameStartsWith ======= : 



======== method triggerNameStartsWith ======= : 



======== method nameEndsWith ======= : 



======== method jobNameEndsWith ======= : 



======== method triggerNameEndsWith ======= : 



======== method nameContains ======= : 



======== method jobNameContains ======= : 



======== method triggerNameContains ======= : 



======== method getValue ======= : 

 ====================================== 
** CLASS org.quartz.listeners.BroadcastSchedulerListener



======== method <init> ======= : 



======== method <init> ======= : 



======== method addListener ======= : 



======== method removeListener ======= : 



======== method getListeners ======= : 



======== method jobAdded ======= : 



======== method jobDeleted ======= : 



======== method jobScheduled ======= : 



======== method jobUnscheduled ======= : 



======== method triggerFinalized ======= : 



======== method triggerPaused ======= : 



======== method triggersPaused ======= : 



======== method triggerResumed ======= : 



======== method triggersResumed ======= : 



======== method schedulingDataCleared ======= : 



======== method jobPaused ======= : 



======== method jobsPaused ======= : 



======== method jobResumed ======= : 



======== method jobsResumed ======= : 



======== method schedulerError ======= : 



======== method schedulerStarted ======= : 



======== method schedulerStarting ======= : 



======== method schedulerInStandbyMode ======= : 



======== method schedulerShutdown ======= : 



======== method schedulerShuttingdown ======= : 

 ====================================== 
** CLASS org.quartz.core.ExecutingJobsManager



======== method <init> ======= : 



======== method getName ======= : 



======== method getNumJobsCurrentlyExecuting ======= : 



======== method jobToBeExecuted ======= : 



======== method jobWasExecuted ======= : 



======== method getNumJobsFired ======= : 



======== method getExecutingJobs ======= : 



======== method jobExecutionVetoed ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.KeyMatcher



======== method <init> ======= : 



======== method keyEquals ======= : 



======== method isMatch ======= : 



======== method getCompareToValue ======= : 



======== method hashCode ======= : 



======== method equals ======= : 

 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledCounterImpl



======== method <init> ======= : 



======== method getMostRecentSample ======= : 



======== method getAllSampleValues ======= : 



======== method shutdown ======= : 



======== method getTimerTask ======= : 



======== method getIntervalMillis ======= : 



======== method recordSample ======= : 



======== method getAndReset ======= : 

 ====================================== 
** CLASS org.quartz.utils.ClassUtilsTest$ReallyExtendedJob



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$38



======== method <init> ======= : 



======== method execute ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.utils.PropertiesParserTest



======== method <init> ======= : 



======== method testGetPropertyGroupStringBooleanStringArray ======= : 

Unit: return
Unit: specialinvoke $r6.<org.quartz.utils.PropertiesParser: void <init>(java.util.Properties)>(r1)
Unit: r0 := @this: org.quartz.utils.PropertiesParserTest
Unit: $r4 = new java.util.Properties
Unit: $r8 = virtualinvoke r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("z")
Unit: staticinvoke <org.quartz.utils.PropertiesParserTest: void assertEquals(java.lang.String,java.lang.String)>("", $r8)
Unit: $r6 = new org.quartz.utils.PropertiesParser
Unit: $r7 = newarray (java.lang.String)[0]
Unit: r3 = virtualinvoke r2.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean,java.lang.String[])>("x.y", 1, $r7)
Unit: r1 = $r4
Unit: specialinvoke $r4.<java.util.Properties: void <init>()>()
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("x.y.z", "")
Unit: r2 = $r6
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$39



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.JobBuilderTest$TestJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$34



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.core.jmx.SimpleTriggerSupport



======== method <init> ======= : 



======== method getItemNames ======= : 



======== method getItemDescriptions ======= : 



======== method getItemTypes ======= : 



======== method toCompositeData ======= : 



======== method toTabularData ======= : 



======== method newTrigger ======= : 



======== method newTrigger ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$35



======== method <init> ======= : 



======== method execute ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.ee.jta.UserTransactionHelper



======== method <init> ======= : 



======== method getUserTxLocation ======= : 



======== method setUserTxLocation ======= : 



======== method lookupUserTransaction ======= : 



======== method returnUserTransaction ======= : 



======== method access$000 ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$36



======== method <init> ======= : 



======== method execute ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$37



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$30



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.utils.counter.Counter



======== method increment ======= : 



======== method decrement ======= : 



======== method getAndSet ======= : 



======== method getValue ======= : 



======== method increment ======= : 



======== method decrement ======= : 



======== method setValue ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$31



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$32



======== method <init> ======= : 



======== method execute ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$33



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.spi.TriggerFiredBundle



======== method <init> ======= : 



======== method getJobDetail ======= : 



======== method getTrigger ======= : 



======== method getCalendar ======= : 



======== method isRecovering ======= : 



======== method getFireTime ======= : 



======== method getNextFireTime ======= : 



======== method getPrevFireTime ======= : 



======== method getScheduledFireTime ======= : 

 ====================================== 
** CLASS org.quartz.utils.ClassUtils



======== method <init> ======= : 



======== method isAnnotationPresent ======= : 



======== method isAnnotationPresentOnInterfaces ======= : 



======== method getAnnotation ======= : 

 ====================================== 
** CLASS org.quartz.simpl.SystemPropertyInstanceIdGenerator



======== method <init> ======= : 



======== method generateInstanceId ======= : 



======== method getPrepend ======= : 



======== method setPrepend ======= : 



======== method getPostpend ======= : 



======== method setPostpend ======= : 



======== method getSystemPropertyName ======= : 



======== method setSystemPropertyName ======= : 

 ====================================== 
** CLASS org.quartz.core.ErrorLogger



======== method <init> ======= : 



======== method schedulerError ======= : 

 ====================================== 
** CLASS org.quartz.xml.XMLSchedulingDataProcessorTest$MyJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.core.QuartzSchedulerMBeanImpl$1

 ====================================== 
** CLASS org.quartz.spi.InstanceIdGenerator



======== method generateInstanceId ======= : 

 ====================================== 
** CLASS org.quartz.impl.triggers.CoreTrigger



======== method hasAdditionalProperties ======= : 

 ====================================== 
** CLASS org.quartz.spi.SchedulerSignaler



======== method notifyTriggerListenersMisfired ======= : 



======== method notifySchedulerListenersFinalized ======= : 



======== method notifySchedulerListenersJobDeleted ======= : 



======== method signalSchedulingChange ======= : 



======== method notifySchedulerListenersError ======= : 

 ====================================== 
** CLASS org.quartz.impl.SchedulerRepository



======== method <init> ======= : 



======== method getInstance ======= : 



======== method bind ======= : 



======== method remove ======= : 



======== method lookup ======= : 



======== method lookupAll ======= : 

 ====================================== 
** CLASS org.quartz.impl.triggers.CalendarIntervalTriggerImpl



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method getStartTime ======= : 



======== method setStartTime ======= : 



======== method getEndTime ======= : 



======== method setEndTime ======= : 



======== method getRepeatIntervalUnit ======= : 



======== method setRepeatIntervalUnit ======= : 



======== method getRepeatInterval ======= : 



======== method setRepeatInterval ======= : 



======== method getTimeZone ======= : 



======== method setTimeZone ======= : 



======== method isPreserveHourOfDayAcrossDaylightSavings ======= : 



======== method setPreserveHourOfDayAcrossDaylightSavings ======= : 



======== method isSkipDayIfHourDoesNotExist ======= : 



======== method setSkipDayIfHourDoesNotExist ======= : 



======== method getTimesTriggered ======= : 



======== method setTimesTriggered ======= : 



======== method validateMisfireInstruction ======= : 



======== method updateAfterMisfire ======= : 



======== method triggered ======= : 



======== method updateWithNewCalendar ======= : 



======== method computeFirstFireTime ======= : 



======== method getNextFireTime ======= : 



======== method getPreviousFireTime ======= : 



======== method setNextFireTime ======= : 



======== method setPreviousFireTime ======= : 



======== method getFireTimeAfter ======= : 



======== method getFireTimeAfter ======= : 



======== method daylightSavingHourShiftOccurredAndAdvanceNeeded ======= : 



======== method getFinalFireTime ======= : 



======== method mayFireAgain ======= : 



======== method validate ======= : 



======== method getScheduleBuilder ======= : 



======== method hasAdditionalProperties ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.xml.ValidationException



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method getValidationExceptions ======= : 



======== method getMessage ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$27



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.listeners.SchedulerListenerSupport



======== method <init> ======= : 



======== method getLog ======= : 



======== method jobAdded ======= : 



======== method jobDeleted ======= : 



======== method jobPaused ======= : 



======== method jobResumed ======= : 



======== method jobScheduled ======= : 



======== method jobsPaused ======= : 



======== method jobsResumed ======= : 



======== method jobUnscheduled ======= : 



======== method schedulerError ======= : 



======== method schedulerInStandbyMode ======= : 



======== method schedulerShutdown ======= : 



======== method schedulerShuttingdown ======= : 



======== method schedulerStarted ======= : 



======== method schedulerStarting ======= : 



======== method triggerFinalized ======= : 



======== method triggerPaused ======= : 



======== method triggerResumed ======= : 



======== method triggersPaused ======= : 



======== method triggersResumed ======= : 



======== method schedulingDataCleared ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$28



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$29



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreTX



======== method <init> ======= : 



======== method initialize ======= : 



======== method getNonManagedTXConnection ======= : 



======== method executeInLock ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$23



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$24



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$25



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdRowLockSemaphore



======== method <init> ======= : 



======== method <init> ======= : 



======== method setMaxRetry ======= : 



======== method setRetryPeriod ======= : 



======== method getMaxRetry ======= : 



======== method getRetryPeriod ======= : 



======== method executeSQL ======= : 



======== method getSelectWithLockSQL ======= : 



======== method setSelectWithLockSQL ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$26



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.calendar.MonthlyCalendar



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method clone ======= : 



======== method getDaysExcluded ======= : 



======== method isDayExcluded ======= : 



======== method setDaysExcluded ======= : 



======== method setDayExcluded ======= : 



======== method areAllDaysExcluded ======= : 



======== method isTimeIncluded ======= : 



======== method getNextIncludedTime ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$20



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$21



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$22



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.DateBuilder$IntervalUnit



======== method values ======= : 



======== method valueOf ======= : 



======== method <init> ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry



======== method <init> ======= : 



======== method setValue ======= : 



======== method getKey ======= : 



======== method getValue ======= : 



======== method equals ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.HSQLDBDelegate



======== method <init> ======= : 



======== method getObjectFromBlob ======= : 



======== method getJobDataFromBlob ======= : 

 ====================================== 
** CLASS org.quartz.impl.MockConnectionProvider



======== method <init> ======= : 



======== method getConnection ======= : 



======== method shutdown ======= : 



======== method initialize ======= : 



======== method setCustomProperty ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.triggers.CronTriggerImpl



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method clone ======= : 



======== method setCronExpression ======= : 



======== method getCronExpression ======= : 



======== method setCronExpression ======= : 



======== method getStartTime ======= : 



======== method setStartTime ======= : 



======== method getEndTime ======= : 



======== method setEndTime ======= : 



======== method getNextFireTime ======= : 



======== method getPreviousFireTime ======= : 



======== method setNextFireTime ======= : 



======== method setPreviousFireTime ======= : 



======== method getTimeZone ======= : 



======== method setTimeZone ======= : 



======== method getFireTimeAfter ======= : 



======== method getFinalFireTime ======= : 



======== method mayFireAgain ======= : 



======== method validateMisfireInstruction ======= : 



======== method updateAfterMisfire ======= : 



======== method willFireOn ======= : 



======== method willFireOn ======= : 



======== method triggered ======= : 



======== method updateWithNewCalendar ======= : 



======== method computeFirstFireTime ======= : 



======== method getExpressionSummary ======= : 



======== method hasAdditionalProperties ======= : 



======== method getScheduleBuilder ======= : 



======== method getTimeAfter ======= : 



======== method getTimeBefore ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DriverDelegate



======== method initialize ======= : 



======== method updateTriggerStatesFromOtherStates ======= : 



======== method selectMisfiredTriggers ======= : 



======== method selectMisfiredTriggersInState ======= : 



======== method hasMisfiredTriggersInState ======= : 



======== method countMisfiredTriggersInState ======= : 



======== method selectMisfiredTriggersInGroupInState ======= : 



======== method selectTriggersForRecoveringJobs ======= : 



======== method deleteFiredTriggers ======= : 



======== method deleteFiredTriggers ======= : 



======== method insertJobDetail ======= : 



======== method updateJobDetail ======= : 



======== method selectTriggerKeysForJob ======= : 



======== method deleteJobDetail ======= : 



======== method isJobNonConcurrent ======= : 



======== method jobExists ======= : 



======== method updateJobData ======= : 



======== method selectJobDetail ======= : 



======== method selectNumJobs ======= : 



======== method selectJobGroups ======= : 



======== method selectJobsInGroup ======= : 



======== method insertTrigger ======= : 



======== method updateTrigger ======= : 



======== method triggerExists ======= : 



======== method updateTriggerState ======= : 



======== method updateTriggerStateFromOtherState ======= : 



======== method updateTriggerStateFromOtherStates ======= : 



======== method updateTriggerGroupStateFromOtherStates ======= : 



======== method updateTriggerGroupStateFromOtherState ======= : 



======== method updateTriggerStatesForJob ======= : 



======== method updateTriggerStatesForJobFromOtherState ======= : 



======== method deleteTrigger ======= : 



======== method selectNumTriggersForJob ======= : 



======== method selectJobForTrigger ======= : 



======== method selectJobForTrigger ======= : 



======== method selectTriggersForJob ======= : 



======== method selectTriggersForCalendar ======= : 



======== method selectTrigger ======= : 



======== method selectTriggerJobDataMap ======= : 



======== method selectTriggerState ======= : 



======== method selectTriggerStatus ======= : 



======== method selectNumTriggers ======= : 



======== method selectTriggerGroups ======= : 



======== method selectTriggerGroups ======= : 



======== method selectTriggersInGroup ======= : 



======== method selectTriggersInState ======= : 



======== method insertPausedTriggerGroup ======= : 



======== method deletePausedTriggerGroup ======= : 



======== method deletePausedTriggerGroup ======= : 



======== method deleteAllPausedTriggerGroups ======= : 



======== method isTriggerGroupPaused ======= : 



======== method selectPausedTriggerGroups ======= : 



======== method isExistingTriggerGroup ======= : 



======== method insertCalendar ======= : 



======== method updateCalendar ======= : 



======== method calendarExists ======= : 



======== method selectCalendar ======= : 



======== method calendarIsReferenced ======= : 



======== method deleteCalendar ======= : 



======== method selectNumCalendars ======= : 



======== method selectCalendars ======= : 



======== method selectNextFireTime ======= : 



======== method selectTriggerForFireTime ======= : 



======== method selectTriggerToAcquire ======= : 



======== method selectTriggerToAcquire ======= : 



======== method insertFiredTrigger ======= : 



======== method updateFiredTrigger ======= : 



======== method selectFiredTriggerRecords ======= : 



======== method selectFiredTriggerRecordsByJob ======= : 



======== method selectInstancesFiredTriggerRecords ======= : 



======== method selectFiredTriggerInstanceNames ======= : 



======== method deleteFiredTrigger ======= : 



======== method selectJobExecutionCount ======= : 



======== method insertSchedulerState ======= : 



======== method deleteSchedulerState ======= : 



======== method updateSchedulerState ======= : 



======== method selectSchedulerStateRecords ======= : 



======== method clearData ======= : 

 ====================================== 
** CLASS org.quartz.core.RecoverJobsTest$1



======== method <init> ======= : 



======== method getName ======= : 



======== method jobToBeExecuted ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdJDBCConstants

 ====================================== 
** CLASS org.quartz.ScheduleBuilder



======== method <init> ======= : 



======== method build ======= : 

 ====================================== 
** CLASS org.quartz.PriorityTest$TestJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.spi.OperableTrigger



======== method triggered ======= : 



======== method computeFirstFireTime ======= : 



======== method executionComplete ======= : 



======== method updateAfterMisfire ======= : 



======== method updateWithNewCalendar ======= : 



======== method validate ======= : 



======== method setFireInstanceId ======= : 



======== method getFireInstanceId ======= : 



======== method setNextFireTime ======= : 



======== method setPreviousFireTime ======= : 

 ====================================== 
** CLASS org.quartz.MonthlyCalendarTest



======== method <init> ======= : 



======== method testForInfiniteLoop ======= : 

Unit: $r2 = new org.quartz.impl.calendar.MonthlyCalendar
Unit: $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>()
Unit: virtualinvoke r4.<java.util.Calendar: void set(int,int,int,int,int,int)>(2007, 11, 8, 12, 0, 0)
Unit: i2 = 1
Unit: r1 = $r2
Unit: $r3 = virtualinvoke r4.<java.util.Calendar: java.util.Date getTime()>()
Unit: r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r1.<org.quartz.impl.calendar.MonthlyCalendar: void setDayExcluded(int,boolean)>(i2, 1)
Unit: return
Unit: if i2 >= 9 goto r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: i2 = i2 + 1
Unit: goto [?= (branch)]
Unit: r0 := @this: org.quartz.MonthlyCalendarTest
Unit: specialinvoke $r2.<org.quartz.impl.calendar.MonthlyCalendar: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.calendar.MonthlyCalendar: long getNextIncludedTime(long)>($l0)
 ====================================== 
** CLASS org.quartz.utils.PoolingConnectionProvider



======== method getDataSource ======= : 

 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledCounter



======== method shutdown ======= : 



======== method getMostRecentSample ======= : 



======== method getAllSampleValues ======= : 



======== method getAndReset ======= : 

 ====================================== 
** CLASS org.quartz.JobExecutionException



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method <init> ======= : 



======== method setRefireImmediately ======= : 



======== method refireImmediately ======= : 



======== method setUnscheduleFiringTrigger ======= : 



======== method unscheduleFiringTrigger ======= : 



======== method setUnscheduleAllTriggers ======= : 



======== method unscheduleAllTriggers ======= : 

 ====================================== 
** CLASS org.quartz.utils.PropertiesParser



======== method <init> ======= : 



======== method getUnderlyingProperties ======= : 



======== method getStringProperty ======= : 



======== method getStringProperty ======= : 



======== method getStringArrayProperty ======= : 



======== method getStringArrayProperty ======= : 



======== method getBooleanProperty ======= : 



======== method getBooleanProperty ======= : 



======== method getByteProperty ======= : 



======== method getByteProperty ======= : 



======== method getCharProperty ======= : 



======== method getCharProperty ======= : 



======== method getDoubleProperty ======= : 



======== method getDoubleProperty ======= : 



======== method getFloatProperty ======= : 



======== method getFloatProperty ======= : 



======== method getIntProperty ======= : 



======== method getIntProperty ======= : 



======== method getIntArrayProperty ======= : 



======== method getIntArrayProperty ======= : 



======== method getLongProperty ======= : 



======== method getLongProperty ======= : 



======== method getShortProperty ======= : 



======== method getShortProperty ======= : 



======== method getPropertyGroups ======= : 



======== method getPropertyGroup ======= : 



======== method getPropertyGroup ======= : 



======== method getPropertyGroup ======= : 

 ====================================== 
** CLASS org.quartz.core.QTZ385Test$2



======== method <init> ======= : 



======== method getName ======= : 



======== method jobToBeExecuted ======= : 

 ====================================== 
** CLASS org.quartz.core.QTZ385Test$1



======== method <init> ======= : 



======== method invoke ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$45



======== method <init> ======= : 



======== method validate ======= : 



======== method validate ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$46



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$47



======== method <init> ======= : 



======== method execute ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$41



======== method <init> ======= : 



======== method execute ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$42



======== method <init> ======= : 



======== method validate ======= : 



======== method validate ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$43



======== method <init> ======= : 



======== method executeVoid ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$44



======== method <init> ======= : 



======== method execute ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeStatefulJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities



======== method createDatabase ======= : 



======== method destroyDatabase ======= : 



======== method shutdownDatabase ======= : 



======== method <init> ======= : 



======== method access$000 ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.helpers.VersionPrinter



======== method <init> ======= : 



======== method main ======= : 

 ====================================== 
** CLASS org.quartz.utils.counter.CounterConfig



======== method <init> ======= : 



======== method getInitialValue ======= : 



======== method createCounter ======= : 

 ====================================== 
** CLASS org.quartz.impl.matchers.AndMatcher



======== method <init> ======= : 



======== method and ======= : 



======== method isMatch ======= : 



======== method getLeftOperand ======= : 



======== method getRightOperand ======= : 



======== method hashCode ======= : 



======== method equals ======= : 

 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeExtendedPersistentJob



======== method <init> ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport



======== method <init> ======= : 



======== method initialize ======= : 



======== method getTriggerProperties ======= : 



======== method getTriggerPropertyBundle ======= : 



======== method deleteExtendedTriggerProperties ======= : 



======== method insertExtendedTriggerProperties ======= : 



======== method loadExtendedTriggerProperties ======= : 



======== method updateExtendedTriggerProperties ======= : 

 ====================================== 
** CLASS org.quartz.VersionTest



======== method <init> ======= : 



======== method testVersionParsing ======= : 

Unit: specialinvoke r0.<org.quartz.VersionTest: void assertNonNegativeInteger(java.lang.String)>($r5)
Unit: r3 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1)
Unit: goto [?= return]
Unit: r1 = staticinvoke <org.quartz.core.QuartzScheduler: java.lang.String getVersionIteration()>()
Unit: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match pattern \'(\\d+)(-\\w+)?\'")
Unit: specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10)
Unit: r0 := @this: org.quartz.VersionTest
Unit: specialinvoke r0.<org.quartz.VersionTest: void assertNonNegativeInteger(java.lang.String)>($r11)
Unit: return
Unit: $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean matches()>()
Unit: $r11 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(1)
Unit: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r5 = staticinvoke <org.quartz.core.QuartzScheduler: java.lang.String getVersionMinor()>()
Unit: specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Unit: staticinvoke <org.quartz.VersionTest: void assertNotNull(java.lang.Object)>(r1)
Unit: $r6 = new java.lang.RuntimeException
Unit: r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d+)(-\\w+)?")
Unit: $r7 = new java.lang.StringBuilder
Unit: specialinvoke r0.<org.quartz.VersionTest: void assertNonNegativeInteger(java.lang.String)>($r4)
Unit: if $z0 == 0 goto $r6 = new java.lang.RuntimeException
Unit: throw $r6
Unit: $r4 = staticinvoke <org.quartz.core.QuartzScheduler: java.lang.String getVersionMajor()>()
Unit: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)


======== method assertNonNegativeInteger ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DB2v8Delegate



======== method <init> ======= : 



======== method setBoolean ======= : 

 ====================================== 
** CLASS org.quartz.DateBuilderTest



======== method <init> ======= : 



======== method testBasicBuilding ======= : 

Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 30)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: return
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, 2013)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", r1, r3)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(10, 30, 0, 1, 7, 2013)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 6)
Unit: r3 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)


======== method testBuilder ======= : 

Unit: $r35 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDateInTimezone(java.util.TimeZone)>(r1)
Unit: $r37 = virtualinvoke $r36.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonth(int)>(6)
Unit: $r44 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDateInTimeZoneAndLocale(java.util.TimeZone,java.util.Locale)>(r1, r2)
Unit: $r3 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $r16 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $r40 = virtualinvoke $r39.<org.quartz.DateBuilder: org.quartz.DateBuilder atMinute(int)>(33)
Unit: $r13 = virtualinvoke $r12.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(7, 1)
Unit: $r12 = virtualinvoke $r11.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r34, r57)
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: $r32 = virtualinvoke $r31.<org.quartz.DateBuilder: org.quartz.DateBuilder atSecond(int)>(12)
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(2, 6)
Unit: $r26 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDateInLocale(java.util.Locale)>(r2)
Unit: $r15 = virtualinvoke r52.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r38 = virtualinvoke $r37.<org.quartz.DateBuilder: org.quartz.DateBuilder onDay(int)>(1)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r15, r54)
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: r55 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>(r1, r2)
Unit: $r34 = virtualinvoke r55.<java.util.Calendar: java.util.Date getTime()>()
Unit: r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-4:00")
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(13, 0)
Unit: r54 = virtualinvoke $r14.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: r56 = virtualinvoke $r24.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r48 = virtualinvoke $r47.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourOfDay(int)>(10)
Unit: $r39 = virtualinvoke $r38.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourOfDay(int)>(10)
Unit: r57 = virtualinvoke $r33.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: $r14 = virtualinvoke $r13.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r51, r59)
Unit: $r21 = virtualinvoke $r20.<org.quartz.DateBuilder: org.quartz.DateBuilder atMinute(int)>(33)
Unit: r52 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r31 = virtualinvoke $r30.<org.quartz.DateBuilder: org.quartz.DateBuilder atMinute(int)>(33)
Unit: $r36 = virtualinvoke $r35.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r49 = virtualinvoke $r48.<org.quartz.DateBuilder: org.quartz.DateBuilder atMinute(int)>(33)
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(12, 33)
Unit: $r17 = virtualinvoke $r16.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r29 = virtualinvoke $r28.<org.quartz.DateBuilder: org.quartz.DateBuilder onDay(int)>(1)
Unit: $r18 = virtualinvoke $r17.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonth(int)>(6)
Unit: r53 = virtualinvoke $r9.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r23 = virtualinvoke $r22.<org.quartz.DateBuilder: org.quartz.DateBuilder inTimeZone(java.util.TimeZone)>(r1)
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: return
Unit: $r27 = virtualinvoke $r26.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(12, 30)
Unit: $r5 = virtualinvoke $r4.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonth(int)>(7)
Unit: $r42 = virtualinvoke $r41.<org.quartz.DateBuilder: org.quartz.DateBuilder inLocale(java.util.Locale)>(r2)
Unit: r59 = virtualinvoke $r50.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(14, 0)
Unit: $r7 = virtualinvoke $r6.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourOfDay(int)>(10)
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(1, 2013)
Unit: $r28 = virtualinvoke $r27.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonth(int)>(6)
Unit: $r30 = virtualinvoke $r29.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourOfDay(int)>(10)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r10, r53)
Unit: $r45 = virtualinvoke $r44.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r33 = virtualinvoke $r32.<org.quartz.DateBuilder: org.quartz.DateBuilder inTimeZone(java.util.TimeZone)>(r1)
Unit: $r24 = virtualinvoke $r23.<org.quartz.DateBuilder: org.quartz.DateBuilder inLocale(java.util.Locale)>(r2)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r43, r58)
Unit: r58 = virtualinvoke $r42.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: r2 = <java.util.Locale: java.util.Locale TAIWAN>
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(1, 2013)
Unit: $r25 = virtualinvoke r55.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(13, 12)
Unit: $r10 = virtualinvoke r52.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: $r50 = virtualinvoke $r49.<org.quartz.DateBuilder: org.quartz.DateBuilder atSecond(int)>(12)
Unit: $r22 = virtualinvoke $r21.<org.quartz.DateBuilder: org.quartz.DateBuilder atSecond(int)>(12)
Unit: $r51 = virtualinvoke r55.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: $r43 = virtualinvoke r55.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r20 = virtualinvoke $r19.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourOfDay(int)>(10)
Unit: $r19 = virtualinvoke $r18.<org.quartz.DateBuilder: org.quartz.DateBuilder onDay(int)>(1)
Unit: $r8 = virtualinvoke $r7.<org.quartz.DateBuilder: org.quartz.DateBuilder atMinute(int)>(30)
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(14, 0)
Unit: $r6 = virtualinvoke $r5.<org.quartz.DateBuilder: org.quartz.DateBuilder onDay(int)>(1)
Unit: $r47 = virtualinvoke $r46.<org.quartz.DateBuilder: org.quartz.DateBuilder onDay(int)>(1)
Unit: $r4 = virtualinvoke $r3.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r9 = virtualinvoke $r8.<org.quartz.DateBuilder: org.quartz.DateBuilder atSecond(int)>(0)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r25, r56)
Unit: $r41 = virtualinvoke $r40.<org.quartz.DateBuilder: org.quartz.DateBuilder atSecond(int)>(12)
Unit: $r46 = virtualinvoke $r45.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonth(int)>(6)


======== method testEvensBuilders ======= : 

Unit: $r9 = virtualinvoke $r8.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourOfDay(int)>(10)
Unit: $r4 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 13)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 13)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 54)
Unit: $r13 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: r2 = (java.util.Calendar) $r4
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 8)
Unit: $r11 = virtualinvoke $r10.<org.quartz.DateBuilder: org.quartz.DateBuilder atSecond(int)>(12)
Unit: r29 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenSecondDate(java.util.Date)>($r15)
Unit: $r19 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 0)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 0)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 33)
Unit: $r26 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: return
Unit: r3 = $r25
Unit: $r22 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r5 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertTrue(java.lang.String,boolean)>("DateBuilder-produced date is not as expected.", $z0)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i5)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 0)
Unit: $r16 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r20, r31)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 13)
Unit: r33 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenHourDateBefore(java.util.Date)>($r23)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r22, r32)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r34)
Unit: $r20 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r28 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenSecondDateBefore(java.util.Date)>($r13)
Unit: $r6 = virtualinvoke $r5.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13)
Unit: $r12 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: $i2 = virtualinvoke r1.<java.util.Calendar: int get(int)>(14)
Unit: $r14 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r14, r28)
Unit: $r24 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 33)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r12, r27)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 8, $i3)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: $i6 = virtualinvoke r1.<java.util.Calendar: int get(int)>(14)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 12)
Unit: $r7 = virtualinvoke $r6.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonth(int)>(6)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: $r21 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r35)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i2)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 13)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i1)
Unit: $r15 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r8 = virtualinvoke $r7.<org.quartz.DateBuilder: org.quartz.DateBuilder onDay(int)>(1)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 34)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 13)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 0)
Unit: $r10 = virtualinvoke $r9.<org.quartz.DateBuilder: org.quartz.DateBuilder atMinute(int)>(33)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 11)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(1, 2013)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 13)
Unit: $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 15, $i4)
Unit: r30 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenMinuteDate(java.util.Date)>($r17)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r18, r30)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 13)
Unit: $r18 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: $z0 = virtualinvoke r34.<java.util.Date: boolean after(java.util.Date)>(r3)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 0)
Unit: $i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12)
Unit: r35 = staticinvoke <org.quartz.DateBuilder: java.util.Date nextGivenMinuteDate(java.util.Date,int)>($r26, 15)
Unit: $r23 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r25 = new java.util.Date
Unit: $r17 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 0)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 13)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i0)
Unit: r32 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenHourDate(java.util.Date)>($r21)
Unit: r27 = virtualinvoke $r11.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r16, r29)
Unit: r34 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenHourDateAfterNow()>()
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13)
Unit: $i3 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11)
Unit: r31 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenMinuteDateBefore(java.util.Date)>($r19)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r24, r33)
Unit: specialinvoke $r25.<java.util.Date: void <init>()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i6)


======== method testGivenBuilders ======= : 

Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 8, $i0)
Unit: $r2 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 8)
Unit: $r3 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 45, $i1)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i3)
Unit: $i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12)
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r4 = staticinvoke <org.quartz.DateBuilder: java.util.Date nextGivenMinuteDate(java.util.Date,int)>($r2, 45)
Unit: $i7 = virtualinvoke r1.<java.util.Calendar: int get(int)>(14)
Unit: $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 8)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 54)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 54)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 9, $i4)
Unit: $i3 = virtualinvoke r1.<java.util.Calendar: int get(int)>(14)
Unit: $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11)
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 13)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r5)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i6)
Unit: $i2 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i2)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i7)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 46)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i5)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r4)
Unit: $i6 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13)
Unit: $i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11)
Unit: return
Unit: r5 = staticinvoke <org.quartz.DateBuilder: java.util.Date nextGivenMinuteDate(java.util.Date,int)>($r3, 45)


======== method testAtBuilders ======= : 

Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 10, $i0)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 12, $i8)
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: $r4 = new java.util.Date
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", $i4, $i5)
Unit: $i0 = virtualinvoke r2.<java.util.Calendar: int get(int)>(11)
Unit: specialinvoke $r4.<java.util.Date: void <init>()>()
Unit: return
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 33, $i1)
Unit: $i2 = virtualinvoke r2.<java.util.Calendar: int get(int)>(13)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", $i10, $i11)
Unit: virtualinvoke r1.<java.util.Calendar: void add(int,int)>(14, 86400000)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>($r3)
Unit: r5 = staticinvoke <org.quartz.DateBuilder: java.util.Date todayAt(int,int,int)>(10, 33, 12)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>($r4)
Unit: virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>(r6)
Unit: r6 = staticinvoke <org.quartz.DateBuilder: java.util.Date tomorrowAt(int,int,int)>(10, 33, 12)
Unit: $i10 = virtualinvoke r1.<java.util.Calendar: int get(int)>(6)
Unit: $i11 = virtualinvoke r2.<java.util.Calendar: int get(int)>(6)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 33, $i7)
Unit: $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(6)
Unit: $i7 = virtualinvoke r2.<java.util.Calendar: int get(int)>(12)
Unit: $i8 = virtualinvoke r2.<java.util.Calendar: int get(int)>(13)
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: specialinvoke $r3.<java.util.Date: void <init>()>()
Unit: $r3 = new java.util.Date
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i3)
Unit: $i3 = virtualinvoke r2.<java.util.Calendar: int get(int)>(14)
Unit: $i9 = virtualinvoke r2.<java.util.Calendar: int get(int)>(14)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 12, $i2)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i9)
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 10, $i6)
Unit: $i1 = virtualinvoke r2.<java.util.Calendar: int get(int)>(12)
Unit: $i5 = virtualinvoke r2.<java.util.Calendar: int get(int)>(6)
Unit: virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>(r5)
Unit: $i6 = virtualinvoke r2.<java.util.Calendar: int get(int)>(11)


======== method testTranslate ======= : 

Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 12, $i0)
Unit: r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-2:00")
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: virtualinvoke r7.<java.util.Calendar: void setTime(java.util.Date)>($r4)
Unit: $r4 = staticinvoke <org.quartz.DateBuilder: java.util.Date translateTime(java.util.Date,java.util.TimeZone,java.util.TimeZone)>($r3, r1, r2)
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(12, 33)
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(1, 2013)
Unit: r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-4:00")
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 8, $i1)
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(13, 12)
Unit: r8 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r2)
Unit: $i0 = virtualinvoke r7.<java.util.Calendar: int get(int)>(11)
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(14, 0)
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(13, 12)
Unit: return
Unit: r7 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r1)
Unit: virtualinvoke r8.<java.util.Calendar: void setTime(java.util.Date)>($r6)
Unit: $r6 = staticinvoke <org.quartz.DateBuilder: java.util.Date translateTime(java.util.Date,java.util.TimeZone,java.util.TimeZone)>($r5, r2, r1)
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(12, 33)
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(1, 2013)
Unit: $r3 = virtualinvoke r7.<java.util.Calendar: java.util.Date getTime()>()
Unit: $i1 = virtualinvoke r8.<java.util.Calendar: int get(int)>(11)
Unit: $r5 = virtualinvoke r8.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(14, 0)


======== method testMonthTranslations ======= : 

Unit: r60 = virtualinvoke $r45.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r20 = virtualinvoke $r19.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(5, 1)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 9, $i9)
Unit: $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $r28 = virtualinvoke $r27.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(7, 1)
Unit: r55 = virtualinvoke $r25.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r30 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $i10 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r50)
Unit: r59 = virtualinvoke $r41.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: r50 = virtualinvoke $r5.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r29 = virtualinvoke $r28.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i0)
Unit: $r23 = virtualinvoke $r22.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r55)
Unit: $r47 = virtualinvoke $r46.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r37 = virtualinvoke $r36.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 6, $i6)
Unit: $i6 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 2, $i2)
Unit: r61 = virtualinvoke $r49.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r5 = virtualinvoke $r4.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $r15 = virtualinvoke $r14.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 11, $i11)
Unit: $r49 = virtualinvoke $r48.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $r21 = virtualinvoke $r20.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $r25 = virtualinvoke $r24.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $r33 = virtualinvoke $r32.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 8, $i8)
Unit: $r41 = virtualinvoke $r40.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r51)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r54)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 4, $i4)
Unit: $i3 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $r31 = virtualinvoke $r30.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r43 = virtualinvoke $r42.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r4 = virtualinvoke $r3.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(1, 1)
Unit: $r38 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r61)
Unit: $r22 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r56)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r60)
Unit: $i11 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: r54 = virtualinvoke $r21.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: r56 = virtualinvoke $r29.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r26 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: r58 = virtualinvoke $r37.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r24 = virtualinvoke $r23.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(6, 1)
Unit: $r19 = virtualinvoke $r18.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r35 = virtualinvoke $r34.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $r42 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r58)
Unit: return
Unit: $i7 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $r46 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 3, $i3)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 5, $i5)
Unit: $r40 = virtualinvoke $r39.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(10, 1)
Unit: $i8 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: r51 = virtualinvoke $r9.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r34 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $i2 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $r32 = virtualinvoke $r31.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(8, 1)
Unit: $r9 = virtualinvoke $r8.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $r36 = virtualinvoke $r35.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(9, 1)
Unit: r57 = virtualinvoke $r33.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r48 = virtualinvoke $r47.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(12, 1)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 7, $i7)
Unit: $r8 = virtualinvoke $r7.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(2, 1)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 10, $i10)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r59)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r53)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 1, $i1)
Unit: $r3 = virtualinvoke $r2.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r44 = virtualinvoke $r43.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(11, 1)
Unit: $r6 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $r18 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $r16 = virtualinvoke $r15.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(4, 1)
Unit: $r45 = virtualinvoke $r44.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $r13 = virtualinvoke $r12.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $r39 = virtualinvoke $r38.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r52)
Unit: $r14 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: r53 = virtualinvoke $r17.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r57)
Unit: $r7 = virtualinvoke $r6.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r17 = virtualinvoke $r16.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $i9 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: r52 = virtualinvoke $r13.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r27 = virtualinvoke $r26.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r2 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $r11 = virtualinvoke $r10.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r12 = virtualinvoke $r11.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(3, 1)
 ====================================== 
** CLASS org.quartz.PersistJobDataAfterExecution

 ====================================== 
** CLASS org.quartz.impl.Driver



======== method <init> ======= : 



======== method runall ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.SchedulerStateRecord



======== method <init> ======= : 



======== method getCheckinInterval ======= : 



======== method getCheckinTimestamp ======= : 



======== method getSchedulerInstanceId ======= : 



======== method setCheckinInterval ======= : 



======== method setCheckinTimestamp ======= : 



======== method setSchedulerInstanceId ======= : 

 ====================================== 
** CLASS org.quartz.core.QuartzSchedulerMBeanImpl



======== method <init> ======= : 



======== method getCurrentlyExecutingJobs ======= : 



======== method getAllJobDetails ======= : 



======== method getAllTriggers ======= : 



======== method addJob ======= : 



======== method invokeSetter ======= : 



======== method getWrapperIfPrimitive ======= : 



======== method findMethod ======= : 



======== method scheduleBasicJob ======= : 



======== method scheduleJob ======= : 



======== method scheduleJob ======= : 



======== method addJob ======= : 



======== method newPlainException ======= : 



======== method deleteCalendar ======= : 



======== method deleteJob ======= : 



======== method getCalendarNames ======= : 



======== method getJobDetail ======= : 



======== method getJobGroupNames ======= : 



======== method getJobNames ======= : 



======== method getJobStoreClassName ======= : 



======== method getPausedTriggerGroups ======= : 



======== method getTrigger ======= : 



======== method getTriggerGroupNames ======= : 



======== method getTriggerNames ======= : 



======== method getTriggerState ======= : 



======== method getTriggersOfJob ======= : 



======== method interruptJob ======= : 



======== method interruptJob ======= : 



======== method scheduleJob ======= : 



======== method unscheduleJob ======= : 



======== method clear ======= : 



======== method getVersion ======= : 



======== method isShutdown ======= : 



======== method isStarted ======= : 



======== method start ======= : 



======== method shutdown ======= : 



======== method standby ======= : 



======== method isStandbyMode ======= : 



======== method getSchedulerName ======= : 



======== method getSchedulerInstanceId ======= : 



======== method getThreadPoolClassName ======= : 



======== method getThreadPoolSize ======= : 



======== method pauseJob ======= : 



======== method pauseJobs ======= : 



======== method pauseJobGroup ======= : 



======== method pauseJobsStartingWith ======= : 



======== method pauseJobsEndingWith ======= : 



======== method pauseJobsContaining ======= : 



======== method pauseJobsAll ======= : 



======== method pauseAllTriggers ======= : 



======== method pauseTriggers ======= : 



======== method pauseTriggerGroup ======= : 



======== method pauseTriggersStartingWith ======= : 



======== method pauseTriggersEndingWith ======= : 



======== method pauseTriggersContaining ======= : 



======== method pauseTriggersAll ======= : 



======== method pauseTrigger ======= : 



======== method resumeAllTriggers ======= : 



======== method resumeJob ======= : 



======== method resumeJobs ======= : 



======== method resumeJobGroup ======= : 



======== method resumeJobsStartingWith ======= : 



======== method resumeJobsEndingWith ======= : 



======== method resumeJobsContaining ======= : 



======== method resumeJobsAll ======= : 



======== method resumeTrigger ======= : 



======== method resumeTriggers ======= : 



======== method resumeTriggerGroup ======= : 



======== method resumeTriggersStartingWith ======= : 



======== method resumeTriggersEndingWith ======= : 



======== method resumeTriggersContaining ======= : 



======== method resumeTriggersAll ======= : 



======== method triggerJob ======= : 



======== method triggerJob ======= : 



======== method jobAdded ======= : 



======== method jobDeleted ======= : 



======== method jobScheduled ======= : 



======== method jobUnscheduled ======= : 



======== method schedulingDataCleared ======= : 



======== method jobPaused ======= : 



======== method jobsPaused ======= : 



======== method jobsResumed ======= : 



======== method jobResumed ======= : 



======== method schedulerError ======= : 



======== method schedulerStarted ======= : 



======== method schedulerStarting ======= : 



======== method schedulerInStandbyMode ======= : 



======== method schedulerShutdown ======= : 



======== method schedulerShuttingdown ======= : 



======== method triggerFinalized ======= : 



======== method triggersPaused ======= : 



======== method triggerPaused ======= : 



======== method triggersResumed ======= : 



======== method triggerResumed ======= : 



======== method getName ======= : 



======== method jobExecutionVetoed ======= : 



======== method jobToBeExecuted ======= : 



======== method jobWasExecuted ======= : 



======== method sendNotification ======= : 



======== method sendNotification ======= : 



======== method sendNotification ======= : 



======== method addNotificationListener ======= : 



======== method getNotificationInfo ======= : 



======== method removeNotificationListener ======= : 



======== method removeNotificationListener ======= : 



======== method isSampledStatisticsEnabled ======= : 



======== method setSampledStatisticsEnabled ======= : 



======== method getJobsCompletedMostRecentSample ======= : 



======== method getJobsExecutedMostRecentSample ======= : 



======== method getJobsScheduledMostRecentSample ======= : 



======== method getPerformanceMetrics ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.DisallowConcurrentExecutionJobTest$TestJobListener



======== method <init> ======= : 



======== method getName ======= : 



======== method jobWasExecuted ======= : 

 ====================================== 
** CLASS org.quartz.AnnualCalendarTest



======== method <init> ======= : 



======== method getTargetObject ======= : 



======== method getVersions ======= : 



======== method verifyMatch ======= : 



======== method testDaysExcluded ======= : 

Unit: $r2 = new org.quartz.impl.calendar.AnnualCalendar
Unit: specialinvoke $r2.<org.quartz.impl.calendar.AnnualCalendar: void <init>()>()
Unit: r0 := @this: org.quartz.AnnualCalendarTest
Unit: return
Unit: $r3 = virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList getDaysExcluded()>()
Unit: staticinvoke <org.quartz.AnnualCalendarTest: void assertNotNull(java.lang.String,java.lang.Object)>("Annual calendar daysExcluded property should have been set to empty ArrayList, not null.", $r3)
Unit: r1 = $r2
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDaysExcluded(java.util.ArrayList)>(null)


======== method testExclude ======= : 

Unit: $z3 = 0
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>(r2, 0)
Unit: $r7 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: r0 := @this: org.quartz.AnnualCalendarTest
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 10)
Unit: goto [?= staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 15 October is not expected to be excluded but it is", $z3)]
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r1 = $r3
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 9)
Unit: $z3 = 1
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r2)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 9)
Unit: $r5 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r12, 0)
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r6, 1)
Unit: if $z0 != 0 goto $z3 = 0
Unit: $r12 = (java.util.Calendar) $r11
Unit: $r6 = (java.util.Calendar) $r5
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 12)
Unit: $z4 = 0
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 15)
Unit: $r11 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 15 October is not expected to be excluded but it is", $z3)
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r8, 1)
Unit: if $z2 != 0 goto $z4 = 0
Unit: $r9 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: $z2 = virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r2)
Unit: $r8 = (java.util.Calendar) $r7
Unit: $z1 = virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r2)
Unit: specialinvoke $r3.<org.quartz.impl.calendar.AnnualCalendar: void <init>()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 15)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 8)
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r10, 1)
Unit: staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 15 October is expected to be excluded but it is not", $z1)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 9)
Unit: $r10 = (java.util.Calendar) $r9
Unit: goto [?= staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 15 October is not expected to be excluded but it is", $z4)]
Unit: $r3 = new org.quartz.impl.calendar.AnnualCalendar
Unit: $z4 = 1
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 15)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: return
Unit: staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 15 October is not expected to be excluded but it is", $z4)


======== method testDaysExcludedOverTime ======= : 

Unit: $r7 = (java.util.Calendar) $r6
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r2)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 23)
Unit: r0 := @this: org.quartz.AnnualCalendarTest
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r7, 1)
Unit: r1 = $r3
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r5, 1)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 1)
Unit: specialinvoke $r3.<org.quartz.impl.calendar.AnnualCalendar: void <init>()>()
Unit: staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 1 February is expected to be excluded but it is not", $z0)
Unit: return
Unit: $r4 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: $r6 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, 2005)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, 2008)
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r5 = (java.util.Calendar) $r4
Unit: $r3 = new org.quartz.impl.calendar.AnnualCalendar
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 1)


======== method testRemoveInTheFuture ======= : 

Unit: $r3 = new org.quartz.impl.calendar.AnnualCalendar
Unit: $r4 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, 2005)
Unit: goto [?= staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 23 June is not expected to be excluded but it is", $z1)]
Unit: specialinvoke $r3.<org.quartz.impl.calendar.AnnualCalendar: void <init>()>()
Unit: $r6 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 23 June is not expected to be excluded but it is", $z1)
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r7, 0)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 23)
Unit: $r7 = (java.util.Calendar) $r6
Unit: $r5 = (java.util.Calendar) $r4
Unit: r0 := @this: org.quartz.AnnualCalendarTest
Unit: r1 = $r3
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 23)
Unit: if $z0 != 0 goto $z1 = 0
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, 2008)
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r2)
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $z1 = 0
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r5, 1)
Unit: return
Unit: $z1 = 1


======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.integrations.tests.TrackingJob



======== method <init> ======= : 



======== method execute ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.JobDetail



======== method getKey ======= : 



======== method getDescription ======= : 



======== method getJobClass ======= : 



======== method getJobDataMap ======= : 



======== method isDurable ======= : 



======== method isPersistJobDataAfterExecution ======= : 



======== method isConcurrentExectionDisallowed ======= : 



======== method requestsRecovery ======= : 



======== method clone ======= : 



======== method getJobBuilder ======= : 

 ====================================== 
** CLASS org.quartz.InterruptableJobTest



======== method <init> ======= : 



======== method setUp ======= : 



======== method testJobInterruption ======= : 

Unit: interfaceinvoke r2.<org.quartz.Scheduler: void start()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void shutdown()>()
Unit: $r24 = interfaceinvoke r6.<org.quartz.JobExecutionContext: java.lang.String getFireInstanceId()>()
Unit: $r16 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r18 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r3)
Unit: $r14 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobBuilder ofType(java.lang.Class)>(class "Lorg/quartz/InterruptableJobTest$TestInterruptableJob;")
Unit: $r13 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob()>()
Unit: r0 := @this: org.quartz.InterruptableJobTest
Unit: r2 = virtualinvoke $r12.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: r3 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: virtualinvoke $r25.<java.util.concurrent.CyclicBarrier: int await()>()
Unit: goto [?= staticinvoke <org.quartz.InterruptableJobTest: void assertTrue(java.lang.String,boolean)>("Number of executing jobs should be 1 ", $z2)]
Unit: r6 = (org.quartz.JobExecutionContext) $r23
Unit: $r21 = <org.quartz.InterruptableJobTest: java.util.concurrent.CyclicBarrier sync>
Unit: $r23 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: specialinvoke $r7.<java.util.Properties: void <init>()>()
Unit: $z2 = 1
Unit: r4 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: specialinvoke $r12.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1)
Unit: virtualinvoke $r21.<java.util.concurrent.CyclicBarrier: int await()>()
Unit: $r26 = <org.quartz.InterruptableJobTest$TestInterruptableJob: java.util.concurrent.atomic.AtomicBoolean interrupted>
Unit: r5 = interfaceinvoke r2.<org.quartz.Scheduler: java.util.List getCurrentlyExecutingJobs()>()
Unit: z0 = interfaceinvoke r2.<org.quartz.Scheduler: boolean interrupt(java.lang.String)>($r24)
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceId", "AUTO")
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void clear()>()
Unit: if $i1 != 1 goto $z2 = 0
Unit: staticinvoke <org.quartz.InterruptableJobTest: void assertTrue(java.lang.String,boolean)>("Number of executing jobs should be 1 ", $z2)
Unit: $r15 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("j1")
Unit: staticinvoke <org.quartz.InterruptableJobTest: void assertTrue(java.lang.String,boolean)>("Expected interrupted flag to be set on job class ", $z1)
Unit: $z2 = 0
Unit: $z1 = virtualinvoke $r26.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()
Unit: r1 = $r7
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r3, r4)
Unit: $r19 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startNow()>()
Unit: staticinvoke <org.quartz.InterruptableJobTest: void assertTrue(java.lang.String,boolean)>("Expected successful result from interruption of job ", z0)
Unit: return
Unit: $r7 = new java.util.Properties
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "2")
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceName", "InterruptableJobTest_Scheduler")
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("t1")
Unit: $i1 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: $r25 = <org.quartz.InterruptableJobTest: java.util.concurrent.CyclicBarrier sync>
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool")
Unit: $r12 = new org.quartz.impl.StdSchedulerFactory


======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.listeners.TriggerListenerSupport



======== method <init> ======= : 



======== method getLog ======= : 



======== method triggerFired ======= : 



======== method vetoJobExecution ======= : 



======== method triggerMisfired ======= : 



======== method triggerComplete ======= : 

 ====================================== 
** CLASS org.quartz.impl.JobDetailImplTest



======== method <init> ======= : 



======== method testHashCode ======= : 

Unit: $r9 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(org.hamcrest.Matcher)>($r8)
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r10, $r13)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
Unit: $i0 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: int hashCode()>()
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setGroup(java.lang.String)>("test")
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $i1 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: int hashCode()>()
Unit: $r2 = new org.quartz.impl.JobDetailImpl
Unit: $i2 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: int hashCode()>()
Unit: $r13 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(org.hamcrest.Matcher)>($r12)
Unit: r0 := @this: org.quartz.impl.JobDetailImplTest
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setName(java.lang.String)>("test")
Unit: $r5 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r4)
Unit: r1 = $r2
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r3, $r5)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r6, $r9)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
Unit: return
Unit: specialinvoke $r2.<org.quartz.impl.JobDetailImpl: void <init>()>()
Unit: $r12 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r11)
Unit: $r8 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r7)
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.TriggerStatus



======== method <init> ======= : 



======== method getJobKey ======= : 



======== method setJobKey ======= : 



======== method getKey ======= : 



======== method setKey ======= : 



======== method getStatus ======= : 



======== method getNextFireTime ======= : 



======== method toString ======= : 

 ====================================== 
** CLASS org.quartz.Trigger$CompletedExecutionInstruction



======== method values ======= : 



======== method valueOf ======= : 



======== method <init> ======= : 



======== method <clinit> ======= : 

 ====================================== 
** CLASS org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest



======== method <init> ======= : 



======== method setUp ======= : 



======== method testGetInstanceId ======= : 

Unit: r1 = $r3
Unit: r0 := @this: org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
Unit: r2 = virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: java.lang.String generateInstanceId()>()
Unit: staticinvoke <org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest: void assertEquals(java.lang.String,java.lang.String)>("foo", r2)
Unit: return
Unit: specialinvoke $r3.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void <init>()>()
Unit: $r3 = new org.quartz.simpl.SystemPropertyInstanceIdGenerator


======== method testGetInstanceIdWithPrepend ======= : 

Unit: r1 = $r3
Unit: virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void setPrepend(java.lang.String)>("1")
Unit: staticinvoke <org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest: void assertEquals(java.lang.String,java.lang.String)>("1foo", r2)
Unit: r2 = virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: java.lang.String generateInstanceId()>()
Unit: $r3 = new org.quartz.simpl.SystemPropertyInstanceIdGenerator
Unit: specialinvoke $r3.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void <init>()>()
Unit: return
Unit: r0 := @this: org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest


======== method testGetInstanceIdWithPostpend ======= : 

Unit: r0 := @this: org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
Unit: specialinvoke $r3.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void <init>()>()
Unit: return
Unit: r2 = virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: java.lang.String generateInstanceId()>()
Unit: r1 = $r3
Unit: $r3 = new org.quartz.simpl.SystemPropertyInstanceIdGenerator
Unit: virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void setPostpend(java.lang.String)>("2")
Unit: staticinvoke <org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest: void assertEquals(java.lang.String,java.lang.String)>("foo2", r2)


======== method testGetInstanceIdWithPrependAndPostpend ======= : 

Unit: r2 = virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: java.lang.String generateInstanceId()>()
Unit: staticinvoke <org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest: void assertEquals(java.lang.String,java.lang.String)>("1foo2", r2)
Unit: return
Unit: r1 = $r3
Unit: virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void setPrepend(java.lang.String)>("1")
Unit: r0 := @this: org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
Unit: $r3 = new org.quartz.simpl.SystemPropertyInstanceIdGenerator
Unit: specialinvoke $r3.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void setPostpend(java.lang.String)>("2")


======== method testGetInstanceIdFromCustomSystemProperty ======= : 

Unit: staticinvoke <org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest: void assertEquals(java.lang.String,java.lang.String)>("goo", r2)
Unit: specialinvoke $r3.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void <init>()>()
Unit: r1 = $r3
Unit: r0 := @this: org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
Unit: $r3 = new org.quartz.simpl.SystemPropertyInstanceIdGenerator
Unit: r2 = virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: java.lang.String generateInstanceId()>()
Unit: virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void setSystemPropertyName(java.lang.String)>("blah.blah")
Unit: return


======== method testGeneratorThroughSchedulerInstatiation ======= : 

Unit: r0 := @this: org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
Unit: r1 = virtualinvoke $r18.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.jobStore.dataSource", "MeSchedulerDatabase")
Unit: r22 = $r20
Unit: $r13 = class "Lorg/quartz/impl/jdbcjobstore/JobStoreTX;"
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceName", "MeScheduler")
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceId", "AUTO")
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.jobStore.class", $r14)
Unit: $r18 = new org.quartz.impl.StdSchedulerFactory
Unit: $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>()
Unit: goto [?= $r2 = new java.util.Properties]
Unit: staticinvoke <org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest: void assertEquals(java.lang.String,java.lang.String)>("1goo2", $r19)
Unit: $r5 = class "Lorg/quartz/simpl/SystemPropertyInstanceIdGenerator;"
Unit: $r2 = new java.util.Properties
Unit: $r20 := @caughtexception
Unit: $r21 = new java.lang.AssertionError
Unit: r23 = $r2
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.jobStore.isClustered", "true")
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool")
Unit: throw $r21
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceIdGenerator.systemPropertyName", "blah.blah")
Unit: specialinvoke $r21.<java.lang.AssertionError: void <init>(java.lang.Object)>(r22)
Unit: $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>()
Unit: return
Unit: $r19 = interfaceinvoke r1.<org.quartz.Scheduler: java.lang.String getSchedulerInstanceId()>()
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceIdGenerator.class", $r6)
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceIdGenerator.prepend", "1")
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceIdGenerator.postpend", "2")
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void createDatabase(java.lang.String)>("MeSchedulerDatabase")
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "1")
Unit: specialinvoke $r2.<java.util.Properties: void <init>()>()
Unit: specialinvoke $r18.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r23)
 ====================================== 
** CLASS org.quartz.DefaultSchedulerTest



======== method <init> ======= : 



======== method testAddJobNoTrigger ======= : 

Unit: specialinvoke $r4.<org.quartz.impl.JobDetailImpl: void <init>()>()
Unit: interfaceinvoke r1.<org.quartz.Scheduler: void addJob(org.quartz.JobDetail,boolean)>(r2, 0)
Unit: r0 := @this: org.quartz.DefaultSchedulerTest
Unit: goto [?= virtualinvoke r2.<org.quartz.impl.JobDetailImpl: void setDurability(boolean)>(1)]
Unit: r1 = staticinvoke <org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getDefaultScheduler()>()
Unit: interfaceinvoke r1.<org.quartz.Scheduler: void addJob(org.quartz.JobDetail,boolean)>(r2, 0)
Unit: virtualinvoke r2.<org.quartz.impl.JobDetailImpl: void setDurability(boolean)>(1)
Unit: virtualinvoke r2.<org.quartz.impl.JobDetailImpl: void setName(java.lang.String)>("testjob")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r6, $r7)
Unit: r2 = $r4
Unit: $r6 = virtualinvoke r3.<org.quartz.SchedulerException: java.lang.String getMessage()>()
Unit: $r4 = new org.quartz.impl.JobDetailImpl
Unit: return
Unit: $r5 := @caughtexception
Unit: r3 = $r5
Unit: $r7 = staticinvoke <org.junit.matchers.JUnitMatchers: org.hamcrest.Matcher containsString(java.lang.String)>("durable")
 ====================================== 
** CLASS org.quartz.utils.counter.sampled.TimeStampedCounterValue



======== method <init> ======= : 



======== method getCounterValue ======= : 



======== method getTimestamp ======= : 



======== method toString ======= : 

 ====================================== 
** CLASS org.quartz.utils.Driver



======== method <init> ======= : 



======== method runall ======= : 

 ====================================== 
** CLASS org.quartz.TriggerBuilderTest$TestJob



======== method <init> ======= : 



======== method execute ======= : 

 ====================================== 
** CLASS org.quartz.utils.C3p0PoolingConnectionProviderTest



======== method <init> ======= : 



======== method testC3p0PoolProviderWithExtraProps ======= : 

Unit: r0 := @this: org.quartz.utils.C3p0PoolingConnectionProviderTest
Unit: specialinvoke r0.<org.quartz.utils.C3p0PoolingConnectionProviderTest: void validateC3p0PoolProviderClassWithExtraProps()>()
Unit: return
Unit: r0.<org.quartz.utils.C3p0PoolingConnectionProviderTest: boolean testConnectionProviderClass> = 1


======== method testC3p0PoolProviderClassWithExtraProps ======= : 

Unit: r0.<org.quartz.utils.C3p0PoolingConnectionProviderTest: boolean testConnectionProviderClass> = 0
Unit: r0 := @this: org.quartz.utils.C3p0PoolingConnectionProviderTest
Unit: return
Unit: specialinvoke r0.<org.quartz.utils.C3p0PoolingConnectionProviderTest: void validateC3p0PoolProviderClassWithExtraProps()>()


======== method validateC3p0PoolProviderClassWithExtraProps ======= : 



======== method createSchedulerProperties ======= : 

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.CUBRIDDelegate



======== method <init> ======= : 



======== method getObjectFromBlob ======= : 



======== method getJobDataFromBlob ======= : 



======== method setBytes ======= : 

 ====================================== 
** CLASS org.quartz.core.NullSampledStatisticsImpl



======== method <init> ======= : 



======== method getJobsCompletedMostRecentSample ======= : 



======== method getJobsExecutingMostRecentSample ======= : 



======== method getJobsScheduledMostRecentSample ======= : 



======== method shutdown ======= : 

 ====================================== 
** CLASS org.quartz.JobDetailTest



======== method <init> ======= : 



======== method testClone ======= : 

Unit: $r3 = new org.quartz.impl.JobDetailImpl
Unit: specialinvoke $r3.<org.quartz.impl.JobDetailImpl: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setName(java.lang.String)>("hi")
Unit: r0 := @this: org.quartz.JobDetailTest
Unit: r1 = $r3
Unit: staticinvoke <org.quartz.JobDetailTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, r1)
Unit: r2 = (org.quartz.JobDetail) $r4
Unit: $r4 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: java.lang.Object clone()>()
Unit: return


======== method testAnnotationDetection ======= : 

Unit: $r2 = new org.quartz.impl.JobDetailImpl
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomePersistentJob to be persistent", $z0)
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeNonConcurrentJob;")
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeExtendedPersistentJob to be persistent", $z8)
Unit: $z1 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeStatefulJob to be persistent", $z6)
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeExtendedStatefulJob to be persistent", $z14)
Unit: staticinvoke <org.quartz.JobDetailTest: void assertFalse(java.lang.String,boolean)>("Expecting SomeNonConcurrentJob to not be persistent", $z2)
Unit: $z3 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: $z15 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: $z2 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeExtendedNonConcurrentJob;")
Unit: $z6 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: $z13 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomePersistentJob;")
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeNonConcurrentPersistentJob;")
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeNonConcurrentPersistentJob to be persistent", $z4)
Unit: $z5 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeNonConcurrentPersistentJob to disallow concurrent execution", $z5)
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeExtendedStatefulJob to disallow concurrent execution", $z15)
Unit: $z10 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: r0 := @this: org.quartz.JobDetailTest
Unit: r1 = $r2
Unit: $z9 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: $z12 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeStatefulJob to disallow concurrent execution", $z7)
Unit: $z7 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeExtendedNonConcurrentPersistentJob;")
Unit: staticinvoke <org.quartz.JobDetailTest: void assertFalse(java.lang.String,boolean)>("Expecting SomePersistentJob to not disallow concurrent execution", $z1)
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeExtendedPersistentJob;")
Unit: specialinvoke $r2.<org.quartz.impl.JobDetailImpl: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setName(java.lang.String)>("hi")
Unit: $z14 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeNonConcurrentJob to disallow concurrent execution", $z3)
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeExtendedStatefulJob;")
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeStatefulJob;")
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeExtendedNonConcurrentPersistentJob to be persistent", $z12)
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeExtendedNonConcurrentJob to disallow concurrent execution", $z11)
Unit: $z11 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeExtendedNonConcurrentPersistentJob to disallow concurrent execution", $z13)
Unit: staticinvoke <org.quartz.JobDetailTest: void assertFalse(java.lang.String,boolean)>("Expecting SomeExtendedPersistentJob to not disallow concurrent execution", $z9)
Unit: staticinvoke <org.quartz.JobDetailTest: void assertFalse(java.lang.String,boolean)>("Expecting SomeExtendedNonConcurrentJob to not be persistent", $z10)
Unit: $z4 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: $z8 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: return

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
Number of Methods with MustMock in class: 3
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 0

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest
Number of Methods with MustMock in class: 4
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 0

 ====================================== 
Benchmark quartz_quartz_core_2.3.1 Mock Stats
Total Number of Test/Before/After Methods with MustMock: 7
Total Number of Test/Before/After Methods with ArrayMock in class: 0
Total Number of Test/Before/After Methods with Collection in class: 0

 ====================================== 
 INVOCATION STATISTICS 

Benchmark Overall Stats 
Total Invocations: 3206
Invocations On Mocks: 21

Soot finished on Sat Apr 24 02:11:56 EDT 2021
Soot has run for 3 min. 9 sec.
