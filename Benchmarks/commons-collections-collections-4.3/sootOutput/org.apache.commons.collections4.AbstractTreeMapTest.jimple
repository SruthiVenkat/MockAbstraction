public abstract class org.apache.commons.collections4.AbstractTreeMapTest extends org.apache.commons.collections4.map.AbstractMapTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.AbstractTreeMapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.AbstractTreeMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public boolean isAllowNullKey()
    {
        org.apache.commons.collections4.AbstractTreeMapTest r0;

        r0 := @this: org.apache.commons.collections4.AbstractTreeMapTest;

        return 0;
    }

    public abstract java.util.TreeMap makeObject();

    public void testNewMap()
    {
        org.apache.commons.collections4.AbstractTreeMapTest r0;
        java.util.TreeMap r1;
        boolean $z0;
        int $i0;

        r0 := @this: org.apache.commons.collections4.AbstractTreeMapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.AbstractTreeMapTest: java.util.TreeMap makeObject()>();

        $z0 = virtualinvoke r1.<java.util.TreeMap: boolean isEmpty()>();

        staticinvoke <org.apache.commons.collections4.AbstractTreeMapTest: void assertTrue(java.lang.String,boolean)>("New map is empty", $z0);

        $i0 = virtualinvoke r1.<java.util.TreeMap: int size()>();

        staticinvoke <org.apache.commons.collections4.AbstractTreeMapTest: void assertEquals(java.lang.String,int,int)>("New map has size zero", 0, $i0);

        return;
    }

    public void testSearch()
    {
        org.apache.commons.collections4.AbstractTreeMapTest r0;
        java.util.TreeMap r1;
        java.lang.Object $r4, $r5;

        r0 := @this: org.apache.commons.collections4.AbstractTreeMapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.AbstractTreeMapTest: java.util.TreeMap makeObject()>();

        virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("first", "First Item");

        virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("second", "Second Item");

        $r4 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>("first");

        staticinvoke <org.apache.commons.collections4.AbstractTreeMapTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Top item is \'Second Item\'", "First Item", $r4);

        $r5 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>("second");

        staticinvoke <org.apache.commons.collections4.AbstractTreeMapTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Next Item is \'First Item\'", "Second Item", $r5);

        return;
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.AbstractTreeMapTest r0;
        java.util.TreeMap $r1;

        r0 := @this: org.apache.commons.collections4.AbstractTreeMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.AbstractTreeMapTest: java.util.TreeMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.AbstractTreeMapTest r0;
        java.util.TreeMap $r1;

        r0 := @this: org.apache.commons.collections4.AbstractTreeMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.AbstractTreeMapTest: java.util.TreeMap makeObject()>();

        return $r1;
    }
}
