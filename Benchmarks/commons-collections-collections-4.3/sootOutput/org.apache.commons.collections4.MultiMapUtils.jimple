public class org.apache.commons.collections4.MultiMapUtils extends java.lang.Object
{
    public static final org.apache.commons.collections4.MultiValuedMap EMPTY_MULTI_VALUED_MAP;

    private void <init>()
    {
        org.apache.commons.collections4.MultiMapUtils r0;

        r0 := @this: org.apache.commons.collections4.MultiMapUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.commons.collections4.MultiValuedMap emptyMultiValuedMap()
    {
        org.apache.commons.collections4.MultiValuedMap $r0;

        $r0 = <org.apache.commons.collections4.MultiMapUtils: org.apache.commons.collections4.MultiValuedMap EMPTY_MULTI_VALUED_MAP>;

        return $r0;
    }

    public static org.apache.commons.collections4.MultiValuedMap emptyIfNull(org.apache.commons.collections4.MultiValuedMap)
    {
        org.apache.commons.collections4.MultiValuedMap r0, $r1;

        r0 := @parameter0: org.apache.commons.collections4.MultiValuedMap;

        if r0 != null goto label1;

        $r1 = <org.apache.commons.collections4.MultiMapUtils: org.apache.commons.collections4.MultiValuedMap EMPTY_MULTI_VALUED_MAP>;

        goto label2;

     label1:
        $r1 = r0;

     label2:
        return $r1;
    }

    public static boolean isEmpty(org.apache.commons.collections4.MultiValuedMap)
    {
        org.apache.commons.collections4.MultiValuedMap r0;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.commons.collections4.MultiValuedMap;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<org.apache.commons.collections4.MultiValuedMap: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static java.util.Collection getCollection(org.apache.commons.collections4.MultiValuedMap, java.lang.Object)
    {
        org.apache.commons.collections4.MultiValuedMap r0;
        java.lang.Object r1;
        java.util.Collection $r2;

        r0 := @parameter0: org.apache.commons.collections4.MultiValuedMap;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<org.apache.commons.collections4.MultiValuedMap: java.util.Collection get(java.lang.Object)>(r1);

        return $r2;

     label1:
        return null;
    }

    public static java.util.List getValuesAsList(org.apache.commons.collections4.MultiValuedMap, java.lang.Object)
    {
        org.apache.commons.collections4.MultiValuedMap r0;
        java.lang.Object r1;
        java.util.Collection r2;
        boolean $z0;
        java.util.ArrayList $r3;
        java.util.List $r4;

        r0 := @parameter0: org.apache.commons.collections4.MultiValuedMap;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label2;

        r2 = interfaceinvoke r0.<org.apache.commons.collections4.MultiValuedMap: java.util.Collection get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r4 = (java.util.List) r2;

        return $r4;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        return $r3;

     label2:
        return null;
    }

    public static java.util.Set getValuesAsSet(org.apache.commons.collections4.MultiValuedMap, java.lang.Object)
    {
        org.apache.commons.collections4.MultiValuedMap r0;
        java.lang.Object r1;
        java.util.Collection r2;
        boolean $z0;
        java.util.HashSet $r3;
        java.util.Set $r4;

        r0 := @parameter0: org.apache.commons.collections4.MultiValuedMap;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label2;

        r2 = interfaceinvoke r0.<org.apache.commons.collections4.MultiValuedMap: java.util.Collection get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.util.Set;

        if $z0 == 0 goto label1;

        $r4 = (java.util.Set) r2;

        return $r4;

     label1:
        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>(r2);

        return $r3;

     label2:
        return null;
    }

    public static org.apache.commons.collections4.Bag getValuesAsBag(org.apache.commons.collections4.MultiValuedMap, java.lang.Object)
    {
        org.apache.commons.collections4.MultiValuedMap r0;
        java.lang.Object r1;
        java.util.Collection r2;
        boolean $z0;
        org.apache.commons.collections4.bag.HashBag $r3;
        org.apache.commons.collections4.Bag $r4;

        r0 := @parameter0: org.apache.commons.collections4.MultiValuedMap;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label2;

        r2 = interfaceinvoke r0.<org.apache.commons.collections4.MultiValuedMap: java.util.Collection get(java.lang.Object)>(r1);

        $z0 = r2 instanceof org.apache.commons.collections4.Bag;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.commons.collections4.Bag) r2;

        return $r4;

     label1:
        $r3 = new org.apache.commons.collections4.bag.HashBag;

        specialinvoke $r3.<org.apache.commons.collections4.bag.HashBag: void <init>(java.util.Collection)>(r2);

        return $r3;

     label2:
        return null;
    }

    public static org.apache.commons.collections4.ListValuedMap newListValuedHashMap()
    {
        org.apache.commons.collections4.multimap.ArrayListValuedHashMap $r0;

        $r0 = new org.apache.commons.collections4.multimap.ArrayListValuedHashMap;

        specialinvoke $r0.<org.apache.commons.collections4.multimap.ArrayListValuedHashMap: void <init>()>();

        return $r0;
    }

    public static org.apache.commons.collections4.SetValuedMap newSetValuedHashMap()
    {
        org.apache.commons.collections4.multimap.HashSetValuedHashMap $r0;

        $r0 = new org.apache.commons.collections4.multimap.HashSetValuedHashMap;

        specialinvoke $r0.<org.apache.commons.collections4.multimap.HashSetValuedHashMap: void <init>()>();

        return $r0;
    }

    public static org.apache.commons.collections4.MultiValuedMap unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)
    {
        org.apache.commons.collections4.MultiValuedMap r0;
        org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap $r1;

        r0 := @parameter0: org.apache.commons.collections4.MultiValuedMap;

        $r1 = staticinvoke <org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap: org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.MultiValuedMap transformedMultiValuedMap(org.apache.commons.collections4.MultiValuedMap, org.apache.commons.collections4.Transformer, org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.MultiValuedMap r0;
        org.apache.commons.collections4.Transformer r1, r2;
        org.apache.commons.collections4.multimap.TransformedMultiValuedMap $r3;

        r0 := @parameter0: org.apache.commons.collections4.MultiValuedMap;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        r2 := @parameter2: org.apache.commons.collections4.Transformer;

        $r3 = staticinvoke <org.apache.commons.collections4.multimap.TransformedMultiValuedMap: org.apache.commons.collections4.multimap.TransformedMultiValuedMap transformingMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>(r0, r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.apache.commons.collections4.multimap.ArrayListValuedHashMap $r0;
        org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap $r1;

        $r0 = new org.apache.commons.collections4.multimap.ArrayListValuedHashMap;

        specialinvoke $r0.<org.apache.commons.collections4.multimap.ArrayListValuedHashMap: void <init>(int,int)>(0, 0);

        $r1 = staticinvoke <org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap: org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)>($r0);

        <org.apache.commons.collections4.MultiMapUtils: org.apache.commons.collections4.MultiValuedMap EMPTY_MULTI_VALUED_MAP> = $r1;

        return;
    }
}
