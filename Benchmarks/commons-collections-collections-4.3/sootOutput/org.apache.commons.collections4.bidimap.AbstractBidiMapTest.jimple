public abstract class org.apache.commons.collections4.bidimap.AbstractBidiMapTest extends org.apache.commons.collections4.map.AbstractIterableMapTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void <init>(java.lang.String)>("Inverse");

        return;
    }

    public org.apache.commons.collections4.BidiMap makeFullMap()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.IterableMap $r1;
        org.apache.commons.collections4.BidiMap $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap makeFullMap()>();

        $r2 = (org.apache.commons.collections4.BidiMap) $r1;

        return $r2;
    }

    public abstract org.apache.commons.collections4.BidiMap makeObject();

    public boolean isAllowDuplicateValues()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        return 0;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        return "4";
    }

    public void testBidiPut()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap r1, r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.Object $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: boolean isPutAddSupported()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: boolean isPutChangeSupported()>();

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeObject()>();

        r2 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $i0 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: int size()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(int,int)>(0, $i0);

        $i1 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: int size()>();

        $i2 = interfaceinvoke r2.<org.apache.commons.collections4.BidiMap: int size()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(int,int)>($i1, $i2);

        interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("A", "B");

        $i3 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: int size()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(int,int)>(1, $i3);

        $i4 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: int size()>();

        $i5 = interfaceinvoke r2.<org.apache.commons.collections4.BidiMap: int size()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(int,int)>($i4, $i5);

        $r4 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>("A");

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r4);

        $r5 = interfaceinvoke r2.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>("B");

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r5);

        interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("A", "C");

        $i6 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: int size()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(int,int)>(1, $i6);

        $i7 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: int size()>();

        $i8 = interfaceinvoke r2.<org.apache.commons.collections4.BidiMap: int size()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(int,int)>($i7, $i8);

        $r7 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>("A");

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("C", $r7);

        $r8 = interfaceinvoke r2.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>("C");

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r8);

        interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("B", "C");

        $i9 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: int size()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(int,int)>(1, $i9);

        $i10 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: int size()>();

        $i11 = interfaceinvoke r2.<org.apache.commons.collections4.BidiMap: int size()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(int,int)>($i10, $i11);

        $r10 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>("B");

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("C", $r10);

        $r11 = interfaceinvoke r2.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>("C");

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r11);

        interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("E", "F");

        $i12 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: int size()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(int,int)>(2, $i12);

        $i13 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: int size()>();

        $i14 = interfaceinvoke r2.<org.apache.commons.collections4.BidiMap: int size()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(int,int)>($i13, $i14);

        $r13 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>("E");

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("F", $r13);

        $r14 = interfaceinvoke r2.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>("F");

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("E", $r14);

        return;
    }

    public void verify()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void verifyInverse()>();

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void verify()>();

        return;
    }

    public void verifyInverse()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        java.util.Set r3, r4;
        java.util.Collection r5, r6;
        java.util.Map $r7, $r8, $r12, $r14;
        int $i0, $i1;
        org.apache.commons.collections4.BidiMap $r9, $r10, $r15, $r16;
        java.util.HashMap $r11, $r13;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r7 = r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.util.Map map>;

        $i0 = interfaceinvoke $r7.<java.util.Map: int size()>();

        $r8 = r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.util.Map map>;

        $r9 = (org.apache.commons.collections4.BidiMap) $r8;

        $r10 = interfaceinvoke $r9.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $i1 = interfaceinvoke $r10.<org.apache.commons.collections4.BidiMap: int size()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(int,int)>($i0, $i1);

        $r11 = new java.util.HashMap;

        $r12 = r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.util.Map map>;

        specialinvoke $r11.<java.util.HashMap: void <init>(java.util.Map)>($r12);

        $r13 = new java.util.HashMap;

        $r14 = r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.util.Map map>;

        $r15 = (org.apache.commons.collections4.BidiMap) $r14;

        $r16 = interfaceinvoke $r15.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        specialinvoke $r13.<java.util.HashMap: void <init>(java.util.Map)>($r16);

        r3 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>();

        r4 = interfaceinvoke $r13.<java.util.Map: java.util.Set keySet()>();

        r5 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>();

        r6 = interfaceinvoke $r13.<java.util.Map: java.util.Collection values()>();

        $z0 = interfaceinvoke r3.<java.util.Set: boolean containsAll(java.util.Collection)>(r6);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $z1 = interfaceinvoke r6.<java.util.Collection: boolean containsAll(java.util.Collection)>(r3);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $z2 = interfaceinvoke r5.<java.util.Collection: boolean containsAll(java.util.Collection)>(r4);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $z3 = interfaceinvoke r4.<java.util.Set: boolean containsAll(java.util.Collection)>(r5);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z3);

        return;
    }

    public void testBidiGetKey()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap $r1;
        java.lang.Object[] $r2, $r4;
        java.lang.Object $r3, $r5;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleKeys()>();

        $r3 = $r2[0];

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleValues()>();

        $r5 = $r4[0];

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void doTestGetKey(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)>($r1, $r3, $r5);

        return;
    }

    public void testBidiGetKeyInverse()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap $r1, $r2;
        java.lang.Object[] $r3, $r5;
        java.lang.Object $r4, $r6;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r2 = interfaceinvoke $r1.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleValues()>();

        $r4 = $r3[0];

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleKeys()>();

        $r6 = $r5[0];

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void doTestGetKey(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)>($r2, $r4, $r6);

        return;
    }

    private void doTestGetKey(org.apache.commons.collections4.BidiMap, java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap r1;
        java.lang.Object r2, r3, $r4, $r5;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        r1 := @parameter0: org.apache.commons.collections4.BidiMap;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>(r2);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Value not found for key.", r3, $r4);

        $r5 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object getKey(java.lang.Object)>(r3);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Key not found for value.", r2, $r5);

        return;
    }

    public void testBidiInverse()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap r1, r2, $r3;
        java.lang.Object[] $r4, $r6, $r9, $r11;
        java.lang.Object $r5, $r7, $r8, $r10, $r12, $r13;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        r2 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $r3 = interfaceinvoke r2.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("Inverse of inverse is not equal to original.", r1, $r3);

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleKeys()>();

        $r5 = $r4[0];

        $r6 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleValues()>();

        $r7 = $r6[0];

        $r8 = interfaceinvoke r2.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>($r7);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Value not found for key.", $r5, $r8);

        $r9 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleValues()>();

        $r10 = $r9[0];

        $r11 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleKeys()>();

        $r12 = $r11[0];

        $r13 = interfaceinvoke r2.<org.apache.commons.collections4.BidiMap: java.lang.Object getKey(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Key not found for value.", $r10, $r13);

        return;
    }

    public void testBidiModifyEntrySet()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        boolean $z0;
        org.apache.commons.collections4.BidiMap $r1, $r2, $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: boolean isSetValueSupported()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void modifyEntrySet(org.apache.commons.collections4.BidiMap)>($r1);

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void modifyEntrySet(org.apache.commons.collections4.BidiMap)>($r3);

        return;
    }

    private void modifyEntrySet(org.apache.commons.collections4.BidiMap)
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap r1;
        java.util.Map$Entry r2;
        java.lang.Object r3, r4, $r8, $r10, $r11;
        java.util.Set $r6;
        java.util.Iterator $r7;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        r1 := @parameter0: org.apache.commons.collections4.BidiMap;

        $r6 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r8;

        r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("newValue");

        $r10 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>(r3);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Modifying entrySet did not affect underlying Map.", "newValue", $r10);

        $r11 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object getKey(java.lang.Object)>(r4);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertNull(java.lang.String,java.lang.Object)>("Modifying entrySet did not affect inverse Map.", $r11);

        return;
    }

    public void testBidiClear()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.commons.collections4.BidiMap $r1, $r2, $r3, $r4, r7, r8;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: boolean isRemoveSupported()>();

        if $z0 != 0 goto label5;

     label1:
        $r4 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        interfaceinvoke $r4.<org.apache.commons.collections4.BidiMap: void clear()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

     label5:
        r7 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        interfaceinvoke r7.<org.apache.commons.collections4.BidiMap: void clear()>();

        $z1 = interfaceinvoke r7.<org.apache.commons.collections4.BidiMap: boolean isEmpty()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Map was not cleared.", $z1);

        $r1 = interfaceinvoke r7.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $z2 = interfaceinvoke $r1.<org.apache.commons.collections4.BidiMap: boolean isEmpty()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Inverse map was not cleared.", $z2);

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        r8 = interfaceinvoke $r2.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        interfaceinvoke r8.<org.apache.commons.collections4.BidiMap: void clear()>();

        $z3 = interfaceinvoke r8.<org.apache.commons.collections4.BidiMap: boolean isEmpty()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Map was not cleared.", $z3);

        $r3 = interfaceinvoke r8.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $z4 = interfaceinvoke $r3.<org.apache.commons.collections4.BidiMap: boolean isEmpty()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Inverse map was not cleared.", $z4);

        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    public void testBidiRemove()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        boolean $z0;
        org.apache.commons.collections4.BidiMap $r1, $r4, $r5, $r8, $r11, $r12, $r15, $r17, $r21;
        java.lang.Object[] $r2, $r6, $r9, $r13, $r18, $r22;
        java.lang.Object $r3, $r7, $r10, $r14, $r16, $r19, $r23;
        java.lang.UnsupportedOperationException $r25, $r26;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: boolean isRemoveSupported()>();

        if $z0 != 0 goto label8;

     label1:
        $r17 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r18 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleKeys()>();

        $r19 = $r18[0];

        interfaceinvoke $r17.<org.apache.commons.collections4.BidiMap: java.lang.Object remove(java.lang.Object)>($r19);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r26 := @caughtexception;

     label4:
        $r21 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r22 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleValues()>();

        $r23 = $r22[0];

        interfaceinvoke $r21.<org.apache.commons.collections4.BidiMap: java.lang.Object removeValue(java.lang.Object)>($r23);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void fail()>();

     label5:
        goto label7;

     label6:
        $r25 := @caughtexception;

     label7:
        return;

     label8:
        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleKeys()>();

        $r3 = $r2[0];

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void remove(org.apache.commons.collections4.BidiMap,java.lang.Object)>($r1, $r3);

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r5 = interfaceinvoke $r4.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $r6 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleValues()>();

        $r7 = $r6[0];

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void remove(org.apache.commons.collections4.BidiMap,java.lang.Object)>($r5, $r7);

        $r8 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r9 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleValues()>();

        $r10 = $r9[0];

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void removeValue(org.apache.commons.collections4.BidiMap,java.lang.Object)>($r8, $r10);

        $r11 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r12 = interfaceinvoke $r11.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $r13 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleKeys()>();

        $r14 = $r13[0];

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void removeValue(org.apache.commons.collections4.BidiMap,java.lang.Object)>($r12, $r14);

        $r15 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r16 = interfaceinvoke $r15.<org.apache.commons.collections4.BidiMap: java.lang.Object removeValue(java.lang.Object)>("NotPresent");

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r16);

        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
        catch java.lang.UnsupportedOperationException from label4 to label5 with label6;
    }

    private void remove(org.apache.commons.collections4.BidiMap, java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap r1;
        java.lang.Object r2, r3, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        r1 := @parameter0: org.apache.commons.collections4.BidiMap;

        r2 := @parameter1: java.lang.Object;

        r3 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object remove(java.lang.Object)>(r2);

        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: boolean containsKey(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Key was not removed.", $z1);

        $r5 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object getKey(java.lang.Object)>(r3);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertNull(java.lang.String,java.lang.Object)>("Value was not removed.", $r5);

        return;
    }

    private void removeValue(org.apache.commons.collections4.BidiMap, java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap r1;
        java.lang.Object r2, r3, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        r1 := @parameter0: org.apache.commons.collections4.BidiMap;

        r2 := @parameter1: java.lang.Object;

        r3 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object removeValue(java.lang.Object)>(r2);

        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: boolean containsKey(java.lang.Object)>(r3);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Key was not removed.", $z1);

        $r5 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.lang.Object getKey(java.lang.Object)>(r2);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertNull(java.lang.String,java.lang.Object)>("Value was not removed.", $r5);

        return;
    }

    public void testBidiKeySetValuesOrder()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        java.util.Iterator r1, r2;
        java.lang.Object r3, r4, $r10;
        java.util.Map $r5, $r7, $r9;
        java.util.Set $r6;
        java.util.Collection $r8;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void resetFull()>();

        $r5 = r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.util.Map map>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        r1 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

        $r7 = r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.util.Map map>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>();

        r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r9 = r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.util.Map map>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r10, r4);

        goto label1;

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(0, $z1);

        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(0, $z2);

        return;
    }

    public void testBidiRemoveByKeySet()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        boolean $z0;
        org.apache.commons.collections4.BidiMap $r1, $r6, $r7;
        java.lang.Object[] $r2, $r4, $r8, $r10;
        java.lang.Object $r3, $r5, $r9, $r11;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: boolean isRemoveSupported()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleKeys()>();

        $r3 = $r2[0];

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleValues()>();

        $r5 = $r4[0];

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void removeByKeySet(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)>($r1, $r3, $r5);

        $r6 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r7 = interfaceinvoke $r6.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $r8 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleValues()>();

        $r9 = $r8[0];

        $r10 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleKeys()>();

        $r11 = $r10[0];

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void removeByKeySet(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)>($r7, $r9, $r11);

        return;
    }

    private void removeByKeySet(org.apache.commons.collections4.BidiMap, java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap r1, $r8, $r10;
        java.lang.Object r2, r3;
        java.util.Set $r4;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        r1 := @parameter0: org.apache.commons.collections4.BidiMap;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.util.Set keySet()>();

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>(r2);

        $z1 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: boolean containsKey(java.lang.Object)>(r2);

        if $z1 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Key was not removed.", $z5);

        $z2 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: boolean containsValue(java.lang.Object)>(r3);

        if $z2 != 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Value was not removed.", $z6);

        $r8 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $z3 = interfaceinvoke $r8.<org.apache.commons.collections4.BidiMap: boolean containsValue(java.lang.Object)>(r2);

        if $z3 != 0 goto label5;

        $z7 = 1;

        goto label6;

     label5:
        $z7 = 0;

     label6:
        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Key was not removed from inverse map.", $z7);

        $r10 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $z4 = interfaceinvoke $r10.<org.apache.commons.collections4.BidiMap: boolean containsKey(java.lang.Object)>(r3);

        if $z4 != 0 goto label7;

        $z8 = 1;

        goto label8;

     label7:
        $z8 = 0;

     label8:
        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Value was not removed from inverse map.", $z8);

        return;
    }

    public void testBidiRemoveByEntrySet()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        boolean $z0;
        org.apache.commons.collections4.BidiMap $r1, $r6, $r7;
        java.lang.Object[] $r2, $r4, $r8, $r10;
        java.lang.Object $r3, $r5, $r9, $r11;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: boolean isRemoveSupported()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleKeys()>();

        $r3 = $r2[0];

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleValues()>();

        $r5 = $r4[0];

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void removeByEntrySet(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)>($r1, $r3, $r5);

        $r6 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        $r7 = interfaceinvoke $r6.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $r8 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleValues()>();

        $r9 = $r8[0];

        $r10 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getSampleKeys()>();

        $r11 = $r10[0];

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void removeByEntrySet(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)>($r7, $r9, $r11);

        return;
    }

    private void removeByEntrySet(org.apache.commons.collections4.BidiMap, java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap r1, $r14, $r16;
        java.lang.Object r2, r3, $r10;
        java.util.HashMap $r5;
        java.util.Set $r7, $r8;
        java.util.Iterator $r9;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        r1 := @parameter0: org.apache.commons.collections4.BidiMap;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        $r7 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r7.<java.util.Set: boolean remove(java.lang.Object)>($r10);

        $z1 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: boolean containsKey(java.lang.Object)>(r2);

        if $z1 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Key was not removed.", $z5);

        $z2 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: boolean containsValue(java.lang.Object)>(r3);

        if $z2 != 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Value was not removed.", $z6);

        $r14 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $z3 = interfaceinvoke $r14.<org.apache.commons.collections4.BidiMap: boolean containsValue(java.lang.Object)>(r2);

        if $z3 != 0 goto label5;

        $z7 = 1;

        goto label6;

     label5:
        $z7 = 0;

     label6:
        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Key was not removed from inverse map.", $z7);

        $r16 = interfaceinvoke r1.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap()>();

        $z4 = interfaceinvoke $r16.<org.apache.commons.collections4.BidiMap: boolean containsKey(java.lang.Object)>(r3);

        if $z4 != 0 goto label7;

        $z8 = 1;

        goto label8;

     label7:
        $z8 = 0;

     label8:
        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertTrue(java.lang.String,boolean)>("Value was not removed from inverse map.", $z8);

        return;
    }

    public org.apache.commons.collections4.BidiMap getMap()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.IterableMap $r1;
        org.apache.commons.collections4.BidiMap $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        $r2 = (org.apache.commons.collections4.BidiMap) $r1;

        return $r2;
    }

    public org.apache.commons.collections4.BulkTest bulkTestMapEntrySet()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = new org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet;

        specialinvoke $r1.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet: void <init>(org.apache.commons.collections4.bidimap.AbstractBidiMapTest)>(r0);

        return $r1;
    }

    public org.apache.commons.collections4.BulkTest bulkTestInverseMap()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = new org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap;

        specialinvoke $r1.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap: void <init>(org.apache.commons.collections4.bidimap.AbstractBidiMapTest,org.apache.commons.collections4.bidimap.AbstractBidiMapTest)>(r0, r0);

        return $r1;
    }

    public org.apache.commons.collections4.BulkTest bulkTestBidiMapIterator()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = new org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator;

        specialinvoke $r1.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator: void <init>(org.apache.commons.collections4.bidimap.AbstractBidiMapTest)>(r0);

        return $r1;
    }

    public void testBidiMapIteratorSet()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        java.lang.Object r1, r2, r5, $r12, $r13, $r14, $r18, $r19, $r20, $r24, $r25, $r26, $r32, $r33, $r34, $r35, r41;
        org.apache.commons.collections4.BidiMap r3;
        org.apache.commons.collections4.MapIterator r4;
        java.lang.Object[] $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.util.Map $r10, $r16, $r22, $r28, $r30;
        java.lang.UnsupportedOperationException $r38;
        java.lang.IllegalArgumentException $r39;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r7 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getOtherValues()>();

        r1 = $r7[0];

        $r8 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.lang.Object[] getOtherValues()>();

        r2 = $r8[1];

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void resetFull()>();

        r3 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap getMap()>();

        r4 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: org.apache.commons.collections4.MapIterator mapIterator()>();

        $z0 = interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z0);

        r5 = interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: boolean isSetValueSupported()>();

        if $z1 != 0 goto label05;

     label01:
        interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object setValue(java.lang.Object)>(r1);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void fail()>();

     label02:
        goto label04;

     label03:
        $r38 := @caughtexception;

     label04:
        return;

     label05:
        interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object setValue(java.lang.Object)>(r1);

        $r10 = r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.util.Map confirmed>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r1);

        $r12 = interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object getKey()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertSame(java.lang.Object,java.lang.Object)>(r5, $r12);

        $r13 = interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r13);

        $z2 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: boolean containsKey(java.lang.Object)>(r5);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $z3 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: boolean containsValue(java.lang.Object)>(r1);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z3);

        $r14 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>(r5);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r14);

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void verify()>();

        interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object setValue(java.lang.Object)>(r1);

        $r16 = r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.util.Map confirmed>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r1);

        $r18 = interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object getKey()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertSame(java.lang.Object,java.lang.Object)>(r5, $r18);

        $r19 = interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r19);

        $z4 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: boolean containsKey(java.lang.Object)>(r5);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z4);

        $z5 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: boolean containsValue(java.lang.Object)>(r1);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z5);

        $r20 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>(r5);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r20);

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void verify()>();

        r41 = interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object setValue(java.lang.Object)>(r2);

        $r22 = r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.util.Map confirmed>;

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, r2);

        $r24 = interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object getKey()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertSame(java.lang.Object,java.lang.Object)>(r41, $r24);

        $r25 = interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertSame(java.lang.Object,java.lang.Object)>(r2, $r25);

        $z6 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: boolean containsKey(java.lang.Object)>(r41);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z6);

        $z7 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: boolean containsValue(java.lang.Object)>(r2);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z7);

        $r26 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>(r41);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r26);

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void verify()>();

     label06:
        interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object setValue(java.lang.Object)>(r1);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void fail()>();

     label07:
        goto label09;

     label08:
        $r39 := @caughtexception;

        return;

     label09:
        $r28 = r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.util.Map confirmed>;

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, r1);

        $r30 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: java.util.Map getConfirmed()>();

        interfaceinvoke $r30.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);

        $r32 = interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r32);

        $r33 = interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object getKey()>();

        $z8 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: boolean containsKey(java.lang.Object)>($r33);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z8);

        $z9 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: boolean containsValue(java.lang.Object)>(r1);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(1, $z9);

        $r34 = interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object getKey()>();

        $r35 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: java.lang.Object get(java.lang.Object)>($r34);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r35);

        $z10 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: boolean containsKey(java.lang.Object)>(r5);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(0, $z10);

        $z11 = interfaceinvoke r3.<org.apache.commons.collections4.BidiMap: boolean containsValue(java.lang.Object)>(r2);

        staticinvoke <org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void assertEquals(boolean,boolean)>(0, $z11);

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: void verify()>();

        interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        $z12 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: boolean isRemoveSupported()>();

        if $z12 == 0 goto label10;

        interfaceinvoke r4.<org.apache.commons.collections4.MapIterator: void remove()>();

     label10:
        return;

        catch java.lang.UnsupportedOperationException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
    }

    public volatile org.apache.commons.collections4.IterableMap getMap()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap getMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.IterableMap makeFullMap()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.IterableMap makeObject()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeObject()>();

        return $r1;
    }

    public volatile java.util.Map getMap()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap getMap()>();

        return $r1;
    }

    public volatile java.util.Map makeFullMap()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeFullMap()>();

        return $r1;
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.bidimap.AbstractBidiMapTest r0;
        org.apache.commons.collections4.BidiMap $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractBidiMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractBidiMapTest: org.apache.commons.collections4.BidiMap makeObject()>();

        return $r1;
    }
}
