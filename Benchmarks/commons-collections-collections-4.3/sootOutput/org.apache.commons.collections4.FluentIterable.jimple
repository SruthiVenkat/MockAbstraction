public class org.apache.commons.collections4.FluentIterable extends java.lang.Object implements java.lang.Iterable
{
    private final java.lang.Iterable iterable;

    public static org.apache.commons.collections4.FluentIterable empty()
    {
        org.apache.commons.collections4.FluentIterable $r0;

        $r0 = <org.apache.commons.collections4.IterableUtils: org.apache.commons.collections4.FluentIterable EMPTY_ITERABLE>;

        return $r0;
    }

    public static org.apache.commons.collections4.FluentIterable of(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.collections4.iterators.SingletonIterator $r1;
        java.lang.Iterable $r2;
        org.apache.commons.collections4.FluentIterable $r3;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.apache.commons.collections4.iterators.SingletonIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.SingletonIterator: void <init>(java.lang.Object,boolean)>(r0, 0);

        $r2 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Iterable asIterable(java.util.Iterator)>($r1);

        $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2);

        return $r3;
    }

    public static transient org.apache.commons.collections4.FluentIterable of(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.util.List $r1;
        org.apache.commons.collections4.FluentIterable $r2;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r1);

        return $r2;
    }

    public static org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        boolean $z0;
        org.apache.commons.collections4.FluentIterable $r1, $r2;

        r0 := @parameter0: java.lang.Iterable;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r0);

        $z0 = r0 instanceof org.apache.commons.collections4.FluentIterable;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.commons.collections4.FluentIterable) r0;

        return $r2;

     label1:
        $r1 = new org.apache.commons.collections4.FluentIterable;

        specialinvoke $r1.<org.apache.commons.collections4.FluentIterable: void <init>(java.lang.Iterable)>(r0);

        return $r1;
    }

    void <init>()
    {
        org.apache.commons.collections4.FluentIterable r0;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable> = r0;

        return;
    }

    private void <init>(java.lang.Iterable)
    {
        org.apache.commons.collections4.FluentIterable r0;
        java.lang.Iterable r1;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable> = r1;

        return;
    }

    public transient org.apache.commons.collections4.FluentIterable append(java.lang.Object[])
    {
        org.apache.commons.collections4.FluentIterable r0, $r3;
        java.lang.Object[] r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: java.lang.Object[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable append(java.lang.Iterable)>($r2);

        return $r3;
    }

    public org.apache.commons.collections4.FluentIterable append(java.lang.Iterable)
    {
        org.apache.commons.collections4.FluentIterable r0, $r4;
        java.lang.Iterable r1, $r2, $r3;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r3 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable chainedIterable(java.lang.Iterable,java.lang.Iterable)>($r2, r1);

        $r4 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r3);

        return $r4;
    }

    public org.apache.commons.collections4.FluentIterable collate(java.lang.Iterable)
    {
        org.apache.commons.collections4.FluentIterable r0, $r4;
        java.lang.Iterable r1, $r2, $r3;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r3 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable collatedIterable(java.lang.Iterable,java.lang.Iterable)>($r2, r1);

        $r4 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r3);

        return $r4;
    }

    public org.apache.commons.collections4.FluentIterable collate(java.lang.Iterable, java.util.Comparator)
    {
        org.apache.commons.collections4.FluentIterable r0, $r5;
        java.lang.Iterable r1, $r3, $r4;
        java.util.Comparator r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: java.util.Comparator;

        $r3 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r4 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable collatedIterable(java.util.Comparator,java.lang.Iterable,java.lang.Iterable)>(r2, $r3, r1);

        $r5 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r4);

        return $r5;
    }

    public org.apache.commons.collections4.FluentIterable eval()
    {
        org.apache.commons.collections4.FluentIterable r0, $r2;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>();

        $r2 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r1);

        return $r2;
    }

    public org.apache.commons.collections4.FluentIterable filter(org.apache.commons.collections4.Predicate)
    {
        org.apache.commons.collections4.FluentIterable r0, $r4;
        org.apache.commons.collections4.Predicate r1;
        java.lang.Iterable $r2, $r3;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: org.apache.commons.collections4.Predicate;

        $r2 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r3 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable filteredIterable(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, r1);

        $r4 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r3);

        return $r4;
    }

    public org.apache.commons.collections4.FluentIterable limit(long)
    {
        org.apache.commons.collections4.FluentIterable r0, $r3;
        long l0;
        java.lang.Iterable $r1, $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable boundedIterable(java.lang.Iterable,long)>($r1, l0);

        $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2);

        return $r3;
    }

    public org.apache.commons.collections4.FluentIterable loop()
    {
        org.apache.commons.collections4.FluentIterable r0, $r3;
        java.lang.Iterable $r1, $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        $r1 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable loopingIterable(java.lang.Iterable)>($r1);

        $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2);

        return $r3;
    }

    public org.apache.commons.collections4.FluentIterable reverse()
    {
        org.apache.commons.collections4.FluentIterable r0, $r3;
        java.lang.Iterable $r1, $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        $r1 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable reversedIterable(java.lang.Iterable)>($r1);

        $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2);

        return $r3;
    }

    public org.apache.commons.collections4.FluentIterable skip(long)
    {
        org.apache.commons.collections4.FluentIterable r0, $r3;
        long l0;
        java.lang.Iterable $r1, $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable skippingIterable(java.lang.Iterable,long)>($r1, l0);

        $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2);

        return $r3;
    }

    public org.apache.commons.collections4.FluentIterable transform(org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.FluentIterable r0, $r4;
        org.apache.commons.collections4.Transformer r1;
        java.lang.Iterable $r2, $r3;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: org.apache.commons.collections4.Transformer;

        $r2 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r3 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable transformedIterable(java.lang.Iterable,org.apache.commons.collections4.Transformer)>($r2, r1);

        $r4 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r3);

        return $r4;
    }

    public org.apache.commons.collections4.FluentIterable unique()
    {
        org.apache.commons.collections4.FluentIterable r0, $r3;
        java.lang.Iterable $r1, $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        $r1 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable uniqueIterable(java.lang.Iterable)>($r1);

        $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2);

        return $r3;
    }

    public org.apache.commons.collections4.FluentIterable unmodifiable()
    {
        org.apache.commons.collections4.FluentIterable r0, $r3;
        java.lang.Iterable $r1, $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        $r1 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable unmodifiableIterable(java.lang.Iterable)>($r1);

        $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2);

        return $r3;
    }

    public org.apache.commons.collections4.FluentIterable zip(java.lang.Iterable)
    {
        org.apache.commons.collections4.FluentIterable r0, $r4;
        java.lang.Iterable r1, $r2, $r3;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r3 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable zippingIterable(java.lang.Iterable,java.lang.Iterable)>($r2, r1);

        $r4 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r3);

        return $r4;
    }

    public transient org.apache.commons.collections4.FluentIterable zip(java.lang.Iterable[])
    {
        org.apache.commons.collections4.FluentIterable r0, $r4;
        java.lang.Iterable[] r1;
        java.lang.Iterable $r2, $r3;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: java.lang.Iterable[];

        $r2 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r3 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable zippingIterable(java.lang.Iterable,java.lang.Iterable[])>($r2, r1);

        $r4 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r3);

        return $r4;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections4.FluentIterable r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        $r1 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.util.Enumeration asEnumeration()
    {
        org.apache.commons.collections4.FluentIterable r0;
        java.util.Iterator $r1;
        java.util.Enumeration $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.FluentIterable: java.util.Iterator iterator()>();

        $r2 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Enumeration asEnumeration(java.util.Iterator)>($r1);

        return $r2;
    }

    public boolean allMatch(org.apache.commons.collections4.Predicate)
    {
        org.apache.commons.collections4.FluentIterable r0;
        org.apache.commons.collections4.Predicate r1;
        java.lang.Iterable $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: org.apache.commons.collections4.Predicate;

        $r2 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $z0 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, r1);

        return $z0;
    }

    public boolean anyMatch(org.apache.commons.collections4.Predicate)
    {
        org.apache.commons.collections4.FluentIterable r0;
        org.apache.commons.collections4.Predicate r1;
        java.lang.Iterable $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: org.apache.commons.collections4.Predicate;

        $r2 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $z0 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, r1);

        return $z0;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections4.FluentIterable r0;
        java.lang.Iterable $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        $r1 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $z0 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean isEmpty(java.lang.Iterable)>($r1);

        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections4.FluentIterable r0;
        java.lang.Object r1;
        java.lang.Iterable $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $z0 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object)>($r2, r1);

        return $z0;
    }

    public void forEach(org.apache.commons.collections4.Closure)
    {
        org.apache.commons.collections4.FluentIterable r0;
        org.apache.commons.collections4.Closure r1;
        java.lang.Iterable $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: org.apache.commons.collections4.Closure;

        $r2 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void forEach(java.lang.Iterable,org.apache.commons.collections4.Closure)>($r2, r1);

        return;
    }

    public java.lang.Object get(int)
    {
        org.apache.commons.collections4.FluentIterable r0;
        int i0;
        java.lang.Iterable $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object get(java.lang.Iterable,int)>($r1, i0);

        return $r2;
    }

    public int size()
    {
        org.apache.commons.collections4.FluentIterable r0;
        java.lang.Iterable $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        $r1 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $i0 = staticinvoke <org.apache.commons.collections4.IterableUtils: int size(java.lang.Iterable)>($r1);

        return $i0;
    }

    public void copyInto(java.util.Collection)
    {
        org.apache.commons.collections4.FluentIterable r0;
        java.util.Collection r1;
        java.lang.Iterable $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: java.util.Collection;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Collection must not be null");

        throw $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r1, $r2);

        return;
    }

    public java.lang.Object[] toArray(java.lang.Class)
    {
        org.apache.commons.collections4.FluentIterable r0;
        java.lang.Class r1;
        java.util.Iterator $r2;
        java.lang.Object[] $r3;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.FluentIterable: java.util.Iterator iterator()>();

        $r3 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object[] toArray(java.util.Iterator,java.lang.Class)>($r2, r1);

        return $r3;
    }

    public java.util.List toList()
    {
        org.apache.commons.collections4.FluentIterable r0;
        java.lang.Iterable $r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        $r1 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List toList(java.lang.Iterable)>($r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.FluentIterable r0;
        java.lang.Iterable $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterable;

        $r1 = r0.<org.apache.commons.collections4.FluentIterable: java.lang.Iterable iterable>;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable)>($r1);

        return $r2;
    }
}
