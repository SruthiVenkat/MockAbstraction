final class org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer extends java.lang.Object implements org.apache.commons.collections4.Transformer
{
    final org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet this$1;

    private void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer;

        r1 := @parameter0: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet;

        r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.collections4.MultiSet$Entry transform(java.util.Map$Entry)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer r0;
        java.util.Map$Entry r1;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer$1 $r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer;

        r1 := @parameter0: java.util.Map$Entry;

        $r2 = new org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer$1;

        specialinvoke $r2.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer$1: void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer,java.util.Map$Entry)>(r0, r1);

        return $r2;
    }

    public volatile java.lang.Object transform(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer r0;
        java.lang.Object r1;
        java.util.Map$Entry $r2;
        org.apache.commons.collections4.MultiSet$Entry $r3;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map$Entry) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer: org.apache.commons.collections4.MultiSet$Entry transform(java.util.Map$Entry)>($r2);

        return $r3;
    }

    void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet, org.apache.commons.collections4.multimap.AbstractMultiValuedMap$1)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet r1;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$1 r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer;

        r1 := @parameter0: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet;

        r2 := @parameter1: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$1;

        specialinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer: void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet)>(r1);

        return;
    }
}
