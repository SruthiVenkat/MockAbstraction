public abstract class org.apache.commons.collections4.list.AbstractLinkedListTest extends org.apache.commons.collections4.list.AbstractListTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.list.AbstractLinkedListTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedListTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractListTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public void testRemoveFirst()
    {
        org.apache.commons.collections4.list.AbstractLinkedListTest r0;
        org.apache.commons.collections4.list.AbstractLinkedList r1;
        boolean $z0;
        java.lang.UnsupportedOperationException $r4;
        java.lang.String[] $r5;
        java.lang.Object[] $r6;
        java.util.List $r7;
        java.lang.Object $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedListTest;

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void resetEmpty()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: org.apache.commons.collections4.list.AbstractLinkedList getCollection()>();

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: boolean isRemoveSupported()>();

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object removeFirst()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "value1";

        $r5[1] = "value2";

        $r6 = (java.lang.Object[]) $r5;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addAll(java.util.Collection)>($r7);

        $r8 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object removeFirst()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value1", $r8);

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addLast(java.lang.Object)>("value3");

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        $r9 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object removeFirst()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $r9);

        $r10 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object removeFirst()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value3", $r10);

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addLast(java.lang.Object)>("value4");

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        $r11 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object removeFirst()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value4", $r11);

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    public void testRemoveLast()
    {
        org.apache.commons.collections4.list.AbstractLinkedListTest r0;
        org.apache.commons.collections4.list.AbstractLinkedList r1;
        boolean $z0;
        java.lang.UnsupportedOperationException $r4;
        java.lang.String[] $r5;
        java.lang.Object[] $r6;
        java.util.List $r7;
        java.lang.Object $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedListTest;

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void resetEmpty()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: org.apache.commons.collections4.list.AbstractLinkedList getCollection()>();

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: boolean isRemoveSupported()>();

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object removeLast()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "value1";

        $r5[1] = "value2";

        $r6 = (java.lang.Object[]) $r5;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addAll(java.util.Collection)>($r7);

        $r8 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object removeLast()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $r8);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addFirst(java.lang.Object)>("value3");

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        $r9 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object removeLast()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value1", $r9);

        $r10 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object removeLast()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value3", $r10);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addFirst(java.lang.Object)>("value4");

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        $r11 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object removeFirst()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value4", $r11);

        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    public void testAddNodeAfter()
    {
        org.apache.commons.collections4.list.AbstractLinkedListTest r0;
        org.apache.commons.collections4.list.AbstractLinkedList r1;
        boolean $z0;
        java.lang.UnsupportedOperationException $r4;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r5, $r8, $r11, $r15;
        java.lang.Object $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r19;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedListTest;

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void resetEmpty()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: org.apache.commons.collections4.list.AbstractLinkedList getCollection()>();

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: boolean isAddSupported()>();

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addFirst(java.lang.Object)>(null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addFirst(java.lang.Object)>("value1");

        $r5 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(0, 0);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: void addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList$Node,java.lang.Object)>($r5, "value2");

        $r6 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getFirst()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value1", $r6);

        $r7 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getLast()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $r7);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object removeFirst()>();

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        $r8 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(0, 0);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: void addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList$Node,java.lang.Object)>($r8, "value3");

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        $r9 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getFirst()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $r9);

        $r10 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getLast()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value3", $r10);

        $r11 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(0, 0);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: void addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList$Node,java.lang.Object)>($r11, "value4");

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        $r12 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getFirst()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $r12);

        $r13 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getLast()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value3", $r13);

        $r14 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value4", $r14);

        $r15 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(2, 0);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: void addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList$Node,java.lang.Object)>($r15, "value5");

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        $r16 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getFirst()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $r16);

        $r17 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value4", $r17);

        $r18 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object get(int)>(2);

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value3", $r18);

        $r19 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getLast()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value5", $r19);

        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    public void testRemoveNode()
    {
        org.apache.commons.collections4.list.AbstractLinkedListTest r0;
        org.apache.commons.collections4.list.AbstractLinkedList r1;
        boolean $z0, $z1;
        java.lang.String[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r5, $r8, $r11;
        java.lang.Object $r6, $r7, $r9, $r10, $r12, $r13;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedListTest;

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void resetEmpty()>();

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: boolean isAddSupported()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: boolean isRemoveSupported()>();

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: org.apache.commons.collections4.list.AbstractLinkedList getCollection()>();

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "value1";

        $r2[1] = "value2";

        $r3 = (java.lang.Object[]) $r2;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addAll(java.util.Collection)>($r4);

        $r5 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(0, 0);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: void removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)>($r5);

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        $r6 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getFirst()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $r6);

        $r7 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getLast()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $r7);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addFirst(java.lang.Object)>("value1");

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addFirst(java.lang.Object)>("value0");

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        $r8 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(1, 0);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: void removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)>($r8);

        $r9 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getFirst()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value0", $r9);

        $r10 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getLast()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $r10);

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        $r11 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(1, 0);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: void removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)>($r11);

        $r12 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getFirst()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value0", $r12);

        $r13 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object getLast()>();

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>("value0", $r13);

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        return;
    }

    public void testGetNode()
    {
        org.apache.commons.collections4.list.AbstractLinkedListTest r0;
        org.apache.commons.collections4.list.AbstractLinkedList r1;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r2, $r3, $r4, $r5, $r10;
        java.lang.String[] $r7;
        java.lang.Object[] $r8;
        java.util.List $r9;
        java.lang.IndexOutOfBoundsException $r14, $r15, $r16, $r17;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedListTest;

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void resetEmpty()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: org.apache.commons.collections4.list.AbstractLinkedList getCollection()>();

        $r2 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(0, 1);

        $r3 = $r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous>;

        $r4 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(0, 1);

        $r5 = $r4.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r5);

     label01:
        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(0, 0);

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException.");

     label02:
        goto label04;

     label03:
        $r16 := @caughtexception;

     label04:
        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "value1";

        $r7[1] = "value2";

        $r8 = (java.lang.Object[]) $r7;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addAll(java.util.Collection)>($r9);

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addFirst(java.lang.Object)>("value0");

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

        $r10 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(1, 0);

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: void removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)>($r10);

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: void checkNodes()>();

     label05:
        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(2, 0);

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException.");

     label06:
        goto label08;

     label07:
        $r14 := @caughtexception;

     label08:
        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(-1, 0);

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException.");

     label09:
        goto label11;

     label10:
        $r17 := @caughtexception;

     label11:
        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(3, 1);

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException.");

     label12:
        goto label14;

     label13:
        $r15 := @caughtexception;

     label14:
        return;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label03;
        catch java.lang.IndexOutOfBoundsException from label05 to label06 with label07;
        catch java.lang.IndexOutOfBoundsException from label08 to label09 with label10;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label13;
    }

    protected void checkNodes()
    {
        org.apache.commons.collections4.list.AbstractLinkedListTest r0;
        org.apache.commons.collections4.list.AbstractLinkedList r1;
        int $i0, $i1, $i2, $i3, $i4, i5;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedListTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: org.apache.commons.collections4.list.AbstractLinkedList getCollection()>();

        i5 = 0;

     label1:
        $i0 = r1.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        if i5 >= $i0 goto label3;

        $r2 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(i5, 0);

        $r3 = $r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

        $i1 = i5 + 1;

        $r4 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>($i1, 1);

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4);

        $i2 = r1.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        $i3 = $i2 - 1;

        if i5 >= $i3 goto label2;

        $i4 = i5 + 1;

        $r5 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>($i4, 0);

        $r6 = $r5.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous>;

        $r7 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(i5, 0);

        staticinvoke <org.apache.commons.collections4.list.AbstractLinkedListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return;
    }

    public org.apache.commons.collections4.list.AbstractLinkedList getCollection()
    {
        org.apache.commons.collections4.list.AbstractLinkedListTest r0;
        java.util.List $r1;
        org.apache.commons.collections4.list.AbstractLinkedList $r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedListTest;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.list.AbstractListTest: java.util.List getCollection()>();

        $r2 = (org.apache.commons.collections4.list.AbstractLinkedList) $r1;

        return $r2;
    }

    public volatile java.util.List getCollection()
    {
        org.apache.commons.collections4.list.AbstractLinkedListTest r0;
        org.apache.commons.collections4.list.AbstractLinkedList $r1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: org.apache.commons.collections4.list.AbstractLinkedList getCollection()>();

        return $r1;
    }

    public volatile java.util.Collection getCollection()
    {
        org.apache.commons.collections4.list.AbstractLinkedListTest r0;
        org.apache.commons.collections4.list.AbstractLinkedList $r1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedListTest: org.apache.commons.collections4.list.AbstractLinkedList getCollection()>();

        return $r1;
    }
}
