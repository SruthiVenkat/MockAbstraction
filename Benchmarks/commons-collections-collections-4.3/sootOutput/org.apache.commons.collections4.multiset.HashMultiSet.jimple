public class org.apache.commons.collections4.multiset.HashMultiSet extends org.apache.commons.collections4.multiset.AbstractMapMultiSet implements java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.collections4.multiset.HashMultiSet r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.commons.collections4.multiset.HashMultiSet;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections4.multiset.AbstractMapMultiSet: void <init>(java.util.Map)>($r1);

        return;
    }

    public void <init>(java.util.Collection)
    {
        org.apache.commons.collections4.multiset.HashMultiSet r0;
        java.util.Collection r1;

        r0 := @this: org.apache.commons.collections4.multiset.HashMultiSet;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<org.apache.commons.collections4.multiset.HashMultiSet: void <init>()>();

        virtualinvoke r0.<org.apache.commons.collections4.multiset.HashMultiSet: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections4.multiset.HashMultiSet r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: org.apache.commons.collections4.multiset.HashMultiSet;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        specialinvoke r0.<org.apache.commons.collections4.multiset.AbstractMapMultiSet: void doWriteObject(java.io.ObjectOutputStream)>(r1);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.multiset.HashMultiSet r0;
        java.io.ObjectInputStream r1;
        java.util.HashMap $r2;

        r0 := @this: org.apache.commons.collections4.multiset.HashMultiSet;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        virtualinvoke r0.<org.apache.commons.collections4.multiset.HashMultiSet: void setMap(java.util.Map)>($r2);

        specialinvoke r0.<org.apache.commons.collections4.multiset.AbstractMapMultiSet: void doReadObject(java.io.ObjectInputStream)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.multiset.HashMultiSet: long serialVersionUID> = 20150610L;

        return;
    }
}
