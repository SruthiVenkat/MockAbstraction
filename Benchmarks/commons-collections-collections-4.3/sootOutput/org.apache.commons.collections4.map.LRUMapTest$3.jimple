class org.apache.commons.collections4.map.LRUMapTest$3 extends java.lang.ThreadGroup
{
    final java.util.Map val$exceptions;
    final org.apache.commons.collections4.map.LRUMapTest this$0;

    void <init>(org.apache.commons.collections4.map.LRUMapTest, java.lang.String, java.util.Map)
    {
        org.apache.commons.collections4.map.LRUMapTest$3 r0;
        org.apache.commons.collections4.map.LRUMapTest r1;
        java.lang.String r2;
        java.util.Map r3;

        r0 := @this: org.apache.commons.collections4.map.LRUMapTest$3;

        r1 := @parameter0: org.apache.commons.collections4.map.LRUMapTest;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Map;

        r0.<org.apache.commons.collections4.map.LRUMapTest$3: org.apache.commons.collections4.map.LRUMapTest this$0> = r1;

        r0.<org.apache.commons.collections4.map.LRUMapTest$3: java.util.Map val$exceptions> = r3;

        specialinvoke r0.<java.lang.ThreadGroup: void <init>(java.lang.String)>(r2);

        return;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        org.apache.commons.collections4.map.LRUMapTest$3 r0;
        java.lang.Thread r1;
        java.lang.Throwable r2;
        java.util.Map $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.collections4.map.LRUMapTest$3;

        r1 := @parameter0: java.lang.Thread;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = r0.<org.apache.commons.collections4.map.LRUMapTest$3: java.util.Map val$exceptions>;

        $r4 = virtualinvoke r1.<java.lang.Thread: java.lang.String getName()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r4);

        specialinvoke r0.<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r1, r2);

        return;
    }
}
