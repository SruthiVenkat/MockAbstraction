public class org.apache.commons.collections4.collection.PredicatedCollection$Builder extends java.lang.Object
{
    private final org.apache.commons.collections4.Predicate predicate;
    private final java.util.List accepted;
    private final java.util.List rejected;

    public void <init>(org.apache.commons.collections4.Predicate)
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        org.apache.commons.collections4.Predicate r1;
        java.util.ArrayList $r2, $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        r1 := @parameter0: org.apache.commons.collections4.Predicate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List accepted> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List rejected> = $r3;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null");

        throw $r4;

     label1:
        r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.Predicate predicate> = r1;

        return;
    }

    public org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        java.lang.Object r1;
        org.apache.commons.collections4.Predicate $r2;
        boolean $z0;
        java.util.List $r3, $r4;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.Predicate predicate>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List accepted>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r3 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List rejected>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        return r0;
    }

    public org.apache.commons.collections4.collection.PredicatedCollection$Builder addAll(java.util.Collection)
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        r1 := @parameter0: java.util.Collection;

        if r1 == null goto label2;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>(r3);

        goto label1;

     label2:
        return r0;
    }

    public java.util.List createPredicatedList()
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List createPredicatedList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List createPredicatedList(java.util.List)
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        java.util.List r1, $r4;
        org.apache.commons.collections4.list.PredicatedList r2;
        org.apache.commons.collections4.Predicate $r3;
        java.lang.NullPointerException $r5;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("List must not be null.");

        throw $r5;

     label1:
        $r3 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.Predicate predicate>;

        r2 = staticinvoke <org.apache.commons.collections4.list.PredicatedList: org.apache.commons.collections4.list.PredicatedList predicatedList(java.util.List,org.apache.commons.collections4.Predicate)>(r1, $r3);

        $r4 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List accepted>;

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return r2;
    }

    public java.util.Set createPredicatedSet()
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        java.util.HashSet $r1;
        java.util.Set $r2;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.Set createPredicatedSet(java.util.Set)>($r1);

        return $r2;
    }

    public java.util.Set createPredicatedSet(java.util.Set)
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        java.util.Set r1;
        org.apache.commons.collections4.set.PredicatedSet r2;
        org.apache.commons.collections4.Predicate $r3;
        java.util.List $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        r1 := @parameter0: java.util.Set;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Set must not be null.");

        throw $r5;

     label1:
        $r3 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.Predicate predicate>;

        r2 = staticinvoke <org.apache.commons.collections4.set.PredicatedSet: org.apache.commons.collections4.set.PredicatedSet predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)>(r1, $r3);

        $r4 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List accepted>;

        virtualinvoke r2.<org.apache.commons.collections4.set.PredicatedSet: boolean addAll(java.util.Collection)>($r4);

        return r2;
    }

    public org.apache.commons.collections4.MultiSet createPredicatedMultiSet()
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        org.apache.commons.collections4.multiset.HashMultiSet $r1;
        org.apache.commons.collections4.MultiSet $r2;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        $r1 = new org.apache.commons.collections4.multiset.HashMultiSet;

        specialinvoke $r1.<org.apache.commons.collections4.multiset.HashMultiSet: void <init>()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.MultiSet createPredicatedMultiSet(org.apache.commons.collections4.MultiSet)>($r1);

        return $r2;
    }

    public org.apache.commons.collections4.MultiSet createPredicatedMultiSet(org.apache.commons.collections4.MultiSet)
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        org.apache.commons.collections4.MultiSet r1;
        org.apache.commons.collections4.multiset.PredicatedMultiSet r2;
        org.apache.commons.collections4.Predicate $r3;
        java.util.List $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        r1 := @parameter0: org.apache.commons.collections4.MultiSet;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("MultiSet must not be null.");

        throw $r5;

     label1:
        $r3 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.Predicate predicate>;

        r2 = staticinvoke <org.apache.commons.collections4.multiset.PredicatedMultiSet: org.apache.commons.collections4.multiset.PredicatedMultiSet predicatedMultiSet(org.apache.commons.collections4.MultiSet,org.apache.commons.collections4.Predicate)>(r1, $r3);

        $r4 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List accepted>;

        virtualinvoke r2.<org.apache.commons.collections4.multiset.PredicatedMultiSet: boolean addAll(java.util.Collection)>($r4);

        return r2;
    }

    public org.apache.commons.collections4.Bag createPredicatedBag()
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        org.apache.commons.collections4.bag.HashBag $r1;
        org.apache.commons.collections4.Bag $r2;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        $r1 = new org.apache.commons.collections4.bag.HashBag;

        specialinvoke $r1.<org.apache.commons.collections4.bag.HashBag: void <init>()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.Bag createPredicatedBag(org.apache.commons.collections4.Bag)>($r1);

        return $r2;
    }

    public org.apache.commons.collections4.Bag createPredicatedBag(org.apache.commons.collections4.Bag)
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        org.apache.commons.collections4.Bag r1;
        org.apache.commons.collections4.bag.PredicatedBag r2;
        org.apache.commons.collections4.Predicate $r3;
        java.util.List $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        r1 := @parameter0: org.apache.commons.collections4.Bag;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Bag must not be null.");

        throw $r5;

     label1:
        $r3 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.Predicate predicate>;

        r2 = staticinvoke <org.apache.commons.collections4.bag.PredicatedBag: org.apache.commons.collections4.bag.PredicatedBag predicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)>(r1, $r3);

        $r4 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List accepted>;

        virtualinvoke r2.<org.apache.commons.collections4.bag.PredicatedBag: boolean addAll(java.util.Collection)>($r4);

        return r2;
    }

    public java.util.Queue createPredicatedQueue()
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        java.util.LinkedList $r1;
        java.util.Queue $r2;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.Queue createPredicatedQueue(java.util.Queue)>($r1);

        return $r2;
    }

    public java.util.Queue createPredicatedQueue(java.util.Queue)
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        java.util.Queue r1;
        org.apache.commons.collections4.queue.PredicatedQueue r2;
        org.apache.commons.collections4.Predicate $r3;
        java.util.List $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        r1 := @parameter0: java.util.Queue;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("queue must not be null");

        throw $r5;

     label1:
        $r3 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.Predicate predicate>;

        r2 = staticinvoke <org.apache.commons.collections4.queue.PredicatedQueue: org.apache.commons.collections4.queue.PredicatedQueue predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)>(r1, $r3);

        $r4 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List accepted>;

        virtualinvoke r2.<org.apache.commons.collections4.queue.PredicatedQueue: boolean addAll(java.util.Collection)>($r4);

        return r2;
    }

    public java.util.Collection rejectedElements()
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r0;
        java.util.List $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        $r1 = r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List rejected>;

        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r2;
    }
}
