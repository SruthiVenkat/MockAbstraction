public class org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet extends java.util.AbstractSet
{
    private final org.apache.commons.collections4.multiset.AbstractMultiSet parent;

    protected void <init>(org.apache.commons.collections4.multiset.AbstractMultiSet)
    {
        org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet r0;
        org.apache.commons.collections4.multiset.AbstractMultiSet r1;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet;

        r1 := @parameter0: org.apache.commons.collections4.multiset.AbstractMultiSet;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet: org.apache.commons.collections4.multiset.AbstractMultiSet parent> = r1;

        return;
    }

    public int size()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet r0;
        org.apache.commons.collections4.multiset.AbstractMultiSet $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet;

        $r1 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet: org.apache.commons.collections4.multiset.AbstractMultiSet parent>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections4.multiset.AbstractMultiSet: int uniqueElements()>();

        return $i0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet r0;
        org.apache.commons.collections4.multiset.AbstractMultiSet $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet;

        $r1 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet: org.apache.commons.collections4.multiset.AbstractMultiSet parent>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.multiset.AbstractMultiSet: java.util.Iterator createEntrySetIterator()>();

        return $r2;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet r0;
        java.lang.Object r1, r3;
        org.apache.commons.collections4.MultiSet$Entry r2;
        boolean $z0, $z1;
        org.apache.commons.collections4.multiset.AbstractMultiSet $r4;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.commons.collections4.MultiSet$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.commons.collections4.MultiSet$Entry) r1;

        r3 = interfaceinvoke r2.<org.apache.commons.collections4.MultiSet$Entry: java.lang.Object getElement()>();

        $r4 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet: org.apache.commons.collections4.multiset.AbstractMultiSet parent>;

        $i0 = virtualinvoke $r4.<org.apache.commons.collections4.multiset.AbstractMultiSet: int getCount(java.lang.Object)>(r3);

        $i1 = interfaceinvoke r2.<org.apache.commons.collections4.MultiSet$Entry: int getCount()>();

        if $i0 != $i1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet r0;
        java.lang.Object r1, r3;
        org.apache.commons.collections4.MultiSet$Entry r2;
        int i0, $i1;
        boolean $z0, $z1;
        org.apache.commons.collections4.multiset.AbstractMultiSet $r4, $r5, $r6;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.commons.collections4.MultiSet$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.commons.collections4.MultiSet$Entry) r1;

        r3 = interfaceinvoke r2.<org.apache.commons.collections4.MultiSet$Entry: java.lang.Object getElement()>();

        $r4 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet: org.apache.commons.collections4.multiset.AbstractMultiSet parent>;

        $z1 = virtualinvoke $r4.<org.apache.commons.collections4.multiset.AbstractMultiSet: boolean contains(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

        $r5 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet: org.apache.commons.collections4.multiset.AbstractMultiSet parent>;

        i0 = virtualinvoke $r5.<org.apache.commons.collections4.multiset.AbstractMultiSet: int getCount(java.lang.Object)>(r3);

        $i1 = interfaceinvoke r2.<org.apache.commons.collections4.MultiSet$Entry: int getCount()>();

        if $i1 != i0 goto label2;

        $r6 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet: org.apache.commons.collections4.multiset.AbstractMultiSet parent>;

        virtualinvoke $r6.<org.apache.commons.collections4.multiset.AbstractMultiSet: int remove(java.lang.Object,int)>(r3, i0);

        return 1;

     label2:
        return 0;
    }
}
