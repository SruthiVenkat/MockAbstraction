public abstract class org.apache.commons.collections4.bidimap.AbstractDualBidiMap extends java.lang.Object implements org.apache.commons.collections4.BidiMap
{
    transient java.util.Map normalMap;
    transient java.util.Map reverseMap;
    transient org.apache.commons.collections4.BidiMap inverseBidiMap;
    transient java.util.Set keySet;
    transient java.util.Set values;
    transient java.util.Set entrySet;

    protected void <init>()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap> = null;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set keySet> = null;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set values> = null;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set entrySet> = null;

        return;
    }

    protected void <init>(java.util.Map, java.util.Map)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Map r1, r2;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap> = null;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set keySet> = null;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set values> = null;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set entrySet> = null;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap> = r1;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap> = r2;

        return;
    }

    protected void <init>(java.util.Map, java.util.Map, org.apache.commons.collections4.BidiMap)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Map r1, r2;
        org.apache.commons.collections4.BidiMap r3;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: org.apache.commons.collections4.BidiMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap> = null;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set keySet> = null;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set values> = null;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set entrySet> = null;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap> = r1;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap> = r2;

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap> = r3;

        return;
    }

    protected abstract org.apache.commons.collections4.BidiMap createBidiMap(java.util.Map, java.util.Map, org.apache.commons.collections4.BidiMap);

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.lang.Object r1, $r3;
        java.util.Map $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public int size()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Map $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.lang.Object r1, r2, r3, $r11, $r15;
        java.util.Map $r4, $r5, $r6, $r7, $r9, $r10, $r13, $r14;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r14 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap>;

        $r13 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        $r15 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r15);

     label1:
        $r5 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap>;

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        $r10 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        $r9 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap>;

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r11);

     label2:
        $r6 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        r3 = interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r7 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        return r3;
    }

    public void putAll(java.util.Map)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.util.Map;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.lang.Object r1, r6;
        java.util.Map $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.lang.Object;

        r6 = null;

        $r2 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6);

     label1:
        return r6;
    }

    public void clear()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        return;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public org.apache.commons.collections4.MapIterator mapIterator()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        $r1 = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator;

        specialinvoke $r1.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator: void <init>(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)>(r0);

        return $r1;
    }

    public java.lang.Object getKey(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.lang.Object r1, $r3;
        java.util.Map $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object removeValue(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.lang.Object r1, r6;
        java.util.Map $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.lang.Object;

        r6 = null;

        $r2 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap>;

        r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6);

     label1:
        return r6;
    }

    public org.apache.commons.collections4.BidiMap inverseBidiMap()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        org.apache.commons.collections4.BidiMap $r1, $r2, $r5;
        java.util.Map $r3, $r4;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap>;

        if $r1 != null goto label1;

        $r4 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map reverseMap>;

        $r3 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Map normalMap>;

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: org.apache.commons.collections4.BidiMap createBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)>($r4, $r3, r0);

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap> = $r5;

     label1:
        $r2 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: org.apache.commons.collections4.BidiMap inverseBidiMap>;

        return $r2;
    }

    public java.util.Set keySet()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Set $r1, $r2;
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySet $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set keySet>;

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySet;

        specialinvoke $r3.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySet: void <init>(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)>(r0);

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set keySet> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set keySet>;

        return $r2;
    }

    protected java.util.Iterator createKeySetIterator(java.util.Iterator)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Iterator r1;
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.util.Iterator;

        $r2 = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator;

        specialinvoke $r2.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator: void <init>(java.util.Iterator,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)>(r1, r0);

        return $r2;
    }

    public java.util.Set values()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Set $r1, $r2;
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$Values $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set values>;

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap$Values;

        specialinvoke $r3.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$Values: void <init>(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)>(r0);

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set values> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set values>;

        return $r2;
    }

    protected java.util.Iterator createValuesIterator(java.util.Iterator)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Iterator r1;
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.util.Iterator;

        $r2 = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator;

        specialinvoke $r2.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator: void <init>(java.util.Iterator,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)>(r1, r0);

        return $r2;
    }

    public java.util.Set entrySet()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Set $r1, $r2;
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set entrySet>;

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet;

        specialinvoke $r3.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet: void <init>(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)>(r0);

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set entrySet> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set entrySet>;

        return $r2;
    }

    protected java.util.Iterator createEntrySetIterator(java.util.Iterator)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Iterator r1;
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        r1 := @parameter0: java.util.Iterator;

        $r2 = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator;

        specialinvoke $r2.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator: void <init>(java.util.Iterator,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)>(r1, r0);

        return $r2;
    }

    public volatile java.util.Collection values()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: java.util.Set values()>();

        return $r1;
    }
}
