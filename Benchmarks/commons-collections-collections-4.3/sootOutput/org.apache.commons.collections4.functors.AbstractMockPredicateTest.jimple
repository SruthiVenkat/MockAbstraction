public abstract class org.apache.commons.collections4.functors.AbstractMockPredicateTest extends java.lang.Object
{
    private java.util.List mockPredicatesToVerify;
    private final java.lang.Object testValue;

    protected void <init>(java.lang.Object)
    {
        org.apache.commons.collections4.functors.AbstractMockPredicateTest r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections4.functors.AbstractMockPredicateTest;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.functors.AbstractMockPredicateTest: java.lang.Object testValue> = r1;

        return;
    }

    public final void createVerifyList()
    {
        org.apache.commons.collections4.functors.AbstractMockPredicateTest r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections4.functors.AbstractMockPredicateTest;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.functors.AbstractMockPredicateTest: java.util.List mockPredicatesToVerify> = $r1;

        return;
    }

    public final void verifyPredicates()
    {
        org.apache.commons.collections4.functors.AbstractMockPredicateTest r0;
        java.util.Iterator r1;
        org.apache.commons.collections4.Predicate r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Object[] $r5;

        r0 := @this: org.apache.commons.collections4.functors.AbstractMockPredicateTest;

        $r3 = r0.<org.apache.commons.collections4.functors.AbstractMockPredicateTest: java.util.List mockPredicatesToVerify>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.commons.collections4.Predicate) $r4;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r2;

        staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r5);

        goto label1;

     label2:
        return;
    }

    protected final java.lang.Object getTestValue()
    {
        org.apache.commons.collections4.functors.AbstractMockPredicateTest r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections4.functors.AbstractMockPredicateTest;

        $r1 = r0.<org.apache.commons.collections4.functors.AbstractMockPredicateTest: java.lang.Object testValue>;

        return $r1;
    }

    protected final org.apache.commons.collections4.Predicate createMockPredicate(java.lang.Boolean)
    {
        org.apache.commons.collections4.functors.AbstractMockPredicateTest r0;
        java.lang.Boolean r1, $r7;
        org.apache.commons.collections4.Predicate r2;
        java.lang.Object $r3, $r6;
        java.lang.Object[] $r4;
        java.util.List $r5;
        boolean $z1;
        org.easymock.IExpectationSetters $r8;

        r0 := @this: org.apache.commons.collections4.functors.AbstractMockPredicateTest;

        r1 := @parameter0: java.lang.Boolean;

        $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/commons/collections4/Predicate;");

        r2 = (org.apache.commons.collections4.Predicate) $r3;

        if r1 == null goto label1;

        $r6 = r0.<org.apache.commons.collections4.functors.AbstractMockPredicateTest: java.lang.Object testValue>;

        $z1 = interfaceinvoke r2.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r6);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7);

        interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1);

     label1:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r2;

        staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r4);

        $r5 = r0.<org.apache.commons.collections4.functors.AbstractMockPredicateTest: java.util.List mockPredicatesToVerify>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

        return r2;
    }
}
