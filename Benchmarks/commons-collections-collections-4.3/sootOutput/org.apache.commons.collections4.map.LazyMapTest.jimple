public class org.apache.commons.collections4.map.LazyMapTest extends org.apache.commons.collections4.map.AbstractIterableMapTest
{
    private static final org.apache.commons.collections4.Factory oneFactory;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.map.LazyMapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.map.LazyMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public org.apache.commons.collections4.map.LazyMap makeObject()
    {
        org.apache.commons.collections4.map.LazyMapTest r0;
        java.util.HashMap $r1;
        org.apache.commons.collections4.Factory $r2;
        org.apache.commons.collections4.map.LazyMap $r3;

        r0 := @this: org.apache.commons.collections4.map.LazyMapTest;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>();

        $r3 = staticinvoke <org.apache.commons.collections4.map.LazyMap: org.apache.commons.collections4.map.LazyMap lazyMap(java.util.Map,org.apache.commons.collections4.Factory)>($r1, $r2);

        return $r3;
    }

    public void testMapGet()
    {
        org.apache.commons.collections4.map.LazyMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.LazyMapTest;

        return;
    }

    public void mapGetWithFactory()
    {
        org.apache.commons.collections4.map.LazyMapTest r0;
        java.lang.Number r1, r2;
        java.lang.Object r3, $r6, $r10;
        java.util.HashMap $r4, $r12;
        org.apache.commons.collections4.Factory $r5, $r13;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r7, $r11;
        java.lang.String $r8;
        char[] $r9;
        org.apache.commons.collections4.map.LazyMap r14, r15;

        r0 := @this: org.apache.commons.collections4.map.LazyMapTest;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.LazyMapTest: org.apache.commons.collections4.Factory oneFactory>;

        r14 = staticinvoke <org.apache.commons.collections4.map.LazyMap: org.apache.commons.collections4.map.LazyMap lazyMap(java.util.Map,org.apache.commons.collections4.Factory)>($r4, $r5);

        $i0 = interfaceinvoke r14.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.LazyMapTest: void assertEquals(int,int)>(0, $i0);

        $r6 = interfaceinvoke r14.<java.util.Map: java.lang.Object get(java.lang.Object)>("Five");

        r1 = (java.lang.Number) $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        staticinvoke <org.apache.commons.collections4.map.LazyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r7, r1);

        $i1 = interfaceinvoke r14.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.LazyMapTest: void assertEquals(int,int)>(1, $i1);

        $r8 = new java.lang.String;

        $r9 = newarray (char)[4];

        $r9[0] = 70;

        $r9[1] = 105;

        $r9[2] = 118;

        $r9[3] = 101;

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        $r10 = interfaceinvoke r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r2 = (java.lang.Number) $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        staticinvoke <org.apache.commons.collections4.map.LazyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r11, r2);

        $i2 = interfaceinvoke r14.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.LazyMapTest: void assertEquals(int,int)>(1, $i2);

        staticinvoke <org.apache.commons.collections4.map.LazyMapTest: void assertSame(java.lang.Object,java.lang.Object)>(r1, r2);

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        $r13 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>();

        r15 = staticinvoke <org.apache.commons.collections4.map.LazyMap: org.apache.commons.collections4.map.LazyMap lazyMap(java.util.Map,org.apache.commons.collections4.Factory)>($r12, $r13);

        r3 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("Five");

        staticinvoke <org.apache.commons.collections4.map.LazyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, r3);

        $i3 = interfaceinvoke r15.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.LazyMapTest: void assertEquals(int,int)>(1, $i3);

        return;
    }

    public void mapGetWithTransformer()
    {
        org.apache.commons.collections4.map.LazyMapTest r0;
        org.apache.commons.collections4.map.LazyMap r2;
        java.lang.Number r3;
        org.apache.commons.collections4.map.LazyMapTest$1 $r4;
        java.util.HashMap $r5;
        int $i0, $i1;
        java.lang.Long $r6;
        java.lang.Object $r7;
        java.lang.Integer $r8;

        r0 := @this: org.apache.commons.collections4.map.LazyMapTest;

        $r4 = new org.apache.commons.collections4.map.LazyMapTest$1;

        specialinvoke $r4.<org.apache.commons.collections4.map.LazyMapTest$1: void <init>(org.apache.commons.collections4.map.LazyMapTest)>(r0);

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r2 = staticinvoke <org.apache.commons.collections4.map.LazyMap: org.apache.commons.collections4.map.LazyMap lazyMap(java.util.Map,org.apache.commons.collections4.Transformer)>($r5, $r4);

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.LazyMapTest: void assertEquals(int,int)>(0, $i0);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(123L);

        $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r3 = (java.lang.Number) $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(123);

        staticinvoke <org.apache.commons.collections4.map.LazyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r8, r3);

        $i1 = interfaceinvoke r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.LazyMapTest: void assertEquals(int,int)>(1, $i1);

        return;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.map.LazyMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.LazyMapTest;

        return "4";
    }

    public volatile org.apache.commons.collections4.IterableMap makeObject()
    {
        org.apache.commons.collections4.map.LazyMapTest r0;
        org.apache.commons.collections4.map.LazyMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LazyMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LazyMapTest: org.apache.commons.collections4.map.LazyMap makeObject()>();

        return $r1;
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.LazyMapTest r0;
        org.apache.commons.collections4.map.LazyMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LazyMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LazyMapTest: org.apache.commons.collections4.map.LazyMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.LazyMapTest r0;
        org.apache.commons.collections4.map.LazyMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LazyMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LazyMapTest: org.apache.commons.collections4.map.LazyMap makeObject()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Integer $r0;
        org.apache.commons.collections4.Factory $r1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r1 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory constantFactory(java.lang.Object)>($r0);

        <org.apache.commons.collections4.map.LazyMapTest: org.apache.commons.collections4.Factory oneFactory> = $r1;

        return;
    }
}
