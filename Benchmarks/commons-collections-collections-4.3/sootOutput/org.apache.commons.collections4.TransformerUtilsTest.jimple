public class org.apache.commons.collections4.TransformerUtilsTest extends java.lang.Object
{
    private static final java.lang.Object cObject;
    private static final java.lang.Object cString;
    private static final java.lang.Object cInteger;

    public void <init>()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testExceptionTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        org.apache.commons.collections4.Transformer $r3, $r4, $r5, $r6, $r10;
        org.apache.commons.collections4.FunctorException $r8, $r9;
        java.lang.Object $r11;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer exceptionTransformer()>();

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r3);

        $r4 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer exceptionTransformer()>();

        $r5 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer exceptionTransformer()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r4, $r5);

     label1:
        $r6 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer exceptionTransformer()>();

        interfaceinvoke $r6.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

     label2:
        goto label7;

     label3:
        $r9 := @caughtexception;

     label4:
        $r10 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer exceptionTransformer()>();

        $r11 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        interfaceinvoke $r10.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r11);

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        return;

     label7:
        staticinvoke <org.junit.Assert: void fail()>();

        return;

        catch org.apache.commons.collections4.FunctorException from label1 to label2 with label3;
        catch org.apache.commons.collections4.FunctorException from label4 to label5 with label6;
    }

    public void testNullTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        org.apache.commons.collections4.Transformer $r1, $r2, $r3, $r4, $r6, $r9, $r12;
        java.lang.Object $r5, $r7, $r8, $r10, $r11, $r13, $r14;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>();

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r1);

        $r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>();

        $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r4 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>();

        $r5 = interfaceinvoke $r4.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r5);

        $r6 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>();

        $r7 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r8 = interfaceinvoke $r6.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r7);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r8);

        $r9 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>();

        $r10 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r11 = interfaceinvoke $r9.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r10);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r11);

        $r12 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>();

        $r13 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>;

        $r14 = interfaceinvoke $r12.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r13);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r14);

        return;
    }

    public void testNopTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        org.apache.commons.collections4.Transformer $r1, $r2, $r3, $r4, $r7, $r11, $r15;
        java.lang.Object $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>();

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r1);

        $r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>();

        $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r4 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>();

        $r5 = interfaceinvoke $r4.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r5);

        $r6 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>();

        $r8 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r9 = interfaceinvoke $r7.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r8);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r9);

        $r10 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r11 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>();

        $r12 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r13 = interfaceinvoke $r11.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r12);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r13);

        $r14 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>;

        $r15 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>();

        $r16 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>;

        $r17 = interfaceinvoke $r15.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r16);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r17);

        return;
    }

    public void testConstantTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        java.lang.Object $r1, $r2, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r18, $r19;
        org.apache.commons.collections4.Transformer $r3, $r7, $r12, $r17, $r20, $r21;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r2 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r1 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>($r1);

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r6 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r5 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>($r5);

        $r8 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r9 = interfaceinvoke $r7.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r8);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r9);

        $r11 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r10 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r12 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>($r10);

        $r13 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r14 = interfaceinvoke $r12.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r13);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r14);

        $r16 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r15 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r17 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>($r15);

        $r18 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>;

        $r19 = interfaceinvoke $r17.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r18);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r19);

        $r20 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>;

        $r21 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r20, $r21);

        return;
    }

    public void testCloneTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        org.apache.commons.collections4.Transformer $r2, $r5, $r9, $r13;
        java.lang.Object $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15;
        java.lang.IllegalArgumentException $r16;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer cloneTransformer()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r3);

        $r4 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r5 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer cloneTransformer()>();

        $r6 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r7 = interfaceinvoke $r5.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r6);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r7);

        $r8 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>;

        $r9 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer cloneTransformer()>();

        $r10 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>;

        $r11 = interfaceinvoke $r9.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r10);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r11);

     label1:
        $r12 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r13 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer cloneTransformer()>();

        $r14 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r15 = interfaceinvoke $r13.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r14);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r15);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        return;

     label4:
        staticinvoke <org.junit.Assert: void fail()>();

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void testMapTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        java.util.HashMap $r2;
        java.lang.Integer $r3, $r6, $r9, $r11, $r14, $r18;
        java.lang.Object $r5, $r8, $r13, $r16, $r17, $r20, $r21, $r23, $r24;
        org.apache.commons.collections4.Transformer $r12, $r15, $r19, $r22, $r25, $r26;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r3);

        $r5 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r8 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r12 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)>($r2);

        $r13 = interfaceinvoke $r12.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r13);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r15 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)>($r2);

        $r16 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r17 = interfaceinvoke $r15.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r16);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r17);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r19 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)>($r2);

        $r20 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r21 = interfaceinvoke $r19.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r20);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r21);

        $r22 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)>($r2);

        $r23 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>;

        $r24 = interfaceinvoke $r22.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r23);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r24);

        $r25 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>;

        $r26 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)>(null);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r25, $r26);

        return;
    }

    public void testExecutorTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        org.apache.commons.collections4.Closure $r2, $r6, $r11, $r16, $r20;
        org.apache.commons.collections4.Transformer $r3, $r7, $r12, $r17;
        java.lang.Object $r4, $r5, $r8, $r9, $r10, $r13, $r14, $r15, $r18, $r19;
        java.lang.NullPointerException $r22;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r2 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>();

        $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Closure)>($r2);

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r4);

        $r5 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r6 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>();

        $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Closure)>($r6);

        $r8 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r9 = interfaceinvoke $r7.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r8);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r9);

        $r10 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r11 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>();

        $r12 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Closure)>($r11);

        $r13 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r14 = interfaceinvoke $r12.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r13);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r14);

        $r15 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>;

        $r16 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>();

        $r17 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Closure)>($r16);

        $r18 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>;

        $r19 = interfaceinvoke $r17.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r18);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r19);

     label1:
        $r20 = (org.apache.commons.collections4.Closure) null;

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Closure)>($r20);

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

        return;

     label4:
        staticinvoke <org.junit.Assert: void fail()>();

        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void testPredicateTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        java.lang.Boolean $r2, $r6, $r11, $r16;
        org.apache.commons.collections4.Predicate $r3, $r7, $r12, $r17, $r21;
        org.apache.commons.collections4.Transformer $r4, $r8, $r13, $r18;
        java.lang.Object $r5, $r9, $r10, $r14, $r15, $r19, $r20;
        java.lang.IllegalArgumentException $r23;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r3 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        $r4 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Predicate)>($r3);

        $r5 = interfaceinvoke $r4.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r7 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        $r8 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Predicate)>($r7);

        $r9 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r10 = interfaceinvoke $r8.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r9);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r10);

        $r11 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r12 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        $r13 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Predicate)>($r12);

        $r14 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r15 = interfaceinvoke $r13.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r14);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r15);

        $r16 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r17 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        $r18 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Predicate)>($r17);

        $r19 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>;

        $r20 = interfaceinvoke $r18.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r19);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r20);

     label1:
        $r21 = (org.apache.commons.collections4.Predicate) null;

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Predicate)>($r21);

     label2:
        goto label4;

     label3:
        $r23 := @caughtexception;

        return;

     label4:
        staticinvoke <org.junit.Assert: void fail()>();

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void testFactoryTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        org.apache.commons.collections4.Factory $r2, $r5, $r9, $r13, $r17;
        org.apache.commons.collections4.Transformer $r3, $r6, $r10, $r14;
        java.lang.Object $r4, $r7, $r8, $r11, $r12, $r15, $r16;
        java.lang.NullPointerException $r19;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>();

        $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Factory)>($r2);

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r4);

        $r5 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>();

        $r6 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Factory)>($r5);

        $r7 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>;

        $r8 = interfaceinvoke $r6.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r7);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r8);

        $r9 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>();

        $r10 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Factory)>($r9);

        $r11 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r12 = interfaceinvoke $r10.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r11);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12);

        $r13 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>();

        $r14 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Factory)>($r13);

        $r15 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>;

        $r16 = interfaceinvoke $r14.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r15);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r16);

     label1:
        $r17 = (org.apache.commons.collections4.Factory) null;

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Factory)>($r17);

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

        return;

     label4:
        staticinvoke <org.junit.Assert: void fail()>();

        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void testChainedTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        org.apache.commons.collections4.Transformer r1, r2, $r4, $r7, $r10, $r13, $r16, $r17, $r18, $r20;
        org.apache.commons.collections4.Transformer[] $r3, $r6, $r9, $r15, $r21, $r23, $r27;
        java.lang.Object $r5, $r8, $r11, $r14;
        java.util.ArrayList $r12, $r29;
        java.util.List $r19;
        java.util.Collection $r25;
        java.lang.NullPointerException $r31, $r32, $r33, $r34, $r35;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("A");

        r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("B");

        $r3 = newarray (org.apache.commons.collections4.Transformer)[2];

        $r3[0] = r2;

        $r3[1] = r1;

        $r4 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r3);

        $r5 = interfaceinvoke $r4.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r5);

        $r6 = newarray (org.apache.commons.collections4.Transformer)[2];

        $r6[0] = r1;

        $r6[1] = r2;

        $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r6);

        $r8 = interfaceinvoke $r7.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r8);

        $r9 = newarray (org.apache.commons.collections4.Transformer)[2];

        $r9[0] = r2;

        $r9[1] = r1;

        $r10 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r9);

        $r11 = interfaceinvoke $r10.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r11);

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r12.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        interfaceinvoke $r12.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        $r13 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(java.util.Collection)>($r12);

        $r14 = interfaceinvoke $r13.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r14);

        $r16 = <org.apache.commons.collections4.functors.NOPTransformer: org.apache.commons.collections4.Transformer INSTANCE>;

        $r15 = newarray (org.apache.commons.collections4.Transformer)[0];

        $r17 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r15);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r16, $r17);

        $r18 = <org.apache.commons.collections4.functors.NOPTransformer: org.apache.commons.collections4.Transformer INSTANCE>;

        $r19 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r20 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(java.util.Collection)>($r19);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r18, $r20);

     label01:
        $r21 = newarray (org.apache.commons.collections4.Transformer)[2];

        $r21[0] = null;

        $r21[1] = null;

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r21);

        staticinvoke <org.junit.Assert: void fail()>();

     label02:
        goto label04;

     label03:
        $r31 := @caughtexception;

     label04:
        $r23 = (org.apache.commons.collections4.Transformer[]) null;

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r23);

        staticinvoke <org.junit.Assert: void fail()>();

     label05:
        goto label07;

     label06:
        $r34 := @caughtexception;

     label07:
        $r25 = (java.util.Collection) null;

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(java.util.Collection)>($r25);

        staticinvoke <org.junit.Assert: void fail()>();

     label08:
        goto label10;

     label09:
        $r32 := @caughtexception;

     label10:
        $r27 = newarray (org.apache.commons.collections4.Transformer)[2];

        $r27[0] = null;

        $r27[1] = null;

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r27);

        staticinvoke <org.junit.Assert: void fail()>();

     label11:
        goto label13;

     label12:
        $r33 := @caughtexception;

     label13:
        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r29.<java.util.Collection: boolean add(java.lang.Object)>(null);

        interfaceinvoke $r29.<java.util.Collection: boolean add(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(java.util.Collection)>($r29);

        staticinvoke <org.junit.Assert: void fail()>();

     label14:
        goto label16;

     label15:
        $r35 := @caughtexception;

     label16:
        return;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NullPointerException from label04 to label05 with label06;
        catch java.lang.NullPointerException from label07 to label08 with label09;
        catch java.lang.NullPointerException from label10 to label11 with label12;
        catch java.lang.NullPointerException from label13 to label14 with label15;
    }

    public void testIfTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        org.apache.commons.collections4.Transformer r1, r2, r3, $r7, $r10, $r13, $r16, $r19, $r21, $r26;
        org.apache.commons.collections4.Predicate r5, $r6, $r9, $r24;
        java.lang.Object $r8, $r11, $r15, $r18, $r20, $r22;
        org.apache.commons.collections4.TransformerUtilsTest$1 $r12;
        java.lang.Integer $r14, $r17;
        java.lang.NullPointerException $r29, $r30, $r31, $r32;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("A");

        r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("B");

        r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("C");

        $r6 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r6, r1, r2);

        $r8 = interfaceinvoke $r7.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r8);

        $r9 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>();

        $r10 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r9, r1, r2);

        $r11 = interfaceinvoke $r10.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r11);

        $r12 = new org.apache.commons.collections4.TransformerUtilsTest$1;

        specialinvoke $r12.<org.apache.commons.collections4.TransformerUtilsTest$1: void <init>(org.apache.commons.collections4.TransformerUtilsTest)>(r0);

        $r13 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r12, r1, r2);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r15 = interfaceinvoke $r13.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r14);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r15);

        $r16 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r12, r1, r2);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r18 = interfaceinvoke $r16.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r17);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r18);

        r5 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("A");

        $r19 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)>(r5, r3);

        $r20 = interfaceinvoke $r19.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("A");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C", $r20);

        $r21 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)>(r5, r3);

        $r22 = interfaceinvoke $r21.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("B");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r22);

     label01:
        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)>(null, null);

        staticinvoke <org.junit.Assert: void fail()>();

     label02:
        goto label04;

     label03:
        $r32 := @caughtexception;

     label04:
        $r24 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)>($r24, null);

        staticinvoke <org.junit.Assert: void fail()>();

     label05:
        goto label07;

     label06:
        $r29 := @caughtexception;

     label07:
        $r26 = staticinvoke <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("A");

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)>(null, $r26);

        staticinvoke <org.junit.Assert: void fail()>();

     label08:
        goto label10;

     label09:
        $r31 := @caughtexception;

     label10:
        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>(null, null, null);

        staticinvoke <org.junit.Assert: void fail()>();

     label11:
        goto label13;

     label12:
        $r30 := @caughtexception;

     label13:
        return;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NullPointerException from label04 to label05 with label06;
        catch java.lang.NullPointerException from label07 to label08 with label09;
        catch java.lang.NullPointerException from label10 to label11 with label12;
    }

    public void testSwitchTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        org.apache.commons.collections4.Transformer r1, r2, r3, $r5, $r8, $r14, $r20, $r26, $r32, $r39, $r41, $r43, $r46, $r50, $r51, $r53, $r54, $r57, $r58;
        org.apache.commons.collections4.Predicate $r4, $r7, $r11, $r12, $r17, $r18, $r23, $r24, $r29, $r30, $r35, $r37, $r69;
        java.lang.Object $r6, $r9, $r15, $r21, $r27, $r33, $r40, $r42, $r44, $r47;
        org.apache.commons.collections4.Predicate[] $r10, $r16, $r22, $r28, $r49, $r61, $r66, $r68;
        org.apache.commons.collections4.Transformer[] $r13, $r19, $r25, $r31, $r48, $r60, $r65, $r70;
        java.util.HashMap $r34, $r52, $r55;
        java.util.Map $r63;
        java.lang.NullPointerException $r72, $r73, $r74, $r75;
        java.lang.IllegalArgumentException $r76;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("A");

        r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("B");

        r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("C");

        $r4 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        $r5 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r4, r1, r2);

        $r6 = interfaceinvoke $r5.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r6);

        $r7 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>();

        $r8 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r7, r1, r2);

        $r9 = interfaceinvoke $r8.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r9);

        $r10 = newarray (org.apache.commons.collections4.Predicate)[2];

        $r11 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO");

        $r10[0] = $r11;

        $r12 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE");

        $r10[1] = $r12;

        $r13 = newarray (org.apache.commons.collections4.Transformer)[2];

        $r13[0] = r1;

        $r13[1] = r2;

        $r14 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r10, $r13);

        $r15 = interfaceinvoke $r14.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("WELL");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r15);

        $r16 = newarray (org.apache.commons.collections4.Predicate)[2];

        $r17 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO");

        $r16[0] = $r17;

        $r18 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE");

        $r16[1] = $r18;

        $r19 = newarray (org.apache.commons.collections4.Transformer)[2];

        $r19[0] = r1;

        $r19[1] = r2;

        $r20 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r16, $r19);

        $r21 = interfaceinvoke $r20.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("HELLO");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r21);

        $r22 = newarray (org.apache.commons.collections4.Predicate)[2];

        $r23 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO");

        $r22[0] = $r23;

        $r24 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE");

        $r22[1] = $r24;

        $r25 = newarray (org.apache.commons.collections4.Transformer)[2];

        $r25[0] = r1;

        $r25[1] = r2;

        $r26 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r22, $r25);

        $r27 = interfaceinvoke $r26.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("THERE");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r27);

        $r28 = newarray (org.apache.commons.collections4.Predicate)[2];

        $r29 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO");

        $r28[0] = $r29;

        $r30 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE");

        $r28[1] = $r30;

        $r31 = newarray (org.apache.commons.collections4.Transformer)[2];

        $r31[0] = r1;

        $r31[1] = r2;

        $r32 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)>($r28, $r31, r3);

        $r33 = interfaceinvoke $r32.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("WELL");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C", $r33);

        $r34 = new java.util.HashMap;

        specialinvoke $r34.<java.util.HashMap: void <init>()>();

        $r35 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO");

        interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, r1);

        $r37 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE");

        interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r37, r2);

        $r39 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>($r34);

        $r40 = interfaceinvoke $r39.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("WELL");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r40);

        $r41 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>($r34);

        $r42 = interfaceinvoke $r41.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("HELLO");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r42);

        $r43 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>($r34);

        $r44 = interfaceinvoke $r43.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("THERE");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r44);

        interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, r3);

        $r46 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>($r34);

        $r47 = interfaceinvoke $r46.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("WELL");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C", $r47);

        $r50 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>;

        $r49 = newarray (org.apache.commons.collections4.Predicate)[0];

        $r48 = newarray (org.apache.commons.collections4.Transformer)[0];

        $r51 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r49, $r48);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r50, $r51);

        $r53 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>;

        $r52 = new java.util.HashMap;

        specialinvoke $r52.<java.util.HashMap: void <init>()>();

        $r54 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>($r52);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r53, $r54);

        $r55 = new java.util.HashMap;

        specialinvoke $r55.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r55.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, null);

        $r57 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>;

        $r58 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>($r55);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r57, $r58);

     label01:
        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>(null, null);

        staticinvoke <org.junit.Assert: void fail()>();

     label02:
        goto label04;

     label03:
        $r73 := @caughtexception;

     label04:
        $r61 = (org.apache.commons.collections4.Predicate[]) null;

        $r60 = (org.apache.commons.collections4.Transformer[]) null;

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r61, $r60);

        staticinvoke <org.junit.Assert: void fail()>();

     label05:
        goto label07;

     label06:
        $r74 := @caughtexception;

     label07:
        $r63 = (java.util.Map) null;

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>($r63);

        staticinvoke <org.junit.Assert: void fail()>();

     label08:
        goto label10;

     label09:
        $r75 := @caughtexception;

     label10:
        $r66 = newarray (org.apache.commons.collections4.Predicate)[2];

        $r65 = newarray (org.apache.commons.collections4.Transformer)[2];

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r66, $r65);

        staticinvoke <org.junit.Assert: void fail()>();

     label11:
        goto label13;

     label12:
        $r72 := @caughtexception;

     label13:
        $r68 = newarray (org.apache.commons.collections4.Predicate)[1];

        $r69 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        $r68[0] = $r69;

        $r70 = newarray (org.apache.commons.collections4.Transformer)[2];

        $r70[0] = r1;

        $r70[1] = r2;

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r68, $r70);

        staticinvoke <org.junit.Assert: void fail()>();

     label14:
        goto label16;

     label15:
        $r76 := @caughtexception;

     label16:
        return;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NullPointerException from label04 to label05 with label06;
        catch java.lang.NullPointerException from label07 to label08 with label09;
        catch java.lang.NullPointerException from label10 to label11 with label12;
        catch java.lang.IllegalArgumentException from label13 to label14 with label15;
    }

    public void testSwitchMapTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        org.apache.commons.collections4.Transformer r1, r2, r3, $r8, $r10, $r12, $r15, $r18, $r19, $r22, $r23;
        java.util.HashMap $r5, $r17, $r20;
        java.lang.Object $r9, $r11, $r13, $r16;
        java.lang.NullPointerException $r25;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("A");

        r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("B");

        r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("C");

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HELLO", r1);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("THERE", r2);

        $r8 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>($r5);

        $r9 = interfaceinvoke $r8.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("WELL");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r9);

        $r10 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>($r5);

        $r11 = interfaceinvoke $r10.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("HELLO");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r11);

        $r12 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>($r5);

        $r13 = interfaceinvoke $r12.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("THERE");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r13);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, r3);

        $r15 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>($r5);

        $r16 = interfaceinvoke $r15.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("WELL");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C", $r16);

        $r18 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>;

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        $r19 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>($r17);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r18, $r19);

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, null);

        $r22 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>;

        $r23 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>($r20);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r22, $r23);

     label1:
        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>(null);

        staticinvoke <org.junit.Assert: void fail()>();

     label2:
        goto label4;

     label3:
        $r25 := @caughtexception;

     label4:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void testInvokerTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        java.util.ArrayList $r2;
        java.lang.Integer $r3, $r7;
        org.apache.commons.collections4.Transformer $r4, $r8, $r10, $r13;
        java.lang.Object $r5, $r6, $r9, $r11, $r14;
        org.apache.commons.collections4.FunctorException $r16;
        java.lang.NullPointerException $r17;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r4 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)>("size");

        $r5 = interfaceinvoke $r4.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r5);

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r8 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)>("size");

        $r9 = interfaceinvoke $r8.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r9);

        $r10 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)>("size");

        $r11 = interfaceinvoke $r10.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r11);

     label1:
        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void fail()>();

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

     label4:
        $r13 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)>("noSuchMethod");

        $r14 = new java.lang.Object;

        specialinvoke $r14.<java.lang.Object: void <init>()>();

        interfaceinvoke $r13.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r14);

        staticinvoke <org.junit.Assert: void fail()>();

     label5:
        goto label7;

     label6:
        $r16 := @caughtexception;

     label7:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch org.apache.commons.collections4.FunctorException from label4 to label5 with label6;
    }

    public void testInvokerTransformer2()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        java.util.ArrayList $r2;
        java.lang.Class[] $r3, $r10, $r16, $r22, $r31, $r35;
        java.lang.Object[] $r4, $r11, $r17, $r23, $r28, $r33;
        java.lang.Object $r5, $r8, $r9, $r12, $r15, $r18, $r20, $r24, $r26, $r29, $r34;
        java.lang.Boolean $r6, $r13;
        org.apache.commons.collections4.Transformer $r7, $r14, $r19, $r25;
        java.lang.IllegalArgumentException $r37, $r38, $r41;
        org.apache.commons.collections4.FunctorException $r39;
        java.lang.NullPointerException $r40;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r6 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Ljava/lang/Object;";

        $r4 = newarray (java.lang.Object)[1];

        $r5 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r4[0] = $r5;

        $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("contains", $r3, $r4);

        $r8 = interfaceinvoke $r7.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r8);

        $r9 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r10 = newarray (java.lang.Class)[1];

        $r10[0] = class "Ljava/lang/Object;";

        $r11 = newarray (java.lang.Object)[1];

        $r12 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r11[0] = $r12;

        $r14 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("contains", $r10, $r11);

        $r15 = interfaceinvoke $r14.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r15);

        $r16 = newarray (java.lang.Class)[1];

        $r16[0] = class "Ljava/lang/Object;";

        $r17 = newarray (java.lang.Object)[1];

        $r18 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r17[0] = $r18;

        $r19 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("contains", $r16, $r17);

        $r20 = interfaceinvoke $r19.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r20);

     label01:
        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>(null, null, null);

        staticinvoke <org.junit.Assert: void fail()>();

     label02:
        goto label04;

     label03:
        $r40 := @caughtexception;

     label04:
        $r22 = newarray (java.lang.Class)[1];

        $r22[0] = class "Ljava/lang/Object;";

        $r23 = newarray (java.lang.Object)[1];

        $r24 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r23[0] = $r24;

        $r25 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("noSuchMethod", $r22, $r23);

        $r26 = new java.lang.Object;

        specialinvoke $r26.<java.lang.Object: void <init>()>();

        interfaceinvoke $r25.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r26);

        staticinvoke <org.junit.Assert: void fail()>();

     label05:
        goto label07;

     label06:
        $r39 := @caughtexception;

     label07:
        $r28 = newarray (java.lang.Object)[1];

        $r29 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r28[0] = $r29;

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("badArgs", null, $r28);

        staticinvoke <org.junit.Assert: void fail()>();

     label08:
        goto label10;

     label09:
        $r38 := @caughtexception;

     label10:
        $r31 = newarray (java.lang.Class)[1];

        $r31[0] = class "Ljava/lang/Object;";

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("badArgs", $r31, null);

        staticinvoke <org.junit.Assert: void fail()>();

     label11:
        goto label13;

     label12:
        $r37 := @caughtexception;

     label13:
        $r35 = newarray (java.lang.Class)[0];

        $r33 = newarray (java.lang.Object)[1];

        $r34 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>;

        $r33[0] = $r34;

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("badArgs", $r35, $r33);

        staticinvoke <org.junit.Assert: void fail()>();

     label14:
        goto label16;

     label15:
        $r41 := @caughtexception;

     label16:
        return;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch org.apache.commons.collections4.FunctorException from label04 to label05 with label06;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
        catch java.lang.IllegalArgumentException from label10 to label11 with label12;
        catch java.lang.IllegalArgumentException from label13 to label14 with label15;
    }

    public void testStringValueTransformer()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        org.apache.commons.collections4.Transformer $r1, $r3, $r5;
        java.lang.Object $r2, $r4, $r7;
        java.lang.Integer $r6;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer stringValueTransformer()>();

        $r2 = interfaceinvoke $r1.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.String,java.lang.Object)>("StringValueTransformer should NEVER return a null value.", $r2);

        $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer stringValueTransformer()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("StringValueTransformer should return \"null\" when given a null argument.", "null", $r4);

        $r5 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer stringValueTransformer()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r7 = interfaceinvoke $r5.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r6);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("StringValueTransformer should return toString value", "6", $r7);

        return;
    }

    public void testInstantiateTransformerNull()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        java.lang.Object[] $r2, $r4, $r8, $r13;
        java.lang.Class[] $r5, $r7, $r11;
        java.lang.Object $r10, $r16;
        java.lang.Class $r12;
        java.lang.Long $r14;
        java.util.Date $r15;
        org.apache.commons.collections4.FunctorException $r17;
        java.lang.IllegalArgumentException $r18, $r19;
        org.apache.commons.collections4.Transformer r22, r23, r24;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

     label01:
        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = "str";

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer instantiateTransformer(java.lang.Class[],java.lang.Object[])>(null, $r2);

        staticinvoke <org.junit.Assert: void fail()>();

     label02:
        goto label04;

     label03:
        $r18 := @caughtexception;

     label04:
        $r5 = newarray (java.lang.Class)[0];

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "str";

        staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer instantiateTransformer(java.lang.Class[],java.lang.Object[])>($r5, $r4);

        staticinvoke <org.junit.Assert: void fail()>();

     label05:
        goto label07;

     label06:
        $r19 := @caughtexception;

     label07:
        $r7 = newarray (java.lang.Class)[1];

        $r7[0] = class "Ljava/lang/Long;";

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = null;

        r22 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer instantiateTransformer(java.lang.Class[],java.lang.Object[])>($r7, $r8);

     label08:
        interfaceinvoke r22.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(class "Ljava/lang/String;");

        staticinvoke <org.junit.Assert: void fail()>();

     label09:
        goto label11;

     label10:
        $r17 := @caughtexception;

     label11:
        r23 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer instantiateTransformer()>();

        $r10 = interfaceinvoke r23.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(class "Ljava/lang/String;");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r10);

        $r11 = newarray (java.lang.Class)[1];

        $r12 = <java.lang.Long: java.lang.Class TYPE>;

        $r11[0] = $r12;

        $r13 = newarray (java.lang.Object)[1];

        $r14 = new java.lang.Long;

        specialinvoke $r14.<java.lang.Long: void <init>(long)>(1000L);

        $r13[0] = $r14;

        r24 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer instantiateTransformer(java.lang.Class[],java.lang.Object[])>($r11, $r13);

        $r15 = new java.util.Date;

        specialinvoke $r15.<java.util.Date: void <init>(long)>(1000L);

        $r16 = interfaceinvoke r24.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(class "Ljava/util/Date;");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16);

        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label04 to label05 with label06;
        catch org.apache.commons.collections4.FunctorException from label08 to label09 with label10;
    }

    public void testSingletonPatternInSerialization()
    {
        org.apache.commons.collections4.TransformerUtilsTest r0;
        int i0, i1;
        java.lang.Object r3;
        java.lang.Object[] $r4;
        org.apache.commons.collections4.Transformer $r5, $r6, $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.Class $r10;
        java.lang.String $r12;

        r0 := @this: org.apache.commons.collections4.TransformerUtilsTest;

        $r4 = newarray (java.lang.Object)[3];

        $r5 = <org.apache.commons.collections4.functors.ExceptionTransformer: org.apache.commons.collections4.Transformer INSTANCE>;

        $r4[0] = $r5;

        $r6 = <org.apache.commons.collections4.functors.NOPTransformer: org.apache.commons.collections4.Transformer INSTANCE>;

        $r4[1] = $r6;

        $r7 = staticinvoke <org.apache.commons.collections4.functors.StringValueTransformer: org.apache.commons.collections4.Transformer stringValueTransformer()>();

        $r4[2] = $r7;

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = $r4[i1];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Singleton pattern broken for ");

        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.collections4.TestUtils: void assertSameAfterSerialization(java.lang.String,java.lang.Object)>($r12, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.lang.Integer $r1;

        <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString> = "Hello";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject> = $r0;

        <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString> = "Hello";

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger> = $r1;

        return;
    }
}
