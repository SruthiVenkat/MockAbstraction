public class org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap extends org.apache.commons.collections4.map.AbstractMapTest
{
    final org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest this$0;

    public void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        r1 := @parameter0: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest;

        r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest this$0> = r1;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest: void <init>(java.lang.String)>("");

        return;
    }

    public java.util.Map makeObject()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest $r1;
        org.apache.commons.collections4.MultiValuedMap $r2;
        java.util.Map $r3;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest: org.apache.commons.collections4.MultiValuedMap makeObject()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.MultiValuedMap: java.util.Map asMap()>();

        return $r3;
    }

    public java.util.Map makeFullMap()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest $r1;
        org.apache.commons.collections4.MultiValuedMap $r2;
        java.util.Map $r3;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest: org.apache.commons.collections4.MultiValuedMap makeFullMap()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.MultiValuedMap: java.util.Map asMap()>();

        return $r3;
    }

    public java.lang.Object[] getSampleKeys()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;
        java.lang.Object[] r1, r2, $r4;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest $r3;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        $r3 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest this$0>;

        r1 = virtualinvoke $r3.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest: java.lang.Object[] getSampleKeys()>();

        r2 = newarray (java.lang.Object)[3];

        i1 = 0;

     label1:
        if i1 >= 3 goto label2;

        $i0 = i1 * 2;

        $r5 = r1[$i0];

        r2[i1] = $r5;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = (java.lang.Object[]) r2;

        return $r4;
    }

    public java.util.Collection[] getSampleValues()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;
        boolean z0;
        java.lang.Object[] r1, $r7;
        java.util.Collection[] r2;
        java.util.List r3;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest $r4, $r6;
        org.apache.commons.collections4.MultiValuedMap $r5;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Object $r8, $r9;
        java.util.Collection $r11;
        java.util.HashSet r12;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        $r4 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest this$0>;

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest: org.apache.commons.collections4.MultiValuedMap makeObject()>();

        z0 = $r5 instanceof org.apache.commons.collections4.SetValuedMap;

        $r6 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest this$0>;

        r1 = virtualinvoke $r6.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest: java.lang.Object[] getSampleValues()>();

        r2 = newarray (java.util.Collection)[3];

        i4 = 0;

     label1:
        if i4 >= 3 goto label4;

        $r7 = newarray (java.lang.Object)[2];

        $i0 = i4 * 2;

        $r8 = r1[$i0];

        $r7[0] = $r8;

        $i1 = i4 * 2;

        $i2 = $i1 + 1;

        $r9 = r1[$i2];

        $r7[1] = $r9;

        r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        $i3 = i4;

        if z0 == 0 goto label2;

        r12 = new java.util.HashSet;

        $r11 = r12;

        specialinvoke r12.<java.util.HashSet: void <init>(java.util.Collection)>(r3);

        goto label3;

     label2:
        $r11 = r3;

     label3:
        r2[$i3] = $r11;

        i4 = i4 + 1;

        goto label1;

     label4:
        return r2;
    }

    public java.util.Collection[] getNewSampleValues()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;
        boolean z0;
        java.util.Collection[] r2;
        java.util.List r3;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest $r4;
        org.apache.commons.collections4.MultiValuedMap $r5;
        java.lang.Object[] $r6, $r7;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Object $r8, $r9;
        java.util.Collection $r11;
        java.util.HashSet r12;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        $r4 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest this$0>;

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest: org.apache.commons.collections4.MultiValuedMap makeObject()>();

        z0 = $r5 instanceof org.apache.commons.collections4.SetValuedMap;

        $r6 = newarray (java.lang.Object)[6];

        $r6[0] = "ein";

        $r6[1] = "ek";

        $r6[2] = "zwei";

        $r6[3] = "duey";

        $r6[4] = "drei";

        $r6[5] = "teen";

        r2 = newarray (java.util.Collection)[3];

        i4 = 0;

     label1:
        if i4 >= 3 goto label4;

        $r7 = newarray (java.lang.Object)[2];

        $i0 = i4 * 2;

        $r8 = $r6[$i0];

        $r7[0] = $r8;

        $i1 = i4 * 2;

        $i2 = $i1 + 1;

        $r9 = $r6[$i2];

        $r7[1] = $r9;

        r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        $i3 = i4;

        if z0 == 0 goto label2;

        r12 = new java.util.HashSet;

        $r11 = r12;

        specialinvoke r12.<java.util.HashSet: void <init>(java.util.Collection)>(r3);

        goto label3;

     label2:
        $r11 = r3;

     label3:
        r2[$i3] = $r11;

        i4 = i4 + 1;

        goto label1;

     label4:
        return r2;
    }

    public boolean isAllowNullKey()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest this$0>;

        $z0 = virtualinvoke $r1.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest: boolean isAllowNullKey()>();

        return $z0;
    }

    public boolean isPutAddSupported()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        return 0;
    }

    public boolean isPutChangeSupported()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        return 0;
    }

    public boolean isRemoveSupported()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest this$0>;

        $z0 = virtualinvoke $r1.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest: boolean isRemoveSupported()>();

        return $z0;
    }

    public boolean areEqualElementsDistinguishable()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        return 1;
    }

    public boolean isTestSerialization()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        return 0;
    }

    public volatile java.lang.Object[] getNewSampleValues()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;
        java.util.Collection[] $r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap: java.util.Collection[] getNewSampleValues()>();

        return $r1;
    }

    public volatile java.lang.Object[] getSampleValues()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;
        java.util.Collection[] $r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap: java.util.Collection[] getSampleValues()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap: java.util.Map makeObject()>();

        return $r1;
    }
}
