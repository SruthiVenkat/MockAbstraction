public class org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap extends org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap
{
    static final int SUBSIZE;
    final java.lang.Object toKey;

    public void <init>(org.apache.commons.collections4.map.AbstractMapTest)
    {
        org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap r0;
        org.apache.commons.collections4.map.AbstractMapTest r1;
        java.util.Map r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.util.Set $r5;
        boolean $z0;
        java.util.List $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r19, $r21;
        java.lang.Object $r7, $r18, $r20, $r22;
        int $i0, $i1;
        java.lang.Object[] $r15;

        r0 := @this: org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractMapTest;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap: void <init>(java.lang.String,org.apache.commons.collections4.map.AbstractMapTest)>("SortedMap.HeadMap", r1);

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map makeFullMap()>();

        $r5 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r18 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r18;

        $r19 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.List subSortedKeys>;

        $r20 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r21 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.List subSortedValues>;

        $r22 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r22);

        goto label1;

     label2:
        $r6 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.List subSortedKeys>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(6);

        r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.lang.Object toKey> = $r7;

        $r9 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.List subSortedKeys>;

        $r8 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.List subSortedKeys>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.List subList(int,int)>(6, $i0);

        interfaceinvoke $r10.<java.util.List: void clear()>();

        $r12 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.List subSortedValues>;

        $r11 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.List subSortedValues>;

        $i1 = interfaceinvoke $r11.<java.util.List: int size()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.List subList(int,int)>(6, $i1);

        interfaceinvoke $r13.<java.util.List: void clear()>();

        $r14 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.List subSortedNewValues>;

        $r15 = virtualinvoke r1.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getNewSampleValues()>();

        $r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r15);

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.List subList(int,int)>(0, 6);

        interfaceinvoke $r14.<java.util.List: boolean addAll(java.util.Collection)>($r17);

        return;
    }

    public java.util.SortedMap makeObject()
    {
        org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.util.SortedMap $r4, $r5;

        r0 := @this: org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: org.apache.commons.collections4.map.AbstractMapTest main>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map makeObject()>();

        $r4 = (java.util.SortedMap) $r2;

        $r3 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.lang.Object toKey>;

        $r5 = interfaceinvoke $r4.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>($r3);

        return $r5;
    }

    public java.util.SortedMap makeFullMap()
    {
        org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.util.SortedMap $r4, $r5;

        r0 := @this: org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: org.apache.commons.collections4.map.AbstractMapTest main>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map makeFullMap()>();

        $r4 = (java.util.SortedMap) $r2;

        $r3 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.lang.Object toKey>;

        $r5 = interfaceinvoke $r4.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>($r3);

        return $r5;
    }

    public void testHeadMapOutOfRange()
    {
        org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap r0;
        boolean $z0;
        java.util.SortedMap $r2;
        java.util.List $r3;
        java.lang.Object $r4, $r5;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: boolean isPutAddSupported()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: void resetEmpty()>();

     label2:
        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.SortedMap getMap()>();

        $r4 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.lang.Object toKey>;

        $r3 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.List subSortedValues>;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        staticinvoke <org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: void fail()>();

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: void verify()>();

        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap r0;
        java.lang.StringBuilder $r1, $r4, $r5;
        org.apache.commons.collections4.map.AbstractMapTest $r2;
        java.lang.String $r3, $r6;

        r0 := @this: org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: org.apache.commons.collections4.map.AbstractMapTest main>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.String getCompatibilityVersion()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".HeadMapView");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public volatile java.util.Map makeFullMap()
    {
        org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap r0;
        java.util.SortedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.SortedMap makeFullMap()>();

        return $r1;
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap r0;
        java.util.SortedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.SortedMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap r0;
        java.util.SortedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: java.util.SortedMap makeObject()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap: int SUBSIZE> = 6;

        return;
    }
}
