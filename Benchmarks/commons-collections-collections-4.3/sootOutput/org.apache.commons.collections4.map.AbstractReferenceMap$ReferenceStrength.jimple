public final enum class org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength extends java.lang.Enum
{
    public static final enum org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD;
    public static final enum org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength SOFT;
    public static final enum org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength WEAK;
    public final int value;
    private static final org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength[] $VALUES;

    public static org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength[] values()
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength[]) $r1;

        return $r2;
    }

    public static org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;", r0);

        $r2 = (org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength) $r1;

        return $r2;
    }

    public static org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength resolve(int)
    {
        int i0;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength $r0, $r1, $r2;
        java.lang.IllegalArgumentException $r3;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r2 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        return $r2;

     label2:
        $r1 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength SOFT>;

        return $r1;

     label3:
        $r0 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength WEAK>;

        return $r0;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    private void <init>(java.lang.String, int, int)
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: int value> = i1;

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength $r0, $r1, $r2, $r4, $r5, $r6;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength[] $r3;

        $r0 = new org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        specialinvoke $r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: void <init>(java.lang.String,int,int)>("HARD", 0, 0);

        <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD> = $r0;

        $r1 = new org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        specialinvoke $r1.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: void <init>(java.lang.String,int,int)>("SOFT", 1, 1);

        <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength SOFT> = $r1;

        $r2 = new org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        specialinvoke $r2.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: void <init>(java.lang.String,int,int)>("WEAK", 2, 2);

        <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength WEAK> = $r2;

        $r3 = newarray (org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)[3];

        $r4 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        $r3[0] = $r4;

        $r5 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength SOFT>;

        $r3[1] = $r5;

        $r6 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength WEAK>;

        $r3[2] = $r6;

        <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength[] $VALUES> = $r3;

        return;
    }
}
