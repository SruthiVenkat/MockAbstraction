public class org.apache.commons.collections4.iterators.CollatingIteratorTest extends org.apache.commons.collections4.iterators.AbstractIteratorTest
{
    private java.util.Comparator comparator;
    private java.util.ArrayList evens;
    private java.util.ArrayList odds;
    private java.util.ArrayList fib;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.iterators.AbstractIteratorTest: void <init>(java.lang.String)>(r1);

        r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator> = null;

        r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens> = null;

        r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList odds> = null;

        r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList fib> = null;

        return;
    }

    public void setUp() throws java.lang.Exception
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        org.apache.commons.collections4.comparators.ComparableComparator $r1;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23;
        java.lang.Integer $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24;
        int $i0, i1;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        specialinvoke r0.<org.apache.commons.collections4.iterators.AbstractIteratorTest: void setUp()>();

        $r1 = new org.apache.commons.collections4.comparators.ComparableComparator;

        specialinvoke $r1.<org.apache.commons.collections4.comparators.ComparableComparator: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList odds> = $r3;

        i1 = 0;

     label1:
        if i1 >= 20 goto label4;

        $i0 = i1 % 2;

        if 0 != $i0 goto label2;

        $r23 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        goto label3;

     label2:
        $r21 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList odds>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList fib> = $r4;

        $r5 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList fib>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r7 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList fib>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        $r9 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList fib>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $r11 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList fib>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        $r13 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList fib>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        $r15 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList fib>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        $r17 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList fib>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13);

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        $r19 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList fib>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(21);

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        return;
    }

    public org.apache.commons.collections4.iterators.CollatingIterator makeEmptyIterator()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        org.apache.commons.collections4.iterators.CollatingIterator $r1;
        java.util.Comparator $r2;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r1 = new org.apache.commons.collections4.iterators.CollatingIterator;

        $r2 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator>;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator)>($r2);

        return $r1;
    }

    public org.apache.commons.collections4.iterators.CollatingIterator makeObject()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        org.apache.commons.collections4.iterators.CollatingIterator $r2;
        java.util.Comparator $r3;
        java.util.ArrayList $r4, $r6, $r8;
        java.util.Iterator $r5, $r7, $r9;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.CollatingIterator;

        $r3 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator)>($r3);

        $r4 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

        virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>($r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList odds>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

        virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>($r7);

        $r8 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList fib>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

        virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>($r9);

        return $r2;
    }

    public void testGetSetComparator()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        org.apache.commons.collections4.iterators.CollatingIterator $r2;
        java.util.Comparator $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.CollatingIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>()>();

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.Comparator getComparator()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertNull(java.lang.Object)>($r3);

        $r4 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator>;

        virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void setComparator(java.util.Comparator)>($r4);

        $r5 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator>;

        $r6 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.Comparator getComparator()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>($r5, $r6);

        virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void setComparator(java.util.Comparator)>(null);

        $r7 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.Comparator getComparator()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertNull(java.lang.Object)>($r7);

        return;
    }

    public void testIterateEven()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        org.apache.commons.collections4.iterators.CollatingIterator $r2;
        java.util.Comparator $r3;
        java.util.ArrayList $r4, $r6, $r7;
        java.util.Iterator $r5;
        int $i0, $i1, i2;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8, $r9;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.CollatingIterator;

        $r3 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator)>($r3);

        $r4 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

        virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>($r5);

        i2 = 0;

     label1:
        $r6 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label2;

        $z1 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertTrue(boolean)>($z1);

        $r7 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r9 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9);

        $i1 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(0, $i1);

        i2 = i2 + 1;

        goto label1;

     label2:
        $z0 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertTrue(boolean)>($z2);

        return;
    }

    public void testIterateEvenOdd()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        org.apache.commons.collections4.iterators.CollatingIterator $r2;
        java.util.ArrayList $r3, $r6;
        java.util.Comparator $r4;
        java.util.Iterator $r5, $r7;
        boolean $z0, $z1, $z2;
        java.lang.Integer $r8;
        java.lang.Object $r9;
        int $i0, $i1, i2;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.CollatingIterator;

        $r4 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator>;

        $r3 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

        $r6 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList odds>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

        specialinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator,java.util.Iterator,java.util.Iterator)>($r4, $r5, $r7);

        i2 = 0;

     label1:
        if i2 >= 20 goto label2;

        $z1 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertTrue(boolean)>($z1);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r9 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9);

        $i0 = i2 % 2;

        $i1 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>($i0, $i1);

        i2 = i2 + 1;

        goto label1;

     label2:
        $z0 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertTrue(boolean)>($z2);

        return;
    }

    public void testIterateOddEven()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        org.apache.commons.collections4.iterators.CollatingIterator $r2;
        java.util.ArrayList $r3, $r6;
        java.util.Comparator $r4;
        java.util.Iterator $r5, $r7;
        boolean $z0, $z1, $z2;
        java.lang.Integer $r8;
        java.lang.Object $r9;
        int $i0, $i1, i2;
        byte $b3;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.CollatingIterator;

        $r4 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator>;

        $r3 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList odds>;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

        $r6 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

        specialinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator,java.util.Iterator,java.util.Iterator)>($r4, $r5, $r7);

        i2 = 0;

     label1:
        if i2 >= 20 goto label4;

        $z1 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertTrue(boolean)>($z1);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r9 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9);

        $i0 = i2 % 2;

        if $i0 != 0 goto label2;

        $b3 = 1;

        goto label3;

     label2:
        $b3 = 0;

     label3:
        $i1 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>($b3, $i1);

        i2 = i2 + 1;

        goto label1;

     label4:
        $z0 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        if $z0 != 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertTrue(boolean)>($z2);

        return;
    }

    public void testIterateEvenEven()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        org.apache.commons.collections4.iterators.CollatingIterator $r2;
        java.util.Comparator $r3;
        java.util.ArrayList $r4, $r6, $r8, $r9, $r12;
        java.util.Iterator $r5, $r7;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r10, $r11, $r13, $r14;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.CollatingIterator;

        $r3 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator)>($r3);

        $r4 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

        virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>($r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

        virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>($r7);

        i3 = 0;

     label1:
        $r8 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i3 >= $i0 goto label2;

        $z1 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertTrue(boolean)>($z1);

        $r9 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r11 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11);

        $i1 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(0, $i1);

        $z2 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertTrue(boolean)>($z2);

        $r12 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r14 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14);

        $i2 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(1, $i2);

        i3 = i3 + 1;

        goto label1;

     label2:
        $z0 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertTrue(boolean)>($z3);

        return;
    }

    public void testIterateFibEvenOdd()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        org.apache.commons.collections4.iterators.CollatingIterator $r2;
        java.util.Comparator $r3;
        java.util.ArrayList $r4, $r6, $r8;
        java.util.Iterator $r5, $r7, $r9;
        java.lang.Integer $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64;
        java.lang.Object $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.CollatingIterator;

        $r3 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator)>($r3);

        $r4 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList fib>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

        virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>($r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

        virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>($r7);

        $r8 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList odds>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

        virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>($r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r11 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11);

        $i0 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(1, $i0);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r13 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13);

        $i1 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(0, $i1);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r15 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15);

        $i2 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(0, $i2);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r17 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r17);

        $i3 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(2, $i3);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r19 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r19);

        $i4 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(0, $i4);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r21 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21);

        $i5 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(1, $i5);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r23 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23);

        $i6 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(0, $i6);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r25 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25);

        $i7 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(2, $i7);

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r27 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27);

        $i8 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(1, $i8);

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r29 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29);

        $i9 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(0, $i9);

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r31 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r31);

        $i10 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(2, $i10);

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r33 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r32, $r33);

        $i11 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(1, $i11);

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r35 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r35);

        $i12 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(2, $i12);

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r37 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r37);

        $i13 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(0, $i13);

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r39 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r38, $r39);

        $i14 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(1, $i14);

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r41 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r40, $r41);

        $i15 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(2, $i15);

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r43 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r43);

        $i16 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(1, $i16);

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r45 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r44, $r45);

        $i17 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(2, $i17);

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r47 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r46, $r47);

        $i18 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(1, $i18);

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13);

        $r49 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r48, $r49);

        $i19 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(0, $i19);

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13);

        $r51 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r50, $r51);

        $i20 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(2, $i20);

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(14);

        $r53 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r52, $r53);

        $i21 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(1, $i21);

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        $r55 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r54, $r55);

        $i22 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(2, $i22);

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        $r57 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r56, $r57);

        $i23 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(1, $i23);

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(17);

        $r59 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r58, $r59);

        $i24 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(2, $i24);

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        $r61 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r60, $r61);

        $i25 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(1, $i25);

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(19);

        $r63 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r62, $r63);

        $i26 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(2, $i26);

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(21);

        $r65 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r64, $r65);

        $i27 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: int getIteratorIndex()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(0, $i27);

        $z0 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertTrue(boolean)>($z1);

        return;
    }

    public void testRemoveFromSingle()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        java.lang.Object r2;
        java.lang.Integer r3;
        org.apache.commons.collections4.iterators.CollatingIterator $r4;
        java.util.Comparator $r5;
        java.util.ArrayList $r6, $r8, $r9;
        java.util.Iterator $r7;
        boolean $z0;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r4 = new org.apache.commons.collections4.iterators.CollatingIterator;

        $r5 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator>;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator)>($r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>($r7);

        $r8 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label1:
        $z0 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r2 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        r3 = (java.lang.Integer) r2;

        $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i2 = $i1 % 4;

        if $i2 != 0 goto label2;

        i3 = i3 + -1;

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.CollatingIterator: void remove()>();

     label2:
        goto label1;

     label3:
        $r9 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(i3, $i0);

        return;
    }

    public void testRemoveFromDouble()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        java.lang.Object r2;
        java.lang.Integer r3;
        org.apache.commons.collections4.iterators.CollatingIterator $r4;
        java.util.Comparator $r5;
        java.util.ArrayList $r6, $r8, $r10, $r11, $r12, $r13;
        java.util.Iterator $r7, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r4 = new org.apache.commons.collections4.iterators.CollatingIterator;

        $r5 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.Comparator comparator>;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator)>($r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>($r7);

        $r8 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList odds>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>($r9);

        $r10 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        $r11 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList odds>;

        $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        i9 = $i0 + $i1;

     label1:
        $z0 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r2 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        r3 = (java.lang.Integer) r2;

        $i5 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i6 = $i5 % 4;

        if $i6 == 0 goto label2;

        $i7 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i8 = $i7 % 3;

        if $i8 != 0 goto label3;

     label2:
        i9 = i9 + -1;

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.CollatingIterator: void remove()>();

     label3:
        goto label1;

     label4:
        $r12 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList evens>;

        $i2 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        $r13 = r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: java.util.ArrayList odds>;

        $i3 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        $i4 = $i2 + $i3;

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(int,int)>(i9, $i4);

        return;
    }

    public void testNullComparator()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        java.util.List r1, r2;
        java.lang.Integer r5, $r7, $r8, $r9, $r11, $r12, $r13;
        java.lang.Integer[] $r6, $r10;
        org.apache.commons.collections4.iterators.CollatingIterator $r14, $r18;
        java.util.Iterator $r15, $r16, $r19, $r20;
        org.apache.commons.collections4.comparators.ComparableComparator $r21;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r22;
        java.lang.NullPointerException $r23;
        java.lang.String $r24;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r6 = newarray (java.lang.Integer)[3];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r6[1] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r6[2] = $r9;

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        $r10 = newarray (java.lang.Integer)[3];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r10[0] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r10[1] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r10[2] = $r13;

        r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);

        $r14 = new org.apache.commons.collections4.iterators.CollatingIterator;

        $r15 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        $r16 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r14.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator,java.util.Iterator,java.util.Iterator)>(null, $r15, $r16);

     label1:
        virtualinvoke $r14.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

     label2:
        goto label4;

     label3:
        $r23 := @caughtexception;

        $r24 = virtualinvoke $r23.<java.lang.NullPointerException: java.lang.String getMessage()>();

        $z0 = virtualinvoke $r24.<java.lang.String: boolean startsWith(java.lang.String)>("You must invoke setComparator");

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertTrue(boolean)>($z0);

     label4:
        i5 = 0;

        $r18 = new org.apache.commons.collections4.iterators.CollatingIterator;

        $r19 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        $r20 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r18.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator,java.util.Iterator,java.util.Iterator)>(null, $r19, $r20);

        $r21 = new org.apache.commons.collections4.comparators.ComparableComparator;

        specialinvoke $r21.<org.apache.commons.collections4.comparators.ComparableComparator: void <init>()>();

        virtualinvoke $r18.<org.apache.commons.collections4.iterators.CollatingIterator: void setComparator(java.util.Comparator)>($r21);

     label5:
        $z1 = virtualinvoke $r18.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r22 = virtualinvoke $r18.<org.apache.commons.collections4.iterators.CollatingIterator: java.lang.Object next()>();

        r5 = (java.lang.Integer) $r22;

        $i3 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        $i4 = i5 + 1;

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.String,int,int)>("wrong order", $i3, $i4);

        i5 = i5 + 1;

        goto label5;

     label6:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $i2 = $i0 + $i1;

        staticinvoke <org.apache.commons.collections4.iterators.CollatingIteratorTest: void assertEquals(java.lang.String,int,int)>("wrong size", i5, $i2);

        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public volatile java.util.Iterator makeObject()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        org.apache.commons.collections4.iterators.CollatingIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: org.apache.commons.collections4.iterators.CollatingIterator makeObject()>();

        return $r1;
    }

    public volatile java.util.Iterator makeEmptyIterator()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        org.apache.commons.collections4.iterators.CollatingIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: org.apache.commons.collections4.iterators.CollatingIterator makeEmptyIterator()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.iterators.CollatingIteratorTest r0;
        org.apache.commons.collections4.iterators.CollatingIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.CollatingIteratorTest: org.apache.commons.collections4.iterators.CollatingIterator makeObject()>();

        return $r1;
    }
}
