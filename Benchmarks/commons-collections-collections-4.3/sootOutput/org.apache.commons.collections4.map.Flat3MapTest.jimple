public class org.apache.commons.collections4.map.Flat3MapTest extends org.apache.commons.collections4.map.AbstractIterableMapTest
{
    private static final java.lang.Integer ONE;
    private static final java.lang.Integer TWO;
    private static final java.lang.Integer THREE;
    private static final java.lang.String TEN;
    private static final java.lang.String TWENTY;
    private static final java.lang.String THIRTY;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.BulkTest: junit.framework.TestSuite makeSuite(java.lang.Class)>(class "Lorg/apache/commons/collections4/map/Flat3MapTest;");

        return $r0;
    }

    public org.apache.commons.collections4.map.Flat3Map makeObject()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r1;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r1 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r1.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        return $r1;
    }

    public void testEquals1()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "testA");

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("b", "testB");

        r2 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "testB");

        virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("b", "testA");

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean equals(java.lang.Object)>(r2);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(0, $z0);

        return;
    }

    public void testEquals2()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "testA");

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("b", "testB");

        r2 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "testB");

        virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("c", "testA");

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean equals(java.lang.Object)>(r2);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(0, $z0);

        return;
    }

    public void testClone2()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1, r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r3, $r5, $r7, $r8, $r9, $r11, $r13, $r14, $r15, $r17, $r19, $r21, $r23, $r24, $r25, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r10, $r12, $r16, $r18, $r26, $r28;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(0, $i0);

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "10");

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "20");

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(2, $i1);

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r7);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r8);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r10 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r9);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>("10", $r10);

        $r11 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r12 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r11);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>("20", $r12);

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: org.apache.commons.collections4.map.Flat3Map clone()>();

        $i2 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(2, $i2);

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z2 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r13);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z3 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r14);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z3);

        $r15 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r16 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r15);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>("10", $r16);

        $r17 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r18 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r17);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>("20", $r18);

        $r19 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("10", $r19);

        $r21 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("20", $r21);

        $i3 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(4, $i3);

        $i4 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(2, $i4);

        $r23 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z4 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r23);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z4);

        $r24 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z5 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r24);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z5);

        $r25 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r26 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r25);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>("10", $r26);

        $r27 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r28 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r27);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>("20", $r28);

        return;
    }

    public void testClone4()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1, r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r3, $r5, $r7, $r9, $r11, $r12, $r13, $r15, $r17, $r19, $r21, $r22, $r23, $r25, $r27, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r14, $r16, $r18, $r20, $r24, $r26, $r28, $r30;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(0, $i0);

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "10");

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "20");

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("10", $r7);

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("20", $r9);

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: org.apache.commons.collections4.map.Flat3Map clone()>();

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(4, $i1);

        $i2 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(4, $i2);

        $r11 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z0 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r11);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r12 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z1 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $z2 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>("10");

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $z3 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>("20");

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z3);

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r14 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r13);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>("10", $r14);

        $r15 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r16 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r15);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>("20", $r16);

        $r17 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r18 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>("10");

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r17, $r18);

        $r19 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r20 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>("20");

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r19, $r20);

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: void clear()>();

        $i3 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(0, $i3);

        $i4 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(4, $i4);

        $r21 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z4 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r21);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z4);

        $r22 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z5 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r22);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z5);

        $z6 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>("10");

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z6);

        $z7 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>("20");

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z7);

        $r23 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r24 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r23);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>("10", $r24);

        $r25 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r26 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r25);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>("20", $r26);

        $r27 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r28 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>("10");

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r27, $r28);

        $r29 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r30 = virtualinvoke r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>("20");

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r29, $r30);

        return;
    }

    public void testSerialisation0() throws java.lang.Exception
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1, r7;
        byte[] r4;
        java.io.ByteArrayOutputStream $r8;
        java.io.ObjectOutputStream $r9;
        java.io.ByteArrayInputStream $r10;
        java.io.ObjectInputStream $r11;
        java.lang.Object $r12;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        $r8 = new java.io.ByteArrayOutputStream;

        specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>();

        $r9 = new java.io.ObjectOutputStream;

        specialinvoke $r9.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r8);

        virtualinvoke $r9.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1);

        r4 = virtualinvoke $r8.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r9.<java.io.ObjectOutputStream: void close()>();

        $r10 = new java.io.ByteArrayInputStream;

        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>(r4);

        $r11 = new java.io.ObjectInputStream;

        specialinvoke $r11.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r10);

        $r12 = virtualinvoke $r11.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r7 = (org.apache.commons.collections4.map.Flat3Map) $r12;

        virtualinvoke $r11.<java.io.ObjectInputStream: void close()>();

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(0, $i0);

        $i1 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(0, $i1);

        return;
    }

    public void testSerialisation2() throws java.lang.Exception
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1, r7;
        byte[] r4;
        java.lang.Integer $r8, $r10, $r17, $r18, $r19, $r21;
        java.io.ByteArrayOutputStream $r12;
        java.io.ObjectOutputStream $r13;
        java.io.ByteArrayInputStream $r14;
        java.io.ObjectInputStream $r15;
        java.lang.Object $r16, $r20, $r22;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, "10");

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, "20");

        $r12 = new java.io.ByteArrayOutputStream;

        specialinvoke $r12.<java.io.ByteArrayOutputStream: void <init>()>();

        $r13 = new java.io.ObjectOutputStream;

        specialinvoke $r13.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r12);

        virtualinvoke $r13.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1);

        r4 = virtualinvoke $r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r13.<java.io.ObjectOutputStream: void close()>();

        $r14 = new java.io.ByteArrayInputStream;

        specialinvoke $r14.<java.io.ByteArrayInputStream: void <init>(byte[])>(r4);

        $r15 = new java.io.ObjectInputStream;

        specialinvoke $r15.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r14);

        $r16 = virtualinvoke $r15.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r7 = (org.apache.commons.collections4.map.Flat3Map) $r16;

        virtualinvoke $r15.<java.io.ObjectInputStream: void close()>();

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(2, $i0);

        $i1 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(2, $i1);

        $r17 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z0 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r17);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r18 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z1 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r18);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r19 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r20 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r19);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("10", $r20);

        $r21 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r22 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r21);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("20", $r22);

        return;
    }

    public void testSerialisation4() throws java.lang.Exception
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1, r7;
        byte[] r4;
        java.lang.Integer $r8, $r10, $r12, $r14, $r21, $r22, $r23, $r25, $r27, $r29;
        java.io.ByteArrayOutputStream $r16;
        java.io.ObjectOutputStream $r17;
        java.io.ByteArrayInputStream $r18;
        java.io.ObjectInputStream $r19;
        java.lang.Object $r20, $r24, $r26, $r28, $r30;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, "10");

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, "20");

        $r12 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("10", $r12);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("20", $r14);

        $r16 = new java.io.ByteArrayOutputStream;

        specialinvoke $r16.<java.io.ByteArrayOutputStream: void <init>()>();

        $r17 = new java.io.ObjectOutputStream;

        specialinvoke $r17.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r16);

        virtualinvoke $r17.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1);

        r4 = virtualinvoke $r16.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r17.<java.io.ObjectOutputStream: void close()>();

        $r18 = new java.io.ByteArrayInputStream;

        specialinvoke $r18.<java.io.ByteArrayInputStream: void <init>(byte[])>(r4);

        $r19 = new java.io.ObjectInputStream;

        specialinvoke $r19.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r18);

        $r20 = virtualinvoke $r19.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r7 = (org.apache.commons.collections4.map.Flat3Map) $r20;

        virtualinvoke $r19.<java.io.ObjectInputStream: void close()>();

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(4, $i0);

        $i1 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(4, $i1);

        $r21 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z0 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r21);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r22 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z1 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r22);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $z2 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>("10");

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $z3 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>("20");

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z3);

        $r23 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r24 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r23);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("10", $r24);

        $r25 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r26 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r25);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("20", $r26);

        $r27 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r28 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>("10");

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28);

        $r29 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r30 = virtualinvoke r7.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>("20");

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r29, $r30);

        return;
    }

    public void testEntryIteratorSetValue1() throws java.lang.Exception
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.Integer $r4, $r6, $r8, $r13, $r14, $r15, $r16, $r18, $r20;
        java.util.Set $r10;
        java.lang.Object $r11, $r17, $r19, $r21;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, "10");

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "20");

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, "30");

        $r10 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r11;

        interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("NewValue");

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(3, $i0);

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r13);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r14);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r15 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $z2 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r15);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $r16 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r17 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r16);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NewValue", $r17);

        $r18 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r19 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r18);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("20", $r19);

        $r20 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r21 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r20);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("30", $r21);

        return;
    }

    public void testEntryIteratorSetValue2() throws java.lang.Exception
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.Integer $r4, $r6, $r8, $r14, $r15, $r16, $r17, $r19, $r21;
        java.util.Set $r10;
        java.lang.Object $r12, $r18, $r20, $r22;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, "10");

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "20");

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, "30");

        $r10 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

        interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r12;

        interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("NewValue");

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(3, $i0);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r14);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r15 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r15);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r16 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $z2 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r16);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $r17 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r18 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r17);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("10", $r18);

        $r19 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r20 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r19);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NewValue", $r20);

        $r21 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r22 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r21);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("30", $r22);

        return;
    }

    public void testEntryIteratorSetValue3() throws java.lang.Exception
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.Integer $r4, $r6, $r8, $r15, $r16, $r17, $r18, $r20, $r22;
        java.util.Set $r10;
        java.lang.Object $r13, $r19, $r21, $r23;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, "10");

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "20");

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, "30");

        $r10 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

        interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r13 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r13;

        interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("NewValue");

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(3, $i0);

        $r15 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r15);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r16 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r16);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r17 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $z2 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r17);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $r18 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r19 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r18);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("10", $r19);

        $r20 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r21 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r20);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("20", $r21);

        $r22 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r23 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r22);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NewValue", $r23);

        return;
    }

    public void testMapIteratorSetValue1() throws java.lang.Exception
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1;
        org.apache.commons.collections4.MapIterator r2;
        java.lang.Integer $r3, $r5, $r7, $r11, $r12, $r13, $r14, $r16, $r18;
        int $i0;
        boolean $z0, $z1, $z2;
        java.lang.Object $r15, $r17, $r19;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "10");

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "20");

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "30");

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: org.apache.commons.collections4.MapIterator mapIterator()>();

        interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object setValue(java.lang.Object)>("NewValue");

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(3, $i0);

        $r11 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r11);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r12 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $z2 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r13);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r15 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r14);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NewValue", $r15);

        $r16 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r17 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r16);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("20", $r17);

        $r18 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r19 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r18);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("30", $r19);

        return;
    }

    public void testMapIteratorSetValue2() throws java.lang.Exception
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1;
        org.apache.commons.collections4.MapIterator r2;
        java.lang.Integer $r3, $r5, $r7, $r12, $r13, $r14, $r15, $r17, $r19;
        int $i0;
        boolean $z0, $z1, $z2;
        java.lang.Object $r16, $r18, $r20;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "10");

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "20");

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "30");

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: org.apache.commons.collections4.MapIterator mapIterator()>();

        interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object setValue(java.lang.Object)>("NewValue");

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(3, $i0);

        $r12 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r13);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $z2 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r14);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $r15 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r16 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r15);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("10", $r16);

        $r17 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r18 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r17);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NewValue", $r18);

        $r19 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r20 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r19);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("30", $r20);

        return;
    }

    public void testMapIteratorSetValue3() throws java.lang.Exception
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map r1;
        org.apache.commons.collections4.MapIterator r2;
        java.lang.Integer $r3, $r5, $r7, $r13, $r14, $r15, $r16, $r18, $r20;
        int $i0;
        boolean $z0, $z1, $z2;
        java.lang.Object $r17, $r19, $r21;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "10");

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "20");

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "30");

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: org.apache.commons.collections4.MapIterator mapIterator()>();

        interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object setValue(java.lang.Object)>("NewValue");

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(3, $i0);

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r13);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r14);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r15 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $z2 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>($r15);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $r16 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r17 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r16);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("10", $r17);

        $r18 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r19 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r18);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("20", $r19);

        $r20 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r21 = virtualinvoke r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r20);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NewValue", $r21);

        return;
    }

    public org.apache.commons.collections4.BulkTest bulkTestMapIterator()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator $r1;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r1 = new org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator;

        specialinvoke $r1.<org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator: void <init>(org.apache.commons.collections4.map.Flat3MapTest)>(r0);

        return $r1;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        return "4";
    }

    public void testCollections261()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r30, $r31;
        java.lang.Object $r11, $r14, $r26, $r29, $r32;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r11 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r11);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r14 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r13);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r14);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r26 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r25);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r26);

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r29 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r28);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r29);

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r32 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r31);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r32);

        return;
    }

    public void testToString()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.String r2, r3, r4, r5;
        org.apache.commons.collections4.map.Flat3Map $r6;
        java.lang.Integer $r7, $r8, $r10, $r11, $r13, $r14;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r6 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r6.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        r2 = virtualinvoke $r6.<org.apache.commons.collections4.map.Flat3Map: java.lang.String toString()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNotNull(java.lang.Object)>(r2);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r6.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        r3 = virtualinvoke $r6.<org.apache.commons.collections4.map.Flat3Map: java.lang.String toString()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNotNull(java.lang.Object)>(r3);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNotSame(java.lang.Object,java.lang.Object)>(r2, r3);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r6.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        r4 = virtualinvoke $r6.<org.apache.commons.collections4.map.Flat3Map: java.lang.String toString()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNotNull(java.lang.Object)>(r4);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNotSame(java.lang.Object,java.lang.Object)>(r2, r4);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNotSame(java.lang.Object,java.lang.Object)>(r3, r4);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r6.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14);

        r5 = virtualinvoke $r6.<org.apache.commons.collections4.map.Flat3Map: java.lang.String toString()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNotNull(java.lang.Object)>(r5);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNotSame(java.lang.Object,java.lang.Object)>(r2, r5);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNotSame(java.lang.Object,java.lang.Object)>(r3, r5);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNotSame(java.lang.Object,java.lang.Object)>(r4, r5);

        return;
    }

    public void testRemove1()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r21, $r22, $r23;
        int $i0;
        java.lang.Object r24, r25, r26, r27, r28, r29;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(44);

        r24 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r3);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r24);

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r25 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r7);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r8, r25);

        $i0 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(0, $i0);

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r26 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r9);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r26);

        $r11 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r13);

        $r17 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r16 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r16);

        $r19 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r27 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r19);

        $r20 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r20, r27);

        $r21 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r28 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r21);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r28);

        $r22 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        r29 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r22);

        $r23 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r23, r29);

        return;
    }

    public void testRemove2()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.Object r19, r20, r21, r22;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r6);

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r9);

        $r12 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r19 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r12);

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r13, r19);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r20 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r14);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r20);

        $r15 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        r21 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r15);

        $r16 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r16, r21);

        $r17 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        r22 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r17);

        $r18 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r18, r22);

        return;
    }

    public void testRemove3()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.Object r19, r20, r21, r22;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r6);

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r9);

        $r12 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        r19 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r12);

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r13, r19);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r20 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r14);

        $r15 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r15, r20);

        $r16 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        r21 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r16);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r21);

        $r17 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        r22 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r17);

        $r18 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r18, r22);

        return;
    }

    public void testRemove4()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.Object r19, r20, r21, r22;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r6);

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r9);

        $r12 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        r19 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r12);

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r13, r19);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r20 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r14);

        $r15 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r15, r20);

        $r16 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        r21 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r16);

        $r17 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r17, r21);

        $r18 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        r22 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r18);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r22);

        return;
    }

    public void testRemove5()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r5;
        java.lang.Object r6, r7;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r3);

        r6 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>(null);

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r5, r6);

        r7 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r7);

        return;
    }

    public void testRemove6()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r4, $r6, $r8, $r9, $r10;
        java.lang.Object r11, r12, r13;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r6);

        r11 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>(null);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r8, r11);

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r12 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r9);

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r10, r12);

        r13 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r13);

        return;
    }

    public void testRemove7()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r5, $r6, $r8, $r9, $r10;
        java.lang.Object r11, r12, r13;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r3);

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5);

        r11 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>(null);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r8, r11);

        r12 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r12);

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        r13 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r9);

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r10, r13);

        return;
    }

    public void testRemove8()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r4, $r6, $r7, $r9, $r11, $r12, $r13, $r14, $r15;
        java.lang.Object r16, r17, r18, r19;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r6);

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r9);

        r16 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>(null);

        $r11 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r11, r16);

        $r12 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r17 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r12);

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r13, r17);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        r18 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r14);

        $r15 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r15, r18);

        r19 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r19);

        return;
    }

    public void testRemove9()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r5;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r2);

        return;
    }

    public void testRemove10()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r5, $r7, $r8;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r2);

        return;
    }

    public void testRemove11()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r5, $r7, $r8, $r10, $r11;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r11 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r2);

        return;
    }

    public void testRemove12()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r5, $r7, $r8, $r10, $r11, $r13;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r11 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r13);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r2);

        return;
    }

    public void testRemove13()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r5, $r7, $r8, $r10;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertNull(java.lang.Object)>(r2);

        return;
    }

    public void testNewInstance1()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.util.HashMap $r3;
        java.lang.Integer $r4, $r5, $r7, $r8;
        org.apache.commons.collections4.map.Flat3Map $r10;
        int $i0;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r10 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r10.<org.apache.commons.collections4.map.Flat3Map: void <init>(java.util.Map)>($r3);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r10);

        $i0 = virtualinvoke $r10.<org.apache.commons.collections4.map.Flat3Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(int,int)>(2, $i0);

        return;
    }

    public void testGet1()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r6;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r4);

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>(null);

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r6, r2);

        return;
    }

    public void testGet2()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r5, $r7, $r9;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r7);

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>(null);

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r9, r2);

        return;
    }

    public void testGet3()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r5, $r7, $r8, $r10, $r12;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r10);

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>(null);

        $r12 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertSame(java.lang.Object,java.lang.Object)>($r12, r2);

        return;
    }

    public void testContainsKey1()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        boolean z0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r4, $r6, $r7, $r9;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r6);

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r9);

        z0 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, z0);

        return;
    }

    public void testContainsKey2()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        boolean z0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r4, $r6;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r6);

        z0 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, z0);

        return;
    }

    public void testContainsKey3()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        boolean z0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r3);

        z0 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsKey(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, z0);

        return;
    }

    public void testContainsValue1()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        boolean z0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r4, $r6, $r7, $r9;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r6);

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, null);

        z0 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsValue(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, z0);

        return;
    }

    public void testContainsValue2()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        boolean z0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3, $r4, $r6;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, null);

        z0 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsValue(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, z0);

        return;
    }

    public void testContainsValue3()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        boolean z0;
        org.apache.commons.collections4.map.Flat3Map $r2;
        java.lang.Integer $r3;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r2 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r3 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, null);

        z0 = virtualinvoke $r2.<org.apache.commons.collections4.map.Flat3Map: boolean containsValue(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(boolean,boolean)>(1, z0);

        return;
    }

    public void testPut1()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2, $r15;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r5, $r7, $r8, $r10, $r12, $r13, $r14;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r10);

        $r12 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r12);

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r13, r2);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r15 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15);

        return;
    }

    public void testPut2()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2, $r12;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r5, $r7, $r9, $r10, $r11;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r7);

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r9);

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, r2);

        $r11 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r12 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12);

        return;
    }

    public void testPut3()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2, $r9;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r6, $r7, $r8;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r4);

        $r6 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r6);

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r7, r2);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r9 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r8);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r9);

        return;
    }

    public void testPut4()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2, $r18;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r17;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r11 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r13);

        $r15 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r15, r2);

        $r17 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r16 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        $r18 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r16);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

        return;
    }

    public void testPut5()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2, $r15;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r11 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

        $r12 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, r2);

        $r14 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r13 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO>;

        $r15 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r13);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15);

        return;
    }

    public void testPut6()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        java.lang.Object r2, $r12;
        org.apache.commons.collections4.map.Flat3Map $r3;
        java.lang.Integer $r4, $r5, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r3 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: void <init>()>();

        $r5 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r4 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r8 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r7 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r9 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE>;

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r9, r2);

        $r11 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r10 = <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE>;

        $r12 = virtualinvoke $r3.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object get(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.map.Flat3MapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12);

        return;
    }

    public volatile org.apache.commons.collections4.IterableMap makeObject()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r1;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        return $r1;
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r1;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.Flat3MapTest r0;
        org.apache.commons.collections4.map.Flat3Map $r1;

        r0 := @this: org.apache.commons.collections4.map.Flat3MapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3MapTest: org.apache.commons.collections4.map.Flat3Map makeObject()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Integer $r0, $r1, $r2;

        <org.apache.commons.collections4.map.Flat3MapTest: java.lang.String THIRTY> = "30";

        <org.apache.commons.collections4.map.Flat3MapTest: java.lang.String TWENTY> = "20";

        <org.apache.commons.collections4.map.Flat3MapTest: java.lang.String TEN> = "10";

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer ONE> = $r0;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer TWO> = $r1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        <org.apache.commons.collections4.map.Flat3MapTest: java.lang.Integer THREE> = $r2;

        return;
    }
}
