public abstract class org.apache.commons.collections4.map.AbstractIterableMapTest extends org.apache.commons.collections4.map.AbstractMapTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.map.AbstractIterableMapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractIterableMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public abstract org.apache.commons.collections4.IterableMap makeObject();

    public org.apache.commons.collections4.IterableMap makeFullMap()
    {
        org.apache.commons.collections4.map.AbstractIterableMapTest r0;
        java.util.Map $r1;
        org.apache.commons.collections4.IterableMap $r2;

        r0 := @this: org.apache.commons.collections4.map.AbstractIterableMapTest;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map makeFullMap()>();

        $r2 = (org.apache.commons.collections4.IterableMap) $r1;

        return $r2;
    }

    public void testFailFastEntrySet()
    {
        org.apache.commons.collections4.map.AbstractIterableMapTest r0;
        java.util.Map$Entry r1;
        boolean $z0, $z1;
        org.apache.commons.collections4.IterableMap $r2, $r5, $r9, $r12;
        java.util.Set $r3, $r10;
        java.lang.Object $r4, $r6;
        java.util.ConcurrentModificationException $r14, $r15;
        java.util.Iterator r16, r18;

        r0 := @this: org.apache.commons.collections4.map.AbstractIterableMapTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: boolean isRemoveSupported()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $z1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: boolean isFailFastExpected()>();

        if $z1 != 0 goto label02;

        return;

     label02:
        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void resetFull()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.IterableMap: java.util.Set entrySet()>();

        r16 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.util.Map$Entry) $r4;

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        $r6 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r5.<org.apache.commons.collections4.IterableMap: java.lang.Object remove(java.lang.Object)>($r6);

     label03:
        interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.AbstractIterableMapTest: void fail()>();

     label04:
        goto label06;

     label05:
        $r14 := @caughtexception;

     label06:
        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void resetFull()>();

        $r9 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        $r10 = interfaceinvoke $r9.<org.apache.commons.collections4.IterableMap: java.util.Set entrySet()>();

        r18 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

        interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        $r12 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        interfaceinvoke $r12.<org.apache.commons.collections4.IterableMap: void clear()>();

     label07:
        interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.AbstractIterableMapTest: void fail()>();

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

     label10:
        return;

        catch java.util.ConcurrentModificationException from label03 to label04 with label05;
        catch java.util.ConcurrentModificationException from label07 to label08 with label09;
    }

    public void testFailFastKeySet()
    {
        org.apache.commons.collections4.map.AbstractIterableMapTest r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        org.apache.commons.collections4.IterableMap $r2, $r4, $r7, $r10;
        java.util.Set $r3, $r8;
        java.util.ConcurrentModificationException $r12, $r13;
        java.util.Iterator r14, r16;

        r0 := @this: org.apache.commons.collections4.map.AbstractIterableMapTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: boolean isRemoveSupported()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $z1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: boolean isFailFastExpected()>();

        if $z1 != 0 goto label02;

        return;

     label02:
        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void resetFull()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.IterableMap: java.util.Set keySet()>();

        r14 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        r1 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        interfaceinvoke $r4.<org.apache.commons.collections4.IterableMap: java.lang.Object remove(java.lang.Object)>(r1);

     label03:
        interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.AbstractIterableMapTest: void fail()>();

     label04:
        goto label06;

     label05:
        $r12 := @caughtexception;

     label06:
        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void resetFull()>();

        $r7 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        $r8 = interfaceinvoke $r7.<org.apache.commons.collections4.IterableMap: java.util.Set keySet()>();

        r16 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        $r10 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        interfaceinvoke $r10.<org.apache.commons.collections4.IterableMap: void clear()>();

     label07:
        interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.AbstractIterableMapTest: void fail()>();

     label08:
        goto label10;

     label09:
        $r13 := @caughtexception;

     label10:
        return;

        catch java.util.ConcurrentModificationException from label03 to label04 with label05;
        catch java.util.ConcurrentModificationException from label07 to label08 with label09;
    }

    public void testFailFastValues()
    {
        org.apache.commons.collections4.map.AbstractIterableMapTest r0;
        boolean $z0, $z1;
        org.apache.commons.collections4.IterableMap $r1, $r4, $r5, $r11, $r14;
        java.util.Collection $r2, $r12;
        java.util.Set $r6;
        java.util.Iterator $r7, r18, r20;
        java.lang.Object $r8;
        java.util.ConcurrentModificationException $r16, $r17;

        r0 := @this: org.apache.commons.collections4.map.AbstractIterableMapTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: boolean isRemoveSupported()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $z1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: boolean isFailFastExpected()>();

        if $z1 != 0 goto label02;

        return;

     label02:
        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void resetFull()>();

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        $r2 = interfaceinvoke $r1.<org.apache.commons.collections4.IterableMap: java.util.Collection values()>();

        r18 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.collections4.IterableMap: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r4.<org.apache.commons.collections4.IterableMap: java.lang.Object remove(java.lang.Object)>($r8);

     label03:
        interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.AbstractIterableMapTest: void fail()>();

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

     label06:
        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void resetFull()>();

        $r11 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        $r12 = interfaceinvoke $r11.<org.apache.commons.collections4.IterableMap: java.util.Collection values()>();

        r20 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

        interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        $r14 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        interfaceinvoke $r14.<org.apache.commons.collections4.IterableMap: void clear()>();

     label07:
        interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.AbstractIterableMapTest: void fail()>();

     label08:
        goto label10;

     label09:
        $r17 := @caughtexception;

     label10:
        return;

        catch java.util.ConcurrentModificationException from label03 to label04 with label05;
        catch java.util.ConcurrentModificationException from label07 to label08 with label09;
    }

    public org.apache.commons.collections4.BulkTest bulkTestMapIterator()
    {
        org.apache.commons.collections4.map.AbstractIterableMapTest r0;
        org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractIterableMapTest;

        $r1 = new org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator;

        specialinvoke $r1.<org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator: void <init>(org.apache.commons.collections4.map.AbstractIterableMapTest)>(r0);

        return $r1;
    }

    public org.apache.commons.collections4.IterableMap getMap()
    {
        org.apache.commons.collections4.map.AbstractIterableMapTest r0;
        java.util.Map $r1;
        org.apache.commons.collections4.IterableMap $r2;

        r0 := @this: org.apache.commons.collections4.map.AbstractIterableMapTest;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $r2 = (org.apache.commons.collections4.IterableMap) $r1;

        return $r2;
    }

    public volatile java.util.Map getMap()
    {
        org.apache.commons.collections4.map.AbstractIterableMapTest r0;
        org.apache.commons.collections4.IterableMap $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractIterableMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        return $r1;
    }

    public volatile java.util.Map makeFullMap()
    {
        org.apache.commons.collections4.map.AbstractIterableMapTest r0;
        org.apache.commons.collections4.IterableMap $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractIterableMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap makeFullMap()>();

        return $r1;
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.AbstractIterableMapTest r0;
        org.apache.commons.collections4.IterableMap $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractIterableMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.AbstractIterableMapTest r0;
        org.apache.commons.collections4.IterableMap $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractIterableMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap makeObject()>();

        return $r1;
    }
}
