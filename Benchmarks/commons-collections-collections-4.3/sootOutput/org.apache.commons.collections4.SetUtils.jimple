public class org.apache.commons.collections4.SetUtils extends java.lang.Object
{
    public static final java.util.SortedSet EMPTY_SORTED_SET;

    public static org.apache.commons.collections4.SetUtils$SetView difference(java.util.Set, java.util.Set)
    {
        java.util.Set r0, r1;
        java.lang.NullPointerException $r3;
        org.apache.commons.collections4.SetUtils$1 $r4;
        org.apache.commons.collections4.SetUtils$2 $r5;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Sets must not be null.");

        throw $r3;

     label2:
        $r4 = new org.apache.commons.collections4.SetUtils$1;

        specialinvoke $r4.<org.apache.commons.collections4.SetUtils$1: void <init>(java.util.Set)>(r1);

        $r5 = new org.apache.commons.collections4.SetUtils$2;

        specialinvoke $r5.<org.apache.commons.collections4.SetUtils$2: void <init>(java.util.Set,java.util.Set,org.apache.commons.collections4.Predicate)>(r0, r1, $r4);

        return $r5;
    }

    public static org.apache.commons.collections4.SetUtils$SetView disjunction(java.util.Set, java.util.Set)
    {
        java.util.Set r0, r1;
        org.apache.commons.collections4.SetUtils$SetView r2, r3;
        java.lang.NullPointerException $r4;
        org.apache.commons.collections4.SetUtils$3 $r5;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Sets must not be null.");

        throw $r4;

     label2:
        r2 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView difference(java.util.Set,java.util.Set)>(r0, r1);

        r3 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView difference(java.util.Set,java.util.Set)>(r1, r0);

        $r5 = new org.apache.commons.collections4.SetUtils$3;

        specialinvoke $r5.<org.apache.commons.collections4.SetUtils$3: void <init>(java.util.Set,java.util.Set,org.apache.commons.collections4.SetUtils$SetView,org.apache.commons.collections4.SetUtils$SetView)>(r0, r1, r2, r3);

        return $r5;
    }

    public static java.util.Set emptyIfNull(java.util.Set)
    {
        java.util.Set r0, $r1;

        r0 := @parameter0: java.util.Set;

        if r0 != null goto label1;

        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        goto label2;

     label1:
        $r1 = r0;

     label2:
        return $r1;
    }

    public static java.util.Set emptySet()
    {
        java.util.Set $r0;

        $r0 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r0;
    }

    public static java.util.SortedSet emptySortedSet()
    {
        java.util.SortedSet $r0;

        $r0 = <org.apache.commons.collections4.SetUtils: java.util.SortedSet EMPTY_SORTED_SET>;

        return $r0;
    }

    public static int hashCodeForSet(java.util.Collection)
    {
        java.util.Collection r0;
        java.util.Iterator r1;
        java.lang.Object r2;
        boolean $z0;
        int $i0, i1;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        return 0;

     label1:
        i1 = 0;

        r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        if r2 == null goto label3;

        $i0 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        i1 = i1 + $i0;

     label3:
        goto label2;

     label4:
        return i1;
    }

    public static transient java.util.HashSet hashSet(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.util.HashSet $r1;
        java.util.List $r2;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.util.HashSet;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        return $r1;
    }

    public static org.apache.commons.collections4.SetUtils$SetView intersection(java.util.Set, java.util.Set)
    {
        java.util.Set r0, r1;
        java.lang.NullPointerException $r3;
        org.apache.commons.collections4.SetUtils$4 $r4;
        org.apache.commons.collections4.SetUtils$5 $r5;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Sets must not be null.");

        throw $r3;

     label2:
        $r4 = new org.apache.commons.collections4.SetUtils$4;

        specialinvoke $r4.<org.apache.commons.collections4.SetUtils$4: void <init>(java.util.Set)>(r1);

        $r5 = new org.apache.commons.collections4.SetUtils$5;

        specialinvoke $r5.<org.apache.commons.collections4.SetUtils$5: void <init>(java.util.Set,java.util.Set,org.apache.commons.collections4.Predicate)>(r0, r1, $r4);

        return $r5;
    }

    public static boolean isEqualSet(java.util.Collection, java.util.Collection)
    {
        java.util.Collection r0, r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Collection;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 == null goto label2;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i0 == $i1 goto label3;

     label2:
        return 0;

     label3:
        $z0 = interfaceinvoke r0.<java.util.Collection: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public static java.util.Set newIdentityHashSet()
    {
        java.util.IdentityHashMap $r0;
        java.util.Set $r1;

        $r0 = new java.util.IdentityHashMap;

        specialinvoke $r0.<java.util.IdentityHashMap: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r0);

        return $r1;
    }

    public static java.util.Set orderedSet(java.util.Set)
    {
        java.util.Set r0;
        org.apache.commons.collections4.set.ListOrderedSet $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = staticinvoke <org.apache.commons.collections4.set.ListOrderedSet: org.apache.commons.collections4.set.ListOrderedSet listOrderedSet(java.util.Set)>(r0);

        return $r1;
    }

    public static java.util.SortedSet predicatedNavigableSet(java.util.NavigableSet, org.apache.commons.collections4.Predicate)
    {
        java.util.NavigableSet r0;
        org.apache.commons.collections4.Predicate r1;
        org.apache.commons.collections4.set.PredicatedNavigableSet $r2;

        r0 := @parameter0: java.util.NavigableSet;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        $r2 = staticinvoke <org.apache.commons.collections4.set.PredicatedNavigableSet: org.apache.commons.collections4.set.PredicatedNavigableSet predicatedNavigableSet(java.util.NavigableSet,org.apache.commons.collections4.Predicate)>(r0, r1);

        return $r2;
    }

    public static java.util.Set predicatedSet(java.util.Set, org.apache.commons.collections4.Predicate)
    {
        java.util.Set r0;
        org.apache.commons.collections4.Predicate r1;
        org.apache.commons.collections4.set.PredicatedSet $r2;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        $r2 = staticinvoke <org.apache.commons.collections4.set.PredicatedSet: org.apache.commons.collections4.set.PredicatedSet predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)>(r0, r1);

        return $r2;
    }

    public static java.util.SortedSet predicatedSortedSet(java.util.SortedSet, org.apache.commons.collections4.Predicate)
    {
        java.util.SortedSet r0;
        org.apache.commons.collections4.Predicate r1;
        org.apache.commons.collections4.set.PredicatedSortedSet $r2;

        r0 := @parameter0: java.util.SortedSet;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        $r2 = staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSet: org.apache.commons.collections4.set.PredicatedSortedSet predicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)>(r0, r1);

        return $r2;
    }

    public static java.util.Set synchronizedSet(java.util.Set)
    {
        java.util.Set r0, $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>(r0);

        return $r1;
    }

    public static java.util.SortedSet synchronizedSortedSet(java.util.SortedSet)
    {
        java.util.SortedSet r0, $r1;

        r0 := @parameter0: java.util.SortedSet;

        $r1 = staticinvoke <java.util.Collections: java.util.SortedSet synchronizedSortedSet(java.util.SortedSet)>(r0);

        return $r1;
    }

    public static java.util.SortedSet transformedNavigableSet(java.util.NavigableSet, org.apache.commons.collections4.Transformer)
    {
        java.util.NavigableSet r0;
        org.apache.commons.collections4.Transformer r1;
        org.apache.commons.collections4.set.TransformedNavigableSet $r2;

        r0 := @parameter0: java.util.NavigableSet;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        $r2 = staticinvoke <org.apache.commons.collections4.set.TransformedNavigableSet: org.apache.commons.collections4.set.TransformedNavigableSet transformingNavigableSet(java.util.NavigableSet,org.apache.commons.collections4.Transformer)>(r0, r1);

        return $r2;
    }

    public static java.util.Set transformedSet(java.util.Set, org.apache.commons.collections4.Transformer)
    {
        java.util.Set r0;
        org.apache.commons.collections4.Transformer r1;
        org.apache.commons.collections4.set.TransformedSet $r2;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        $r2 = staticinvoke <org.apache.commons.collections4.set.TransformedSet: org.apache.commons.collections4.set.TransformedSet transformingSet(java.util.Set,org.apache.commons.collections4.Transformer)>(r0, r1);

        return $r2;
    }

    public static java.util.SortedSet transformedSortedSet(java.util.SortedSet, org.apache.commons.collections4.Transformer)
    {
        java.util.SortedSet r0;
        org.apache.commons.collections4.Transformer r1;
        org.apache.commons.collections4.set.TransformedSortedSet $r2;

        r0 := @parameter0: java.util.SortedSet;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        $r2 = staticinvoke <org.apache.commons.collections4.set.TransformedSortedSet: org.apache.commons.collections4.set.TransformedSortedSet transformingSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)>(r0, r1);

        return $r2;
    }

    public static org.apache.commons.collections4.SetUtils$SetView union(java.util.Set, java.util.Set)
    {
        java.util.Set r0, r1;
        org.apache.commons.collections4.SetUtils$SetView r2;
        java.lang.NullPointerException $r3;
        org.apache.commons.collections4.SetUtils$6 $r4;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Sets must not be null.");

        throw $r3;

     label2:
        r2 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView difference(java.util.Set,java.util.Set)>(r1, r0);

        $r4 = new org.apache.commons.collections4.SetUtils$6;

        specialinvoke $r4.<org.apache.commons.collections4.SetUtils$6: void <init>(java.util.Set,java.util.Set,org.apache.commons.collections4.SetUtils$SetView)>(r0, r1, r2);

        return $r4;
    }

    public static java.util.SortedSet unmodifiableNavigableSet(java.util.NavigableSet)
    {
        java.util.NavigableSet r0, $r1;

        r0 := @parameter0: java.util.NavigableSet;

        $r1 = staticinvoke <org.apache.commons.collections4.set.UnmodifiableNavigableSet: java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet)>(r0);

        return $r1;
    }

    public static transient java.util.Set unmodifiableSet(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.util.HashSet $r1;
        java.util.Set $r2;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.HashSet hashSet(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.apache.commons.collections4.set.UnmodifiableSet: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public static java.util.Set unmodifiableSet(java.util.Set)
    {
        java.util.Set r0, $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = staticinvoke <org.apache.commons.collections4.set.UnmodifiableSet: java.util.Set unmodifiableSet(java.util.Set)>(r0);

        return $r1;
    }

    public static java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)
    {
        java.util.SortedSet r0, $r1;

        r0 := @parameter0: java.util.SortedSet;

        $r1 = staticinvoke <org.apache.commons.collections4.set.UnmodifiableSortedSet: java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)>(r0);

        return $r1;
    }

    private void <init>()
    {
        org.apache.commons.collections4.SetUtils r0;

        r0 := @this: org.apache.commons.collections4.SetUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.util.TreeSet $r0;
        java.util.SortedSet $r1;

        $r0 = new java.util.TreeSet;

        specialinvoke $r0.<java.util.TreeSet: void <init>()>();

        $r1 = staticinvoke <org.apache.commons.collections4.set.UnmodifiableSortedSet: java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)>($r0);

        <org.apache.commons.collections4.SetUtils: java.util.SortedSet EMPTY_SORTED_SET> = $r1;

        return;
    }
}
