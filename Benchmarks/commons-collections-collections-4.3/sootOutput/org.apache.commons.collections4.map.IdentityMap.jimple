public class org.apache.commons.collections4.map.IdentityMap extends org.apache.commons.collections4.map.AbstractHashedMap implements java.io.Serializable, java.lang.Cloneable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.collections4.map.IdentityMap r0;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractHashedMap: void <init>(int,float,int)>(16, 0.75F, 12);

        return;
    }

    public void <init>(int)
    {
        org.apache.commons.collections4.map.IdentityMap r0;
        int i0;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractHashedMap: void <init>(int)>(i0);

        return;
    }

    public void <init>(int, float)
    {
        org.apache.commons.collections4.map.IdentityMap r0;
        int i0;
        float f0;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractHashedMap: void <init>(int,float)>(i0, f0);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.commons.collections4.map.IdentityMap r0;
        java.util.Map r1;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractHashedMap: void <init>(java.util.Map)>(r1);

        return;
    }

    protected int hash(java.lang.Object)
    {
        org.apache.commons.collections4.map.IdentityMap r0;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        r1 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        return $i0;
    }

    protected boolean isEqualKey(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.IdentityMap r0;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 != r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean isEqualValue(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.IdentityMap r0;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 != r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected org.apache.commons.collections4.map.IdentityMap$IdentityEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry, int, java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.IdentityMap r0;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry r1;
        int i0;
        java.lang.Object r2, r3;
        org.apache.commons.collections4.map.IdentityMap$IdentityEntry $r4;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r4 = new org.apache.commons.collections4.map.IdentityMap$IdentityEntry;

        specialinvoke $r4.<org.apache.commons.collections4.map.IdentityMap$IdentityEntry: void <init>(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,java.lang.Object)>(r1, i0, r2, r3);

        return $r4;
    }

    public org.apache.commons.collections4.map.IdentityMap clone()
    {
        org.apache.commons.collections4.map.IdentityMap r0, $r2;
        org.apache.commons.collections4.map.AbstractHashedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractHashedMap: org.apache.commons.collections4.map.AbstractHashedMap clone()>();

        $r2 = (org.apache.commons.collections4.map.IdentityMap) $r1;

        return $r2;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections4.map.IdentityMap r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.IdentityMap: void doWriteObject(java.io.ObjectOutputStream)>(r1);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.map.IdentityMap r0;
        java.io.ObjectInputStream r1;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.IdentityMap: void doReadObject(java.io.ObjectInputStream)>(r1);

        return;
    }

    public volatile org.apache.commons.collections4.map.AbstractHashedMap clone()
    {
        org.apache.commons.collections4.map.IdentityMap r0, $r1;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.IdentityMap: org.apache.commons.collections4.map.IdentityMap clone()>();

        return $r1;
    }

    protected volatile org.apache.commons.collections4.map.AbstractHashedMap$HashEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry, int, java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.IdentityMap r0;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry r1;
        int i0;
        java.lang.Object r2, r3;
        org.apache.commons.collections4.map.IdentityMap$IdentityEntry $r4;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.map.IdentityMap: org.apache.commons.collections4.map.IdentityMap$IdentityEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,java.lang.Object)>(r1, i0, r2, r3);

        return $r4;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.commons.collections4.map.IdentityMap r0, $r1;

        r0 := @this: org.apache.commons.collections4.map.IdentityMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.IdentityMap: org.apache.commons.collections4.map.IdentityMap clone()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.map.IdentityMap: long serialVersionUID> = 2028493495224302329L;

        return;
    }
}
