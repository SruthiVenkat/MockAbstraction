public class org.apache.commons.collections4.map.LinkedMapTest extends org.apache.commons.collections4.map.AbstractOrderedMapTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractOrderedMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.BulkTest: junit.framework.TestSuite makeSuite(java.lang.Class)>(class "Lorg/apache/commons/collections4/map/LinkedMapTest;");

        return $r0;
    }

    public org.apache.commons.collections4.map.LinkedMap makeObject()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = new org.apache.commons.collections4.map.LinkedMap;

        specialinvoke $r1.<org.apache.commons.collections4.map.LinkedMap: void <init>()>();

        return $r1;
    }

    public org.apache.commons.collections4.map.LinkedMap makeFullMap()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.OrderedMap $r1;
        org.apache.commons.collections4.map.LinkedMap $r2;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractOrderedMapTest: org.apache.commons.collections4.OrderedMap makeFullMap()>();

        $r2 = (org.apache.commons.collections4.map.LinkedMap) $r1;

        return $r2;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        return "4";
    }

    public void testReset()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.ResettableIterator r2, $r4;
        org.apache.commons.collections4.OrderedMapIterator $r3, $r7;
        java.util.ArrayList $r5;
        java.util.Set $r6;
        java.lang.Object $r8, $r9, $r10, $r11, $r12, $r13;
        org.apache.commons.collections4.map.LinkedMap r14, r15;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: void resetEmpty()>();

        r14 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

        $r3 = interfaceinvoke r14.<org.apache.commons.collections4.OrderedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

        $r4 = (org.apache.commons.collections4.ResettableIterator) $r3;

        interfaceinvoke $r4.<org.apache.commons.collections4.ResettableIterator: void reset()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: void resetFull()>();

        r15 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

        $r5 = new java.util.ArrayList;

        $r6 = interfaceinvoke r15.<org.apache.commons.collections4.OrderedMap: java.util.Set keySet()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        $r7 = interfaceinvoke r15.<org.apache.commons.collections4.OrderedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

        r2 = (org.apache.commons.collections4.ResettableIterator) $r7;

        $r8 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = interfaceinvoke r2.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r10 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(1);

        $r11 = interfaceinvoke r2.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r10, $r11);

        interfaceinvoke r2.<org.apache.commons.collections4.ResettableIterator: void reset()>();

        $r12 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r13 = interfaceinvoke r2.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r12, $r13);

        return;
    }

    public void testInsertionOrder()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        java.lang.Object[] r1, r2;
        boolean $z0, $z1;
        java.lang.Object $r3, $r4, $r7, $r8, $r13, $r14, $r15, $r16, $r19, $r20, $r21, $r22, $r23, $r24, $r29, $r30, $r31, $r32, $r35, $r36, $r37, $r38, $r39, $r40, $r45, $r46, $r47, $r48, $r51, $r52, $r53, $r54, $r55, $r56, $r61, $r62, $r63, $r64, $r67, $r68, $r69, $r70;
        java.util.Map $r5, $r9, $r11, $r17, $r25, $r27, $r33, $r41, $r43, $r49, $r57, $r59, $r65;
        java.util.Set $r12, $r28, $r44, $r60;
        java.util.Collection $r18, $r34, $r50, $r66;
        java.util.Iterator r71, r72, r73, r74, r75, r76, r77, r78;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: boolean isPutAddSupported()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: boolean isPutChangeSupported()>();

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: java.lang.Object[] getSampleKeys()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: java.lang.Object[] getSampleValues()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: void resetEmpty()>();

        $r5 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r4 = r1[0];

        $r3 = r2[0];

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r9 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r8 = r1[1];

        $r7 = r2[1];

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r11 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>();

        r71 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

        $r13 = r1[0];

        $r14 = interfaceinvoke r71.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r13, $r14);

        $r15 = r1[1];

        $r16 = interfaceinvoke r71.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r15, $r16);

        $r17 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.util.Collection values()>();

        r72 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();

        $r19 = r2[0];

        $r20 = interfaceinvoke r72.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r19, $r20);

        $r21 = r2[1];

        $r22 = interfaceinvoke r72.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r21, $r22);

        $r25 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r24 = r1[1];

        $r23 = r2[1];

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r23);

        $r27 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r28 = interfaceinvoke $r27.<java.util.Map: java.util.Set keySet()>();

        r73 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>();

        $r29 = r1[0];

        $r30 = interfaceinvoke r73.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r29, $r30);

        $r31 = r1[1];

        $r32 = interfaceinvoke r73.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r31, $r32);

        $r33 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r34 = interfaceinvoke $r33.<java.util.Map: java.util.Collection values()>();

        r74 = interfaceinvoke $r34.<java.util.Collection: java.util.Iterator iterator()>();

        $r35 = r2[0];

        $r36 = interfaceinvoke r74.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r35, $r36);

        $r37 = r2[1];

        $r38 = interfaceinvoke r74.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r37, $r38);

        $r41 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r40 = r1[1];

        $r39 = r2[2];

        interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r40, $r39);

        $r43 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r44 = interfaceinvoke $r43.<java.util.Map: java.util.Set keySet()>();

        r75 = interfaceinvoke $r44.<java.util.Set: java.util.Iterator iterator()>();

        $r45 = r1[0];

        $r46 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r45, $r46);

        $r47 = r1[1];

        $r48 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r47, $r48);

        $r49 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r50 = interfaceinvoke $r49.<java.util.Map: java.util.Collection values()>();

        r76 = interfaceinvoke $r50.<java.util.Collection: java.util.Iterator iterator()>();

        $r51 = r2[0];

        $r52 = interfaceinvoke r76.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r51, $r52);

        $r53 = r2[2];

        $r54 = interfaceinvoke r76.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r53, $r54);

        $r57 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r56 = r1[0];

        $r55 = r2[3];

        interfaceinvoke $r57.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r56, $r55);

        $r59 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r60 = interfaceinvoke $r59.<java.util.Map: java.util.Set keySet()>();

        r77 = interfaceinvoke $r60.<java.util.Set: java.util.Iterator iterator()>();

        $r61 = r1[0];

        $r62 = interfaceinvoke r77.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r61, $r62);

        $r63 = r1[1];

        $r64 = interfaceinvoke r77.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r63, $r64);

        $r65 = r0.<org.apache.commons.collections4.map.LinkedMapTest: java.util.Map map>;

        $r66 = interfaceinvoke $r65.<java.util.Map: java.util.Collection values()>();

        r78 = interfaceinvoke $r66.<java.util.Collection: java.util.Iterator iterator()>();

        $r67 = r2[3];

        $r68 = interfaceinvoke r78.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r67, $r68);

        $r69 = r2[2];

        $r70 = interfaceinvoke r78.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r69, $r70);

        return;
    }

    public void testGetByIndex()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.OrderedMapIterator r1;
        int $i0, i1;
        java.lang.Object $r6, $r7;
        java.lang.IndexOutOfBoundsException $r8, $r9, $r10, $r11;
        org.apache.commons.collections4.map.LinkedMap r12, r15;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: void resetEmpty()>();

        r12 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

     label01:
        virtualinvoke r12.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object get(int)>(0);

     label02:
        goto label04;

     label03:
        $r8 := @caughtexception;

     label04:
        virtualinvoke r12.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object get(int)>(-1);

     label05:
        goto label07;

     label06:
        $r11 := @caughtexception;

     label07:
        virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: void resetFull()>();

        r15 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

     label08:
        virtualinvoke r15.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object get(int)>(-1);

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

     label11:
        $i0 = virtualinvoke r15.<org.apache.commons.collections4.map.LinkedMap: int size()>();

        virtualinvoke r15.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object get(int)>($i0);

     label12:
        goto label14;

     label13:
        $r10 := @caughtexception;

     label14:
        i1 = 0;

        r1 = virtualinvoke r15.<org.apache.commons.collections4.map.LinkedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

     label15:
        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r6 = interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        $r7 = virtualinvoke r15.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object get(int)>(i1);

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r6, $r7);

        i1 = i1 + 1;

        goto label15;

     label16:
        return;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label03;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.IndexOutOfBoundsException from label08 to label09 with label10;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label13;
    }

    public void testGetValueByIndex()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.OrderedMapIterator r1;
        int $i0, i1;
        java.lang.Object $r7, $r8;
        java.lang.IndexOutOfBoundsException $r9, $r10, $r11, $r12;
        org.apache.commons.collections4.map.LinkedMap r13, r16;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: void resetEmpty()>();

        r13 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

     label01:
        virtualinvoke r13.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object getValue(int)>(0);

     label02:
        goto label04;

     label03:
        $r12 := @caughtexception;

     label04:
        virtualinvoke r13.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object getValue(int)>(-1);

     label05:
        goto label07;

     label06:
        $r9 := @caughtexception;

     label07:
        virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: void resetFull()>();

        r16 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

     label08:
        virtualinvoke r16.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object getValue(int)>(-1);

     label09:
        goto label11;

     label10:
        $r10 := @caughtexception;

     label11:
        $i0 = virtualinvoke r16.<org.apache.commons.collections4.map.LinkedMap: int size()>();

        virtualinvoke r16.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object getValue(int)>($i0);

     label12:
        goto label14;

     label13:
        $r11 := @caughtexception;

     label14:
        i1 = 0;

        r1 = virtualinvoke r16.<org.apache.commons.collections4.map.LinkedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

     label15:
        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        $r7 = interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: java.lang.Object getValue()>();

        $r8 = virtualinvoke r16.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object getValue(int)>(i1);

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r7, $r8);

        i1 = i1 + 1;

        goto label15;

     label16:
        return;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label03;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.IndexOutOfBoundsException from label08 to label09 with label10;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label13;
    }

    public void testIndexOf()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        java.lang.Object[] $r2;
        int $i0, $i1, $i2, i3;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        org.apache.commons.collections4.map.LinkedMap r6, r7;
        org.apache.commons.collections4.OrderedMapIterator r8;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: void resetEmpty()>();

        r6 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: java.lang.Object[] getOtherKeys()>();

        $i0 = virtualinvoke r6.<org.apache.commons.collections4.map.LinkedMap: int indexOf(java.lang.Object)>($r2);

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertEquals(int,int)>(-1, $i0);

        virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: void resetFull()>();

        r7 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r8 = virtualinvoke r7.<org.apache.commons.collections4.map.LinkedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

     label1:
        $z0 = interfaceinvoke r8.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r8.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        i3 = 0;

     label3:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i3 >= $i1 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        $i2 = virtualinvoke r7.<org.apache.commons.collections4.map.LinkedMap: int indexOf(java.lang.Object)>($r4);

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertEquals(int,int)>(i3, $i2);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public void testRemoveByIndex()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        java.lang.Object r1, r2, $r8, $r10;
        int $i0, $i1, i2;
        java.util.ArrayList $r7;
        boolean $z0, $z2;
        java.lang.IndexOutOfBoundsException $r11, $r12, $r13, $r14;
        org.apache.commons.collections4.map.LinkedMap r15, r18;
        org.apache.commons.collections4.OrderedMapIterator r22;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: void resetEmpty()>();

        r15 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

     label01:
        virtualinvoke r15.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object remove(int)>(0);

     label02:
        goto label04;

     label03:
        $r13 := @caughtexception;

     label04:
        virtualinvoke r15.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object remove(int)>(-1);

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

     label07:
        virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: void resetFull()>();

        r18 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

     label08:
        virtualinvoke r18.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object remove(int)>(-1);

     label09:
        goto label11;

     label10:
        $r11 := @caughtexception;

     label11:
        $i0 = virtualinvoke r18.<org.apache.commons.collections4.map.LinkedMap: int size()>();

        virtualinvoke r18.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object remove(int)>($i0);

     label12:
        goto label14;

     label13:
        $r14 := @caughtexception;

     label14:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r22 = virtualinvoke r18.<org.apache.commons.collections4.map.LinkedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

     label15:
        $z2 = interfaceinvoke r22.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        $r10 = interfaceinvoke r22.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label15;

     label16:
        i2 = 0;

     label17:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i2 >= $i1 goto label18;

        r1 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = virtualinvoke r18.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = virtualinvoke r18.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object remove(int)>(i2);

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r8);

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i2);

        $z0 = virtualinvoke r18.<org.apache.commons.collections4.map.LinkedMap: boolean containsKey(java.lang.Object)>(r1);

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertEquals(boolean,boolean)>(0, $z0);

        i2 = i2 + 1;

        goto label17;

     label18:
        return;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label03;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.IndexOutOfBoundsException from label08 to label09 with label10;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label13;
    }

    public org.apache.commons.collections4.BulkTest bulkTestListView()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMapTest$TestListView $r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = new org.apache.commons.collections4.map.LinkedMapTest$TestListView;

        specialinvoke $r1.<org.apache.commons.collections4.map.LinkedMapTest$TestListView: void <init>(org.apache.commons.collections4.map.LinkedMapTest)>(r0);

        return $r1;
    }

    public void testClone()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap r2, $r3;
        int $i0, $i1;
        java.lang.Object $r5, $r6;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r3 = new org.apache.commons.collections4.map.LinkedMap;

        specialinvoke $r3.<org.apache.commons.collections4.map.LinkedMap: void <init>(int)>(10);

        virtualinvoke $r3.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("1", "1");

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.LinkedMap: org.apache.commons.collections4.map.LinkedMap clone()>();

        $i0 = virtualinvoke $r3.<org.apache.commons.collections4.map.LinkedMap: int size()>();

        $i1 = interfaceinvoke r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertEquals(int,int)>($i0, $i1);

        $r5 = virtualinvoke $r3.<org.apache.commons.collections4.map.LinkedMap: java.lang.Object get(java.lang.Object)>("1");

        $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("1");

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r5, $r6);

        return;
    }

    public org.apache.commons.collections4.map.LinkedMap getMap()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.OrderedMap $r1;
        org.apache.commons.collections4.map.LinkedMap $r2;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractOrderedMapTest: org.apache.commons.collections4.OrderedMap getMap()>();

        $r2 = (org.apache.commons.collections4.map.LinkedMap) $r1;

        return $r2;
    }

    public void testInitialCapacityZero()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap $r2;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry[] $r3;
        int $i0;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r2 = new org.apache.commons.collections4.map.LinkedMap;

        specialinvoke $r2.<org.apache.commons.collections4.map.LinkedMap: void <init>(int)>(0);

        $r3 = $r2.<org.apache.commons.collections4.map.LinkedMap: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry[] data>;

        $i0 = lengthof $r3;

        staticinvoke <org.apache.commons.collections4.map.LinkedMapTest: void assertEquals(int,int)>(1, $i0);

        return;
    }

    public volatile org.apache.commons.collections4.OrderedMap getMap()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.OrderedMap makeFullMap()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap makeFullMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.OrderedMap makeObject()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap makeObject()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.IterableMap getMap()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.IterableMap makeFullMap()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap makeFullMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.IterableMap makeObject()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap makeObject()>();

        return $r1;
    }

    public volatile java.util.Map getMap()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap getMap()>();

        return $r1;
    }

    public volatile java.util.Map makeFullMap()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap makeFullMap()>();

        return $r1;
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.LinkedMapTest r0;
        org.apache.commons.collections4.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LinkedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LinkedMapTest: org.apache.commons.collections4.map.LinkedMap makeObject()>();

        return $r1;
    }
}
