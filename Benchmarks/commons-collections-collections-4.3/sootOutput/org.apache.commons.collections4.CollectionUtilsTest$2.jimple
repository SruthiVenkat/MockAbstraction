class org.apache.commons.collections4.CollectionUtilsTest$2 extends java.lang.Object implements org.apache.commons.collections4.Equator
{
    final org.apache.commons.collections4.CollectionUtilsTest this$0;

    void <init>(org.apache.commons.collections4.CollectionUtilsTest)
    {
        org.apache.commons.collections4.CollectionUtilsTest$2 r0;
        org.apache.commons.collections4.CollectionUtilsTest r1;

        r0 := @this: org.apache.commons.collections4.CollectionUtilsTest$2;

        r1 := @parameter0: org.apache.commons.collections4.CollectionUtilsTest;

        r0.<org.apache.commons.collections4.CollectionUtilsTest$2: org.apache.commons.collections4.CollectionUtilsTest this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equate(java.lang.Integer, java.lang.Integer)
    {
        org.apache.commons.collections4.CollectionUtilsTest$2 r0;
        java.lang.Integer r1, r2;
        int $i0, $i1, $i2, $i3;
        boolean $z2, $z3, $z4;

        r0 := @this: org.apache.commons.collections4.CollectionUtilsTest$2;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.Integer;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i1 = $i0 % 2;

        if $i1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i3 = $i2 % 2;

        if $i3 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        $z4 = $z2 ^ $z3;

        if $z4 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public int hash(java.lang.Integer)
    {
        org.apache.commons.collections4.CollectionUtilsTest$2 r0;
        java.lang.Integer r1, $r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections4.CollectionUtilsTest$2;

        r1 := @parameter0: java.lang.Integer;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i1 = $i0 % 2;

        if $i1 != 0 goto label1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $i2 = virtualinvoke $r3.<java.lang.Integer: int hashCode()>();

        goto label2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $i2 = virtualinvoke $r2.<java.lang.Integer: int hashCode()>();

     label2:
        return $i2;
    }

    public volatile int hash(java.lang.Object)
    {
        org.apache.commons.collections4.CollectionUtilsTest$2 r0;
        java.lang.Object r1;
        java.lang.Integer $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.CollectionUtilsTest$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Integer) r1;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest$2: int hash(java.lang.Integer)>($r2);

        return $i0;
    }

    public volatile boolean equate(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.CollectionUtilsTest$2 r0;
        java.lang.Object r1, r2;
        java.lang.Integer $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.CollectionUtilsTest$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Integer) r1;

        $r3 = (java.lang.Integer) r2;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest$2: boolean equate(java.lang.Integer,java.lang.Integer)>($r4, $r3);

        return $z0;
    }
}
