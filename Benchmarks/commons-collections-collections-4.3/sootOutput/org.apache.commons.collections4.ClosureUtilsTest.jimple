public class org.apache.commons.collections4.ClosureUtilsTest extends java.lang.Object
{
    private static final java.lang.Object cString;

    public void <init>()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testExceptionClosure()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;
        org.apache.commons.collections4.Closure $r3, $r4, $r5, $r6, $r8;
        org.apache.commons.collections4.FunctorException $r7, $r10;
        java.lang.Object $r9;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        $r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure exceptionClosure()>();

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r3);

        $r4 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure exceptionClosure()>();

        $r5 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure exceptionClosure()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r4, $r5);

     label1:
        $r6 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure exceptionClosure()>();

        interfaceinvoke $r6.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

     label2:
        goto label7;

     label3:
        $r7 := @caughtexception;

     label4:
        $r8 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure exceptionClosure()>();

        $r9 = <org.apache.commons.collections4.ClosureUtilsTest: java.lang.Object cString>;

        interfaceinvoke $r8.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>($r9);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        return;

     label7:
        staticinvoke <org.junit.Assert: void fail()>();

        return;

        catch org.apache.commons.collections4.FunctorException from label1 to label2 with label3;
        catch org.apache.commons.collections4.FunctorException from label4 to label5 with label6;
    }

    public void testNopClosure()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;
        java.lang.StringBuilder $r2;
        org.apache.commons.collections4.Closure $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Hello");

        $r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>();

        interfaceinvoke $r3.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Hello", $r4);

        $r5 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>();

        interfaceinvoke $r5.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("Hello");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Hello", $r6);

        return;
    }

    public void testInvokeClosure()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;
        java.lang.StringBuffer $r1, $r4;
        org.apache.commons.collections4.Closure $r2, $r9;
        java.lang.String $r3, $r10;
        java.lang.Class[] $r5;
        java.lang.Class $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("Hello");

        $r2 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("reverse");

        interfaceinvoke $r2.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("olleH", $r3);

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("Hello");

        $r5 = newarray (java.lang.Class)[1];

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5[0] = $r6;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r7[0] = $r8;

        $r9 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String,java.lang.Class[],java.lang.Object[])>("setLength", $r5, $r7);

        interfaceinvoke $r9.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>($r4);

        $r10 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("He", $r10);

        return;
    }

    public void testForClosure()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;
        org.apache.commons.collections4.ClosureUtilsTest$MockClosure $r2, $r4, $r7;
        org.apache.commons.collections4.Closure $r3, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        $r2 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(5, $r2);

        interfaceinvoke $r3.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i0 = $r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(5L, $l1);

        $r5 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>;

        $r4 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r4.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r6 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(0, $r4);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r8 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>;

        $r7 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r7.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r9 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(-1, $r7);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r10 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>;

        $r11 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(1, null);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r10, $r11);

        $r12 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>;

        $r13 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(3, null);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r12, $r13);

        $r14 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(1, $r2);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r14);

        return;
    }

    public void testWhileClosure()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;
        org.apache.commons.collections4.ClosureUtilsTest$MockClosure $r1, $r4;
        org.apache.commons.collections4.Predicate $r2, $r5, $r9;
        org.apache.commons.collections4.Closure $r3, $r6, $r7;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.NullPointerException $r12, $r13, $r14;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        $r1 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>();

        $r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>($r2, $r1);

        interfaceinvoke $r3.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i0 = $r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        $r4 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r4.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r5 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate uniquePredicate()>();

        $r6 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>($r5, $r4);

        interfaceinvoke $r6.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i2 = $r4.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3);

     label01:
        $r7 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>();

        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>(null, $r7);

        staticinvoke <org.junit.Assert: void fail()>();

     label02:
        goto label04;

     label03:
        $r14 := @caughtexception;

     label04:
        $r9 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>();

        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>($r9, null);

        staticinvoke <org.junit.Assert: void fail()>();

     label05:
        goto label07;

     label06:
        $r13 := @caughtexception;

     label07:
        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>(null, null);

        staticinvoke <org.junit.Assert: void fail()>();

     label08:
        goto label10;

     label09:
        $r12 := @caughtexception;

     label10:
        return;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NullPointerException from label04 to label05 with label06;
        catch java.lang.NullPointerException from label07 to label08 with label09;
    }

    public void testDoWhileClosure()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;
        org.apache.commons.collections4.ClosureUtilsTest$MockClosure $r2, $r5;
        org.apache.commons.collections4.Predicate $r3, $r6;
        org.apache.commons.collections4.Closure $r4, $r7;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.NullPointerException $r9;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        $r2 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r3 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>();

        $r4 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure doWhileClosure(org.apache.commons.collections4.Closure,org.apache.commons.collections4.Predicate)>($r2, $r3);

        interfaceinvoke $r4.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i0 = $r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1);

        $r5 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r6 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate uniquePredicate()>();

        $r7 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure doWhileClosure(org.apache.commons.collections4.Closure,org.apache.commons.collections4.Predicate)>($r5, $r6);

        interfaceinvoke $r7.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i2 = $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3);

     label1:
        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure doWhileClosure(org.apache.commons.collections4.Closure,org.apache.commons.collections4.Predicate)>(null, null);

        staticinvoke <org.junit.Assert: void fail()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void testChainedClosure()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;
        org.apache.commons.collections4.ClosureUtilsTest$MockClosure $r1, $r2, $r5, $r6, $r9, $r10;
        org.apache.commons.collections4.Closure[] $r3, $r7, $r13, $r19, $r21, $r25;
        org.apache.commons.collections4.Closure $r4, $r8, $r12, $r14, $r15, $r16, $r18;
        int $i0, $i2, $i4, $i6, $i8, $i10;
        long $l1, $l3, $l5, $l7, $l9, $l11;
        java.util.ArrayList $r11, $r27;
        java.util.List $r17;
        java.util.Collection $r23;
        java.lang.NullPointerException $r29, $r30, $r31, $r32, $r33;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        $r1 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r2 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r3 = newarray (org.apache.commons.collections4.Closure)[2];

        $r3[0] = $r1;

        $r3[1] = $r2;

        $r4 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>($r3);

        interfaceinvoke $r4.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i0 = $r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1);

        $i2 = $r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3);

        $r5 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r6 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r7 = newarray (org.apache.commons.collections4.Closure)[3];

        $r7[0] = $r5;

        $r7[1] = $r6;

        $r7[2] = $r5;

        $r8 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>($r7);

        interfaceinvoke $r8.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i4 = $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l5);

        $i6 = $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l7);

        $r9 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r9.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r10 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r10.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r11.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        interfaceinvoke $r11.<java.util.Collection: boolean add(java.lang.Object)>($r9);

        interfaceinvoke $r11.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        $r12 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(java.util.Collection)>($r11);

        interfaceinvoke $r12.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i8 = $r9.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l9);

        $i10 = $r10.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l11);

        $r14 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>;

        $r13 = newarray (org.apache.commons.collections4.Closure)[0];

        $r15 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>($r13);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r14, $r15);

        $r16 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>;

        $r17 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r18 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(java.util.Collection)>($r17);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r16, $r18);

     label01:
        $r19 = newarray (org.apache.commons.collections4.Closure)[2];

        $r19[0] = null;

        $r19[1] = null;

        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>($r19);

        staticinvoke <org.junit.Assert: void fail()>();

     label02:
        goto label04;

     label03:
        $r31 := @caughtexception;

     label04:
        $r21 = (org.apache.commons.collections4.Closure[]) null;

        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>($r21);

        staticinvoke <org.junit.Assert: void fail()>();

     label05:
        goto label07;

     label06:
        $r33 := @caughtexception;

     label07:
        $r23 = (java.util.Collection) null;

        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(java.util.Collection)>($r23);

        staticinvoke <org.junit.Assert: void fail()>();

     label08:
        goto label10;

     label09:
        $r32 := @caughtexception;

     label10:
        $r25 = newarray (org.apache.commons.collections4.Closure)[2];

        $r25[0] = null;

        $r25[1] = null;

        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>($r25);

        staticinvoke <org.junit.Assert: void fail()>();

     label11:
        goto label13;

     label12:
        $r30 := @caughtexception;

     label13:
        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r27.<java.util.Collection: boolean add(java.lang.Object)>(null);

        interfaceinvoke $r27.<java.util.Collection: boolean add(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(java.util.Collection)>($r27);

        staticinvoke <org.junit.Assert: void fail()>();

     label14:
        goto label16;

     label15:
        $r29 := @caughtexception;

     label16:
        return;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NullPointerException from label04 to label05 with label06;
        catch java.lang.NullPointerException from label07 to label08 with label09;
        catch java.lang.NullPointerException from label10 to label11 with label12;
        catch java.lang.NullPointerException from label13 to label14 with label15;
    }

    public void testIfClosure()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;
        org.apache.commons.collections4.ClosureUtilsTest$MockClosure $r1, $r4, $r7, $r8, $r11, $r12;
        org.apache.commons.collections4.Predicate $r2, $r5, $r9, $r13;
        org.apache.commons.collections4.Closure $r3, $r6, $r10, $r14;
        int $i0, $i2, $i4, $i6, $i8, $i10;
        long $l1, $l3, $l5, $l7, $l9, $l11;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        $r1 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        $r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>($r2, $r1);

        interfaceinvoke $r3.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i0 = $r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1);

        $r4 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r4.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r5 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>();

        $r6 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>($r5, $r4);

        interfaceinvoke $r6.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i2 = $r4.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3);

        $r7 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r7.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r8 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r8.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r9 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        $r10 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)>($r9, $r7, $r8);

        interfaceinvoke $r10.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i4 = $r7.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5);

        $i6 = $r8.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l7);

        $r11 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r11.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r12 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r12.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r13 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>();

        $r14 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)>($r13, $r11, $r12);

        interfaceinvoke $r14.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i8 = $r11.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9);

        $i10 = $r12.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l11);

        return;
    }

    public void testSwitchClosure()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;
        org.apache.commons.collections4.ClosureUtilsTest$MockClosure $r5, $r6, $r17;
        org.apache.commons.collections4.Predicate[] $r7, $r12, $r18, $r41, $r52, $r57, $r59;
        org.apache.commons.collections4.Predicate $r8, $r9, $r13, $r14, $r19, $r20, $r24, $r26, $r29, $r31, $r34, $r36, $r60;
        org.apache.commons.collections4.Closure[] $r10, $r15, $r21, $r40, $r51, $r56, $r61;
        org.apache.commons.collections4.Closure $r11, $r16, $r22, $r28, $r33, $r39, $r42, $r43, $r45, $r46, $r48, $r49;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i18, $i20, $i22, $i24, $i26;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15, $l17, $l19, $l21, $l23, $l25, $l27;
        java.util.HashMap $r23, $r44;
        java.util.Map $r54;
        java.lang.NullPointerException $r63, $r64, $r66, $r67;
        java.lang.IllegalArgumentException $r65;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        $r5 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r6 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r7 = newarray (org.apache.commons.collections4.Predicate)[2];

        $r8 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO");

        $r7[0] = $r8;

        $r9 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE");

        $r7[1] = $r9;

        $r10 = newarray (org.apache.commons.collections4.Closure)[2];

        $r10[0] = $r5;

        $r10[1] = $r6;

        $r11 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>($r7, $r10);

        interfaceinvoke $r11.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("WELL");

        $i0 = $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        $i2 = $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3);

        virtualinvoke $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        virtualinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        $r12 = newarray (org.apache.commons.collections4.Predicate)[2];

        $r13 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO");

        $r12[0] = $r13;

        $r14 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE");

        $r12[1] = $r14;

        $r15 = newarray (org.apache.commons.collections4.Closure)[2];

        $r15[0] = $r5;

        $r15[1] = $r6;

        $r16 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>($r12, $r15);

        interfaceinvoke $r16.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("HELLO");

        $i4 = $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5);

        $i6 = $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l7);

        virtualinvoke $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        virtualinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        $r17 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r17.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r18 = newarray (org.apache.commons.collections4.Predicate)[2];

        $r19 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO");

        $r18[0] = $r19;

        $r20 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE");

        $r18[1] = $r20;

        $r21 = newarray (org.apache.commons.collections4.Closure)[2];

        $r21[0] = $r5;

        $r21[1] = $r6;

        $r22 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)>($r18, $r21, $r17);

        interfaceinvoke $r22.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("WELL");

        $i8 = $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9);

        $i10 = $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l11);

        $i12 = $r17.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l13 = (long) $i12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l13);

        virtualinvoke $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        virtualinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        $r24 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO");

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r5);

        $r26 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE");

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r6);

        $r28 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>($r23);

        interfaceinvoke $r28.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i14 = $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l15 = (long) $i14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l15);

        $i16 = $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l17 = (long) $i16;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l17);

        virtualinvoke $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        virtualinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        interfaceinvoke $r23.<java.util.Map: void clear()>();

        $r29 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO");

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r5);

        $r31 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE");

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r6);

        $r33 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>($r23);

        interfaceinvoke $r33.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("THERE");

        $i18 = $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l19 = (long) $i18;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l19);

        $i20 = $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l21 = (long) $i20;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l21);

        virtualinvoke $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        virtualinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        virtualinvoke $r17.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        interfaceinvoke $r23.<java.util.Map: void clear()>();

        $r34 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO");

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r5);

        $r36 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE");

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r6);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r17);

        $r39 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>($r23);

        interfaceinvoke $r39.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("WELL");

        $i22 = $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l23 = (long) $i22;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l23);

        $i24 = $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l25 = (long) $i24;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l25);

        $i26 = $r17.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l27 = (long) $i26;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l27);

        $r42 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>;

        $r41 = newarray (org.apache.commons.collections4.Predicate)[0];

        $r40 = newarray (org.apache.commons.collections4.Closure)[0];

        $r43 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>($r41, $r40);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r43);

        $r45 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>;

        $r44 = new java.util.HashMap;

        specialinvoke $r44.<java.util.HashMap: void <init>()>();

        $r46 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>($r44);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r45, $r46);

        interfaceinvoke $r23.<java.util.Map: void clear()>();

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, null);

        $r48 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>;

        $r49 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>($r23);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r48, $r49);

     label01:
        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>(null, null);

        staticinvoke <org.junit.Assert: void fail()>();

     label02:
        goto label04;

     label03:
        $r63 := @caughtexception;

     label04:
        $r52 = (org.apache.commons.collections4.Predicate[]) null;

        $r51 = (org.apache.commons.collections4.Closure[]) null;

        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>($r52, $r51);

        staticinvoke <org.junit.Assert: void fail()>();

     label05:
        goto label07;

     label06:
        $r67 := @caughtexception;

     label07:
        $r54 = (java.util.Map) null;

        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>($r54);

        staticinvoke <org.junit.Assert: void fail()>();

     label08:
        goto label10;

     label09:
        $r66 := @caughtexception;

     label10:
        $r57 = newarray (org.apache.commons.collections4.Predicate)[2];

        $r56 = newarray (org.apache.commons.collections4.Closure)[2];

        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>($r57, $r56);

        staticinvoke <org.junit.Assert: void fail()>();

     label11:
        goto label13;

     label12:
        $r64 := @caughtexception;

     label13:
        $r59 = newarray (org.apache.commons.collections4.Predicate)[1];

        $r60 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        $r59[0] = $r60;

        $r61 = newarray (org.apache.commons.collections4.Closure)[2];

        $r61[0] = $r5;

        $r61[1] = $r6;

        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>($r59, $r61);

        staticinvoke <org.junit.Assert: void fail()>();

     label14:
        goto label16;

     label15:
        $r65 := @caughtexception;

     label16:
        return;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NullPointerException from label04 to label05 with label06;
        catch java.lang.NullPointerException from label07 to label08 with label09;
        catch java.lang.NullPointerException from label10 to label11 with label12;
        catch java.lang.IllegalArgumentException from label13 to label14 with label15;
    }

    public void testSwitchMapClosure()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;
        org.apache.commons.collections4.ClosureUtilsTest$MockClosure $r6, $r7, $r15;
        java.util.HashMap $r8, $r20;
        org.apache.commons.collections4.Closure $r11, $r14, $r19, $r21, $r22;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13;
        java.lang.NullPointerException $r24;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        $r6 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r7 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r7.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HELLO", $r6);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("THERE", $r7);

        $r11 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchMapClosure(java.util.Map)>($r8);

        interfaceinvoke $r11.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i0 = $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        $i2 = $r7.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3);

        virtualinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        virtualinvoke $r7.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        interfaceinvoke $r8.<java.util.Map: void clear()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HELLO", $r6);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("THERE", $r7);

        $r14 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchMapClosure(java.util.Map)>($r8);

        interfaceinvoke $r14.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("THERE");

        $i4 = $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l5);

        $i6 = $r7.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l7);

        virtualinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        virtualinvoke $r7.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>();

        interfaceinvoke $r8.<java.util.Map: void clear()>();

        $r15 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure;

        specialinvoke $r15.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HELLO", $r6);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("THERE", $r7);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r15);

        $r19 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchMapClosure(java.util.Map)>($r8);

        interfaceinvoke $r19.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("WELL");

        $i8 = $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9);

        $i10 = $r7.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l11);

        $i12 = $r15.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>;

        $l13 = (long) $i12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l13);

        $r21 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>;

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        $r22 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchMapClosure(java.util.Map)>($r20);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22);

     label1:
        staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchMapClosure(java.util.Map)>(null);

        staticinvoke <org.junit.Assert: void fail()>();

     label2:
        goto label4;

     label3:
        $r24 := @caughtexception;

     label4:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void testTransformerClosure()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;
        org.apache.commons.collections4.Closure r2, $r4, $r5;
        org.apache.commons.collections4.ClosureUtilsTest$MockTransformer $r3;
        int $i0, $i2;
        long $l1, $l3;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        $r3 = new org.apache.commons.collections4.ClosureUtilsTest$MockTransformer;

        specialinvoke $r3.<org.apache.commons.collections4.ClosureUtilsTest$MockTransformer: void <init>()>();

        r2 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure asClosure(org.apache.commons.collections4.Transformer)>($r3);

        interfaceinvoke r2.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i0 = $r3.<org.apache.commons.collections4.ClosureUtilsTest$MockTransformer: int count>;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1);

        interfaceinvoke r2.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null);

        $i2 = $r3.<org.apache.commons.collections4.ClosureUtilsTest$MockTransformer: int count>;

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3);

        $r4 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>();

        $r5 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure asClosure(org.apache.commons.collections4.Transformer)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r5);

        return;
    }

    public void testSingletonPatternInSerialization()
    {
        org.apache.commons.collections4.ClosureUtilsTest r0;
        int i0, i1;
        java.lang.Object r3;
        java.lang.Object[] $r4;
        org.apache.commons.collections4.Closure $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.Class $r9;
        java.lang.String $r11;

        r0 := @this: org.apache.commons.collections4.ClosureUtilsTest;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = <org.apache.commons.collections4.functors.ExceptionClosure: org.apache.commons.collections4.Closure INSTANCE>;

        $r4[0] = $r5;

        $r6 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>;

        $r4[1] = $r6;

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = $r4[i1];

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Singletone patern broken for ");

        $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.collections4.TestUtils: void assertSameAfterSerialization(java.lang.String,java.lang.Object)>($r11, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        <org.apache.commons.collections4.ClosureUtilsTest: java.lang.Object cString> = "Hello";

        <org.apache.commons.collections4.ClosureUtilsTest: java.lang.Object cString> = "Hello";

        return;
    }
}
