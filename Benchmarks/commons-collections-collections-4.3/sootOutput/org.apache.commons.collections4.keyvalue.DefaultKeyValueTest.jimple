public class org.apache.commons.collections4.keyvalue.DefaultKeyValueTest extends java.lang.Object
{
    private final java.lang.String key;
    private final java.lang.String value;

    public void <init>()
    {
        org.apache.commons.collections4.keyvalue.DefaultKeyValueTest r0;

        r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: java.lang.String value> = "duke";

        r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: java.lang.String key> = "name";

        r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: java.lang.String key> = "name";

        r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: java.lang.String value> = "duke";

        return;
    }

    protected org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue()
    {
        org.apache.commons.collections4.keyvalue.DefaultKeyValueTest r0;
        org.apache.commons.collections4.keyvalue.DefaultKeyValue $r1;

        r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest;

        $r1 = new org.apache.commons.collections4.keyvalue.DefaultKeyValue;

        specialinvoke $r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: void <init>(java.lang.Object,java.lang.Object)>(null, null);

        return $r1;
    }

    protected org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.keyvalue.DefaultKeyValueTest r0;
        java.lang.Object r1, r2;
        org.apache.commons.collections4.keyvalue.DefaultKeyValue $r3;

        r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = new org.apache.commons.collections4.keyvalue.DefaultKeyValue;

        specialinvoke $r3.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: void <init>(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public void testAccessorsAndMutators()
    {
        org.apache.commons.collections4.keyvalue.DefaultKeyValueTest r0;
        org.apache.commons.collections4.keyvalue.DefaultKeyValue r1;
        java.lang.Object $r3, $r5, $r7, $r9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue()>();

        virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setKey(java.lang.Object)>("name");

        $r3 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>();

        if $r3 != "name" goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setValue(java.lang.Object)>("duke");

        $r5 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        if $r5 != "duke" goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setKey(java.lang.Object)>(null);

        $r7 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>();

        if $r7 != null goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setValue(java.lang.Object)>(null);

        $r9 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        if $r9 != null goto label7;

        $z3 = 1;

        goto label8;

     label7:
        $z3 = 0;

     label8:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        return;
    }

    public void testSelfReferenceHandling()
    {
        org.apache.commons.collections4.keyvalue.DefaultKeyValueTest r0;
        org.apache.commons.collections4.keyvalue.DefaultKeyValue r1;
        java.lang.IllegalArgumentException $r4, $r7;
        java.lang.Object $r5, $r6, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue()>();

     label01:
        virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setKey(java.lang.Object)>(r1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Should throw an IllegalArgumentException");

     label02:
        goto label06;

     label03:
        $r7 := @caughtexception;

        $r8 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>();

        if $r8 != null goto label04;

        $r9 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        if $r9 != null goto label04;

        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

     label06:
        virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setValue(java.lang.Object)>(r1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Should throw an IllegalArgumentException");

     label07:
        goto label11;

     label08:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>();

        if $r5 != null goto label09;

        $r6 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        if $r6 != null goto label09;

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

     label11:
        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
    }

    public void testConstructors()
    {
        org.apache.commons.collections4.keyvalue.DefaultKeyValueTest r0;
        java.util.Map$Entry r3;
        org.apache.commons.collections4.keyvalue.DefaultKeyValue $r4, $r16, $r19, $r26;
        java.lang.Object $r5, $r10, $r11, $r12, $r13, $r14, $r18, $r20, $r21, $r25, $r28, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.HashMap $r22;
        java.util.Set $r23;
        java.util.Iterator $r24;

        r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest;

        $r4 = new org.apache.commons.collections4.keyvalue.DefaultKeyValue;

        specialinvoke $r4.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: void <init>()>();

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>();

        if $r5 != null goto label01;

        $r14 = virtualinvoke $r4.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        if $r14 != null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r16 = new org.apache.commons.collections4.keyvalue.DefaultKeyValue;

        specialinvoke $r16.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: void <init>(java.lang.Object,java.lang.Object)>("name", "duke");

        $r18 = virtualinvoke $r16.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>();

        if $r18 != "name" goto label03;

        $r13 = virtualinvoke $r16.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        if $r13 != "duke" goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r19 = new org.apache.commons.collections4.keyvalue.DefaultKeyValue;

        specialinvoke $r19.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: void <init>(org.apache.commons.collections4.KeyValue)>($r16);

        $r20 = virtualinvoke $r19.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>();

        if $r20 != "name" goto label05;

        $r12 = virtualinvoke $r19.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        if $r12 != "duke" goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        virtualinvoke $r16.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setKey(java.lang.Object)>(null);

        virtualinvoke $r16.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setValue(java.lang.Object)>(null);

        $r21 = virtualinvoke $r19.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>();

        if $r21 != "name" goto label07;

        $r11 = virtualinvoke $r19.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        if $r11 != "duke" goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r22 = new java.util.HashMap;

        specialinvoke $r22.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", "duke");

        $r23 = interfaceinvoke $r22.<java.util.Map: java.util.Set entrySet()>();

        $r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

        $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r25;

        $r26 = new org.apache.commons.collections4.keyvalue.DefaultKeyValue;

        specialinvoke $r26.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: void <init>(java.util.Map$Entry)>(r3);

        $r28 = virtualinvoke $r26.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>();

        if $r28 != "name" goto label09;

        $r10 = virtualinvoke $r26.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        if $r10 != "duke" goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);

        $r29 = virtualinvoke $r26.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        if $r29 != "duke" goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        return;
    }

    public void testEqualsAndHashCode()
    {
        org.apache.commons.collections4.keyvalue.DefaultKeyValueTest r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.collections4.keyvalue.DefaultKeyValue r1, r2, r3, r4;

        r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>("name", "duke");

        r2 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>("name", "duke");

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: boolean equals(java.lang.Object)>(r1);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: boolean equals(java.lang.Object)>(r2);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: int hashCode()>();

        $i1 = virtualinvoke r2.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: int hashCode()>();

        if $i0 != $i1 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        r3 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>(null, null);

        r4 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>(null, null);

        $z2 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: boolean equals(java.lang.Object)>(r3);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $z3 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: boolean equals(java.lang.Object)>(r4);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $i2 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: int hashCode()>();

        $i3 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: int hashCode()>();

        if $i2 != $i3 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        return;
    }

    public void testToString()
    {
        org.apache.commons.collections4.keyvalue.DefaultKeyValueTest r0;
        java.lang.String $r1, $r8, $r9, $r16;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r10, $r12, $r13, $r15;
        java.lang.Object $r3, $r6, $r11, $r14;
        boolean $z0, $z1;
        org.apache.commons.collections4.keyvalue.DefaultKeyValue r17, r18;

        r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest;

        r17 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>("name", "duke");

        $r1 = virtualinvoke r17.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r17.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r6 = virtualinvoke r17.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        r18 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>(null, null);

        $r9 = virtualinvoke r18.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.String toString()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r18.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r14 = virtualinvoke r18.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        return;
    }

    public void testToMapEntry()
    {
        org.apache.commons.collections4.keyvalue.DefaultKeyValueTest r0;
        org.apache.commons.collections4.keyvalue.DefaultKeyValue r1;
        java.util.Map$Entry r3, $r11;
        java.util.HashMap $r4;
        java.lang.Object $r5, $r6, $r10;
        java.util.Set $r8;
        java.util.Iterator $r9;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>("name", "duke");

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>();

        $r6 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r8 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r10;

        $r11 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.util.Map$Entry toMapEntry()>();

        $z0 = interfaceinvoke r3.<java.util.Map$Entry: boolean equals(java.lang.Object)>($r11);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $i0 = interfaceinvoke r3.<java.util.Map$Entry: int hashCode()>();

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: int hashCode()>();

        if $i0 != $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        return;
    }
}
