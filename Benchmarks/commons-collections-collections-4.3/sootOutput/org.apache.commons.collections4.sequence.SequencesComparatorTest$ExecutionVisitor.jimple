class org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor extends java.lang.Object implements org.apache.commons.collections4.sequence.CommandVisitor
{
    private java.util.List v;
    private int index;
    final org.apache.commons.collections4.sequence.SequencesComparatorTest this$0;

    private void <init>(org.apache.commons.collections4.sequence.SequencesComparatorTest)
    {
        org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor r0;
        org.apache.commons.collections4.sequence.SequencesComparatorTest r1;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor;

        r1 := @parameter0: org.apache.commons.collections4.sequence.SequencesComparatorTest;

        r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: org.apache.commons.collections4.sequence.SequencesComparatorTest this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setList(java.util.List)
    {
        org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor r0;
        java.util.List r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor;

        r1 := @parameter0: java.util.List;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: java.util.List v> = $r2;

        r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: int index> = 0;

        return;
    }

    public void visitInsertCommand(java.lang.Object)
    {
        org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor r0;
        java.lang.Object r1;
        int $i0, $i1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: java.util.List v>;

        $i0 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: int index>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: int index> = $i1;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>($i0, r1);

        return;
    }

    public void visitKeepCommand(java.lang.Object)
    {
        org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor r0;
        java.lang.Object r1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: int index>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: int index> = $i1;

        return;
    }

    public void visitDeleteCommand(java.lang.Object)
    {
        org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor r0;
        java.lang.Object r1;
        int $i0;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: java.util.List v>;

        $i0 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: int index>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i0);

        return;
    }

    public java.lang.String getString()
    {
        org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor r0;
        java.util.Iterator r2;
        java.lang.Object r3;
        java.lang.StringBuilder $r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.String $r6;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: java.util.List v>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        goto label1;

     label2:
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    void <init>(org.apache.commons.collections4.sequence.SequencesComparatorTest, org.apache.commons.collections4.sequence.SequencesComparatorTest$1)
    {
        org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor r0;
        org.apache.commons.collections4.sequence.SequencesComparatorTest r1;
        org.apache.commons.collections4.sequence.SequencesComparatorTest$1 r2;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor;

        r1 := @parameter0: org.apache.commons.collections4.sequence.SequencesComparatorTest;

        r2 := @parameter1: org.apache.commons.collections4.sequence.SequencesComparatorTest$1;

        specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: void <init>(org.apache.commons.collections4.sequence.SequencesComparatorTest)>(r1);

        return;
    }
}
