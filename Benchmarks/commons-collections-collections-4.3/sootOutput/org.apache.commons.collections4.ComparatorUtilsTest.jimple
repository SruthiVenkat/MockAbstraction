public class org.apache.commons.collections4.ComparatorUtilsTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.collections4.ComparatorUtilsTest r0;

        r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void booleanComparator()
    {
        org.apache.commons.collections4.ComparatorUtilsTest r0;
        java.lang.Boolean $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.Comparator r13, r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest;

        r13 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator booleanComparator(boolean)>(1);

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $i0 = interfaceinvoke r13.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $i0 >= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $i1 = interfaceinvoke r13.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $i1 != 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r6 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $i2 = interfaceinvoke r13.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $i2 <= 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        r14 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator booleanComparator(boolean)>(0);

        $r8 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r7 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $i3 = interfaceinvoke r14.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $i3 <= 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r9 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $i4 = interfaceinvoke r14.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $i4 != 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r11 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $i5 = interfaceinvoke r14.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r12, $r11);

        if $i5 >= 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        return;
    }

    public void chainedComparator()
    {
        org.apache.commons.collections4.ComparatorUtilsTest r0;
        java.util.Comparator r1, $r3, $r4;
        java.util.Comparator[] $r2;
        java.lang.Integer $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest;

        $r2 = newarray (java.util.Comparator)[2];

        $r3 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator naturalComparator()>();

        $r2[0] = $r3;

        $r4 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator naturalComparator()>();

        $r2[1] = $r4;

        r1 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator chainedComparator(java.util.Comparator[])>($r2);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $i0 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $i1 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $i1 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $i2 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r9, $r10);

        if $i2 <= 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        return;
    }

    public void max()
    {
        org.apache.commons.collections4.ComparatorUtilsTest r0;
        java.util.Comparator r1, $r2;
        java.lang.Integer $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r17, $r19, $r21;
        java.lang.Object $r6, $r10, $r14, $r18;
        java.lang.NullPointerException $r23, $r24;

        r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest;

        $r2 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator naturalComparator()>();

        r1 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator reversedComparator(java.util.Comparator)>($r2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r6 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator)>($r4, $r5, null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r6);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10);

        $r10 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator)>($r8, $r9, null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r10);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r14 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator)>($r12, $r13, r1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r14);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10);

        $r18 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator)>($r16, $r17, r1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r18);

     label1:
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator)>($r19, null, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label2:
        goto label4;

     label3:
        $r23 := @caughtexception;

     label4:
        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator)>(null, $r21, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label5:
        goto label7;

     label6:
        $r24 := @caughtexception;

     label7:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label4 to label5 with label6;
    }

    public void min()
    {
        org.apache.commons.collections4.ComparatorUtilsTest r0;
        java.util.Comparator r1, $r2;
        java.lang.Integer $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r17, $r19, $r21;
        java.lang.Object $r6, $r10, $r14, $r18;
        java.lang.NullPointerException $r23, $r24;

        r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest;

        $r2 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator naturalComparator()>();

        r1 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator reversedComparator(java.util.Comparator)>($r2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r6 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator)>($r4, $r5, null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r6);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10);

        $r10 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator)>($r8, $r9, null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r10);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r14 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator)>($r12, $r13, r1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r14);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10);

        $r18 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator)>($r16, $r17, r1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r18);

     label1:
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator)>($r19, null, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label2:
        goto label4;

     label3:
        $r23 := @caughtexception;

     label4:
        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator)>(null, $r21, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label5:
        goto label7;

     label6:
        $r24 := @caughtexception;

     label7:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label4 to label5 with label6;
    }

    public void nullLowComparator()
    {
        org.apache.commons.collections4.ComparatorUtilsTest r0;
        java.util.Comparator r1;
        java.lang.Integer $r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest;

        r1 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator nullLowComparator(java.util.Comparator)>(null);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $i0 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(null, $r2);

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $i1 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(null, null);

        if $i1 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $i2 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, null);

        if $i2 <= 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        return;
    }

    public void nullHighComparator()
    {
        org.apache.commons.collections4.ComparatorUtilsTest r0;
        java.util.Comparator r1;
        java.lang.Integer $r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest;

        r1 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator nullHighComparator(java.util.Comparator)>(null);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $i0 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(null, $r2);

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $i1 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(null, null);

        if $i1 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $i2 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, null);

        if $i2 >= 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        return;
    }
}
