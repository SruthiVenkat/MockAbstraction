class org.apache.commons.collections4.list.TreeList$AVLNode extends java.lang.Object
{
    private org.apache.commons.collections4.list.TreeList$AVLNode left;
    private boolean leftIsPrevious;
    private org.apache.commons.collections4.list.TreeList$AVLNode right;
    private boolean rightIsNext;
    private int height;
    private int relativePosition;
    private java.lang.Object value;

    private void <init>(int, java.lang.Object, org.apache.commons.collections4.list.TreeList$AVLNode, org.apache.commons.collections4.list.TreeList$AVLNode)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r2, r3;
        int i0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.apache.commons.collections4.list.TreeList$AVLNode;

        r3 := @parameter3: org.apache.commons.collections4.list.TreeList$AVLNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = i0;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value> = r1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean rightIsNext> = 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean leftIsPrevious> = 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right> = r2;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left> = r3;

        return;
    }

    private void <init>(java.util.Collection)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0;
        java.util.Collection r1;
        java.util.Iterator $r2;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 := @parameter0: java.util.Collection;

        $r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $i1 = $i0 - 1;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void <init>(java.util.Iterator,int,int,int,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>($r2, 0, $i1, 0, null, null);

        return;
    }

    private void <init>(java.util.Iterator, int, int, int, org.apache.commons.collections4.list.TreeList$AVLNode, org.apache.commons.collections4.list.TreeList$AVLNode)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r2, r3, $r5, $r6;
        java.util.Iterator r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: org.apache.commons.collections4.list.TreeList$AVLNode;

        r3 := @parameter5: org.apache.commons.collections4.list.TreeList$AVLNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i4 = i1 - i0;

        $i5 = $i4 / 2;

        i3 = i0 + $i5;

        if i0 >= i3 goto label1;

        $r6 = new org.apache.commons.collections4.list.TreeList$AVLNode;

        $i8 = i3 - 1;

        specialinvoke $r6.<org.apache.commons.collections4.list.TreeList$AVLNode: void <init>(java.util.Iterator,int,int,int,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(r1, i0, $i8, i3, r2, r0);

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left> = $r6;

        goto label2;

     label1:
        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean leftIsPrevious> = 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left> = r2;

     label2:
        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value> = $r4;

        $i6 = i3 - i2;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i6;

        if i3 >= i1 goto label3;

        $r5 = new org.apache.commons.collections4.list.TreeList$AVLNode;

        $i7 = i3 + 1;

        specialinvoke $r5.<org.apache.commons.collections4.list.TreeList$AVLNode: void <init>(java.util.Iterator,int,int,int,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(r1, $i7, i1, i3, r0, r3);

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right> = $r5;

        goto label4;

     label3:
        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean rightIsNext> = 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right> = r3;

     label4:
        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void recalcHeight()>();

        return;
    }

    java.lang.Object getValue()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $r1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value>;

        return $r1;
    }

    void setValue(java.lang.Object)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value> = r1;

        return;
    }

    org.apache.commons.collections4.list.TreeList$AVLNode get(int)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r2, $r3;
        int i0, i1, $i2;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        $i2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        i1 = i0 - $i2;

        if i1 != 0 goto label1;

        return r0;

     label1:
        if i1 >= 0 goto label2;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        goto label3;

     label2:
        $r3 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

     label3:
        if $r3 != null goto label4;

        return null;

     label4:
        $r2 = virtualinvoke $r3.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode get(int)>(i1);

        return $r2;
    }

    int indexOf(java.lang.Object, int)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r2, $r5, $r6, $r7, $r9, $r10;
        java.lang.Object r1, $r3, $r4, $r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        if $r2 == null goto label1;

        $r10 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r9 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $i5 = $r9.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i6 = i0 + $i5;

        i1 = virtualinvoke $r10.<org.apache.commons.collections4.list.TreeList$AVLNode: int indexOf(java.lang.Object,int)>(r1, $i6);

        if i1 == -1 goto label1;

        return i1;

     label1:
        $r3 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value>;

        if $r3 != null goto label2;

        $r8 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value>;

        if $r8 != r1 goto label4;

        goto label3;

     label2:
        $r4 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

     label3:
        return i0;

     label4:
        $r5 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        if $r5 == null goto label5;

        $r7 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r6 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $i2 = $r6.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i3 = i0 + $i2;

        $i4 = virtualinvoke $r7.<org.apache.commons.collections4.list.TreeList$AVLNode: int indexOf(java.lang.Object,int)>(r1, $i3);

        return $i4;

     label5:
        return -1;
    }

    void toArray(java.lang.Object[], int)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.Object[] r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value>;

        r1[i0] = $r2;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        if $r3 == null goto label1;

        $r8 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r7 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $i3 = $r7.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i4 = i0 + $i3;

        virtualinvoke $r8.<org.apache.commons.collections4.list.TreeList$AVLNode: void toArray(java.lang.Object[],int)>(r1, $i4);

     label1:
        $r4 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        if $r4 == null goto label2;

        $r6 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r5 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $i1 = $r5.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i2 = i0 + $i1;

        virtualinvoke $r6.<org.apache.commons.collections4.list.TreeList$AVLNode: void toArray(java.lang.Object[],int)>(r1, $i2);

     label2:
        return;
    }

    org.apache.commons.collections4.list.TreeList$AVLNode next()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $z0 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean rightIsNext>;

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        if $r2 != null goto label2;

     label1:
        $r1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        return $r1;

     label2:
        $r3 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r4 = specialinvoke $r3.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode min()>();

        return $r4;
    }

    org.apache.commons.collections4.list.TreeList$AVLNode previous()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $z0 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean leftIsPrevious>;

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        if $r2 != null goto label2;

     label1:
        $r1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        return $r1;

     label2:
        $r3 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r4 = specialinvoke $r3.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode max()>();

        return $r4;
    }

    org.apache.commons.collections4.list.TreeList$AVLNode insert(int, java.lang.Object)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r2, $r3;
        int i0, i1, $i2;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $i2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        i1 = i0 - $i2;

        if i1 > 0 goto label1;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode insertOnLeft(int,java.lang.Object)>(i1, r1);

        return $r3;

     label1:
        $r2 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode insertOnRight(int,java.lang.Object)>(i1, r1);

        return $r2;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode insertOnLeft(int, java.lang.Object)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r2, $r3, $r4, $r5, $r6, $r7;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        if $r3 != null goto label1;

        $r6 = new org.apache.commons.collections4.list.TreeList$AVLNode;

        $r7 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        specialinvoke $r6.<org.apache.commons.collections4.list.TreeList$AVLNode: void <init>(int,java.lang.Object,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(-1, r1, r0, $r7);

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>($r6, null);

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode insert(int,java.lang.Object)>(i0, r1);

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>($r5, null);

     label2:
        $i1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        if $i1 < 0 goto label3;

        $i2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i3;

     label3:
        r2 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode balance()>();

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void recalcHeight()>();

        return r2;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode insertOnRight(int, java.lang.Object)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r2, $r3, $r4, $r5, $r6, $r7;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        if $r3 != null goto label1;

        $r6 = new org.apache.commons.collections4.list.TreeList$AVLNode;

        $r7 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        specialinvoke $r6.<org.apache.commons.collections4.list.TreeList$AVLNode: void <init>(int,java.lang.Object,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(1, r1, $r7, r0);

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>($r6, null);

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode insert(int,java.lang.Object)>(i0, r1);

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>($r5, null);

     label2:
        $i1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        if $i1 >= 0 goto label3;

        $i2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i3 = $i2 - 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i3;

     label3:
        r2 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode balance()>();

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void recalcHeight()>();

        return r2;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $z0 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean leftIsPrevious>;

        if $z0 == 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

     label2:
        return $r1;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $z0 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean rightIsNext>;

        if $z0 == 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

     label2:
        return $r1;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode max()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r1, $r2, $r3;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        if $r1 != null goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r3 = specialinvoke $r2.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode max()>();

     label2:
        return $r3;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode min()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r1, $r2, $r3;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        if $r1 != null goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r3 = specialinvoke $r2.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode min()>();

     label2:
        return $r3;
    }

    org.apache.commons.collections4.list.TreeList$AVLNode remove(int)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        $i2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        i1 = i0 - $i2;

        if i1 != 0 goto label1;

        $r9 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode removeSelf()>();

        return $r9;

     label1:
        if i1 <= 0 goto label2;

        $r5 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r6 = virtualinvoke $r5.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode remove(int)>(i1);

        $r7 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r8 = $r7.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>($r6, $r8);

        $i6 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        if $i6 >= 0 goto label3;

        $i7 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i8 = $i7 + 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i8;

        goto label3;

     label2:
        $r1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode remove(int)>(i1);

        $r3 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r4 = $r3.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>($r2, $r4);

        $i3 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        if $i3 <= 0 goto label3;

        $i4 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i5 = $i4 - 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i5;

     label3:
        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void recalcHeight()>();

        $r10 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode balance()>();

        return $r10;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode removeMax()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        if $r1 != null goto label1;

        $r7 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode removeSelf()>();

        return $r7;

     label1:
        $r2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r3 = specialinvoke $r2.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode removeMax()>();

        $r4 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r5 = $r4.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>($r3, $r5);

        $i0 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        if $i0 >= 0 goto label2;

        $i1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i2;

     label2:
        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void recalcHeight()>();

        $r6 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode balance()>();

        return $r6;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode removeMin()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        if $r1 != null goto label1;

        $r7 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode removeSelf()>();

        return $r7;

     label1:
        $r2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r3 = specialinvoke $r2.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode removeMin()>();

        $r4 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r5 = $r4.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>($r3, $r5);

        $i0 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        if $i0 <= 0 goto label2;

        $i1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i2 = $i1 - 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i2;

     label2:
        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void recalcHeight()>();

        $r6 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode balance()>();

        return $r6;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode removeSelf()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, r28, r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.Object $r6, $r13;
        boolean $z0, $z1;
        byte $b16;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        if $r2 != null goto label01;

        $r27 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        if $r27 != null goto label01;

        return null;

     label01:
        $r3 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        if $r3 != null goto label03;

        $i12 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        if $i12 <= 0 goto label02;

        $r26 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $i14 = $r26.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i13 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i15 = $i14 + $i13;

        $r26.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i15;

     label02:
        $r22 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r23 = specialinvoke $r22.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode max()>();

        $r24 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        specialinvoke $r23.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(null, $r24);

        $r25 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        return $r25;

     label03:
        $r4 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        if $r4 != null goto label06;

        $r17 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $i10 = $r17.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i8 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i7 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        if $i7 >= 0 goto label04;

        $b16 = 0;

        goto label05;

     label04:
        $b16 = 1;

     label05:
        $i9 = $i8 - $b16;

        $i11 = $i10 + $i9;

        $r17.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i11;

        $r18 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r19 = specialinvoke $r18.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode min()>();

        $r20 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        specialinvoke $r19.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(null, $r20);

        $r21 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        return $r21;

     label06:
        $i0 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int heightRightMinusLeft()>();

        if $i0 <= 0 goto label09;

        $r12 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        r28 = specialinvoke $r12.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode min()>();

        $r13 = r28.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value>;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value> = $r13;

        $z1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean leftIsPrevious>;

        if $z1 == 0 goto label07;

        $r16 = r28.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left> = $r16;

     label07:
        $r14 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r15 = specialinvoke $r14.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode removeMin()>();

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right> = $r15;

        $i4 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        if $i4 >= 0 goto label08;

        $i5 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i6 = $i5 + 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i6;

     label08:
        goto label12;

     label09:
        $r5 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        r29 = specialinvoke $r5.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode max()>();

        $r6 = r29.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value>;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value> = $r6;

        $z0 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean rightIsNext>;

        if $z0 == 0 goto label10;

        $r11 = r29.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right> = $r11;

     label10:
        $r7 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        r1 = $r7.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r8 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r9 = specialinvoke $r8.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode removeMax()>();

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left> = $r9;

        $r10 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        if $r10 != null goto label11;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left> = r1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean leftIsPrevious> = 1;

     label11:
        $i1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        if $i1 <= 0 goto label12;

        $i2 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i3 = $i2 - 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i3;

     label12:
        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void recalcHeight()>();

        return r0;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode balance()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2;
        java.lang.RuntimeException $r9;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $i0 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int heightRightMinusLeft()>();

        tableswitch($i0)
        {
            case -2: goto label2;
            case -1: goto label1;
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label4;
            default: goto label6;
        };

     label1:
        return r0;

     label2:
        $r5 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $i2 = specialinvoke $r5.<org.apache.commons.collections4.list.TreeList$AVLNode: int heightRightMinusLeft()>();

        if $i2 <= 0 goto label3;

        $r7 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r8 = specialinvoke $r7.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode rotateLeft()>();

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>($r8, null);

     label3:
        $r6 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode rotateRight()>();

        return $r6;

     label4:
        $r1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $i1 = specialinvoke $r1.<org.apache.commons.collections4.list.TreeList$AVLNode: int heightRightMinusLeft()>();

        if $i1 >= 0 goto label5;

        $r3 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r4 = specialinvoke $r3.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode rotateRight()>();

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>($r4, null);

     label5:
        $r2 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode rotateLeft()>();

        return $r2;

     label6:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("tree inconsistent!");

        throw $r9;
    }

    private int getOffset(org.apache.commons.collections4.list.TreeList$AVLNode)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 := @parameter0: org.apache.commons.collections4.list.TreeList$AVLNode;

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = r1.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        return $i0;
    }

    private int setOffset(org.apache.commons.collections4.list.TreeList$AVLNode, int)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r1;
        int i0, i1;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 := @parameter0: org.apache.commons.collections4.list.TreeList$AVLNode;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return 0;

     label1:
        i1 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections4.list.TreeList$AVLNode)>(r1);

        r1.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = i0;

        return i1;
    }

    private void recalcHeight()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4;
        int $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        if $r1 != null goto label1;

        $i2 = -1;

        goto label2;

     label1:
        $r2 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        $i2 = $r2.<org.apache.commons.collections4.list.TreeList$AVLNode: int height>;

     label2:
        $r3 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        if $r3 != null goto label3;

        $i3 = -1;

        goto label4;

     label3:
        $r4 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        $i3 = $r4.<org.apache.commons.collections4.list.TreeList$AVLNode: int height>;

     label4:
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $i5 = $i4 + 1;

        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int height> = $i5;

        return;
    }

    private int getHeight(org.apache.commons.collections4.list.TreeList$AVLNode)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 := @parameter0: org.apache.commons.collections4.list.TreeList$AVLNode;

        if r1 != null goto label1;

        $i0 = -1;

        goto label2;

     label1:
        $i0 = r1.<org.apache.commons.collections4.list.TreeList$AVLNode: int height>;

     label2:
        return $i0;
    }

    private int heightRightMinusLeft()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        $i0 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int getHeight(org.apache.commons.collections4.list.TreeList$AVLNode)>($r1);

        $r2 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        $i1 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int getHeight(org.apache.commons.collections4.list.TreeList$AVLNode)>($r2);

        $i2 = $i0 - $i1;

        return $i2;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode rotateLeft()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r1, r2, $r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        r2 = specialinvoke $r3.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        $i3 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i4 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections4.list.TreeList$AVLNode)>(r1);

        i0 = $i3 + $i4;

        $i5 = r1.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        i1 = neg $i5;

        $i6 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections4.list.TreeList$AVLNode)>(r1);

        $i7 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections4.list.TreeList$AVLNode)>(r2);

        i2 = $i6 + $i7;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(r2, r1);

        specialinvoke r1.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(r0, null);

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int setOffset(org.apache.commons.collections4.list.TreeList$AVLNode,int)>(r1, i0);

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int setOffset(org.apache.commons.collections4.list.TreeList$AVLNode,int)>(r0, i1);

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int setOffset(org.apache.commons.collections4.list.TreeList$AVLNode,int)>(r2, i2);

        return r1;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode rotateRight()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r1, r2, $r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getLeftSubTree()>();

        r2 = specialinvoke $r3.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        $i3 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i4 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections4.list.TreeList$AVLNode)>(r1);

        i0 = $i3 + $i4;

        $i5 = r1.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        i1 = neg $i5;

        $i6 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections4.list.TreeList$AVLNode)>(r1);

        $i7 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections4.list.TreeList$AVLNode)>(r2);

        i2 = $i6 + $i7;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(r2, r1);

        specialinvoke r1.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(r0, null);

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int setOffset(org.apache.commons.collections4.list.TreeList$AVLNode,int)>(r1, i0);

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int setOffset(org.apache.commons.collections4.list.TreeList$AVLNode,int)>(r0, i1);

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int setOffset(org.apache.commons.collections4.list.TreeList$AVLNode,int)>(r2, i2);

        return r1;
    }

    private void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode, org.apache.commons.collections4.list.TreeList$AVLNode)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r1, r2, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 := @parameter0: org.apache.commons.collections4.list.TreeList$AVLNode;

        r2 := @parameter1: org.apache.commons.collections4.list.TreeList$AVLNode;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean leftIsPrevious> = $z1;

        $z0 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean leftIsPrevious>;

        if $z0 == 0 goto label3;

        $r5 = r2;

        goto label4;

     label3:
        $r5 = r1;

     label4:
        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left> = $r5;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void recalcHeight()>();

        return;
    }

    private void setRight(org.apache.commons.collections4.list.TreeList$AVLNode, org.apache.commons.collections4.list.TreeList$AVLNode)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r1, r2, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 := @parameter0: org.apache.commons.collections4.list.TreeList$AVLNode;

        r2 := @parameter1: org.apache.commons.collections4.list.TreeList$AVLNode;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean rightIsNext> = $z1;

        $z0 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean rightIsNext>;

        if $z0 == 0 goto label3;

        $r5 = r2;

        goto label4;

     label3:
        $r5 = r1;

     label4:
        r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right> = $r5;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void recalcHeight()>();

        return;
    }

    private org.apache.commons.collections4.list.TreeList$AVLNode addAll(org.apache.commons.collections4.list.TreeList$AVLNode, int)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r1, r2, r3, $r6, $r7, $r10, $r12, r13, r14, r16, r17, r18, r20, r21, r22;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26;
        java.util.ArrayDeque $r4, $r8;
        java.lang.Object $r5, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r13 := @parameter0: org.apache.commons.collections4.list.TreeList$AVLNode;

        i0 := @parameter1: int;

        r1 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode max()>();

        r2 = specialinvoke r13.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode min()>();

        $i2 = r13.<org.apache.commons.collections4.list.TreeList$AVLNode: int height>;

        $i1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int height>;

        if $i2 <= $i1 goto label07;

        r14 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode removeMax()>();

        $r8 = new java.util.ArrayDeque;

        specialinvoke $r8.<java.util.ArrayDeque: void <init>()>();

        r16 = r13;

        $i10 = r13.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        i23 = $i10 + i0;

        i24 = 0;

     label01:
        if r16 == null goto label02;

        $i20 = r16.<org.apache.commons.collections4.list.TreeList$AVLNode: int height>;

        $i21 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int getHeight(org.apache.commons.collections4.list.TreeList$AVLNode)>(r14);

        if $i20 <= $i21 goto label02;

        i24 = i23;

        interfaceinvoke $r8.<java.util.Deque: void push(java.lang.Object)>(r16);

        r16 = r16.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        if r16 == null goto label01;

        $i22 = r16.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        i23 = i23 + $i22;

        goto label01;

     label02:
        specialinvoke r1.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(r14, null);

        specialinvoke r1.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(r16, r2);

        if r14 == null goto label03;

        $r12 = specialinvoke r14.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode max()>();

        specialinvoke $r12.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(null, r1);

        $i18 = r14.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i17 = i0 - 1;

        $i19 = $i18 - $i17;

        r14.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i19;

     label03:
        if r16 == null goto label04;

        $r10 = specialinvoke r16.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode min()>();

        specialinvoke $r10.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(null, r1);

        $i15 = i23 - i0;

        $i16 = $i15 + 1;

        r16.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i16;

     label04:
        $i11 = i0 - 1;

        $i12 = $i11 - i24;

        r1.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i12;

        $i13 = r13.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i14 = $i13 + i0;

        r13.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i14;

        r17 = r1;

     label05:
        $z0 = interfaceinvoke $r8.<java.util.Deque: boolean isEmpty()>();

        if $z0 != 0 goto label06;

        $r9 = interfaceinvoke $r8.<java.util.Deque: java.lang.Object pop()>();

        r3 = (org.apache.commons.collections4.list.TreeList$AVLNode) $r9;

        specialinvoke r3.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(r17, null);

        r17 = specialinvoke r3.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode balance()>();

        goto label05;

     label06:
        return r17;

     label07:
        r18 = specialinvoke r13.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode removeMin()>();

        $r4 = new java.util.ArrayDeque;

        specialinvoke $r4.<java.util.ArrayDeque: void <init>()>();

        r20 = r0;

        i25 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        i26 = 0;

     label08:
        if r20 == null goto label09;

        $i7 = r20.<org.apache.commons.collections4.list.TreeList$AVLNode: int height>;

        $i8 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int getHeight(org.apache.commons.collections4.list.TreeList$AVLNode)>(r18);

        if $i7 <= $i8 goto label09;

        i26 = i25;

        interfaceinvoke $r4.<java.util.Deque: void push(java.lang.Object)>(r20);

        r20 = r20.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode right>;

        if r20 == null goto label08;

        $i9 = r20.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        i25 = i25 + $i9;

        goto label08;

     label09:
        specialinvoke r2.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(r18, null);

        specialinvoke r2.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(r20, r1);

        if r18 == null goto label10;

        $r7 = specialinvoke r18.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode min()>();

        specialinvoke $r7.<org.apache.commons.collections4.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(null, r2);

        $i5 = r18.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $i6 = $i5 + 1;

        r18.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i6;

     label10:
        if r20 == null goto label11;

        $r6 = specialinvoke r20.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode max()>();

        specialinvoke $r6.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(null, r2);

        $i4 = i25 - i0;

        r20.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i4;

     label11:
        $i3 = i0 - i26;

        r2.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition> = $i3;

        r21 = r2;

     label12:
        $z1 = interfaceinvoke $r4.<java.util.Deque: boolean isEmpty()>();

        if $z1 != 0 goto label13;

        $r5 = interfaceinvoke $r4.<java.util.Deque: java.lang.Object pop()>();

        r22 = (org.apache.commons.collections4.list.TreeList$AVLNode) $r5;

        specialinvoke r22.<org.apache.commons.collections4.list.TreeList$AVLNode: void setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(r21, null);

        r21 = specialinvoke r22.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode balance()>();

        goto label12;

     label13:
        return r21;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, $r5, $r11;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r15;
        int $i0;
        java.lang.Object $r8;
        boolean $z0, $z1, $z2;
        java.lang.String $r16;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AVLNode(");

        $i0 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r5 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode left>;

        if $r5 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r8 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r11 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode getRightSubTree()>();

        if $r11 == null goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", faedelung ");

        $z0 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: boolean rightIsNext>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    void <init>(java.util.Collection, org.apache.commons.collections4.list.TreeList$1)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0;
        java.util.Collection r1;
        org.apache.commons.collections4.list.TreeList$1 r2;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: org.apache.commons.collections4.list.TreeList$1;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void <init>(java.util.Collection)>(r1);

        return;
    }

    static int access$100(org.apache.commons.collections4.list.TreeList$AVLNode)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0;
        int $i0;

        r0 := @parameter0: org.apache.commons.collections4.list.TreeList$AVLNode;

        $i0 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: int relativePosition>;

        return $i0;
    }

    void <init>(int, java.lang.Object, org.apache.commons.collections4.list.TreeList$AVLNode, org.apache.commons.collections4.list.TreeList$AVLNode, org.apache.commons.collections4.list.TreeList$1)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r2, r3;
        int i0;
        java.lang.Object r1;
        org.apache.commons.collections4.list.TreeList$1 r4;

        r0 := @this: org.apache.commons.collections4.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.apache.commons.collections4.list.TreeList$AVLNode;

        r3 := @parameter3: org.apache.commons.collections4.list.TreeList$AVLNode;

        r4 := @parameter4: org.apache.commons.collections4.list.TreeList$1;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: void <init>(int,java.lang.Object,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)>(i0, r1, r2, r3);

        return;
    }

    static org.apache.commons.collections4.list.TreeList$AVLNode access$300(org.apache.commons.collections4.list.TreeList$AVLNode, org.apache.commons.collections4.list.TreeList$AVLNode, int)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0, r1, $r2;
        int i0;

        r0 := @parameter0: org.apache.commons.collections4.list.TreeList$AVLNode;

        r1 := @parameter1: org.apache.commons.collections4.list.TreeList$AVLNode;

        i0 := @parameter2: int;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)>(r1, i0);

        return $r2;
    }

    static java.lang.Object access$400(org.apache.commons.collections4.list.TreeList$AVLNode)
    {
        org.apache.commons.collections4.list.TreeList$AVLNode r0;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.commons.collections4.list.TreeList$AVLNode;

        $r1 = r0.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object value>;

        return $r1;
    }
}
