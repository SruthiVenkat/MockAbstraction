class org.apache.commons.collections4.functors.FunctorUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.commons.collections4.functors.FunctorUtils r0;

        r0 := @this: org.apache.commons.collections4.functors.FunctorUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static transient org.apache.commons.collections4.Predicate[] copy(org.apache.commons.collections4.Predicate[])
    {
        org.apache.commons.collections4.Predicate[] r0, $r2, $r3;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.commons.collections4.Predicate[];

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.collections4.Predicate[]) $r1;

        $r3 = (org.apache.commons.collections4.Predicate[]) $r2;

        return $r3;
    }

    static org.apache.commons.collections4.Predicate coerce(org.apache.commons.collections4.Predicate)
    {
        org.apache.commons.collections4.Predicate r0;

        r0 := @parameter0: org.apache.commons.collections4.Predicate;

        return r0;
    }

    static transient void validate(org.apache.commons.collections4.Predicate[])
    {
        org.apache.commons.collections4.Predicate[] r0;
        int $i0, i1;
        org.apache.commons.collections4.Predicate $r1;
        java.lang.NullPointerException $r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: org.apache.commons.collections4.Predicate[];

        if r0 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("The predicate array must not be null");

        throw $r8;

     label1:
        i1 = 0;

     label2:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label4;

        $r1 = r0[i1];

        if $r1 != null goto label3;

        $r2 = new java.lang.NullPointerException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The predicate array must not contain a null predicate, index ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was null");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return;
    }

    static org.apache.commons.collections4.Predicate[] validate(java.util.Collection)
    {
        java.util.Collection r0;
        org.apache.commons.collections4.Predicate[] r1;
        java.util.Iterator r2;
        org.apache.commons.collections4.Predicate r3, $r5;
        int $i0, i1;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.NullPointerException $r6, $r12;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("The predicate collection must not be null");

        throw $r12;

     label1:
        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        r1 = newarray (org.apache.commons.collections4.Predicate)[$i0];

        i1 = 0;

        r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.commons.collections4.Predicate) $r4;

        r1[i1] = r3;

        $r5 = r1[i1];

        if $r5 != null goto label3;

        $r6 = new java.lang.NullPointerException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The predicate collection must not contain a null predicate, index ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was null");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return r1;
    }

    static transient org.apache.commons.collections4.Closure[] copy(org.apache.commons.collections4.Closure[])
    {
        org.apache.commons.collections4.Closure[] r0, $r2, $r3;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.commons.collections4.Closure[];

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.collections4.Closure[]) $r1;

        $r3 = (org.apache.commons.collections4.Closure[]) $r2;

        return $r3;
    }

    static transient void validate(org.apache.commons.collections4.Closure[])
    {
        org.apache.commons.collections4.Closure[] r0;
        int $i0, i1;
        org.apache.commons.collections4.Closure $r1;
        java.lang.NullPointerException $r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: org.apache.commons.collections4.Closure[];

        if r0 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("The closure array must not be null");

        throw $r8;

     label1:
        i1 = 0;

     label2:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label4;

        $r1 = r0[i1];

        if $r1 != null goto label3;

        $r2 = new java.lang.NullPointerException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The closure array must not contain a null closure, index ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was null");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return;
    }

    static org.apache.commons.collections4.Closure coerce(org.apache.commons.collections4.Closure)
    {
        org.apache.commons.collections4.Closure r0;

        r0 := @parameter0: org.apache.commons.collections4.Closure;

        return r0;
    }

    static transient org.apache.commons.collections4.Transformer[] copy(org.apache.commons.collections4.Transformer[])
    {
        org.apache.commons.collections4.Transformer[] r0, $r2, $r3;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.commons.collections4.Transformer[];

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.collections4.Transformer[]) $r1;

        $r3 = (org.apache.commons.collections4.Transformer[]) $r2;

        return $r3;
    }

    static transient void validate(org.apache.commons.collections4.Transformer[])
    {
        org.apache.commons.collections4.Transformer[] r0;
        int $i0, i1;
        org.apache.commons.collections4.Transformer $r1;
        java.lang.NullPointerException $r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: org.apache.commons.collections4.Transformer[];

        if r0 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("The transformer array must not be null");

        throw $r8;

     label1:
        i1 = 0;

     label2:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label4;

        $r1 = r0[i1];

        if $r1 != null goto label3;

        $r2 = new java.lang.NullPointerException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The transformer array must not contain a null transformer, index ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was null");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return;
    }

    static org.apache.commons.collections4.Transformer coerce(org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.Transformer r0;

        r0 := @parameter0: org.apache.commons.collections4.Transformer;

        return r0;
    }
}
