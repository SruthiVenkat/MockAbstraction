public class org.apache.commons.collections4.map.MultiKeyMapTest extends org.apache.commons.collections4.map.AbstractIterableMapTest
{
    static final java.lang.Integer I1;
    static final java.lang.Integer I2;
    static final java.lang.Integer I3;
    static final java.lang.Integer I4;
    static final java.lang.Integer I5;
    static final java.lang.Integer I6;
    static final java.lang.Integer I7;
    static final java.lang.Integer I8;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.BulkTest: junit.framework.TestSuite makeSuite(java.lang.Class)>(class "Lorg/apache/commons/collections4/map/MultiKeyMapTest;");

        return $r0;
    }

    public org.apache.commons.collections4.map.MultiKeyMap makeObject()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap $r1;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = new org.apache.commons.collections4.map.MultiKeyMap;

        specialinvoke $r1.<org.apache.commons.collections4.map.MultiKeyMap: void <init>()>();

        return $r1;
    }

    public org.apache.commons.collections4.keyvalue.MultiKey[] getSampleKeys()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.keyvalue.MultiKey[] $r1;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.keyvalue.MultiKey[] getMultiKeyKeys()>();

        return $r1;
    }

    private org.apache.commons.collections4.keyvalue.MultiKey[] getMultiKeyKeys()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.keyvalue.MultiKey[] $r1;
        org.apache.commons.collections4.keyvalue.MultiKey $r2, $r5, $r8, $r11, $r15, $r19, $r23, $r28, $r33, $r38, $r44, $r50;
        java.lang.Integer $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r34, $r35, $r36, $r37, $r39, $r40, $r41, $r42, $r43, $r45, $r46, $r47, $r48, $r49, $r51, $r52, $r53, $r54, $r55;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = newarray (org.apache.commons.collections4.keyvalue.MultiKey)[12];

        $r2 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r4 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r3 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        specialinvoke $r2.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r1[0] = $r2;

        $r5 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r7 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r6 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        specialinvoke $r5.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r7, $r6);

        $r1[1] = $r5;

        $r8 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r10 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        $r9 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I4>;

        specialinvoke $r8.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r10, $r9);

        $r1[2] = $r8;

        $r11 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r14 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r13 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r12 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        specialinvoke $r11.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r14, $r13, $r12);

        $r1[3] = $r11;

        $r15 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r18 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r17 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        $r16 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I4>;

        specialinvoke $r15.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r18, $r17, $r16);

        $r1[4] = $r15;

        $r19 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r22 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        $r21 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I7>;

        $r20 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I6>;

        specialinvoke $r19.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r22, $r21, $r20);

        $r1[5] = $r19;

        $r23 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r27 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r26 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r25 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r24 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        specialinvoke $r23.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r27, $r26, $r25, $r24);

        $r1[6] = $r23;

        $r28 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r32 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r31 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I4>;

        $r30 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I5>;

        $r29 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I6>;

        specialinvoke $r28.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r32, $r31, $r30, $r29);

        $r1[7] = $r28;

        $r33 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r37 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        $r36 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I6>;

        $r35 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I7>;

        $r34 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I8>;

        specialinvoke $r33.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r37, $r36, $r35, $r34);

        $r1[8] = $r33;

        $r38 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r43 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r42 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r41 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r40 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        $r39 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I4>;

        specialinvoke $r38.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r43, $r42, $r41, $r40, $r39);

        $r1[9] = $r38;

        $r44 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r49 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r48 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        $r47 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I4>;

        $r46 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I5>;

        $r45 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I6>;

        specialinvoke $r44.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r49, $r48, $r47, $r46, $r45);

        $r1[10] = $r44;

        $r50 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r55 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        $r54 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I5>;

        $r53 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I6>;

        $r52 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I7>;

        $r51 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I8>;

        specialinvoke $r50.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r55, $r54, $r53, $r52, $r51);

        $r1[11] = $r50;

        return $r1;
    }

    public java.lang.Object[] getSampleValues()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        java.lang.Object[] $r1, $r2;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = newarray (java.lang.Object)[12];

        $r1[0] = "2A";

        $r1[1] = "2B";

        $r1[2] = "2C";

        $r1[3] = "3D";

        $r1[4] = "3E";

        $r1[5] = "3F";

        $r1[6] = "4G";

        $r1[7] = "4H";

        $r1[8] = "4I";

        $r1[9] = "5J";

        $r1[10] = "5K";

        $r1[11] = "5L";

        $r2 = (java.lang.Object[]) $r1;

        return $r2;
    }

    public java.lang.Object[] getNewSampleValues()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        java.lang.Object[] $r1, $r2;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = newarray (java.lang.Object)[12];

        $r1[0] = "1a";

        $r1[1] = "1b";

        $r1[2] = "1c";

        $r1[3] = "2d";

        $r1[4] = "2e";

        $r1[5] = "2f";

        $r1[6] = "3g";

        $r1[7] = "3h";

        $r1[8] = "3i";

        $r1[9] = "4j";

        $r1[10] = "4k";

        $r1[11] = "4l";

        $r2 = (java.lang.Object[]) $r1;

        return $r2;
    }

    public org.apache.commons.collections4.keyvalue.MultiKey[] getOtherKeys()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.keyvalue.MultiKey[] $r1;
        org.apache.commons.collections4.keyvalue.MultiKey $r2, $r5, $r8, $r11;
        java.lang.Integer $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = newarray (org.apache.commons.collections4.keyvalue.MultiKey)[4];

        $r2 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r4 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r3 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I7>;

        specialinvoke $r2.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r1[0] = $r2;

        $r5 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r7 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r6 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I8>;

        specialinvoke $r5.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r7, $r6);

        $r1[1] = $r5;

        $r8 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r10 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r9 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I4>;

        specialinvoke $r8.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r10, $r9);

        $r1[2] = $r8;

        $r11 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r13 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r12 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I5>;

        specialinvoke $r11.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r13, $r12);

        $r1[3] = $r11;

        return $r1;
    }

    public boolean isAllowNullKey()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        return 0;
    }

    public void testNullHandling()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        java.util.Map $r1, $r3, $r4, $r5, $r7, $r9, $r11, $r13, $r16, $r19;
        java.lang.Object $r2, $r6, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r8, $r10;
        java.util.Collection $r12;
        org.apache.commons.collections4.keyvalue.MultiKey $r15;
        java.lang.NullPointerException $r21, $r22;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: void resetFull()>();

        $r1 = r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r2);

        $r3 = r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.util.Map map>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z0);

        $r4 = r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.util.Map map>;

        $z1 = interfaceinvoke $r4.<java.util.Map: boolean containsValue(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z1);

        $r5 = r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.util.Map map>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r6);

        $r7 = r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.util.Map map>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $z2 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z2);

        $r9 = r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.util.Map map>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set keySet()>();

        $z3 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z3);

        $r11 = r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.util.Map map>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>();

        $z4 = interfaceinvoke $r12.<java.util.Collection: boolean contains(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z4);

     label1:
        $r13 = r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.util.Map map>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

     label4:
        $r16 = r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.util.Map map>;

        $r15 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r15.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>(null, null);

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r17);

     label5:
        $r19 = r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.util.Map map>;

        $r18 = new java.lang.Object;

        specialinvoke $r18.<java.lang.Object: void <init>()>();

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r18);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void fail()>();

     label6:
        goto label8;

     label7:
        $r21 := @caughtexception;

     label8:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label5 to label6 with label7;
    }

    public void testMultiKeyGet()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap r1;
        org.apache.commons.collections4.keyvalue.MultiKey[] r2;
        java.lang.Object[] r3;
        org.apache.commons.collections4.keyvalue.MultiKey r4;
        java.lang.Object r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103;
        int $i0, $i1, i2;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: void resetFull()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.map.MultiKeyMap getMap()>();

        r2 = specialinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.keyvalue.MultiKey[] getMultiKeyKeys()>();

        r3 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Object[] getSampleValues()>();

        i2 = 0;

     label1:
        $i0 = lengthof r2;

        if i2 >= $i0 goto label8;

        r4 = r2[i2];

        r5 = r3[i2];

        $i1 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        tableswitch($i1)
        {
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label2:
        $r87 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r88 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r89 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object)>($r87, $r88);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r89);

        $r90 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r91 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object)>(null, $r90);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r91);

        $r92 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r93 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object)>($r92, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r93);

        $r94 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object)>(null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r94);

        $r95 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r96 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r97 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object)>($r95, $r96, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r97);

        $r98 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r99 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r100 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r98, $r99, null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r100);

        $r101 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r102 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r103 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r101, $r102, null, null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r103);

        goto label7;

     label3:
        $r65 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r66 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r67 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r68 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object)>($r65, $r66, $r67);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r68);

        $r69 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r70 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r71 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object)>(null, $r69, $r70);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r71);

        $r72 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r73 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r74 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object)>($r72, null, $r73);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r74);

        $r75 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r76 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r77 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object)>($r75, $r76, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r77);

        $r78 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r78);

        $r79 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r80 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r81 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r82 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r79, $r80, $r81, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r82);

        $r83 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r84 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r85 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r86 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r83, $r84, $r85, null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r86);

        goto label7;

     label4:
        $r38 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r39 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r40 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r41 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r42 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r38, $r39, $r40, $r41);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r42);

        $r43 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r44 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r45 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r46 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, $r43, $r44, $r45);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r46);

        $r47 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r48 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r49 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r50 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r47, null, $r48, $r49);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r50);

        $r51 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r52 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r53 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r54 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r51, $r52, null, $r53);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r54);

        $r55 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r56 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r57 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r58 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r55, $r56, $r57, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r58);

        $r59 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r59);

        $r60 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r61 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r62 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r63 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r64 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r60, $r61, $r62, $r63, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r64);

        goto label7;

     label5:
        $r6 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r7 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r8 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r9 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r10 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $r11 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r7, $r8, $r9, $r10);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r11);

        $r12 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r13 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r14 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r15 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $r16 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, $r12, $r13, $r14, $r15);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r16);

        $r17 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r18 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r19 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r20 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $r21 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r17, null, $r18, $r19, $r20);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r21);

        $r22 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r23 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r24 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r25 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $r26 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r22, $r23, null, $r24, $r25);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r26);

        $r27 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r28 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r29 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r30 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $r31 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r27, $r28, $r29, null, $r30);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r31);

        $r32 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r33 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r34 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r35 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r36 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r32, $r33, $r34, $r35, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r36);

        $r37 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null, null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r37);

        goto label7;

     label6:
        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void fail(java.lang.String)>("Invalid key size");

     label7:
        i2 = i2 + 1;

        goto label1;

     label8:
        return;
    }

    public void testMultiKeyContainsKey()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap r1;
        org.apache.commons.collections4.keyvalue.MultiKey[] r2;
        int i0, $i1, i2;
        org.apache.commons.collections4.keyvalue.MultiKey r4;
        java.lang.Object $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: void resetFull()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.map.MultiKeyMap getMap()>();

        r2 = specialinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.keyvalue.MultiKey[] getMultiKeyKeys()>();

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label8;

        r4 = r2[i2];

        $i1 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        tableswitch($i1)
        {
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label2:
        $r65 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r66 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z21 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r65, $r66);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z21);

        $r67 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z22 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>(null, $r67);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z22);

        $r68 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $z23 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r68, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z23);

        $z24 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>(null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z24);

        $r69 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r70 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z25 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r69, $r70, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z25);

        $r71 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r72 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z26 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r71, $r72, null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z26);

        $r73 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r74 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z27 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r73, $r74, null, null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z27);

        goto label7;

     label3:
        $r50 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r51 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r52 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z14 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r50, $r51, $r52);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z14);

        $r53 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r54 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z15 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object)>(null, $r53, $r54);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z15);

        $r55 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r56 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z16 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r55, null, $r56);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z16);

        $r57 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r58 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z17 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r57, $r58, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z17);

        $z18 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z18);

        $r59 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r60 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r61 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z19 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r59, $r60, $r61, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z19);

        $r62 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r63 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r64 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z20 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r62, $r63, $r64, null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z20);

        goto label7;

     label4:
        $r30 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r31 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r32 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r33 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $z7 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r30, $r31, $r32, $r33);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z7);

        $r34 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r35 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r36 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $z8 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, $r34, $r35, $r36);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z8);

        $r37 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r38 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r39 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $z9 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r37, null, $r38, $r39);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z9);

        $r40 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r41 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r42 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $z10 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r40, $r41, null, $r42);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z10);

        $r43 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r44 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r45 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z11 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r43, $r44, $r45, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z11);

        $z12 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z12);

        $r46 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r47 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r48 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r49 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $z13 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r46, $r47, $r48, $r49, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z13);

        goto label7;

     label5:
        $r5 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r6 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r7 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r8 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r9 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r6, $r7, $r8, $r9);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r10 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r11 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r12 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r13 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, $r10, $r11, $r12, $r13);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z1);

        $r14 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r15 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r16 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r17 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $z2 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r14, null, $r15, $r16, $r17);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z2);

        $r18 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r19 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r20 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r21 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $z3 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r18, $r19, null, $r20, $r21);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z3);

        $r22 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r23 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r24 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r25 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $z4 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r22, $r23, $r24, null, $r25);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z4);

        $r26 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r27 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r28 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r29 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $z5 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r26, $r27, $r28, $r29, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z5);

        $z6 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null, null, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z6);

        goto label7;

     label6:
        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void fail(java.lang.String)>("Invalid key size");

     label7:
        i2 = i2 + 1;

        goto label1;

     label8:
        return;
    }

    public void testMultiKeyPut()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.keyvalue.MultiKey[] r1;
        java.lang.Object[] r2;
        org.apache.commons.collections4.keyvalue.MultiKey r4, $r24, $r61, $r91, $r114;
        java.lang.Object r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        org.apache.commons.collections4.map.MultiKeyMap $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        r1 = specialinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.keyvalue.MultiKey[] getMultiKeyKeys()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Object[] getSampleValues()>();

        i10 = 0;

     label1:
        $i0 = lengthof r1;

        if i10 >= $i0 goto label8;

        $r6 = new org.apache.commons.collections4.map.MultiKeyMap;

        specialinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: void <init>()>();

        r4 = r1[i10];

        r5 = r2[i10];

        $i1 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        tableswitch($i1)
        {
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label2:
        $r106 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r107 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r108 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>($r106, $r107, r5);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r108);

        $i8 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(1, $i8);

        $r109 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r110 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r111 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object)>($r109, $r110);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r111);

        $r112 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r113 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z9 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r112, $r113);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z9);

        $r114 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r115 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r116 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        specialinvoke $r114.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r115, $r116);

        $z10 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object)>($r114);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z10);

        $r117 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r118 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r119 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>($r117, $r118, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r119);

        $i9 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(1, $i9);

        $r120 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r121 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r122 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object)>($r120, $r121);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r122);

        $r123 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r124 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z11 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r123, $r124);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z11);

        goto label7;

     label3:
        $r80 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r81 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r82 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r83 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r80, $r81, $r82, r5);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r83);

        $i6 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(1, $i6);

        $r84 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r85 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r86 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r87 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object)>($r84, $r85, $r86);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r87);

        $r88 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r89 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r90 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z6 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r88, $r89, $r90);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z6);

        $r91 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r92 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r93 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r94 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        specialinvoke $r91.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r92, $r93, $r94);

        $z7 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object)>($r91);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z7);

        $r95 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r96 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r97 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r98 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r95, $r96, $r97, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r98);

        $i7 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(1, $i7);

        $r99 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r100 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r101 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r102 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object)>($r99, $r100, $r101);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r102);

        $r103 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r104 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r105 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z8 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r103, $r104, $r105);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z8);

        goto label7;

     label4:
        $r47 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r48 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r49 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r50 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r51 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r47, $r48, $r49, $r50, r5);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r51);

        $i4 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(1, $i4);

        $r52 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r53 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r54 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r55 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r56 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r52, $r53, $r54, $r55);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r56);

        $r57 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r58 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r59 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r60 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $z3 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r57, $r58, $r59, $r60);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z3);

        $r61 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r62 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r63 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r64 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r65 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        specialinvoke $r61.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r62, $r63, $r64, $r65);

        $z4 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object)>($r61);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z4);

        $r66 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r67 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r68 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r69 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r70 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r66, $r67, $r68, $r69, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r70);

        $i5 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(1, $i5);

        $r71 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r72 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r73 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r74 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r75 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r71, $r72, $r73, $r74);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r75);

        $r76 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r77 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r78 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r79 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $z5 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r76, $r77, $r78, $r79);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z5);

        goto label7;

     label5:
        $r7 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r8 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r9 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r10 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r11 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $r12 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r8, $r9, $r10, $r11, r5);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12);

        $i2 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(1, $i2);

        $r13 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r14 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r15 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r16 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r17 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $r18 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r14, $r15, $r16, $r17);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r18);

        $r19 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r20 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r21 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r22 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r23 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $z0 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r19, $r20, $r21, $r22, $r23);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r24 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r25 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r26 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r27 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r28 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r29 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        specialinvoke $r24.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r25, $r26, $r27, $r28, $r29);

        $z1 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object)>($r24);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r30 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r31 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r32 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r33 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r34 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $r35 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r30, $r31, $r32, $r33, $r34, null);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r35);

        $i3 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(1, $i3);

        $r36 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r37 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r38 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r39 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r40 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $r41 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r36, $r37, $r38, $r39, $r40);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r41);

        $r42 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r43 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r44 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r45 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r46 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $z2 = virtualinvoke $r6.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r42, $r43, $r44, $r45, $r46);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z2);

        goto label7;

     label6:
        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void fail(java.lang.String)>("Invalid key size");

     label7:
        i10 = i10 + 1;

        goto label1;

     label8:
        return;
    }

    public void testMultiKeyPutWithNullKey()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap $r2;
        int $i0;
        java.lang.Object $r10, $r12, $r14;
        java.lang.String $r11, $r13, $r15;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r2 = new org.apache.commons.collections4.map.MultiKeyMap;

        specialinvoke $r2.<org.apache.commons.collections4.map.MultiKeyMap: void <init>()>();

        virtualinvoke $r2.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>("a", null, "value1");

        virtualinvoke $r2.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>("b", null, "value2");

        virtualinvoke $r2.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>("c", null, "value3");

        virtualinvoke $r2.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>("a", "z", "value4");

        virtualinvoke $r2.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>("a", null, "value5");

        virtualinvoke $r2.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "a", "value6");

        virtualinvoke $r2.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, "value7");

        $i0 = virtualinvoke $r2.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(6, $i0);

        $r10 = virtualinvoke $r2.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object)>("a", null);

        $r11 = (java.lang.String) $r10;

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.String,java.lang.String)>("value5", $r11);

        $r12 = virtualinvoke $r2.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object)>("a", "z");

        $r13 = (java.lang.String) $r12;

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.String,java.lang.String)>("value4", $r13);

        $r14 = virtualinvoke $r2.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object,java.lang.Object)>(null, "a");

        $r15 = (java.lang.String) $r14;

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.String,java.lang.String)>("value6", $r15);

        return;
    }

    public void testMultiKeyRemove()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.keyvalue.MultiKey[] r1;
        java.lang.Object[] r2;
        org.apache.commons.collections4.map.MultiKeyMap r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        org.apache.commons.collections4.keyvalue.MultiKey r4;
        java.lang.Object r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        r1 = specialinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.keyvalue.MultiKey[] getMultiKeyKeys()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Object[] getSampleValues()>();

        i11 = 0;

     label1:
        $i1 = lengthof r1;

        if i11 >= $i1 goto label8;

        virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: void resetFull()>();

        r3 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.map.MultiKeyMap getMap()>();

        i0 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        r4 = r1[i11];

        r5 = r2[i11];

        $i2 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        tableswitch($i2)
        {
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label2:
        $r72 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r73 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z9 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r72, $r73);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z9);

        $r74 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r75 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r76 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object removeMultiKey(java.lang.Object,java.lang.Object)>($r74, $r75);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r76);

        $r77 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r78 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z10 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r77, $r78);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z10);

        $i9 = i0 - 1;

        $i10 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>($i9, $i10);

        $r79 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r80 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r81 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object removeMultiKey(java.lang.Object,java.lang.Object)>($r79, $r80);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r81);

        $r82 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r83 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z11 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r82, $r83);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z11);

        goto label7;

     label3:
        $r55 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r56 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r57 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z6 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r55, $r56, $r57);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z6);

        $r58 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r59 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r60 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r61 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r58, $r59, $r60);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r61);

        $r62 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r63 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r64 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z7 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r62, $r63, $r64);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z7);

        $i7 = i0 - 1;

        $i8 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>($i7, $i8);

        $r65 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r66 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r67 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r68 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r65, $r66, $r67);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r68);

        $r69 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r70 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r71 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z8 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r69, $r70, $r71);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z8);

        goto label7;

     label4:
        $r33 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r34 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r35 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r36 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $z3 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r33, $r34, $r35, $r36);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z3);

        $r37 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r38 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r39 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r40 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r41 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r37, $r38, $r39, $r40);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r41);

        $r42 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r43 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r44 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r45 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $z4 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r42, $r43, $r44, $r45);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z4);

        $i5 = i0 - 1;

        $i6 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>($i5, $i6);

        $r46 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r47 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r48 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r49 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r50 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r46, $r47, $r48, $r49);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r50);

        $r51 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r52 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r53 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r54 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $z5 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r51, $r52, $r53, $r54);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z5);

        goto label7;

     label5:
        $r6 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r7 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r8 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r9 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r10 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $z0 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r7, $r8, $r9, $r10);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r11 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r12 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r13 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r14 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r15 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $r16 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r12, $r13, $r14, $r15);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r16);

        $r17 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r18 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r19 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r20 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r21 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $z1 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r17, $r18, $r19, $r20, $r21);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z1);

        $i3 = i0 - 1;

        $i4 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>($i3, $i4);

        $r22 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r23 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r24 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r25 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r26 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $r27 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r22, $r23, $r24, $r25, $r26);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r27);

        $r28 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $r29 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $r30 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $r31 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $r32 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(4);

        $z2 = virtualinvoke r3.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r28, $r29, $r30, $r31, $r32);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z2);

        goto label7;

     label6:
        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void fail(java.lang.String)>("Invalid key size");

     label7:
        i11 = i11 + 1;

        goto label1;

     label8:
        return;
    }

    public void testMultiKeyRemoveAll1()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap r1;
        org.apache.commons.collections4.MapIterator r2;
        org.apache.commons.collections4.keyvalue.MultiKey r3;
        int $i0, $i1;
        java.lang.Integer $r4, $r6;
        boolean $z1, $z2;
        java.lang.Object $r5, $r7;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: void resetFull()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.map.MultiKeyMap getMap()>();

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(12, $i0);

        $r4 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean removeAll(java.lang.Object)>($r4);

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(8, $i1);

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: org.apache.commons.collections4.MapIterator mapIterator()>();

     label1:
        $z1 = interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        r3 = (org.apache.commons.collections4.keyvalue.MultiKey) $r5;

        $r6 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r7 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $z2 = virtualinvoke $r6.<java.lang.Integer: boolean equals(java.lang.Object)>($r7);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z2);

        goto label1;

     label2:
        return;
    }

    public void testMultiKeyRemoveAll2()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap r1;
        org.apache.commons.collections4.MapIterator r2;
        org.apache.commons.collections4.keyvalue.MultiKey r3;
        int $i0, $i1;
        java.lang.Integer $r4, $r5, $r7, $r9;
        boolean $z1, $z2, $z3, $z5;
        java.lang.Object $r6, $r8, $r10;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: void resetFull()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.map.MultiKeyMap getMap()>();

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(12, $i0);

        $r5 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r4 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean removeAll(java.lang.Object,java.lang.Object)>($r5, $r4);

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(9, $i1);

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: org.apache.commons.collections4.MapIterator mapIterator()>();

     label1:
        $z1 = interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        r3 = (org.apache.commons.collections4.keyvalue.MultiKey) $r6;

        $r7 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r8 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $z2 = virtualinvoke $r7.<java.lang.Integer: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label2;

        $r9 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        $r10 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z3 = virtualinvoke $r9.<java.lang.Integer: boolean equals(java.lang.Object)>($r10);

        if $z3 == 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z5);

        goto label1;

     label4:
        return;
    }

    public void testMultiKeyRemoveAll3()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap r1;
        org.apache.commons.collections4.MapIterator r2;
        org.apache.commons.collections4.keyvalue.MultiKey r3;
        int $i0, $i1;
        java.lang.Integer $r4, $r5, $r6, $r8, $r10, $r12;
        boolean $z1, $z2, $z3, $z4, $z6;
        java.lang.Object $r7, $r9, $r11, $r13;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: void resetFull()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.map.MultiKeyMap getMap()>();

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(12, $i0);

        $r6 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r5 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r4 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean removeAll(java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r5, $r4);

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(9, $i1);

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: org.apache.commons.collections4.MapIterator mapIterator()>();

     label1:
        $z1 = interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        r3 = (org.apache.commons.collections4.keyvalue.MultiKey) $r7;

        $r8 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r9 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $z2 = virtualinvoke $r8.<java.lang.Integer: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label2;

        $r10 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r11 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z3 = virtualinvoke $r10.<java.lang.Integer: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label2;

        $r12 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r13 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z4 = virtualinvoke $r12.<java.lang.Integer: boolean equals(java.lang.Object)>($r13);

        if $z4 == 0 goto label2;

        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z6);

        goto label1;

     label4:
        return;
    }

    public void testMultiKeyRemoveAll4()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap r1;
        org.apache.commons.collections4.MapIterator r2;
        org.apache.commons.collections4.keyvalue.MultiKey r3;
        int $i0, $i1, $i2;
        java.lang.Integer $r4, $r5, $r6, $r7, $r9, $r11, $r13, $r15;
        boolean $z1, $z2, $z3, $z4, $z5, $z7;
        java.lang.Object $r8, $r10, $r12, $r14, $r16;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: void resetFull()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.map.MultiKeyMap getMap()>();

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(12, $i0);

        $r7 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r6 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r5 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r4 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean removeAll(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, $r5, $r4);

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(10, $i1);

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: org.apache.commons.collections4.MapIterator mapIterator()>();

     label1:
        $z1 = interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        r3 = (org.apache.commons.collections4.keyvalue.MultiKey) $r8;

        $r9 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r10 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        $z2 = virtualinvoke $r9.<java.lang.Integer: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label2;

        $r11 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r12 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        $z3 = virtualinvoke $r11.<java.lang.Integer: boolean equals(java.lang.Object)>($r12);

        if $z3 == 0 goto label2;

        $r13 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $r14 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        $z4 = virtualinvoke $r13.<java.lang.Integer: boolean equals(java.lang.Object)>($r14);

        if $z4 == 0 goto label2;

        $i2 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        if $i2 < 4 goto label2;

        $r15 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        $r16 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(3);

        $z5 = virtualinvoke $r15.<java.lang.Integer: boolean equals(java.lang.Object)>($r16);

        if $z5 == 0 goto label2;

        $z7 = 1;

        goto label3;

     label2:
        $z7 = 0;

     label3:
        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z7);

        goto label1;

     label4:
        return;
    }

    public void testClone()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap r2, $r3;
        org.apache.commons.collections4.keyvalue.MultiKey $r4, $r8, $r12;
        java.lang.Integer $r5, $r6, $r9, $r10, $r13, $r14;
        int $i0, $i1;
        java.lang.Object $r11, $r15;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r3 = new org.apache.commons.collections4.map.MultiKeyMap;

        specialinvoke $r3.<org.apache.commons.collections4.map.MultiKeyMap: void <init>()>();

        $r4 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r6 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r5 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        specialinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r6, $r5);

        virtualinvoke $r3.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(org.apache.commons.collections4.keyvalue.MultiKey,java.lang.Object)>($r4, "1-2");

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.MultiKeyMap: org.apache.commons.collections4.map.MultiKeyMap clone()>();

        $i0 = virtualinvoke $r3.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        $i1 = interfaceinvoke r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>($i0, $i1);

        $r8 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r10 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r9 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        specialinvoke $r8.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r10, $r9);

        $r11 = virtualinvoke $r3.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object get(java.lang.Object)>($r8);

        $r12 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r14 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r13 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        specialinvoke $r12.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r14, $r13);

        $r15 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r11, $r15);

        return;
    }

    public void testLRUMultiKeyMap()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap r1, r2;
        org.apache.commons.collections4.map.LRUMap $r3;
        java.lang.Integer $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r3 = new org.apache.commons.collections4.map.LRUMap;

        specialinvoke $r3.<org.apache.commons.collections4.map.LRUMap: void <init>(int)>(2);

        r1 = staticinvoke <org.apache.commons.collections4.map.MultiKeyMap: org.apache.commons.collections4.map.MultiKeyMap multiKeyMap(org.apache.commons.collections4.map.AbstractHashedMap)>($r3);

        $r5 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r4 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r4, "1-2");

        $r8 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r7 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, "1-1");

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(2, $i0);

        $r11 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r10 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I4>;

        virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, "1-4");

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(2, $i1);

        $r14 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r13 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r14, $r13);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r16 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r15 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I4>;

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r16, $r15);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r18 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r17 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $z2 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r18, $r17);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z2);

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: org.apache.commons.collections4.map.MultiKeyMap clone()>();

        $i2 = virtualinvoke r1.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(2, $i2);

        $r20 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r19 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3>;

        $z3 = virtualinvoke r2.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r20, $r19);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z3);

        $r22 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r21 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I4>;

        $z4 = virtualinvoke r2.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r22, $r21);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z4);

        $r24 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r23 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2>;

        $z5 = virtualinvoke r2.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r24, $r23);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(0, $z5);

        $r26 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r25 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I5>;

        virtualinvoke r2.<org.apache.commons.collections4.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>($r26, $r25, "1-5");

        $i3 = virtualinvoke r2.<org.apache.commons.collections4.map.MultiKeyMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(int,int)>(2, $i3);

        $r29 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r28 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I4>;

        $z6 = virtualinvoke r2.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r29, $r28);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z6);

        $r31 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1>;

        $r30 = <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I5>;

        $z7 = virtualinvoke r2.<org.apache.commons.collections4.map.MultiKeyMap: boolean containsKey(java.lang.Object,java.lang.Object)>($r31, $r30);

        staticinvoke <org.apache.commons.collections4.map.MultiKeyMapTest: void assertEquals(boolean,boolean)>(1, $z7);

        return;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        return "4";
    }

    public org.apache.commons.collections4.map.MultiKeyMap getMap()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.IterableMap $r1;
        org.apache.commons.collections4.map.MultiKeyMap $r2;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: org.apache.commons.collections4.IterableMap getMap()>();

        $r2 = (org.apache.commons.collections4.map.MultiKeyMap) $r1;

        return $r2;
    }

    public volatile org.apache.commons.collections4.IterableMap getMap()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap $r1;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.map.MultiKeyMap getMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.IterableMap makeObject()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap $r1;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.map.MultiKeyMap makeObject()>();

        return $r1;
    }

    public volatile java.util.Map getMap()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap $r1;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.map.MultiKeyMap getMap()>();

        return $r1;
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap $r1;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.map.MultiKeyMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object[] getOtherKeys()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.keyvalue.MultiKey[] $r1;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.keyvalue.MultiKey[] getOtherKeys()>();

        return $r1;
    }

    public volatile java.lang.Object[] getSampleKeys()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.keyvalue.MultiKey[] $r1;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.keyvalue.MultiKey[] getSampleKeys()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.MultiKeyMapTest r0;
        org.apache.commons.collections4.map.MultiKeyMap $r1;

        r0 := @this: org.apache.commons.collections4.map.MultiKeyMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiKeyMapTest: org.apache.commons.collections4.map.MultiKeyMap makeObject()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Integer $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I1> = $r0;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I2> = $r1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I3> = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I4> = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I5> = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I6> = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I7> = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        <org.apache.commons.collections4.map.MultiKeyMapTest: java.lang.Integer I8> = $r7;

        return;
    }
}
