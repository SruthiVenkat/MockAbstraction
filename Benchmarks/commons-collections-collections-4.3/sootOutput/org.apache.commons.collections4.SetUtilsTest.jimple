public class org.apache.commons.collections4.SetUtilsTest extends java.lang.Object
{
    private java.util.Set setA;
    private java.util.Set setB;

    public void <init>()
    {
        org.apache.commons.collections4.SetUtilsTest r0;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void difference()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        org.apache.commons.collections4.SetUtils$SetView r1, r19;
        java.util.Set $r2, $r3, $r6, $r7, $r8, $r9, $r10, $r12;
        int $i0;
        long $l1;
        java.lang.Integer $r4, $r5, r18;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r14;
        java.lang.NullPointerException $r15, $r16;
        java.util.Iterator r17;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        $r3 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r2 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>;

        r1 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView difference(java.util.Set,java.util.Set)>($r3, $r2);

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r4);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r5);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r6 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>;

        r17 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r14 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.Integer) $r14;

        $z3 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>(r18);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3);

        goto label1;

     label2:
        $r7 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r8 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptySet()>();

        r19 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView difference(java.util.Set,java.util.Set)>($r7, $r8);

        $r9 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, r19);

     label3:
        $r10 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView difference(java.util.Set,java.util.Set)>($r10, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException");

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

     label6:
        $r12 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView difference(java.util.Set,java.util.Set)>(null, $r12);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException");

     label7:
        goto label9;

     label8:
        $r15 := @caughtexception;

     label9:
        return;

        catch java.lang.NullPointerException from label3 to label4 with label5;
        catch java.lang.NullPointerException from label6 to label7 with label8;
    }

    public void disjunction()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        org.apache.commons.collections4.SetUtils$SetView r1, r2;
        java.util.Set $r3, $r4, $r12, $r13, $r14, $r15, $r17;
        int $i0;
        long $l1;
        java.lang.Integer $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.NullPointerException $r19, $r20;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        $r4 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r3 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>;

        r1 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView disjunction(java.util.Set,java.util.Set)>($r4, $r3);

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r5);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r6);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $z2 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r7);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $z3 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r8);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $z4 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r9);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z4);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $z5 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r10);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z5);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $z6 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r11);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z6);

        $r12 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r13 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptySet()>();

        r2 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView disjunction(java.util.Set,java.util.Set)>($r12, $r13);

        $r14 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, r2);

     label1:
        $r15 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView disjunction(java.util.Set,java.util.Set)>($r15, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException");

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

     label4:
        $r17 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView disjunction(java.util.Set,java.util.Set)>(null, $r17);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException");

     label5:
        goto label7;

     label6:
        $r20 := @caughtexception;

     label7:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label4 to label5 with label6;
    }

    public void intersection()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        org.apache.commons.collections4.SetUtils$SetView r1, r2;
        java.util.Set $r3, $r4, $r12, $r13, $r14, $r15, $r17;
        int $i0;
        long $l1;
        java.lang.Integer $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.NullPointerException $r19, $r20;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        $r4 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r3 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>;

        r1 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView intersection(java.util.Set,java.util.Set)>($r4, $r3);

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r5);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r6);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $z2 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r7);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $z3 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r8);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $z4 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r9);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z4);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $z5 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r10);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z5);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $z6 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r11);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z6);

        $r12 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r13 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptySet()>();

        r2 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView intersection(java.util.Set,java.util.Set)>($r12, $r13);

        $r14 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptySet()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, r2);

     label1:
        $r15 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView intersection(java.util.Set,java.util.Set)>($r15, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException");

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

     label4:
        $r17 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView intersection(java.util.Set,java.util.Set)>(null, $r17);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException");

     label5:
        goto label7;

     label6:
        $r20 := @caughtexception;

     label7:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label4 to label5 with label6;
    }

    public void setUp()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        java.util.HashSet $r1, $r12;
        java.util.Set $r2, $r4, $r6, $r8, $r10, $r13, $r15, $r17, $r19, $r21;
        java.lang.Integer $r3, $r5, $r7, $r9, $r11, $r14, $r16, $r18, $r20, $r22;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA> = $r1;

        $r2 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r4 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $r6 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r7);

        $r8 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r9);

        $r10 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r11);

        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

        r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB> = $r12;

        $r13 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>($r14);

        $r15 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>($r16);

        $r17 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>($r18);

        $r19 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>($r20);

        $r21 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>($r22);

        return;
    }

    public void testEmptyIfNull()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        java.util.Set $r2, $r4;
        boolean $z0;
        java.util.HashSet $r3;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        $r2 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptyIfNull(java.util.Set)>(null);

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean isEmpty()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r4 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptyIfNull(java.util.Set)>($r3);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r3, $r4);

        return;
    }

    public void testEquals()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        java.util.List r1;
        java.lang.String[] $r4;
        java.util.HashSet $r5, $r6;
        java.lang.Boolean $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        $r4 = newarray (java.lang.String)[3];

        $r4[0] = "a";

        $r4[1] = "b";

        $r4[2] = "c";

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>(r1);

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>(java.util.Collection)>(r1);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean equals(java.lang.Object)>($r6);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $z1 = staticinvoke <org.apache.commons.collections4.SetUtils: boolean isEqualSet(java.util.Collection,java.util.Collection)>($r5, $r6);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10);

        interfaceinvoke $r5.<java.util.Set: void clear()>();

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z2 = staticinvoke <org.apache.commons.collections4.SetUtils: boolean isEqualSet(java.util.Collection,java.util.Collection)>($r5, $r6);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12);

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z3 = staticinvoke <org.apache.commons.collections4.SetUtils: boolean isEqualSet(java.util.Collection,java.util.Collection)>($r5, null);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14);

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z4 = staticinvoke <org.apache.commons.collections4.SetUtils: boolean isEqualSet(java.util.Collection,java.util.Collection)>(null, $r6);

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16);

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $z5 = staticinvoke <org.apache.commons.collections4.SetUtils: boolean isEqualSet(java.util.Collection,java.util.Collection)>(null, null);

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

        return;
    }

    public void testHashCode()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        java.util.List r1;
        java.lang.String[] $r4;
        java.util.HashSet $r5, $r6;
        java.lang.Boolean $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        long $l11;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        $r4 = newarray (java.lang.String)[3];

        $r4[0] = "a";

        $r4[1] = "b";

        $r4[2] = "c";

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>(r1);

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>(java.util.Collection)>(r1);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $i0 = interfaceinvoke $r5.<java.util.Set: int hashCode()>();

        $i1 = interfaceinvoke $r6.<java.util.Set: int hashCode()>();

        if $i0 != $i1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $i2 = interfaceinvoke $r5.<java.util.Set: int hashCode()>();

        $i3 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>($r5);

        if $i2 != $i3 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $i4 = interfaceinvoke $r6.<java.util.Set: int hashCode()>();

        $i5 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>($r6);

        if $i4 != $i5 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12);

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $i6 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>($r5);

        $i7 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>($r6);

        if $i6 != $i7 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14);

        interfaceinvoke $r5.<java.util.Set: void clear()>();

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $i8 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>($r5);

        $i9 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>($r6);

        if $i8 != $i9 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16);

        $i10 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>(null);

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l11);

        return;
    }

    public void testHashSet()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        java.util.Set r1;
        java.util.HashSet r2, r3, r4, r5;
        java.lang.Object[] $r6, $r16, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Integer[] $r7;
        java.lang.Integer $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        int $i0, $i2, $i4;
        long $l1, $l3, $l5;
        java.lang.String[] $r15;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        $r6 = newarray (java.lang.Object)[0];

        r1 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r6);

        $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set is empty", $z0);

        $r7 = newarray (java.lang.Integer)[4];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r7[1] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r7[2] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r7[3] = $r11;

        r2 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.HashSet hashSet(java.lang.Object[])>($r7);

        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("set has 3 elements", 3L, $l1);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $z1 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r12);

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 1", $z1);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r13);

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 2", $z2);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $z3 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r14);

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 3", $z3);

        $r15 = newarray (java.lang.String)[4];

        $r15[0] = "1";

        $r15[1] = "2";

        $r15[2] = "2";

        $r15[3] = "3";

        r3 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.HashSet hashSet(java.lang.Object[])>($r15);

        $i2 = interfaceinvoke r3.<java.util.Set: int size()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("set has 3 elements", 3L, $l3);

        $z4 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("1");

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 1", $z4);

        $z5 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("2");

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 2", $z5);

        $z6 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("3");

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 3", $z6);

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = null;

        $r16[1] = null;

        r4 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.HashSet hashSet(java.lang.Object[])>($r16);

        $i4 = interfaceinvoke r4.<java.util.Set: int size()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("set has 1 element", 1L, $l5);

        $z7 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains null", $z7);

        $r17 = (java.lang.Object[]) null;

        r5 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.HashSet hashSet(java.lang.Object[])>($r17);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("set is null", null, r5);

        return;
    }

    public void testNewIdentityHashSet()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        java.util.Set r1;
        java.lang.String $r3, $r4, $r5;
        int $i0, $i2, $i4;
        long $l1, $l3, $l5;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        r1 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set newIdentityHashSet()>();

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(java.lang.String)>("a");

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>("b");

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r4);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1);

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("a");

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $i2 = interfaceinvoke r1.<java.util.Set: int size()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3);

        interfaceinvoke r1.<java.util.Set: boolean remove(java.lang.Object)>($r3);

        $i4 = interfaceinvoke r1.<java.util.Set: int size()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l5);

        return;
    }

    public void testpredicatedSet()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        java.util.Set r2;
        org.apache.commons.collections4.SetUtilsTest$1 $r3;
        java.util.HashSet $r4, $r5;
        boolean $z0;
        java.lang.NullPointerException $r8, $r9;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        $r3 = new org.apache.commons.collections4.SetUtilsTest$1;

        specialinvoke $r3.<org.apache.commons.collections4.SetUtilsTest$1: void <init>(org.apache.commons.collections4.SetUtilsTest)>(r0);

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r2 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)>($r4, $r3);

        $z0 = r2 instanceof org.apache.commons.collections4.set.PredicatedSet;

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("returned object should be a PredicatedSet", $z0);

     label1:
        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)>($r5, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null predicate.");

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)>(null, $r3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null set.");

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

     label7:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label4 to label5 with label6;
    }

    public void testUnmodifiableSet()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        java.util.Set r1, r2, r3, r4, r5;
        java.lang.Object[] $r6, $r16, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Integer[] $r7;
        java.lang.Integer $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        int $i0, $i2, $i4;
        long $l1, $l3, $l5;
        java.lang.String[] $r15;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        $r6 = newarray (java.lang.Object)[0];

        r1 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r6);

        $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set is empty", $z0);

        $r7 = newarray (java.lang.Integer)[4];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r7[1] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r7[2] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r7[3] = $r11;

        r2 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r7);

        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("set has 3 elements", 3L, $l1);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $z1 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r12);

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 1", $z1);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r13);

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 2", $z2);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $z3 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r14);

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 3", $z3);

        $r15 = newarray (java.lang.String)[4];

        $r15[0] = "1";

        $r15[1] = "2";

        $r15[2] = "2";

        $r15[3] = "3";

        r3 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r15);

        $i2 = interfaceinvoke r3.<java.util.Set: int size()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("set has 3 elements", 3L, $l3);

        $z4 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("1");

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 1", $z4);

        $z5 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("2");

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 2", $z5);

        $z6 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("3");

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 3", $z6);

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = null;

        $r16[1] = null;

        r4 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r16);

        $i4 = interfaceinvoke r4.<java.util.Set: int size()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("set has 1 element", 1L, $l5);

        $z7 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains null", $z7);

        $r17 = (java.lang.Object[]) null;

        r5 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r17);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("set is null", null, r5);

        return;
    }

    public void testUnmodifiableSetWrap()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        java.util.Set r1, r2;
        java.lang.Integer[] $r3;
        java.lang.Integer $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        $r3 = newarray (java.lang.Integer)[4];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r3[2] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r3[3] = $r7;

        r1 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r3);

        r2 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.util.Set)>(r1);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void union()
    {
        org.apache.commons.collections4.SetUtilsTest r0;
        org.apache.commons.collections4.SetUtils$SetView r1, r2;
        java.util.Set $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12;
        int $i0;
        long $l1;
        boolean $z0, $z1;
        java.lang.NullPointerException $r14, $r15;

        r0 := @this: org.apache.commons.collections4.SetUtilsTest;

        $r4 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r3 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>;

        r1 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView union(java.util.Set,java.util.Set)>($r4, $r3);

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(7L, $l1);

        $r5 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean containsAll(java.util.Collection)>($r5);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r6 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>;

        $z1 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean containsAll(java.util.Collection)>($r6);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r7 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        $r8 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptySet()>();

        r2 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView union(java.util.Set,java.util.Set)>($r7, $r8);

        $r9 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, r2);

     label1:
        $r10 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView union(java.util.Set,java.util.Set)>($r10, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException");

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

     label4:
        $r12 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>;

        staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView union(java.util.Set,java.util.Set)>(null, $r12);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException");

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

     label7:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label4 to label5 with label6;
    }
}
