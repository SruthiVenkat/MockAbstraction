public abstract class org.apache.commons.collections4.functors.AbstractCompositePredicateTest extends org.apache.commons.collections4.functors.AbstractMockPredicateTest
{

    protected void <init>(java.lang.Object)
    {
        org.apache.commons.collections4.functors.AbstractCompositePredicateTest r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections4.functors.AbstractCompositePredicateTest;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.commons.collections4.functors.AbstractMockPredicateTest: void <init>(java.lang.Object)>(r1);

        return;
    }

    protected abstract transient org.apache.commons.collections4.Predicate getPredicateInstance(org.apache.commons.collections4.Predicate[]);

    protected abstract org.apache.commons.collections4.Predicate getPredicateInstance(java.util.Collection);

    protected final transient org.apache.commons.collections4.Predicate getPredicateInstance(java.lang.Boolean[])
    {
        org.apache.commons.collections4.functors.AbstractCompositePredicateTest r0;
        java.lang.Boolean[] r1;
        int i0, i1;
        java.lang.Boolean r4;
        java.util.ArrayList $r5;
        org.apache.commons.collections4.Predicate $r6, $r7;

        r0 := @this: org.apache.commons.collections4.functors.AbstractCompositePredicateTest;

        r1 := @parameter0: java.lang.Boolean[];

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r1[i1];

        $r7 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate createMockPredicate(java.lang.Boolean)>(r4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.util.Collection)>($r5);

        return $r6;
    }

    public void singleElementArrayToGetInstance()
    {
        org.apache.commons.collections4.functors.AbstractCompositePredicateTest r0;
        org.apache.commons.collections4.Predicate r1, r2;
        org.apache.commons.collections4.Predicate[] $r3;

        r0 := @this: org.apache.commons.collections4.functors.AbstractCompositePredicateTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate createMockPredicate(java.lang.Boolean)>(null);

        $r3 = newarray (org.apache.commons.collections4.Predicate)[1];

        $r3[0] = r1;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(org.apache.commons.collections4.Predicate[])>($r3);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("expected argument to be returned by getInstance()", r1, r2);

        return;
    }

    public void singletonCollectionToGetInstance()
    {
        org.apache.commons.collections4.functors.AbstractCompositePredicateTest r0;
        org.apache.commons.collections4.Predicate r1, r2;
        java.util.Set $r3;

        r0 := @this: org.apache.commons.collections4.functors.AbstractCompositePredicateTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate createMockPredicate(java.lang.Boolean)>(null);

        $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r1);

        r2 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.util.Collection)>($r3);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("expected argument to be returned by getInstance()", r1, r2);

        return;
    }

    public final void nullArrayToGetInstance()
    {
        org.apache.commons.collections4.functors.AbstractCompositePredicateTest r0;
        org.apache.commons.collections4.Predicate[] $r1;

        r0 := @this: org.apache.commons.collections4.functors.AbstractCompositePredicateTest;

        $r1 = (org.apache.commons.collections4.Predicate[]) null;

        virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(org.apache.commons.collections4.Predicate[])>($r1);

        return;
    }

    public final void nullElementInArrayToGetInstance()
    {
        org.apache.commons.collections4.functors.AbstractCompositePredicateTest r0;
        org.apache.commons.collections4.Predicate[] $r1;

        r0 := @this: org.apache.commons.collections4.functors.AbstractCompositePredicateTest;

        $r1 = newarray (org.apache.commons.collections4.Predicate)[1];

        $r1[0] = null;

        virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(org.apache.commons.collections4.Predicate[])>($r1);

        return;
    }

    public final void nullElementsInArrayToGetInstance()
    {
        org.apache.commons.collections4.functors.AbstractCompositePredicateTest r0;
        org.apache.commons.collections4.Predicate[] $r1;

        r0 := @this: org.apache.commons.collections4.functors.AbstractCompositePredicateTest;

        $r1 = newarray (org.apache.commons.collections4.Predicate)[2];

        $r1[0] = null;

        $r1[1] = null;

        virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(org.apache.commons.collections4.Predicate[])>($r1);

        return;
    }

    public final void nullCollectionToGetInstance()
    {
        org.apache.commons.collections4.functors.AbstractCompositePredicateTest r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.collections4.functors.AbstractCompositePredicateTest;

        $r1 = (java.util.Collection) null;

        virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.util.Collection)>($r1);

        return;
    }

    public final void nullElementsInCollectionToGetInstance()
    {
        org.apache.commons.collections4.functors.AbstractCompositePredicateTest r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.collections4.functors.AbstractCompositePredicateTest;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(null);

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(null);

        virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.util.Collection)>($r2);

        return;
    }
}
