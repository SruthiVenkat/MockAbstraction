public class org.apache.commons.collections4.map.ListOrderedMap2Test extends org.apache.commons.collections4.map.AbstractOrderedMapTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractOrderedMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.BulkTest: junit.framework.TestSuite makeSuite(java.lang.Class)>(class "Lorg/apache/commons/collections4/map/ListOrderedMap2Test;");

        return $r0;
    }

    public org.apache.commons.collections4.map.ListOrderedMap makeObject()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = new org.apache.commons.collections4.map.ListOrderedMap;

        specialinvoke $r1.<org.apache.commons.collections4.map.ListOrderedMap: void <init>()>();

        return $r1;
    }

    public org.apache.commons.collections4.map.ListOrderedMap makeFullMap()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.OrderedMap $r1;
        org.apache.commons.collections4.map.ListOrderedMap $r2;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractOrderedMapTest: org.apache.commons.collections4.OrderedMap makeFullMap()>();

        $r2 = (org.apache.commons.collections4.map.ListOrderedMap) $r1;

        return $r2;
    }

    public void testGetByIndex()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.OrderedMapIterator r1;
        int $i0, i1;
        java.lang.Object $r6, $r7;
        java.lang.IndexOutOfBoundsException $r8, $r9, $r10, $r11;
        org.apache.commons.collections4.map.ListOrderedMap r12, r15;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: void resetEmpty()>();

        r12 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label01:
        virtualinvoke r12.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>(0);

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

     label04:
        virtualinvoke r12.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>(-1);

     label05:
        goto label07;

     label06:
        $r8 := @caughtexception;

     label07:
        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: void resetFull()>();

        r15 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label08:
        virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>(-1);

     label09:
        goto label11;

     label10:
        $r11 := @caughtexception;

     label11:
        $i0 = virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>($i0);

     label12:
        goto label14;

     label13:
        $r10 := @caughtexception;

     label14:
        i1 = 0;

        r1 = virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

     label15:
        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r6 = interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        $r7 = virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>(i1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMap2Test: void assertSame(java.lang.Object,java.lang.Object)>($r6, $r7);

        i1 = i1 + 1;

        goto label15;

     label16:
        return;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label03;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.IndexOutOfBoundsException from label08 to label09 with label10;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label13;
    }

    public void testGetValueByIndex()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.OrderedMapIterator r1;
        int $i0, i1;
        java.lang.Object $r7, $r8;
        java.lang.IndexOutOfBoundsException $r9, $r10, $r11, $r12;
        org.apache.commons.collections4.map.ListOrderedMap r13, r16;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: void resetEmpty()>();

        r13 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label01:
        virtualinvoke r13.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

     label02:
        goto label04;

     label03:
        $r12 := @caughtexception;

     label04:
        virtualinvoke r13.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(-1);

     label05:
        goto label07;

     label06:
        $r10 := @caughtexception;

     label07:
        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: void resetFull()>();

        r16 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label08:
        virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(-1);

     label09:
        goto label11;

     label10:
        $r11 := @caughtexception;

     label11:
        $i0 = virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>($i0);

     label12:
        goto label14;

     label13:
        $r9 := @caughtexception;

     label14:
        i1 = 0;

        r1 = virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

     label15:
        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        $r7 = interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: java.lang.Object getValue()>();

        $r8 = virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(i1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMap2Test: void assertSame(java.lang.Object,java.lang.Object)>($r7, $r8);

        i1 = i1 + 1;

        goto label15;

     label16:
        return;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label03;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.IndexOutOfBoundsException from label08 to label09 with label10;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label13;
    }

    public void testIndexOf()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        java.lang.Object[] $r2;
        int $i0, $i1, $i2, i3;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        org.apache.commons.collections4.map.ListOrderedMap r6, r7;
        org.apache.commons.collections4.OrderedMapIterator r8;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: void resetEmpty()>();

        r6 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: java.lang.Object[] getOtherKeys()>();

        $i0 = virtualinvoke r6.<org.apache.commons.collections4.map.ListOrderedMap: int indexOf(java.lang.Object)>($r2);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMap2Test: void assertEquals(int,int)>(-1, $i0);

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: void resetFull()>();

        r7 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r8 = virtualinvoke r7.<org.apache.commons.collections4.map.ListOrderedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

     label1:
        $z0 = interfaceinvoke r8.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r8.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        i3 = 0;

     label3:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i3 >= $i1 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        $i2 = virtualinvoke r7.<org.apache.commons.collections4.map.ListOrderedMap: int indexOf(java.lang.Object)>($r4);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMap2Test: void assertEquals(int,int)>(i3, $i2);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public void testRemoveByIndex()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        java.lang.Object r1, r2, $r8, $r10;
        int $i0, $i1, i2;
        java.util.ArrayList $r7;
        boolean $z0, $z2;
        java.lang.IndexOutOfBoundsException $r11, $r12, $r13, $r14;
        org.apache.commons.collections4.map.ListOrderedMap r15, r18;
        org.apache.commons.collections4.OrderedMapIterator r22;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: void resetEmpty()>();

        r15 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label01:
        virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object remove(int)>(0);

     label02:
        goto label04;

     label03:
        $r14 := @caughtexception;

     label04:
        virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object remove(int)>(-1);

     label05:
        goto label07;

     label06:
        $r13 := @caughtexception;

     label07:
        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: void resetFull()>();

        r18 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label08:
        virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object remove(int)>(-1);

     label09:
        goto label11;

     label10:
        $r12 := @caughtexception;

     label11:
        $i0 = virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object remove(int)>($i0);

     label12:
        goto label14;

     label13:
        $r11 := @caughtexception;

     label14:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r22 = virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

     label15:
        $z2 = interfaceinvoke r22.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        $r10 = interfaceinvoke r22.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label15;

     label16:
        i2 = 0;

     label17:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i2 >= $i1 goto label18;

        r1 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object remove(int)>(i2);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMap2Test: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r8);

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i2);

        $z0 = virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: boolean containsKey(java.lang.Object)>(r1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMap2Test: void assertEquals(boolean,boolean)>(0, $z0);

        i2 = i2 + 1;

        goto label17;

     label18:
        return;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label03;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.IndexOutOfBoundsException from label08 to label09 with label10;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label13;
    }

    public org.apache.commons.collections4.BulkTest bulkTestListView()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = new org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView;

        specialinvoke $r1.<org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView: void <init>(org.apache.commons.collections4.map.ListOrderedMap2Test)>(r0);

        return $r1;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        return "4";
    }

    public org.apache.commons.collections4.map.ListOrderedMap getMap()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.OrderedMap $r1;
        org.apache.commons.collections4.map.ListOrderedMap $r2;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractOrderedMapTest: org.apache.commons.collections4.OrderedMap getMap()>();

        $r2 = (org.apache.commons.collections4.map.ListOrderedMap) $r1;

        return $r2;
    }

    public volatile org.apache.commons.collections4.OrderedMap getMap()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.OrderedMap makeFullMap()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap makeFullMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.OrderedMap makeObject()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap makeObject()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.IterableMap getMap()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.IterableMap makeFullMap()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap makeFullMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.IterableMap makeObject()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap makeObject()>();

        return $r1;
    }

    public volatile java.util.Map getMap()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        return $r1;
    }

    public volatile java.util.Map makeFullMap()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap makeFullMap()>();

        return $r1;
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.ListOrderedMap2Test r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap2Test: org.apache.commons.collections4.map.ListOrderedMap makeObject()>();

        return $r1;
    }
}
