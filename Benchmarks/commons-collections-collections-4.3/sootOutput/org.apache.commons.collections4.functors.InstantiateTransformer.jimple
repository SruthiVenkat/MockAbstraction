public class org.apache.commons.collections4.functors.InstantiateTransformer extends java.lang.Object implements org.apache.commons.collections4.Transformer
{
    private static final org.apache.commons.collections4.Transformer NO_ARG_INSTANCE;
    private final java.lang.Class[] iParamTypes;
    private final java.lang.Object[] iArgs;

    public static org.apache.commons.collections4.Transformer instantiateTransformer()
    {
        org.apache.commons.collections4.Transformer $r0;

        $r0 = <org.apache.commons.collections4.functors.InstantiateTransformer: org.apache.commons.collections4.Transformer NO_ARG_INSTANCE>;

        return $r0;
    }

    public static org.apache.commons.collections4.Transformer instantiateTransformer(java.lang.Class[], java.lang.Object[])
    {
        java.lang.Class[] r0;
        java.lang.Object[] r1;
        org.apache.commons.collections4.functors.InstantiateTransformer $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: java.lang.Class[];

        r1 := @parameter1: java.lang.Object[];

        if r0 != null goto label1;

        if r1 != null goto label3;

     label1:
        if r0 == null goto label2;

        if r1 == null goto label3;

     label2:
        if r0 == null goto label4;

        if r1 == null goto label4;

        $i2 = lengthof r0;

        $i1 = lengthof r1;

        if $i2 == $i1 goto label4;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter types must match the arguments");

        throw $r4;

     label4:
        if r0 == null goto label5;

        $i0 = lengthof r0;

        if $i0 != 0 goto label6;

     label5:
        $r2 = new org.apache.commons.collections4.functors.InstantiateTransformer;

        specialinvoke $r2.<org.apache.commons.collections4.functors.InstantiateTransformer: void <init>()>();

        return $r2;

     label6:
        $r3 = new org.apache.commons.collections4.functors.InstantiateTransformer;

        specialinvoke $r3.<org.apache.commons.collections4.functors.InstantiateTransformer: void <init>(java.lang.Class[],java.lang.Object[])>(r0, r1);

        return $r3;
    }

    private void <init>()
    {
        org.apache.commons.collections4.functors.InstantiateTransformer r0;

        r0 := @this: org.apache.commons.collections4.functors.InstantiateTransformer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.functors.InstantiateTransformer: java.lang.Class[] iParamTypes> = null;

        r0.<org.apache.commons.collections4.functors.InstantiateTransformer: java.lang.Object[] iArgs> = null;

        return;
    }

    public void <init>(java.lang.Class[], java.lang.Object[])
    {
        org.apache.commons.collections4.functors.InstantiateTransformer r0;
        java.lang.Class[] r1, $r7;
        java.lang.Object[] r2, $r8;
        java.lang.Object $r3, $r5;

        r0 := @this: org.apache.commons.collections4.functors.InstantiateTransformer;

        r1 := @parameter0: java.lang.Class[];

        r2 := @parameter1: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r7 = (java.lang.Class[]) $r5;

        goto label2;

     label1:
        $r7 = null;

     label2:
        r0.<org.apache.commons.collections4.functors.InstantiateTransformer: java.lang.Class[] iParamTypes> = $r7;

        if r2 == null goto label3;

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        $r8 = (java.lang.Object[]) $r3;

        goto label4;

     label3:
        $r8 = null;

     label4:
        r0.<org.apache.commons.collections4.functors.InstantiateTransformer: java.lang.Object[] iArgs> = $r8;

        return;
    }

    public java.lang.Object transform(java.lang.Class)
    {
        org.apache.commons.collections4.functors.InstantiateTransformer r0;
        java.lang.Class r1;
        java.lang.Class[] $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        org.apache.commons.collections4.FunctorException $r5, $r7, $r9, $r11, $r13;
        java.lang.IllegalAccessException $r6;
        java.lang.reflect.InvocationTargetException $r8;
        java.lang.NoSuchMethodException $r10;
        java.lang.InstantiationException $r12;
        java.lang.reflect.Constructor r14;

        r0 := @this: org.apache.commons.collections4.functors.InstantiateTransformer;

        r1 := @parameter0: java.lang.Class;

     label1:
        if r1 != null goto label2;

        $r5 = new org.apache.commons.collections4.FunctorException;

        specialinvoke $r5.<org.apache.commons.collections4.FunctorException: void <init>(java.lang.String)>("InstantiateTransformer: Input object was not an instanceof Class, it was a null object");

        throw $r5;

     label2:
        $r2 = r0.<org.apache.commons.collections4.functors.InstantiateTransformer: java.lang.Class[] iParamTypes>;

        r14 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

        $r3 = r0.<org.apache.commons.collections4.functors.InstantiateTransformer: java.lang.Object[] iArgs>;

        $r4 = virtualinvoke r14.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r3);

     label3:
        return $r4;

     label4:
        $r10 := @caughtexception;

        $r11 = new org.apache.commons.collections4.FunctorException;

        specialinvoke $r11.<org.apache.commons.collections4.FunctorException: void <init>(java.lang.String)>("InstantiateTransformer: The constructor must exist and be public ");

        throw $r11;

     label5:
        $r12 := @caughtexception;

        $r13 = new org.apache.commons.collections4.FunctorException;

        specialinvoke $r13.<org.apache.commons.collections4.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>("InstantiateTransformer: InstantiationException", $r12);

        throw $r13;

     label6:
        $r6 := @caughtexception;

        $r7 = new org.apache.commons.collections4.FunctorException;

        specialinvoke $r7.<org.apache.commons.collections4.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>("InstantiateTransformer: Constructor must be public", $r6);

        throw $r7;

     label7:
        $r8 := @caughtexception;

        $r9 = new org.apache.commons.collections4.FunctorException;

        specialinvoke $r9.<org.apache.commons.collections4.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>("InstantiateTransformer: Constructor threw an exception", $r8);

        throw $r9;

        catch java.lang.NoSuchMethodException from label1 to label3 with label4;
        catch java.lang.InstantiationException from label1 to label3 with label5;
        catch java.lang.IllegalAccessException from label1 to label3 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label3 with label7;
    }

    public volatile java.lang.Object transform(java.lang.Object)
    {
        org.apache.commons.collections4.functors.InstantiateTransformer r0;
        java.lang.Object r1, $r3;
        java.lang.Class $r2;

        r0 := @this: org.apache.commons.collections4.functors.InstantiateTransformer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Class) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.functors.InstantiateTransformer: java.lang.Object transform(java.lang.Class)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.apache.commons.collections4.functors.InstantiateTransformer $r0;

        $r0 = new org.apache.commons.collections4.functors.InstantiateTransformer;

        specialinvoke $r0.<org.apache.commons.collections4.functors.InstantiateTransformer: void <init>()>();

        <org.apache.commons.collections4.functors.InstantiateTransformer: org.apache.commons.collections4.Transformer NO_ARG_INSTANCE> = $r0;

        return;
    }
}
