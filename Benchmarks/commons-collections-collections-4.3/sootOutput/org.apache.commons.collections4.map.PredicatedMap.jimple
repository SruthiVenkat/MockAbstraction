public class org.apache.commons.collections4.map.PredicatedMap extends org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected final org.apache.commons.collections4.Predicate keyPredicate;
    protected final org.apache.commons.collections4.Predicate valuePredicate;

    public static org.apache.commons.collections4.map.PredicatedMap predicatedMap(java.util.Map, org.apache.commons.collections4.Predicate, org.apache.commons.collections4.Predicate)
    {
        java.util.Map r0;
        org.apache.commons.collections4.Predicate r1, r2;
        org.apache.commons.collections4.map.PredicatedMap $r3;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        r2 := @parameter2: org.apache.commons.collections4.Predicate;

        $r3 = new org.apache.commons.collections4.map.PredicatedMap;

        specialinvoke $r3.<org.apache.commons.collections4.map.PredicatedMap: void <init>(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>(r0, r1, r2);

        return $r3;
    }

    protected void <init>(java.util.Map, org.apache.commons.collections4.Predicate, org.apache.commons.collections4.Predicate)
    {
        org.apache.commons.collections4.map.PredicatedMap r0;
        java.util.Map r1;
        org.apache.commons.collections4.Predicate r2, r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7, $r8, $r9;

        r0 := @this: org.apache.commons.collections4.map.PredicatedMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.commons.collections4.Predicate;

        r3 := @parameter2: org.apache.commons.collections4.Predicate;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator: void <init>(java.util.Map)>(r1);

        r0.<org.apache.commons.collections4.map.PredicatedMap: org.apache.commons.collections4.Predicate keyPredicate> = r2;

        r0.<org.apache.commons.collections4.map.PredicatedMap: org.apache.commons.collections4.Predicate valuePredicate> = r3;

        $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.PredicatedMap: void validate(java.lang.Object,java.lang.Object)>($r8, $r9);

        goto label1;

     label2:
        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections4.map.PredicatedMap r0;
        java.io.ObjectOutputStream r1;
        java.util.Map $r2;

        r0 := @this: org.apache.commons.collections4.map.PredicatedMap;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r0.<org.apache.commons.collections4.map.PredicatedMap: java.util.Map map>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.map.PredicatedMap r0;
        java.io.ObjectInputStream r1;
        java.lang.Object $r2;
        java.util.Map $r3;

        r0 := @this: org.apache.commons.collections4.map.PredicatedMap;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.util.Map) $r2;

        r0.<org.apache.commons.collections4.map.PredicatedMap: java.util.Map map> = $r3;

        return;
    }

    protected void validate(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.PredicatedMap r0;
        java.lang.Object r1, r2;
        org.apache.commons.collections4.Predicate $r3, $r4, $r5, $r7;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r6, $r8;

        r0 := @this: org.apache.commons.collections4.map.PredicatedMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.commons.collections4.map.PredicatedMap: org.apache.commons.collections4.Predicate keyPredicate>;

        if $r3 == null goto label1;

        $r7 = r0.<org.apache.commons.collections4.map.PredicatedMap: org.apache.commons.collections4.Predicate keyPredicate>;

        $z1 = interfaceinvoke $r7.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot add key - Predicate rejected it");

        throw $r8;

     label1:
        $r4 = r0.<org.apache.commons.collections4.map.PredicatedMap: org.apache.commons.collections4.Predicate valuePredicate>;

        if $r4 == null goto label2;

        $r5 = r0.<org.apache.commons.collections4.map.PredicatedMap: org.apache.commons.collections4.Predicate valuePredicate>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot add value - Predicate rejected it");

        throw $r6;

     label2:
        return;
    }

    protected java.lang.Object checkSetValue(java.lang.Object)
    {
        org.apache.commons.collections4.map.PredicatedMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.Predicate $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.commons.collections4.map.PredicatedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.map.PredicatedMap: org.apache.commons.collections4.Predicate valuePredicate>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot set value - Predicate rejected it");

        throw $r3;

     label1:
        return r1;
    }

    protected boolean isSetValueChecking()
    {
        org.apache.commons.collections4.map.PredicatedMap r0;
        org.apache.commons.collections4.Predicate $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.PredicatedMap;

        $r1 = r0.<org.apache.commons.collections4.map.PredicatedMap: org.apache.commons.collections4.Predicate valuePredicate>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.PredicatedMap r0;
        java.lang.Object r1, r2, $r4;
        java.util.Map $r3;

        r0 := @this: org.apache.commons.collections4.map.PredicatedMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections4.map.PredicatedMap: void validate(java.lang.Object,java.lang.Object)>(r1, r2);

        $r3 = r0.<org.apache.commons.collections4.map.PredicatedMap: java.util.Map map>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r4;
    }

    public void putAll(java.util.Map)
    {
        org.apache.commons.collections4.map.PredicatedMap r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7;

        r0 := @this: org.apache.commons.collections4.map.PredicatedMap;

        r1 := @parameter0: java.util.Map;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.PredicatedMap: void validate(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        specialinvoke r0.<org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator: void putAll(java.util.Map)>(r1);

        return;
    }

    public volatile java.util.Set entrySet()
    {
        org.apache.commons.collections4.map.PredicatedMap r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.map.PredicatedMap;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator: java.util.Set entrySet()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.map.PredicatedMap: long serialVersionUID> = 7412622456128415156L;

        return;
    }
}
