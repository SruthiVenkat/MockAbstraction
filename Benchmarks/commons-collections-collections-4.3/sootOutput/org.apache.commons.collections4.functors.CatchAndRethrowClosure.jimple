public abstract class org.apache.commons.collections4.functors.CatchAndRethrowClosure extends java.lang.Object implements org.apache.commons.collections4.Closure
{

    public void <init>()
    {
        org.apache.commons.collections4.functors.CatchAndRethrowClosure r0;

        r0 := @this: org.apache.commons.collections4.functors.CatchAndRethrowClosure;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(java.lang.Object)
    {
        org.apache.commons.collections4.functors.CatchAndRethrowClosure r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        org.apache.commons.collections4.FunctorException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: org.apache.commons.collections4.functors.CatchAndRethrowClosure;

        r1 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<org.apache.commons.collections4.functors.CatchAndRethrowClosure: void executeAndThrow(java.lang.Object)>(r1);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        throw $r4;

     label4:
        $r2 := @caughtexception;

        $r3 = new org.apache.commons.collections4.FunctorException;

        specialinvoke $r3.<org.apache.commons.collections4.FunctorException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    protected abstract void executeAndThrow(java.lang.Object) throws java.lang.Throwable;
}
