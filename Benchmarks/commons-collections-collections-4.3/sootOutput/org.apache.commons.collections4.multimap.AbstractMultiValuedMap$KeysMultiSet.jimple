class org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet extends org.apache.commons.collections4.multiset.AbstractMultiSet
{
    final org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0;

    private void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet;

        r1 := @parameter0: org.apache.commons.collections4.multimap.AbstractMultiValuedMap;

        r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0> = r1;

        specialinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSet: void <init>()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet r0;
        java.lang.Object r1;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap $r2;
        java.util.Map $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: java.util.Map getMap()>();

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap $r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: java.util.Map getMap()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public int size()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: int size()>();

        return $i0;
    }

    protected int uniqueElements()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap $r1;
        java.util.Map $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: java.util.Map getMap()>();

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        return $i0;
    }

    public int getCount(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet r0;
        java.lang.Object r1, $r5;
        java.util.Collection r2;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap $r3;
        java.util.Map $r4;
        int i0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet;

        r1 := @parameter0: java.lang.Object;

        i0 = 0;

        $r3 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0>;

        $r4 = virtualinvoke $r3.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: java.util.Map getMap()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.Collection) $r5;

        if r2 == null goto label1;

        i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

     label1:
        return i0;
    }

    protected java.util.Iterator createEntrySetIterator()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer $r2;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap $r3;
        java.util.Map $r4;
        java.util.Set $r5;
        java.util.Iterator $r6, $r7;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet;

        $r2 = new org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer;

        specialinvoke $r2.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer: void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet,org.apache.commons.collections4.multimap.AbstractMultiValuedMap$1)>(r0, null);

        $r3 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0>;

        $r4 = staticinvoke <org.apache.commons.collections4.multimap.AbstractMultiValuedMap: java.util.Map access$300(org.apache.commons.collections4.multimap.AbstractMultiValuedMap)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        $r7 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator transformedIterator(java.util.Iterator,org.apache.commons.collections4.Transformer)>($r6, $r2);

        return $r7;
    }

    void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap, org.apache.commons.collections4.multimap.AbstractMultiValuedMap$1)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap r1;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$1 r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet;

        r1 := @parameter0: org.apache.commons.collections4.multimap.AbstractMultiValuedMap;

        r2 := @parameter1: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$1;

        specialinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet: void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap)>(r1);

        return;
    }
}
