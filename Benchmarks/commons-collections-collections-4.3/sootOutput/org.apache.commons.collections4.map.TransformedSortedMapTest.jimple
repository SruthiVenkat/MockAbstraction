public class org.apache.commons.collections4.map.TransformedSortedMapTest extends org.apache.commons.collections4.map.AbstractSortedMapTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.map.TransformedSortedMapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.map.TransformedSortedMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractSortedMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.BulkTest: junit.framework.TestSuite makeSuite(java.lang.Class)>(class "Lorg/apache/commons/collections4/map/TransformedSortedMapTest;");

        return $r0;
    }

    public java.lang.String[] ignoredTests()
    {
        org.apache.commons.collections4.map.TransformedSortedMapTest r0;
        boolean $z0;
        java.lang.String[] $r3;

        r0 := @this: org.apache.commons.collections4.map.TransformedSortedMapTest;

        $z0 = <org.apache.commons.collections4.map.TransformedSortedMapTest: boolean IBMJDK16>;

        if $z0 == 0 goto label1;

        $r3 = newarray (java.lang.String)[11];

        $r3[0] = "TransformedSortedMapTest.bulkTestSubMap.bulkTestMapEntrySet.testCollectionIteratorRemove";

        $r3[1] = "TransformedSortedMapTest.bulkTestSubMap.bulkTestMapKeySet.testCollectionRemove";

        $r3[2] = "TransformedSortedMapTest.bulkTestSubMap.bulkTestMapValues.testCollectionIteratorRemove";

        $r3[3] = "TransformedSortedMapTest.bulkTestTailMap.testMapRemove";

        $r3[4] = "TransformedSortedMapTest.bulkTestTailMap.bulkTestMapEntrySet.testCollectionIteratorRemove";

        $r3[5] = "TransformedSortedMapTest.bulkTestTailMap.bulkTestMapEntrySet.testCollectionRemoveAll";

        $r3[6] = "TransformedSortedMapTest.bulkTestTailMap.bulkTestMapKeySet.testCollectionIteratorRemove";

        $r3[7] = "TransformedSortedMapTest.bulkTestTailMap.bulkTestMapKeySet.testCollectionRemoveAll";

        $r3[8] = "TransformedSortedMapTest.bulkTestTailMap.bulkTestMapValues.testCollectionClear";

        $r3[9] = "TransformedSortedMapTest.bulkTestTailMap.bulkTestMapValues.testCollectionRemoveAll";

        $r3[10] = "TransformedSortedMapTest.bulkTestTailMap.bulkTestMapValues.testCollectionRetainAll";

        return $r3;

     label1:
        return null;
    }

    public java.util.SortedMap makeObject()
    {
        org.apache.commons.collections4.map.TransformedSortedMapTest r0;
        java.util.TreeMap $r1;
        org.apache.commons.collections4.Transformer $r2, $r3;
        org.apache.commons.collections4.map.TransformedSortedMap $r4;

        r0 := @this: org.apache.commons.collections4.map.TransformedSortedMapTest;

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>();

        $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>();

        $r4 = staticinvoke <org.apache.commons.collections4.map.TransformedSortedMap: org.apache.commons.collections4.map.TransformedSortedMap transformingSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r1, $r2, $r3);

        return $r4;
    }

    public boolean isSubMapViewsSerializable()
    {
        org.apache.commons.collections4.map.TransformedSortedMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.TransformedSortedMapTest;

        return 0;
    }

    public void testTransformedMap()
    {
        org.apache.commons.collections4.map.TransformedSortedMapTest r0;
        java.util.Map$Entry r2, $r22, $r25, $r28;
        java.lang.Object[] $r3, $r21;
        java.util.TreeMap $r4, $r13;
        org.apache.commons.collections4.Transformer $r5, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i9;
        java.lang.Object $r6, $r8, $r10, $r12, $r15, $r18, $r19, $r26, $r29, $r30, $r32, $r35, $r37, $r38, $r39, $r40, $r42, $r45, $r46, $r47, $r50, $r51, $r52, $r53, $r55, $r58, $r59, $r60, $r62, $r64;
        java.lang.String $r9, $r16, $r43, $r48, $r56, $r61;
        java.lang.Integer $r11, $r17, $r24, $r27, $r34, $r36, $r44, $r49, $r57, $r63;
        java.util.Map$Entry[] $r20, r72;
        java.util.Iterator $r31;
        boolean $z0, $z1, $z2, $z3, $z5;
        java.lang.ClassCastException $r65, $r66;
        org.apache.commons.collections4.map.TransformedSortedMap r67, r70;
        java.util.Set r71;

        r0 := @this: org.apache.commons.collections4.map.TransformedSortedMapTest;

        $r3 = newarray (java.lang.Object)[7];

        $r3[0] = "1";

        $r3[1] = "3";

        $r3[2] = "5";

        $r3[3] = "7";

        $r3[4] = "2";

        $r3[5] = "4";

        $r3[6] = "6";

        $r4 = new java.util.TreeMap;

        specialinvoke $r4.<java.util.TreeMap: void <init>()>();

        $r5 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer STRING_TO_INTEGER_TRANSFORMER>;

        r67 = staticinvoke <org.apache.commons.collections4.map.TransformedSortedMap: org.apache.commons.collections4.map.TransformedSortedMap transformingSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r4, $r5, null);

        $i0 = interfaceinvoke r67.<java.util.SortedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(int,int)>(0, $i0);

        i7 = 0;

     label01:
        $i1 = lengthof $r3;

        if i7 >= $i1 goto label06;

        $r53 = $r3[i7];

        $r52 = $r3[i7];

        interfaceinvoke r67.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r53, $r52);

        $i5 = i7 + 1;

        $i6 = interfaceinvoke r67.<java.util.SortedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(int,int)>($i5, $i6);

        $r55 = $r3[i7];

        $r56 = (java.lang.String) $r55;

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r56);

        $z3 = interfaceinvoke r67.<java.util.SortedMap: boolean containsKey(java.lang.Object)>($r57);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(boolean,boolean)>(1, $z3);

     label02:
        $r58 = $r3[i7];

        interfaceinvoke r67.<java.util.SortedMap: boolean containsKey(java.lang.Object)>($r58);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void fail()>();

     label03:
        goto label05;

     label04:
        $r66 := @caughtexception;

     label05:
        $r59 = $r3[i7];

        $z5 = interfaceinvoke r67.<java.util.SortedMap: boolean containsValue(java.lang.Object)>($r59);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(boolean,boolean)>(1, $z5);

        $r62 = $r3[i7];

        $r60 = $r3[i7];

        $r61 = (java.lang.String) $r60;

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r61);

        $r64 = interfaceinvoke r67.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>($r63);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r62, $r64);

        i7 = i7 + 1;

        goto label01;

     label06:
        $r6 = $r3[0];

        interfaceinvoke r67.<java.util.SortedMap: java.lang.Object remove(java.lang.Object)>($r6);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void fail()>();

     label07:
        goto label09;

     label08:
        $r65 := @caughtexception;

     label09:
        $r10 = $r3[0];

        $r8 = $r3[0];

        $r9 = (java.lang.String) $r8;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r9);

        $r12 = interfaceinvoke r67.<java.util.SortedMap: java.lang.Object remove(java.lang.Object)>($r11);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r12);

        $r13 = new java.util.TreeMap;

        specialinvoke $r13.<java.util.TreeMap: void <init>()>();

        $r14 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer STRING_TO_INTEGER_TRANSFORMER>;

        r70 = staticinvoke <org.apache.commons.collections4.map.TransformedSortedMap: org.apache.commons.collections4.map.TransformedSortedMap transformingSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r13, null, $r14);

        $i2 = interfaceinvoke r70.<java.util.SortedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(int,int)>(0, $i2);

        i8 = 0;

     label10:
        $i9 = lengthof $r3;

        if i8 >= $i9 goto label11;

        $r40 = $r3[i8];

        $r39 = $r3[i8];

        interfaceinvoke r70.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r40, $r39);

        $i3 = i8 + 1;

        $i4 = interfaceinvoke r70.<java.util.SortedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(int,int)>($i3, $i4);

        $r42 = $r3[i8];

        $r43 = (java.lang.String) $r42;

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r43);

        $z0 = interfaceinvoke r70.<java.util.SortedMap: boolean containsValue(java.lang.Object)>($r44);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r45 = $r3[i8];

        $z1 = interfaceinvoke r70.<java.util.SortedMap: boolean containsValue(java.lang.Object)>($r45);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(boolean,boolean)>(0, $z1);

        $r46 = $r3[i8];

        $z2 = interfaceinvoke r70.<java.util.SortedMap: boolean containsKey(java.lang.Object)>($r46);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $r47 = $r3[i8];

        $r48 = (java.lang.String) $r47;

        $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r48);

        $r50 = $r3[i8];

        $r51 = interfaceinvoke r70.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>($r50);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r49, $r51);

        i8 = i8 + 1;

        goto label10;

     label11:
        $r15 = $r3[0];

        $r16 = (java.lang.String) $r15;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r16);

        $r18 = $r3[0];

        $r19 = interfaceinvoke r70.<java.util.SortedMap: java.lang.Object remove(java.lang.Object)>($r18);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r19);

        r71 = interfaceinvoke r70.<java.util.SortedMap: java.util.Set entrySet()>();

        $r20 = newarray (java.util.Map$Entry)[0];

        $r21 = interfaceinvoke r71.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        r72 = (java.util.Map$Entry[]) $r21;

        $r22 = r72[0];

        interfaceinvoke $r22.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("66");

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(66);

        $r25 = r72[0];

        $r26 = interfaceinvoke $r25.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r26);

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(66);

        $r28 = r72[0];

        $r29 = interfaceinvoke $r28.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r30 = interfaceinvoke r70.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>($r29);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r30);

        $r31 = interfaceinvoke r71.<java.util.Set: java.util.Iterator iterator()>();

        $r32 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r32;

        interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("88");

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(88);

        $r35 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r35);

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(88);

        $r37 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r38 = interfaceinvoke r70.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>($r37);

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r38);

        return;

        catch java.lang.ClassCastException from label02 to label03 with label04;
        catch java.lang.ClassCastException from label06 to label07 with label08;
    }

    public void testFactory_Decorate()
    {
        org.apache.commons.collections4.map.TransformedSortedMapTest r0;
        org.apache.commons.collections4.map.TransformedSortedMap r2;
        java.util.TreeMap $r3;
        org.apache.commons.collections4.Transformer $r7;
        int $i0;
        java.lang.Object $r8, $r9, $r10, $r13;
        java.lang.Integer $r12;

        r0 := @this: org.apache.commons.collections4.map.TransformedSortedMapTest;

        $r3 = new java.util.TreeMap;

        specialinvoke $r3.<java.util.TreeMap: void <init>()>();

        interfaceinvoke $r3.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("A", "1");

        interfaceinvoke $r3.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("B", "2");

        interfaceinvoke $r3.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("C", "3");

        $r7 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer STRING_TO_INTEGER_TRANSFORMER>;

        r2 = staticinvoke <org.apache.commons.collections4.map.TransformedSortedMap: org.apache.commons.collections4.map.TransformedSortedMap transformingSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r3, null, $r7);

        $i0 = interfaceinvoke r2.<java.util.SortedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(int,int)>(3, $i0);

        $r8 = interfaceinvoke r2.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>("A");

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("1", $r8);

        $r9 = interfaceinvoke r2.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>("B");

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("2", $r9);

        $r10 = interfaceinvoke r2.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>("C");

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("3", $r10);

        interfaceinvoke r2.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("D", "4");

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r13 = interfaceinvoke r2.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>("D");

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13);

        return;
    }

    public void testFactory_decorateTransform()
    {
        org.apache.commons.collections4.map.TransformedSortedMapTest r0;
        org.apache.commons.collections4.map.TransformedSortedMap r2;
        java.util.TreeMap $r3;
        org.apache.commons.collections4.Transformer $r7;
        int $i0;
        java.lang.Integer $r8, $r10, $r12, $r15;
        java.lang.Object $r9, $r11, $r13, $r16;

        r0 := @this: org.apache.commons.collections4.map.TransformedSortedMapTest;

        $r3 = new java.util.TreeMap;

        specialinvoke $r3.<java.util.TreeMap: void <init>()>();

        interfaceinvoke $r3.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("A", "1");

        interfaceinvoke $r3.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("B", "2");

        interfaceinvoke $r3.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("C", "3");

        $r7 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer STRING_TO_INTEGER_TRANSFORMER>;

        r2 = staticinvoke <org.apache.commons.collections4.map.TransformedSortedMap: org.apache.commons.collections4.map.TransformedSortedMap transformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r3, null, $r7);

        $i0 = interfaceinvoke r2.<java.util.SortedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(int,int)>(3, $i0);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r9 = interfaceinvoke r2.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>("A");

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r11 = interfaceinvoke r2.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>("B");

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r13 = interfaceinvoke r2.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>("C");

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13);

        interfaceinvoke r2.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("D", "4");

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r16 = interfaceinvoke r2.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>("D");

        staticinvoke <org.apache.commons.collections4.map.TransformedSortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16);

        return;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.map.TransformedSortedMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.TransformedSortedMapTest;

        return "4";
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.TransformedSortedMapTest r0;
        java.util.SortedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.TransformedSortedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.TransformedSortedMapTest: java.util.SortedMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.TransformedSortedMapTest r0;
        java.util.SortedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.TransformedSortedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.TransformedSortedMapTest: java.util.SortedMap makeObject()>();

        return $r1;
    }
}
