public class org.apache.commons.collections4.map.AbstractMapTest$TestMapValues extends org.apache.commons.collections4.collection.AbstractCollectionTest
{
    final org.apache.commons.collections4.map.AbstractMapTest this$0;

    public void <init>(org.apache.commons.collections4.map.AbstractMapTest)
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;
        org.apache.commons.collections4.map.AbstractMapTest r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractMapTest;

        r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0> = r1;

        specialinvoke r0.<org.apache.commons.collections4.collection.AbstractCollectionTest: void <init>(java.lang.String)>("");

        return;
    }

    public java.lang.Object[] getFullElements()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        java.lang.Object[] $r2;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getSampleValues()>();

        return $r2;
    }

    public java.lang.Object[] getOtherElements()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        java.lang.Object[] $r2;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getOtherValues()>();

        return $r2;
    }

    public java.util.Collection makeObject()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        java.util.Map $r2;
        java.util.Collection $r3;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map makeObject()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        return $r3;
    }

    public java.util.Collection makeFullCollection()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        java.util.Map $r2;
        java.util.Collection $r3;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map makeFullMap()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        return $r3;
    }

    public boolean isNullSupported()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $z0 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: boolean isAllowNullKey()>();

        return $z0;
    }

    public boolean isAddSupported()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        return 0;
    }

    public boolean isRemoveSupported()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $z0 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: boolean isRemoveSupported()>();

        return $z0;
    }

    public boolean isTestSerialization()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        return 0;
    }

    public boolean areEqualElementsDistinguishable()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        return 1;
    }

    public java.util.Collection makeConfirmedCollection()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        return null;
    }

    public java.util.Collection makeConfirmedFullCollection()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        return null;
    }

    public void resetFull()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1, $r2, $r5;
        java.util.Map $r3, $r6;
        java.util.Collection $r4, $r7;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: void resetFull()>();

        $r2 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r3 = $r2.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map map>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: void setCollection(java.util.Collection)>($r4);

        $r5 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r6 = virtualinvoke $r5.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getConfirmed()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: void setConfirmed(java.util.Collection)>($r7);

        return;
    }

    public void resetEmpty()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1, $r2, $r5;
        java.util.Map $r3, $r6;
        java.util.Collection $r4, $r7;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: void resetEmpty()>();

        $r2 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r3 = $r2.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map map>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: void setCollection(java.util.Collection)>($r4);

        $r5 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r6 = virtualinvoke $r5.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getConfirmed()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: void setConfirmed(java.util.Collection)>($r7);

        return;
    }

    public void verify()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        specialinvoke r0.<org.apache.commons.collections4.collection.AbstractCollectionTest: void verify()>();

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: void verify()>();

        return;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapValues r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapValues;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapValues: java.util.Collection makeObject()>();

        return $r1;
    }
}
