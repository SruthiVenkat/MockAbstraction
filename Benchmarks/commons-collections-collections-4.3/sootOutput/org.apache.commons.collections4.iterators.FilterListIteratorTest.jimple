public class org.apache.commons.collections4.iterators.FilterListIteratorTest extends java.lang.Object
{
    private java.util.ArrayList list;
    private java.util.ArrayList odds;
    private java.util.ArrayList evens;
    private java.util.ArrayList threes;
    private java.util.ArrayList fours;
    private java.util.ArrayList sixes;
    private org.apache.commons.collections4.Predicate truePred;
    private org.apache.commons.collections4.Predicate falsePred;
    private org.apache.commons.collections4.Predicate evenPred;
    private org.apache.commons.collections4.Predicate oddPred;
    private org.apache.commons.collections4.Predicate threePred;
    private org.apache.commons.collections4.Predicate fourPred;
    private final java.util.Random random;

    public void <init>()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        java.util.Random $r1;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList odds> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList evens> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList threes> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList fours> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList sixes> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate truePred> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate falsePred> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate evenPred> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate oddPred> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate fourPred> = null;

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.Random random> = $r1;

        return;
    }

    public void setUp()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r5, $r6, $r13, $r15, $r17, $r19, $r21, $r23;
        org.apache.commons.collections4.iterators.FilterListIteratorTest$1 $r7;
        org.apache.commons.collections4.iterators.FilterListIteratorTest$2 $r8;
        org.apache.commons.collections4.iterators.FilterListIteratorTest$3 $r9;
        org.apache.commons.collections4.iterators.FilterListIteratorTest$4 $r10;
        org.apache.commons.collections4.iterators.FilterListIteratorTest$5 $r11;
        org.apache.commons.collections4.iterators.FilterListIteratorTest$6 $r12;
        java.lang.Integer $r14, $r16, $r18, $r20, $r22, $r24;
        int $i0, $i1, $i2, $i3, $i4, i5;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList odds> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList evens> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList threes> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList fours> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList sixes> = $r6;

        i5 = 0;

     label1:
        if i5 >= 20 goto label7;

        $r13 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        $i0 = i5 % 2;

        if $i0 != 0 goto label2;

        $r23 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList evens>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

     label2:
        $i1 = i5 % 2;

        if $i1 == 0 goto label3;

        $r21 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList odds>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label3:
        $i2 = i5 % 3;

        if $i2 != 0 goto label4;

        $r19 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList threes>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label4:
        $i3 = i5 % 4;

        if $i3 != 0 goto label5;

        $r17 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList fours>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label5:
        $i4 = i5 % 6;

        if $i4 != 0 goto label6;

        $r15 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList sixes>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label6:
        i5 = i5 + 1;

        goto label1;

     label7:
        $r7 = new org.apache.commons.collections4.iterators.FilterListIteratorTest$1;

        specialinvoke $r7.<org.apache.commons.collections4.iterators.FilterListIteratorTest$1: void <init>(org.apache.commons.collections4.iterators.FilterListIteratorTest)>(r0);

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate truePred> = $r7;

        $r8 = new org.apache.commons.collections4.iterators.FilterListIteratorTest$2;

        specialinvoke $r8.<org.apache.commons.collections4.iterators.FilterListIteratorTest$2: void <init>(org.apache.commons.collections4.iterators.FilterListIteratorTest)>(r0);

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate falsePred> = $r8;

        $r9 = new org.apache.commons.collections4.iterators.FilterListIteratorTest$3;

        specialinvoke $r9.<org.apache.commons.collections4.iterators.FilterListIteratorTest$3: void <init>(org.apache.commons.collections4.iterators.FilterListIteratorTest)>(r0);

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate evenPred> = $r9;

        $r10 = new org.apache.commons.collections4.iterators.FilterListIteratorTest$4;

        specialinvoke $r10.<org.apache.commons.collections4.iterators.FilterListIteratorTest$4: void <init>(org.apache.commons.collections4.iterators.FilterListIteratorTest)>(r0);

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate oddPred> = $r10;

        $r11 = new org.apache.commons.collections4.iterators.FilterListIteratorTest$5;

        specialinvoke $r11.<org.apache.commons.collections4.iterators.FilterListIteratorTest$5: void <init>(org.apache.commons.collections4.iterators.FilterListIteratorTest)>(r0);

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred> = $r11;

        $r12 = new org.apache.commons.collections4.iterators.FilterListIteratorTest$6;

        specialinvoke $r12.<org.apache.commons.collections4.iterators.FilterListIteratorTest$6: void <init>(org.apache.commons.collections4.iterators.FilterListIteratorTest)>(r0);

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate fourPred> = $r12;

        return;
    }

    public void tearDown() throws java.lang.Exception
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList odds> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList evens> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList threes> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList fours> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList sixes> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate truePred> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate falsePred> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate evenPred> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate oddPred> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred> = null;

        r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate fourPred> = null;

        return;
    }

    public void testWalkLists()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        java.util.ArrayList $r1, $r2;
        java.util.ListIterator $r3;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r2 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r1 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r2, $r3);

        return;
    }

    public void testManual()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.iterators.FilterListIterator $r2;
        java.util.ArrayList $r3;
        java.util.ListIterator $r4;
        org.apache.commons.collections4.Predicate $r5;
        java.lang.Integer $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80, $r82, $r84, $r86, $r88, $r90;
        java.lang.Object $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r71, $r73, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r89, $r91;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r7 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r9 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r11 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r13 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r15 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        $r17 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r17);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        $r19 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r19);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        $r21 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        $r23 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r25 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25);

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r27 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27);

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r29 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29);

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r31 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r31);

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r33 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r32, $r33);

        $z0 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasPrevious()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r35 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r35);

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r37 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r37);

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r39 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r38, $r39);

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r41 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r40, $r41);

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r43 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r43);

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        $r45 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r44, $r45);

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        $r47 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r46, $r47);

        $z1 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        $r49 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r48, $r49);

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        $r51 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r50, $r51);

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r53 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r52, $r53);

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r55 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r54, $r55);

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r57 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r56, $r57);

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r59 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r58, $r59);

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r61 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r60, $r61);

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r63 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r62, $r63);

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r65 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r64, $r65);

        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r67 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r66, $r67);

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r69 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r68, $r69);

        $r70 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r71 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r70, $r71);

        $r72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r73 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r72, $r73);

        $r74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r75 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r74, $r75);

        $r76 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r77 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r76, $r77);

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r79 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r78, $r79);

        $r80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r81 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r80, $r81);

        $r82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r83 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r82, $r83);

        $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        $r85 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r84, $r85);

        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        $r87 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r86, $r87);

        $r88 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r89 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r88, $r89);

        $r90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r91 = virtualinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r90, $r91);

        return;
    }

    public void testTruePredicate()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.iterators.FilterListIterator $r2;
        java.util.ArrayList $r3, $r6;
        java.util.ListIterator $r4;
        org.apache.commons.collections4.Predicate $r5;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate truePred>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r6, $r2);

        return;
    }

    public void testFalsePredicate()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.iterators.FilterListIterator $r2;
        java.util.ArrayList $r3, $r6;
        java.util.ListIterator $r4;
        org.apache.commons.collections4.Predicate $r5;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate falsePred>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r6, $r2);

        return;
    }

    public void testEvens()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.iterators.FilterListIterator $r2;
        java.util.ArrayList $r3, $r6;
        java.util.ListIterator $r4;
        org.apache.commons.collections4.Predicate $r5;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate evenPred>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList evens>;

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r6, $r2);

        return;
    }

    public void testOdds()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.iterators.FilterListIterator $r2;
        java.util.ArrayList $r3, $r6;
        java.util.ListIterator $r4;
        org.apache.commons.collections4.Predicate $r5;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate oddPred>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList odds>;

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r6, $r2);

        return;
    }

    public void testThrees()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.iterators.FilterListIterator $r2;
        java.util.ArrayList $r3, $r6;
        java.util.ListIterator $r4;
        org.apache.commons.collections4.Predicate $r5;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList threes>;

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r6, $r2);

        return;
    }

    public void testFours()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.iterators.FilterListIterator $r2;
        java.util.ArrayList $r3, $r6;
        java.util.ListIterator $r4;
        org.apache.commons.collections4.Predicate $r5;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate fourPred>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList fours>;

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r6, $r2);

        return;
    }

    public void testNestedSixes()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.iterators.FilterListIterator $r2, $r3;
        java.util.ArrayList $r4, $r8;
        java.util.ListIterator $r5;
        org.apache.commons.collections4.Predicate $r6, $r7;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r3 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r4 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>;

        specialinvoke $r3.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r5, $r6);

        $r7 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate evenPred>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r3, $r7);

        $r8 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList sixes>;

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r8, $r2);

        return;
    }

    public void testNestedSixes2()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.iterators.FilterListIterator $r2, $r3;
        java.util.ArrayList $r4, $r8;
        java.util.ListIterator $r5;
        org.apache.commons.collections4.Predicate $r6, $r7;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r3 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r4 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate evenPred>;

        specialinvoke $r3.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r5, $r6);

        $r7 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r3, $r7);

        $r8 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList sixes>;

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r8, $r2);

        return;
    }

    public void testNestedSixes3()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.iterators.FilterListIterator $r2, $r3, $r8;
        java.util.ArrayList $r4, $r10;
        java.util.ListIterator $r5;
        org.apache.commons.collections4.Predicate $r6, $r7, $r9;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r3 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r4 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>;

        specialinvoke $r3.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r5, $r6);

        $r7 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate evenPred>;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r3, $r7);

        $r10 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList sixes>;

        $r8 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r9 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate truePred>;

        specialinvoke $r8.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r2, $r9);

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r10, $r8);

        return;
    }

    public void testNextChangesPrevious()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.iterators.FilterListIterator $r1, $r7;
        java.util.ArrayList $r2, $r5, $r8, $r11;
        java.util.ListIterator $r3, $r6, $r9, $r12;
        org.apache.commons.collections4.Predicate $r4, $r10;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r1 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r2 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r4 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r3, $r4);

        $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList threes>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void nextNextPrevious(java.util.ListIterator,java.util.ListIterator)>($r6, $r1);

        $r7 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r8 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r10 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate truePred>;

        specialinvoke $r7.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r9, $r10);

        $r11 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void nextNextPrevious(java.util.ListIterator,java.util.ListIterator)>($r12, $r7);

        return;
    }

    public void testPreviousChangesNext()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.iterators.FilterListIterator $r1, $r6;
        java.util.ArrayList $r2, $r5, $r7, $r10;
        java.util.ListIterator $r3, $r8, r12, r14;
        org.apache.commons.collections4.Predicate $r4, $r9;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r1 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r2 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r4 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r3, $r4);

        $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList threes>;

        r12 = virtualinvoke $r5.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkForward(java.util.ListIterator,java.util.ListIterator)>(r12, $r1);

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void previousPreviousNext(java.util.ListIterator,java.util.ListIterator)>(r12, $r1);

        $r6 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r7 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r9 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate truePred>;

        specialinvoke $r6.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r8, $r9);

        $r10 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        r14 = virtualinvoke $r10.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkForward(java.util.ListIterator,java.util.ListIterator)>(r14, $r6);

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void previousPreviousNext(java.util.ListIterator,java.util.ListIterator)>(r14, $r6);

        return;
    }

    public void testFailingHasNextBug()
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        java.util.ListIterator r2, $r5;
        org.apache.commons.collections4.iterators.FilterListIterator $r3;
        java.util.ArrayList $r4, $r7;
        org.apache.commons.collections4.Predicate $r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r8, $r9;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r3 = new org.apache.commons.collections4.iterators.FilterListIterator;

        $r4 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate fourPred>;

        specialinvoke $r3.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r5, $r6);

        $r7 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList fours>;

        r2 = virtualinvoke $r7.<java.util.ArrayList: java.util.ListIterator listIterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();

        virtualinvoke $r3.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>();

        goto label1;

     label2:
        $z1 = virtualinvoke $r3.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $z2 = virtualinvoke $r3.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasNext()>();

        if $z2 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r8 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

        $r9 = virtualinvoke $r3.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9);

        return;
    }

    public void testCollections360() throws java.lang.Throwable
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        org.apache.commons.collections4.Predicate r2;
        org.apache.commons.collections4.list.GrowthList $r5;
        org.apache.commons.collections4.iterators.FilterListIterator $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        $r5 = new org.apache.commons.collections4.list.GrowthList;

        specialinvoke $r5.<org.apache.commons.collections4.list.GrowthList: void <init>()>();

        r2 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection)>($r5);

        $r6 = new org.apache.commons.collections4.iterators.FilterListIterator;

        specialinvoke $r6.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(org.apache.commons.collections4.Predicate)>(r2);

        $z0 = virtualinvoke $r6.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        $r7 = new org.apache.commons.collections4.iterators.FilterListIterator;

        specialinvoke $r7.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(org.apache.commons.collections4.Predicate)>(r2);

        $z1 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        return;
    }

    private void walkForward(java.util.ListIterator, java.util.ListIterator)
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        java.util.ListIterator r1, r2;
        boolean $z0, $z1;
        int $i0, $i2, $i4, $i6;
        long $l1, $l3, $l5, $l7;
        java.lang.Object $r3, $r4;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        r1 := @parameter0: java.util.ListIterator;

        r2 := @parameter1: java.util.ListIterator;

     label1:
        $z0 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $i0 = interfaceinvoke r1.<java.util.ListIterator: int nextIndex()>();

        $l1 = (long) $i0;

        $i2 = interfaceinvoke r2.<java.util.ListIterator: int nextIndex()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3);

        $i4 = interfaceinvoke r1.<java.util.ListIterator: int previousIndex()>();

        $l5 = (long) $i4;

        $i6 = interfaceinvoke r2.<java.util.ListIterator: int previousIndex()>();

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7);

        $z1 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r3 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>();

        $r4 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4);

        goto label1;

     label2:
        return;
    }

    private void walkBackward(java.util.ListIterator, java.util.ListIterator)
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        java.util.ListIterator r1, r2;
        boolean $z0, $z1;
        int $i0, $i2, $i4, $i6;
        long $l1, $l3, $l5, $l7;
        java.lang.Object $r3, $r4;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        r1 := @parameter0: java.util.ListIterator;

        r2 := @parameter1: java.util.ListIterator;

     label1:
        $z0 = interfaceinvoke r1.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label2;

        $i0 = interfaceinvoke r1.<java.util.ListIterator: int nextIndex()>();

        $l1 = (long) $i0;

        $i2 = interfaceinvoke r2.<java.util.ListIterator: int nextIndex()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3);

        $i4 = interfaceinvoke r1.<java.util.ListIterator: int previousIndex()>();

        $l5 = (long) $i4;

        $i6 = interfaceinvoke r2.<java.util.ListIterator: int previousIndex()>();

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7);

        $z1 = interfaceinvoke r2.<java.util.ListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r3 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object previous()>();

        $r4 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4);

        goto label1;

     label2:
        return;
    }

    private void nextNextPrevious(java.util.ListIterator, java.util.ListIterator)
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        java.util.ListIterator r1, r2;
        java.lang.Object r3, r4, r5, r6, $r7, $r8;
        boolean $z0, $z1;
        java.lang.Boolean $r9, $r10;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        r1 := @parameter0: java.util.ListIterator;

        r2 := @parameter1: java.util.ListIterator;

        $r7 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>();

        $r8 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8);

        $z0 = interfaceinvoke r1.<java.util.ListIterator: boolean hasPrevious()>();

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = interfaceinvoke r2.<java.util.ListIterator: boolean hasPrevious()>();

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10);

        r3 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>();

        r4 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r3, r4);

        r5 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object previous()>();

        r6 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r3, r5);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r4, r6);

        return;
    }

    private void previousPreviousNext(java.util.ListIterator, java.util.ListIterator)
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        java.util.ListIterator r1, r2;
        java.lang.Object r3, r4, r5, r6, $r7, $r8;
        boolean $z0, $z1;
        java.lang.Boolean $r9, $r10;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        r1 := @parameter0: java.util.ListIterator;

        r2 := @parameter1: java.util.ListIterator;

        $r7 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object previous()>();

        $r8 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8);

        $z0 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>();

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10);

        r3 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object previous()>();

        r4 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r3, r4);

        r5 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>();

        r6 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r3, r6);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r3, r5);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r4, r6);

        return;
    }

    private void walkLists(java.util.List, java.util.ListIterator)
    {
        org.apache.commons.collections4.iterators.FilterListIteratorTest r0;
        java.util.List r1;
        java.util.ListIterator r2, r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i21, $i23, $i25, $i27, $i29, $i31, $i33, $i35, $i37, $i39, $i41, i43, i44, i45, i46, i47, i48, $i49, $i51, $i53, $i55;
        java.lang.StringBuilder $r4;
        java.util.Random $r5;
        java.lang.String $r7, $r11, $r29, $r30;
        java.lang.Object $r8, $r9, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        long $l4, $l6, $l8, $l10, $l12, $l14, $l16, $l18, $l20, $l22, $l24, $l26, $l28, $l30, $l32, $l34, $l36, $l38, $l40, $l42, $l50, $l52, $l54, $l56;

        r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.ListIterator;

        r3 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator()>();

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkForward(java.util.ListIterator,java.util.ListIterator)>(r3, r2);

        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkBackward(java.util.ListIterator,java.util.ListIterator)>(r3, r2);

     label01:
        $z0 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $i35 = interfaceinvoke r3.<java.util.ListIterator: int nextIndex()>();

        $l36 = (long) $i35;

        $i37 = interfaceinvoke r2.<java.util.ListIterator: int nextIndex()>();

        $l38 = (long) $i37;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l36, $l38);

        $i39 = interfaceinvoke r3.<java.util.ListIterator: int previousIndex()>();

        $l40 = (long) $i39;

        $i41 = interfaceinvoke r2.<java.util.ListIterator: int previousIndex()>();

        $l42 = (long) $i41;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l40, $l42);

        $z12 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z12);

        $r22 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();

        $r23 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23);

        $z13 = interfaceinvoke r2.<java.util.ListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z13);

        $r24 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object previous()>();

        $r25 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25);

        $z14 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z14);

        $r26 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();

        $r27 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27);

        goto label01;

     label02:
        specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkBackward(java.util.ListIterator,java.util.ListIterator)>(r3, r2);

        i43 = 0;

     label03:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i43 >= $i0 goto label12;

        i44 = 0;

     label04:
        if i44 >= i43 goto label05;

        $i27 = interfaceinvoke r3.<java.util.ListIterator: int nextIndex()>();

        $l28 = (long) $i27;

        $i29 = interfaceinvoke r2.<java.util.ListIterator: int nextIndex()>();

        $l30 = (long) $i29;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l28, $l30);

        $i31 = interfaceinvoke r3.<java.util.ListIterator: int previousIndex()>();

        $l32 = (long) $i31;

        $i33 = interfaceinvoke r2.<java.util.ListIterator: int previousIndex()>();

        $l34 = (long) $i33;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l32, $l34);

        $z10 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z10);

        $z11 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z11);

        $r20 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();

        $r21 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21);

        i44 = i44 + 1;

        goto label04;

     label05:
        i45 = 0;

     label06:
        $i1 = i43 / 2;

        if i45 >= $i1 goto label07;

        $i19 = interfaceinvoke r3.<java.util.ListIterator: int nextIndex()>();

        $l20 = (long) $i19;

        $i21 = interfaceinvoke r2.<java.util.ListIterator: int nextIndex()>();

        $l22 = (long) $i21;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l20, $l22);

        $i23 = interfaceinvoke r3.<java.util.ListIterator: int previousIndex()>();

        $l24 = (long) $i23;

        $i25 = interfaceinvoke r2.<java.util.ListIterator: int previousIndex()>();

        $l26 = (long) $i25;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l24, $l26);

        $z8 = interfaceinvoke r3.<java.util.ListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8);

        $z9 = interfaceinvoke r2.<java.util.ListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9);

        $r18 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object previous()>();

        $r19 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r19);

        i45 = i45 + 1;

        goto label06;

     label07:
        i46 = 0;

     label08:
        $i2 = i43 / 2;

        if i46 >= $i2 goto label09;

        $i11 = interfaceinvoke r3.<java.util.ListIterator: int nextIndex()>();

        $l12 = (long) $i11;

        $i13 = interfaceinvoke r2.<java.util.ListIterator: int nextIndex()>();

        $l14 = (long) $i13;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l12, $l14);

        $i15 = interfaceinvoke r3.<java.util.ListIterator: int previousIndex()>();

        $l16 = (long) $i15;

        $i17 = interfaceinvoke r2.<java.util.ListIterator: int previousIndex()>();

        $l18 = (long) $i17;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l16, $l18);

        $z6 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6);

        $z7 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7);

        $r16 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();

        $r17 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r17);

        i46 = i46 + 1;

        goto label08;

     label09:
        i47 = 0;

     label10:
        if i47 >= i43 goto label11;

        $i3 = interfaceinvoke r3.<java.util.ListIterator: int nextIndex()>();

        $l4 = (long) $i3;

        $i5 = interfaceinvoke r2.<java.util.ListIterator: int nextIndex()>();

        $l6 = (long) $i5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l4, $l6);

        $i7 = interfaceinvoke r3.<java.util.ListIterator: int previousIndex()>();

        $l8 = (long) $i7;

        $i9 = interfaceinvoke r2.<java.util.ListIterator: int previousIndex()>();

        $l10 = (long) $i9;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l8, $l10);

        $z4 = interfaceinvoke r3.<java.util.ListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $z5 = interfaceinvoke r2.<java.util.ListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        $r14 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object previous()>();

        $r15 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15);

        i47 = i47 + 1;

        goto label10;

     label11:
        i43 = i43 + 1;

        goto label03;

     label12:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(500);

        i48 = 0;

     label13:
        if i48 >= 500 goto label16;

        $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.Random random>;

        $z1 = virtualinvoke $r5.<java.util.Random: boolean nextBoolean()>();

        if $z1 == 0 goto label14;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $z3 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>();

        if $z3 == 0 goto label15;

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();

        $r13 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($r11, $r12, $r13);

        goto label15;

     label14:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $z2 = interfaceinvoke r3.<java.util.ListIterator: boolean hasPrevious()>();

        if $z2 == 0 goto label15;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object previous()>();

        $r9 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($r7, $r8, $r9);

     label15:
        $r29 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i49 = interfaceinvoke r3.<java.util.ListIterator: int nextIndex()>();

        $l50 = (long) $i49;

        $i51 = interfaceinvoke r2.<java.util.ListIterator: int nextIndex()>();

        $l52 = (long) $i51;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>($r29, $l50, $l52);

        $r30 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i53 = interfaceinvoke r3.<java.util.ListIterator: int previousIndex()>();

        $l54 = (long) $i53;

        $i55 = interfaceinvoke r2.<java.util.ListIterator: int previousIndex()>();

        $l56 = (long) $i55;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>($r30, $l54, $l56);

        i48 = i48 + 1;

        goto label13;

     label16:
        return;
    }
}
