class org.apache.commons.collections4.map.Flat3Map$FlatMapIterator extends java.lang.Object implements org.apache.commons.collections4.MapIterator, org.apache.commons.collections4.ResettableIterator
{
    private final org.apache.commons.collections4.map.Flat3Map parent;
    private int nextIndex;
    private boolean canRemove;

    void <init>(org.apache.commons.collections4.map.Flat3Map)
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapIterator r0;
        org.apache.commons.collections4.map.Flat3Map r1;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapIterator;

        r1 := @parameter0: org.apache.commons.collections4.map.Flat3Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex> = 0;

        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: boolean canRemove> = 0;

        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: org.apache.commons.collections4.map.Flat3Map parent> = r1;

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapIterator r0;
        org.apache.commons.collections4.map.Flat3Map $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapIterator;

        $i0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex>;

        $r1 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: org.apache.commons.collections4.map.Flat3Map parent>;

        $i1 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: int access$000(org.apache.commons.collections4.map.Flat3Map)>($r1);

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapIterator r0;
        boolean $z0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapIterator;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No next() entry in the iteration");

        throw $r2;

     label1:
        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: boolean canRemove> = 1;

        $i0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex> = $i1;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: java.lang.Object getKey()>();

        return $r1;
    }

    public void remove()
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapIterator r0;
        boolean $z0;
        org.apache.commons.collections4.map.Flat3Map $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        java.lang.IllegalStateException $r4;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapIterator;

        $z0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("remove() can only be called once after next()");

        throw $r4;

     label1:
        $r1 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: org.apache.commons.collections4.map.Flat3Map parent>;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: java.lang.Object getKey()>();

        virtualinvoke $r1.<org.apache.commons.collections4.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r2);

        $i0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex>;

        $i1 = $i0 - 1;

        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex> = $i1;

        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: boolean canRemove> = 0;

        return;
    }

    public java.lang.Object getKey()
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapIterator r0;
        boolean $z0;
        int $i0, $i1;
        org.apache.commons.collections4.map.Flat3Map $r1, $r3, $r5;
        java.lang.Object $r2, $r4, $r6;
        java.lang.IllegalStateException $r7, $r12;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapIterator;

        $z0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getKey() can only be called after next() and before remove()");

        throw $r12;

     label1:
        $i0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex>;

        tableswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label5;
        };

     label2:
        $r1 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: org.apache.commons.collections4.map.Flat3Map parent>;

        $r2 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$100(org.apache.commons.collections4.map.Flat3Map)>($r1);

        return $r2;

     label3:
        $r3 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: org.apache.commons.collections4.map.Flat3Map parent>;

        $r4 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$200(org.apache.commons.collections4.map.Flat3Map)>($r3);

        return $r4;

     label4:
        $r5 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: org.apache.commons.collections4.map.Flat3Map parent>;

        $r6 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$300(org.apache.commons.collections4.map.Flat3Map)>($r5);

        return $r6;

     label5:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid map index: ");

        $i1 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r7;
    }

    public java.lang.Object getValue()
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapIterator r0;
        boolean $z0;
        int $i0, $i1;
        org.apache.commons.collections4.map.Flat3Map $r1, $r3, $r5;
        java.lang.Object $r2, $r4, $r6;
        java.lang.IllegalStateException $r7, $r12;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapIterator;

        $z0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getValue() can only be called after next() and before remove()");

        throw $r12;

     label1:
        $i0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex>;

        tableswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label5;
        };

     label2:
        $r1 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: org.apache.commons.collections4.map.Flat3Map parent>;

        $r2 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$400(org.apache.commons.collections4.map.Flat3Map)>($r1);

        return $r2;

     label3:
        $r3 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: org.apache.commons.collections4.map.Flat3Map parent>;

        $r4 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$500(org.apache.commons.collections4.map.Flat3Map)>($r3);

        return $r4;

     label4:
        $r5 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: org.apache.commons.collections4.map.Flat3Map parent>;

        $r6 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$600(org.apache.commons.collections4.map.Flat3Map)>($r5);

        return $r6;

     label5:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid map index: ");

        $i1 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r7;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapIterator r0;
        java.lang.Object r1, r2;
        boolean $z0;
        int $i0, $i1;
        org.apache.commons.collections4.map.Flat3Map $r3, $r5, $r7;
        java.lang.IllegalStateException $r9, $r14;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapIterator;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setValue() can only be called after next() and before remove()");

        throw $r14;

     label1:
        r2 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: java.lang.Object getValue()>();

        $i0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex>;

        tableswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label5;
        };

     label2:
        $r3 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: org.apache.commons.collections4.map.Flat3Map parent>;

        staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$402(org.apache.commons.collections4.map.Flat3Map,java.lang.Object)>($r3, r1);

        goto label6;

     label3:
        $r5 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: org.apache.commons.collections4.map.Flat3Map parent>;

        staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$502(org.apache.commons.collections4.map.Flat3Map,java.lang.Object)>($r5, r1);

        goto label6;

     label4:
        $r7 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: org.apache.commons.collections4.map.Flat3Map parent>;

        staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$602(org.apache.commons.collections4.map.Flat3Map,java.lang.Object)>($r7, r1);

        goto label6;

     label5:
        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid map index: ");

        $i1 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label6:
        return r2;
    }

    public void reset()
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapIterator r0;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapIterator;

        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: int nextIndex> = 0;

        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: boolean canRemove> = 0;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapIterator r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8;
        java.lang.Object $r3, $r6;
        java.lang.String $r9;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapIterator;

        $z0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: boolean canRemove>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Iterator[");

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: java.lang.Object getKey()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r6 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapIterator: java.lang.Object getValue()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label1:
        return "Iterator[]";
    }
}
