public class org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest r0;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addPass()
    {
        org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest r0;
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r1;
        java.util.List $r3;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest;

        r1 = staticinvoke <org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.collection.PredicatedCollection$Builder notNullBuilder()>();

        virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>("test");

        $r3 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List createPredicatedList()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        return;
    }

    public void addFail()
    {
        org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest r0;
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r1;
        java.lang.String $r2;
        java.util.List $r4;
        boolean $z0;
        java.util.Collection $r5;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest;

        r1 = staticinvoke <org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.collection.PredicatedCollection$Builder notNullBuilder()>();

        $r2 = (java.lang.String) null;

        virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>($r2);

        $r4 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List createPredicatedList()>();

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r5 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.Collection rejectedElements()>();

        $i0 = interfaceinvoke $r5.<java.util.Collection: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1);

        return;
    }

    public void addAllPass()
    {
        org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest r0;
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r1;
        java.lang.String[] $r2;
        java.util.List $r3, $r5;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest;

        r1 = staticinvoke <org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.collection.PredicatedCollection$Builder notNullBuilder()>();

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "test1";

        $r2[1] = null;

        $r2[2] = "test2";

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder addAll(java.util.Collection)>($r3);

        $r5 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List createPredicatedList()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 2L);

        return;
    }

    public void createPredicatedCollectionWithNotNullPredicate()
    {
        org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest r0;
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r1;
        java.util.List r2;
        java.util.Set r3;
        org.apache.commons.collections4.Bag r4;
        java.util.Queue r5;
        java.lang.String $r7;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest;

        r1 = staticinvoke <org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.collection.PredicatedCollection$Builder notNullBuilder()>();

        virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>("test1");

        $r7 = (java.lang.String) null;

        virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>($r7);

        r2 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List createPredicatedList()>();

        specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection1(java.util.Collection)>(r2);

        r3 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.Set createPredicatedSet()>();

        specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection1(java.util.Collection)>(r3);

        r4 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.Bag createPredicatedBag()>();

        specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection1(java.util.Collection)>(r4);

        r5 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.Queue createPredicatedQueue()>();

        specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection1(java.util.Collection)>(r5);

        return;
    }

    private void checkPredicatedCollection1(java.util.Collection)
    {
        org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest r0;
        java.util.Collection r1;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest;

        r1 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1);

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("test2");

        $i2 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3);

     label1:
        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IllegalArgumentException for failing predicate!");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void createPredicatedCollectionWithPredicate()
    {
        org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest r0;
        org.apache.commons.collections4.collection.PredicatedCollection$Builder r2;
        java.util.List r3;
        java.util.Set r4;
        org.apache.commons.collections4.Bag r5;
        java.util.Queue r6;
        org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest$OddPredicate $r7;
        java.lang.Integer $r8, $r10, $r12;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest;

        $r7 = new org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest$OddPredicate;

        specialinvoke $r7.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest$OddPredicate: void <init>(org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest$1)>(null);

        r2 = staticinvoke <org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.collection.PredicatedCollection$Builder builder(org.apache.commons.collections4.Predicate)>($r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>($r8);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>($r10);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>($r12);

        r3 = virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List createPredicatedList()>();

        specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection2(java.util.Collection)>(r3);

        r4 = virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.Set createPredicatedSet()>();

        specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection2(java.util.Collection)>(r4);

        r5 = virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.Bag createPredicatedBag()>();

        specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection2(java.util.Collection)>(r5);

        r6 = virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.Queue createPredicatedQueue()>();

        specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection2(java.util.Collection)>(r6);

        return;
    }

    private void checkPredicatedCollection2(java.util.Collection)
    {
        org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest r0;
        java.util.Collection r1;
        int $i0, $i2, $i4;
        long $l1, $l3, $l5;
        java.lang.Integer $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest;

        r1 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1);

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IllegalArgumentException for failing predicate!");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        $i2 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i4 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5);

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }
}
