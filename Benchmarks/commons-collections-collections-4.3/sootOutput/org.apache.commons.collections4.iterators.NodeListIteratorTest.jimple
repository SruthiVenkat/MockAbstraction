public class org.apache.commons.collections4.iterators.NodeListIteratorTest extends org.apache.commons.collections4.iterators.AbstractIteratorTest
{
    private org.w3c.dom.Node[] nodes;
    private boolean createIteratorWithStandardConstr;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.iterators.NodeListIteratorTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.iterators.NodeListIteratorTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.iterators.AbstractIteratorTest: void <init>(java.lang.String)>(r1);

        r0.<org.apache.commons.collections4.iterators.NodeListIteratorTest: boolean createIteratorWithStandardConstr> = 1;

        return;
    }

    protected void setUp() throws java.lang.Exception
    {
        org.apache.commons.collections4.iterators.NodeListIteratorTest r0;
        org.w3c.dom.Node r1, r2, r3, r4;
        java.lang.Object $r5, $r6, $r7, $r8;
        org.w3c.dom.Node[] $r9;
        java.lang.Object[] $r10, $r11, $r12, $r13;

        r0 := @this: org.apache.commons.collections4.iterators.NodeListIteratorTest;

        specialinvoke r0.<org.apache.commons.collections4.iterators.AbstractIteratorTest: void setUp()>();

        r0.<org.apache.commons.collections4.iterators.NodeListIteratorTest: boolean createIteratorWithStandardConstr> = 1;

        $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/w3c/dom/Element;");

        r1 = (org.w3c.dom.Node) $r5;

        $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/w3c/dom/Element;");

        r2 = (org.w3c.dom.Node) $r6;

        $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/w3c/dom/Text;");

        r3 = (org.w3c.dom.Node) $r7;

        $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/w3c/dom/Element;");

        r4 = (org.w3c.dom.Node) $r8;

        $r9 = newarray (org.w3c.dom.Node)[4];

        $r9[0] = r1;

        $r9[1] = r2;

        $r9[2] = r3;

        $r9[3] = r4;

        r0.<org.apache.commons.collections4.iterators.NodeListIteratorTest: org.w3c.dom.Node[] nodes> = $r9;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r1;

        staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r10);

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r2;

        staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r11);

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r3;

        staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r12);

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r4;

        staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r13);

        return;
    }

    public java.util.Iterator makeEmptyIterator()
    {
        org.apache.commons.collections4.iterators.NodeListIteratorTest r0;
        org.w3c.dom.Node r2;
        org.apache.commons.collections4.iterators.NodeListIteratorTest$1 $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.w3c.dom.NodeList $r5;
        org.easymock.IExpectationSetters $r6;
        java.lang.Object[] $r7;
        org.apache.commons.collections4.iterators.NodeListIterator $r8, $r9;

        r0 := @this: org.apache.commons.collections4.iterators.NodeListIteratorTest;

        $r3 = new org.apache.commons.collections4.iterators.NodeListIteratorTest$1;

        specialinvoke $r3.<org.apache.commons.collections4.iterators.NodeListIteratorTest$1: void <init>(org.apache.commons.collections4.iterators.NodeListIteratorTest)>(r0);

        $z0 = r0.<org.apache.commons.collections4.iterators.NodeListIteratorTest: boolean createIteratorWithStandardConstr>;

        if $z0 == 0 goto label1;

        $r9 = new org.apache.commons.collections4.iterators.NodeListIterator;

        specialinvoke $r9.<org.apache.commons.collections4.iterators.NodeListIterator: void <init>(org.w3c.dom.NodeList)>($r3);

        return $r9;

     label1:
        $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/w3c/dom/Node;");

        r2 = (org.w3c.dom.Node) $r4;

        $r5 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5);

        interfaceinvoke $r6.<org.easymock.IExpectationSetters: void andStubReturn(java.lang.Object)>($r3);

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r2;

        staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r7);

        $r8 = new org.apache.commons.collections4.iterators.NodeListIterator;

        specialinvoke $r8.<org.apache.commons.collections4.iterators.NodeListIterator: void <init>(org.w3c.dom.Node)>(r2);

        return $r8;
    }

    public java.util.Iterator makeObject()
    {
        org.apache.commons.collections4.iterators.NodeListIteratorTest r0;
        org.apache.commons.collections4.iterators.NodeListIteratorTest$2 $r2;
        org.apache.commons.collections4.iterators.NodeListIterator $r3;

        r0 := @this: org.apache.commons.collections4.iterators.NodeListIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.NodeListIteratorTest$2;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.NodeListIteratorTest$2: void <init>(org.apache.commons.collections4.iterators.NodeListIteratorTest)>(r0);

        $r3 = new org.apache.commons.collections4.iterators.NodeListIterator;

        specialinvoke $r3.<org.apache.commons.collections4.iterators.NodeListIterator: void <init>(org.w3c.dom.NodeList)>($r2);

        return $r3;
    }

    public boolean supportsRemove()
    {
        org.apache.commons.collections4.iterators.NodeListIteratorTest r0;

        r0 := @this: org.apache.commons.collections4.iterators.NodeListIteratorTest;

        return 0;
    }

    public void testNullConstructor()
    {
        org.apache.commons.collections4.iterators.NodeListIteratorTest r0;
        org.apache.commons.collections4.iterators.NodeListIterator $r2;
        org.w3c.dom.Node $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: org.apache.commons.collections4.iterators.NodeListIteratorTest;

     label1:
        $r2 = new org.apache.commons.collections4.iterators.NodeListIterator;

        $r3 = (org.w3c.dom.Node) null;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.NodeListIterator: void <init>(org.w3c.dom.Node)>($r3);

        staticinvoke <org.apache.commons.collections4.iterators.NodeListIteratorTest: void fail(java.lang.String)>("NullPointerException expected!");

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void testEmptyIteratorWithNodeConstructor()
    {
        org.apache.commons.collections4.iterators.NodeListIteratorTest r0;

        r0 := @this: org.apache.commons.collections4.iterators.NodeListIteratorTest;

        r0.<org.apache.commons.collections4.iterators.NodeListIteratorTest: boolean createIteratorWithStandardConstr> = 0;

        virtualinvoke r0.<org.apache.commons.collections4.iterators.NodeListIteratorTest: void testEmptyIterator()>();

        return;
    }

    public void testFullIteratorWithNodeConstructor()
    {
        org.apache.commons.collections4.iterators.NodeListIteratorTest r0;

        r0 := @this: org.apache.commons.collections4.iterators.NodeListIteratorTest;

        r0.<org.apache.commons.collections4.iterators.NodeListIteratorTest: boolean createIteratorWithStandardConstr> = 0;

        virtualinvoke r0.<org.apache.commons.collections4.iterators.NodeListIteratorTest: void testFullIterator()>();

        return;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.iterators.NodeListIteratorTest r0;
        java.util.Iterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.NodeListIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.NodeListIteratorTest: java.util.Iterator makeObject()>();

        return $r1;
    }

    static org.w3c.dom.Node[] access$000(org.apache.commons.collections4.iterators.NodeListIteratorTest)
    {
        org.apache.commons.collections4.iterators.NodeListIteratorTest r0;
        org.w3c.dom.Node[] $r1;

        r0 := @parameter0: org.apache.commons.collections4.iterators.NodeListIteratorTest;

        $r1 = r0.<org.apache.commons.collections4.iterators.NodeListIteratorTest: org.w3c.dom.Node[] nodes>;

        return $r1;
    }
}
