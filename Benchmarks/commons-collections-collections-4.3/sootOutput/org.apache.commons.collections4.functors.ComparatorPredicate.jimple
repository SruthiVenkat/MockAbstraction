public class org.apache.commons.collections4.functors.ComparatorPredicate extends java.lang.Object implements org.apache.commons.collections4.Predicate, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.Object object;
    private final java.util.Comparator comparator;
    private final org.apache.commons.collections4.functors.ComparatorPredicate$Criterion criterion;

    public static org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object, java.util.Comparator)
    {
        java.lang.Object r0;
        java.util.Comparator r1;
        org.apache.commons.collections4.functors.ComparatorPredicate$Criterion $r2;
        org.apache.commons.collections4.Predicate $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Comparator;

        $r2 = <org.apache.commons.collections4.functors.ComparatorPredicate$Criterion: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion EQUAL>;

        $r3 = staticinvoke <org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)>(r0, r1, $r2);

        return $r3;
    }

    public static org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object, java.util.Comparator, org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)
    {
        java.lang.Object r0;
        java.util.Comparator r1;
        org.apache.commons.collections4.functors.ComparatorPredicate$Criterion r2;
        org.apache.commons.collections4.functors.ComparatorPredicate $r3;
        java.lang.NullPointerException $r4, $r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Comparator;

        r2 := @parameter2: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Comparator must not be null.");

        throw $r5;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Criterion must not be null.");

        throw $r4;

     label2:
        $r3 = new org.apache.commons.collections4.functors.ComparatorPredicate;

        specialinvoke $r3.<org.apache.commons.collections4.functors.ComparatorPredicate: void <init>(java.lang.Object,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)>(r0, r1, r2);

        return $r3;
    }

    public void <init>(java.lang.Object, java.util.Comparator, org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)
    {
        org.apache.commons.collections4.functors.ComparatorPredicate r0;
        java.lang.Object r1;
        java.util.Comparator r2;
        org.apache.commons.collections4.functors.ComparatorPredicate$Criterion r3;

        r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicate;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Comparator;

        r3 := @parameter2: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.functors.ComparatorPredicate: java.lang.Object object> = r1;

        r0.<org.apache.commons.collections4.functors.ComparatorPredicate: java.util.Comparator comparator> = r2;

        r0.<org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion criterion> = r3;

        return;
    }

    public boolean evaluate(java.lang.Object)
    {
        org.apache.commons.collections4.functors.ComparatorPredicate r0;
        java.lang.Object r1, $r2;
        int i0, $i1, $i2;
        java.util.Comparator $r3;
        org.apache.commons.collections4.functors.ComparatorPredicate$Criterion $r4, $r9;
        int[] $r5;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.lang.String $r12;
        boolean $z1, z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicate;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.commons.collections4.functors.ComparatorPredicate: java.util.Comparator comparator>;

        $r2 = r0.<org.apache.commons.collections4.functors.ComparatorPredicate: java.lang.Object object>;

        i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, r1);

        $r5 = <org.apache.commons.collections4.functors.ComparatorPredicate$1: int[] $SwitchMap$org$apache$commons$collections4$functors$ComparatorPredicate$Criterion>;

        $r4 = r0.<org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion criterion>;

        $i1 = virtualinvoke $r4.<org.apache.commons.collections4.functors.ComparatorPredicate$Criterion: int ordinal()>();

        $i2 = $r5[$i1];

        tableswitch($i2)
        {
            case 1: goto label01;
            case 2: goto label04;
            case 3: goto label07;
            case 4: goto label10;
            case 5: goto label13;
            default: goto label16;
        };

     label01:
        if i0 != 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        z2 = $z1;

        goto label17;

     label04:
        if i0 <= 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        z2 = $z3;

        goto label17;

     label07:
        if i0 >= 0 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        z2 = $z4;

        goto label17;

     label10:
        if i0 < 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        z2 = $z5;

        goto label17;

     label13:
        if i0 > 0 goto label14;

        $z6 = 1;

        goto label15;

     label14:
        $z6 = 0;

     label15:
        z2 = $z6;

        goto label17;

     label16:
        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The current criterion \'");

        $r9 = r0.<org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion criterion>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is invalid.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label17:
        return z2;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.functors.ComparatorPredicate: long serialVersionUID> = -1863209236504077399L;

        return;
    }
}
