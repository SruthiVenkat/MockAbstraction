public class org.apache.commons.collections4.map.ReferenceIdentityMap extends org.apache.commons.collections4.map.AbstractReferenceMap implements java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.collections4.map.ReferenceIdentityMap r0;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength $r1, $r2;

        r0 := @this: org.apache.commons.collections4.map.ReferenceIdentityMap;

        $r2 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        $r1 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength SOFT>;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap: void <init>(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)>($r2, $r1, 16, 0.75F, 0);

        return;
    }

    public void <init>(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)
    {
        org.apache.commons.collections4.map.ReferenceIdentityMap r0;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength r1, r2;

        r0 := @this: org.apache.commons.collections4.map.ReferenceIdentityMap;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        r2 := @parameter1: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap: void <init>(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)>(r1, r2, 16, 0.75F, 0);

        return;
    }

    public void <init>(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, boolean)
    {
        org.apache.commons.collections4.map.ReferenceIdentityMap r0;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength r1, r2;
        boolean z0;

        r0 := @this: org.apache.commons.collections4.map.ReferenceIdentityMap;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        r2 := @parameter1: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap: void <init>(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)>(r1, r2, 16, 0.75F, z0);

        return;
    }

    public void <init>(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, int, float)
    {
        org.apache.commons.collections4.map.ReferenceIdentityMap r0;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength r1, r2;
        int i0;
        float f0;

        r0 := @this: org.apache.commons.collections4.map.ReferenceIdentityMap;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        r2 := @parameter1: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        i0 := @parameter2: int;

        f0 := @parameter3: float;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap: void <init>(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)>(r1, r2, i0, f0, 0);

        return;
    }

    public void <init>(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, int, float, boolean)
    {
        org.apache.commons.collections4.map.ReferenceIdentityMap r0;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength r1, r2;
        int i0;
        float f0;
        boolean z0;

        r0 := @this: org.apache.commons.collections4.map.ReferenceIdentityMap;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        r2 := @parameter1: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        i0 := @parameter2: int;

        f0 := @parameter3: float;

        z0 := @parameter4: boolean;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap: void <init>(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)>(r1, r2, i0, f0, z0);

        return;
    }

    protected int hash(java.lang.Object)
    {
        org.apache.commons.collections4.map.ReferenceIdentityMap r0;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.map.ReferenceIdentityMap;

        r1 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        return $i0;
    }

    protected int hashEntry(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.ReferenceIdentityMap r0;
        java.lang.Object r1, r2;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections4.map.ReferenceIdentityMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    protected boolean isEqualKey(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.ReferenceIdentityMap r0;
        java.lang.Object r1, r4, $r5;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength $r2;
        boolean $z0, $z1;
        java.lang.ref.Reference $r3;

        r0 := @this: org.apache.commons.collections4.map.ReferenceIdentityMap;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r2 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.ReferenceIdentityMap: boolean isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)>($r2);

        if $z0 == 0 goto label1;

        $r5 = r4;

        goto label2;

     label1:
        $r3 = (java.lang.ref.Reference) r4;

        $r5 = virtualinvoke $r3.<java.lang.ref.Reference: java.lang.Object get()>();

     label2:
        if r1 != $r5 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    protected boolean isEqualValue(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.ReferenceIdentityMap r0;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.ReferenceIdentityMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 != r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections4.map.ReferenceIdentityMap r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: org.apache.commons.collections4.map.ReferenceIdentityMap;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.ReferenceIdentityMap: void doWriteObject(java.io.ObjectOutputStream)>(r1);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.map.ReferenceIdentityMap r0;
        java.io.ObjectInputStream r1;

        r0 := @this: org.apache.commons.collections4.map.ReferenceIdentityMap;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.ReferenceIdentityMap: void doReadObject(java.io.ObjectInputStream)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.map.ReferenceIdentityMap: long serialVersionUID> = -1266190134568365852L;

        return;
    }
}
