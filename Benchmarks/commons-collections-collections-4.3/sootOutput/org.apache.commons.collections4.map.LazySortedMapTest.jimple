public class org.apache.commons.collections4.map.LazySortedMapTest extends org.apache.commons.collections4.map.AbstractSortedMapTest
{
    private static final org.apache.commons.collections4.Factory oneFactory;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.map.LazySortedMapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.map.LazySortedMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractSortedMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public java.util.SortedMap makeObject()
    {
        org.apache.commons.collections4.map.LazySortedMapTest r0;
        java.util.TreeMap $r1;
        org.apache.commons.collections4.Factory $r2;
        org.apache.commons.collections4.map.LazySortedMap $r3;

        r0 := @this: org.apache.commons.collections4.map.LazySortedMapTest;

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>();

        $r3 = staticinvoke <org.apache.commons.collections4.map.LazySortedMap: org.apache.commons.collections4.map.LazySortedMap lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)>($r1, $r2);

        return $r3;
    }

    public boolean isAllowNullKey()
    {
        org.apache.commons.collections4.map.LazySortedMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.LazySortedMapTest;

        return 0;
    }

    public void testMapGet()
    {
        org.apache.commons.collections4.map.LazySortedMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.LazySortedMapTest;

        return;
    }

    public void mapGet()
    {
        org.apache.commons.collections4.map.LazySortedMapTest r0;
        java.lang.Number r1, r2;
        java.util.TreeMap $r3, $r8;
        org.apache.commons.collections4.Factory $r4, $r9;
        int $i0, $i1, $i2;
        java.lang.Integer $r5, $r7, $r10;
        java.lang.Object $r6, $r11;
        org.apache.commons.collections4.map.LazySortedMap r12, r13;

        r0 := @this: org.apache.commons.collections4.map.LazySortedMapTest;

        $r3 = new java.util.TreeMap;

        specialinvoke $r3.<java.util.TreeMap: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.LazySortedMapTest: org.apache.commons.collections4.Factory oneFactory>;

        r12 = staticinvoke <org.apache.commons.collections4.map.LazySortedMap: org.apache.commons.collections4.map.LazySortedMap lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)>($r3, $r4);

        $i0 = interfaceinvoke r12.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void assertEquals(int,int)>(0, $i0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r6 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r1 = (java.lang.Number) $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r7, r1);

        $i1 = interfaceinvoke r12.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void assertEquals(int,int)>(1, $i1);

        $r8 = new java.util.TreeMap;

        specialinvoke $r8.<java.util.TreeMap: void <init>()>();

        $r9 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>();

        r13 = staticinvoke <org.apache.commons.collections4.map.LazySortedMap: org.apache.commons.collections4.map.LazySortedMap lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)>($r8, $r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r11 = interfaceinvoke r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r2 = (java.lang.Number) $r11;

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, r2);

        $i2 = interfaceinvoke r13.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void assertEquals(int,int)>(1, $i2);

        return;
    }

    public void testSortOrder()
    {
        org.apache.commons.collections4.map.LazySortedMapTest r0;
        org.apache.commons.collections4.map.LazySortedMap r1;
        java.util.Comparator r2;
        java.util.TreeMap $r3;
        org.apache.commons.collections4.Factory $r4;
        java.lang.Integer $r5, $r8;
        java.lang.Object $r10, $r12, $r15, $r18, $r21;
        java.lang.String $r11, $r13, $r16, $r19, $r22;
        java.util.SortedMap $r14, $r17, $r20;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.LazySortedMapTest;

        $r3 = new java.util.TreeMap;

        specialinvoke $r3.<java.util.TreeMap: void <init>()>();

        $r4 = <org.apache.commons.collections4.map.LazySortedMapTest: org.apache.commons.collections4.Factory oneFactory>;

        r1 = staticinvoke <org.apache.commons.collections4.map.LazySortedMap: org.apache.commons.collections4.map.LazySortedMap lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)>($r3, $r4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        interfaceinvoke r1.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("A", $r5);

        interfaceinvoke r1.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>("B");

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        interfaceinvoke r1.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("C", $r8);

        $r10 = interfaceinvoke r1.<java.util.SortedMap: java.lang.Object firstKey()>();

        $r11 = (java.lang.String) $r10;

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("First key should be A", "A", $r11);

        $r12 = interfaceinvoke r1.<java.util.SortedMap: java.lang.Object lastKey()>();

        $r13 = (java.lang.String) $r12;

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Last key should be C", "C", $r13);

        $r14 = interfaceinvoke r1.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>("B");

        $r15 = interfaceinvoke $r14.<java.util.SortedMap: java.lang.Object firstKey()>();

        $r16 = (java.lang.String) $r15;

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("First key in tail map should be B", "B", $r16);

        $r17 = interfaceinvoke r1.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>("C");

        $r18 = interfaceinvoke $r17.<java.util.SortedMap: java.lang.Object lastKey()>();

        $r19 = (java.lang.String) $r18;

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Last key in head map should be B", "B", $r19);

        $r20 = interfaceinvoke r1.<java.util.SortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>("A", "C");

        $r21 = interfaceinvoke $r20.<java.util.SortedMap: java.lang.Object lastKey()>();

        $r22 = (java.lang.String) $r21;

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Last key in submap should be B", "B", $r22);

        r2 = interfaceinvoke r1.<java.util.SortedMap: java.util.Comparator comparator()>();

        if r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void assertTrue(java.lang.String,boolean)>("natural order, so comparator should be null", $z0);

        return;
    }

    public void testTransformerDecorate()
    {
        org.apache.commons.collections4.map.LazySortedMapTest r0;
        org.apache.commons.collections4.Transformer r1, $r5;
        org.apache.commons.collections4.Factory $r2;
        java.util.TreeMap $r3, $r4;
        boolean $z0;
        java.util.SortedMap $r6;
        java.lang.NullPointerException $r7, $r8;
        org.apache.commons.collections4.map.LazySortedMap r9;

        r0 := @this: org.apache.commons.collections4.map.LazySortedMapTest;

        $r2 = <org.apache.commons.collections4.map.LazySortedMapTest: org.apache.commons.collections4.Factory oneFactory>;

        r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Factory)>($r2);

        $r3 = new java.util.TreeMap;

        specialinvoke $r3.<java.util.TreeMap: void <init>()>();

        r9 = staticinvoke <org.apache.commons.collections4.map.LazySortedMap: org.apache.commons.collections4.map.LazySortedMap lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)>($r3, r1);

        $z0 = r9 instanceof org.apache.commons.collections4.map.LazySortedMap;

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void assertTrue(boolean)>($z0);

     label1:
        $r4 = new java.util.TreeMap;

        specialinvoke $r4.<java.util.TreeMap: void <init>()>();

        $r5 = (org.apache.commons.collections4.Transformer) null;

        staticinvoke <org.apache.commons.collections4.map.LazySortedMap: org.apache.commons.collections4.map.LazySortedMap lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)>($r4, $r5);

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void fail(java.lang.String)>("Expecting NullPointerException for null transformer");

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        $r6 = (java.util.SortedMap) null;

        staticinvoke <org.apache.commons.collections4.map.LazySortedMap: org.apache.commons.collections4.map.LazySortedMap lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)>($r6, r1);

        staticinvoke <org.apache.commons.collections4.map.LazySortedMapTest: void fail(java.lang.String)>("Expecting NullPointerException for null map");

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

     label7:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label4 to label5 with label6;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.map.LazySortedMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.LazySortedMapTest;

        return "4";
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.LazySortedMapTest r0;
        java.util.SortedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LazySortedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LazySortedMapTest: java.util.SortedMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.LazySortedMapTest r0;
        java.util.SortedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.LazySortedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.LazySortedMapTest: java.util.SortedMap makeObject()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Integer $r0;
        org.apache.commons.collections4.Factory $r1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r1 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory constantFactory(java.lang.Object)>($r0);

        <org.apache.commons.collections4.map.LazySortedMapTest: org.apache.commons.collections4.Factory oneFactory> = $r1;

        return;
    }
}
