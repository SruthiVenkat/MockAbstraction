public class org.apache.commons.collections4.functors.SwitchClosure extends java.lang.Object implements org.apache.commons.collections4.Closure, java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.apache.commons.collections4.Predicate[] iPredicates;
    private final org.apache.commons.collections4.Closure[] iClosures;
    private final org.apache.commons.collections4.Closure iDefault;

    public static org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[], org.apache.commons.collections4.Closure[], org.apache.commons.collections4.Closure)
    {
        org.apache.commons.collections4.Predicate[] r0;
        org.apache.commons.collections4.Closure[] r1;
        org.apache.commons.collections4.Closure r2, $r5;
        int $i0, $i1, $i2;
        org.apache.commons.collections4.functors.SwitchClosure $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: org.apache.commons.collections4.Predicate[];

        r1 := @parameter1: org.apache.commons.collections4.Closure[];

        r2 := @parameter2: org.apache.commons.collections4.Closure;

        staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: void validate(org.apache.commons.collections4.Predicate[])>(r0);

        staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: void validate(org.apache.commons.collections4.Closure[])>(r1);

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The predicate and closure arrays must be the same size");

        throw $r4;

     label1:
        $i2 = lengthof r0;

        if $i2 != 0 goto label4;

        if r2 != null goto label2;

        $r5 = staticinvoke <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure nopClosure()>();

        goto label3;

     label2:
        $r5 = r2;

     label3:
        return $r5;

     label4:
        $r3 = new org.apache.commons.collections4.functors.SwitchClosure;

        specialinvoke $r3.<org.apache.commons.collections4.functors.SwitchClosure: void <init>(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)>(r0, r1, r2);

        return $r3;
    }

    public static org.apache.commons.collections4.Closure switchClosure(java.util.Map)
    {
        java.util.Map r0;
        org.apache.commons.collections4.Closure r1, $r13, $r15;
        int i0, i1;
        org.apache.commons.collections4.Closure[] r2;
        org.apache.commons.collections4.Predicate[] r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.Object $r6, $r9, $r10, $r12;
        java.util.Set $r7;
        boolean $z0;
        org.apache.commons.collections4.functors.SwitchClosure $r8;
        org.apache.commons.collections4.Predicate $r11;
        java.lang.NullPointerException $r14;

        r0 := @parameter0: java.util.Map;

        if r0 != null goto label1;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("The predicate and closure map must not be null");

        throw $r14;

     label1:
        $r6 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(null);

        r1 = (org.apache.commons.collections4.Closure) $r6;

        i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        if i0 != 0 goto label4;

        if r1 != null goto label2;

        $r15 = staticinvoke <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure nopClosure()>();

        goto label3;

     label2:
        $r15 = r1;

     label3:
        return $r15;

     label4:
        r2 = newarray (org.apache.commons.collections4.Closure)[i0];

        r3 = newarray (org.apache.commons.collections4.Predicate)[i0];

        i1 = 0;

        $r7 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (org.apache.commons.collections4.Predicate) $r10;

        r3[i1] = $r11;

        $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (org.apache.commons.collections4.Closure) $r12;

        r2[i1] = $r13;

        i1 = i1 + 1;

        goto label5;

     label6:
        $r8 = new org.apache.commons.collections4.functors.SwitchClosure;

        specialinvoke $r8.<org.apache.commons.collections4.functors.SwitchClosure: void <init>(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)>(0, r3, r2, r1);

        return $r8;
    }

    private void <init>(boolean, org.apache.commons.collections4.Predicate[], org.apache.commons.collections4.Closure[], org.apache.commons.collections4.Closure)
    {
        org.apache.commons.collections4.functors.SwitchClosure r0;
        boolean z0;
        org.apache.commons.collections4.Predicate[] r1, $r7;
        org.apache.commons.collections4.Closure[] r2, $r8;
        org.apache.commons.collections4.Closure r3, $r9;

        r0 := @this: org.apache.commons.collections4.functors.SwitchClosure;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.commons.collections4.Predicate[];

        r2 := @parameter2: org.apache.commons.collections4.Closure[];

        r3 := @parameter3: org.apache.commons.collections4.Closure;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if z0 == 0 goto label1;

        $r7 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Predicate[] copy(org.apache.commons.collections4.Predicate[])>(r1);

        goto label2;

     label1:
        $r7 = r1;

     label2:
        r0.<org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Predicate[] iPredicates> = $r7;

        if z0 == 0 goto label3;

        $r8 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Closure[] copy(org.apache.commons.collections4.Closure[])>(r2);

        goto label4;

     label3:
        $r8 = r2;

     label4:
        r0.<org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Closure[] iClosures> = $r8;

        if r3 != null goto label5;

        $r9 = staticinvoke <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure nopClosure()>();

        goto label6;

     label5:
        $r9 = r3;

     label6:
        r0.<org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Closure iDefault> = $r9;

        return;
    }

    public void <init>(org.apache.commons.collections4.Predicate[], org.apache.commons.collections4.Closure[], org.apache.commons.collections4.Closure)
    {
        org.apache.commons.collections4.functors.SwitchClosure r0;
        org.apache.commons.collections4.Predicate[] r1;
        org.apache.commons.collections4.Closure[] r2;
        org.apache.commons.collections4.Closure r3;

        r0 := @this: org.apache.commons.collections4.functors.SwitchClosure;

        r1 := @parameter0: org.apache.commons.collections4.Predicate[];

        r2 := @parameter1: org.apache.commons.collections4.Closure[];

        r3 := @parameter2: org.apache.commons.collections4.Closure;

        specialinvoke r0.<org.apache.commons.collections4.functors.SwitchClosure: void <init>(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)>(1, r1, r2, r3);

        return;
    }

    public void execute(java.lang.Object)
    {
        org.apache.commons.collections4.functors.SwitchClosure r0;
        java.lang.Object r1;
        org.apache.commons.collections4.Predicate[] $r2, $r4;
        int $i0, i1;
        org.apache.commons.collections4.Closure $r3, $r7;
        org.apache.commons.collections4.Predicate $r5;
        boolean $z0;
        org.apache.commons.collections4.Closure[] $r6;

        r0 := @this: org.apache.commons.collections4.functors.SwitchClosure;

        r1 := @parameter0: java.lang.Object;

        i1 = 0;

     label1:
        $r2 = r0.<org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Predicate[] iPredicates>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label3;

        $r4 = r0.<org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Predicate[] iPredicates>;

        $r5 = $r4[i1];

        $z0 = interfaceinvoke $r5.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r1);

        if $z0 != 1 goto label2;

        $r6 = r0.<org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Closure[] iClosures>;

        $r7 = $r6[i1];

        interfaceinvoke $r7.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(r1);

        return;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = r0.<org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Closure iDefault>;

        interfaceinvoke $r3.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(r1);

        return;
    }

    public org.apache.commons.collections4.Predicate[] getPredicates()
    {
        org.apache.commons.collections4.functors.SwitchClosure r0;
        org.apache.commons.collections4.Predicate[] $r1, $r2;

        r0 := @this: org.apache.commons.collections4.functors.SwitchClosure;

        $r1 = r0.<org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Predicate[] iPredicates>;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Predicate[] copy(org.apache.commons.collections4.Predicate[])>($r1);

        return $r2;
    }

    public org.apache.commons.collections4.Closure[] getClosures()
    {
        org.apache.commons.collections4.functors.SwitchClosure r0;
        org.apache.commons.collections4.Closure[] $r1, $r2;

        r0 := @this: org.apache.commons.collections4.functors.SwitchClosure;

        $r1 = r0.<org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Closure[] iClosures>;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Closure[] copy(org.apache.commons.collections4.Closure[])>($r1);

        return $r2;
    }

    public org.apache.commons.collections4.Closure getDefaultClosure()
    {
        org.apache.commons.collections4.functors.SwitchClosure r0;
        org.apache.commons.collections4.Closure $r1;

        r0 := @this: org.apache.commons.collections4.functors.SwitchClosure;

        $r1 = r0.<org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Closure iDefault>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.functors.SwitchClosure: long serialVersionUID> = 3518477308466486130L;

        return;
    }
}
