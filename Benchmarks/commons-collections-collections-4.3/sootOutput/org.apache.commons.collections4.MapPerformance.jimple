public class org.apache.commons.collections4.MapPerformance extends java.lang.Object
{
    private static final int RUNS;

    public void <init>()
    {
        org.apache.commons.collections4.MapPerformance r0;

        r0 := @this: org.apache.commons.collections4.MapPerformance;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <org.apache.commons.collections4.MapPerformance: void testAll()>();

        return;
    }

    private static void testAll()
    {
        org.apache.commons.collections4.MapPerformance$DummyMap $r3;
        java.util.HashMap $r4;
        org.apache.commons.collections4.map.Flat3Map $r5;
        java.io.PrintStream $r6;

        $r3 = new org.apache.commons.collections4.MapPerformance$DummyMap;

        specialinvoke $r3.<org.apache.commons.collections4.MapPerformance$DummyMap: void <init>(org.apache.commons.collections4.MapPerformance$1)>(null);

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = new org.apache.commons.collections4.map.Flat3Map;

        specialinvoke $r5.<org.apache.commons.collections4.map.Flat3Map: void <init>(java.util.Map)>($r4);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.Object)>($r5);

        staticinvoke <org.apache.commons.collections4.MapPerformance: void test(java.util.Map,java.lang.String)>($r3, "         Dummy ");

        staticinvoke <org.apache.commons.collections4.MapPerformance: void test(java.util.Map,java.lang.String)>($r3, "         Dummy ");

        staticinvoke <org.apache.commons.collections4.MapPerformance: void test(java.util.Map,java.lang.String)>($r3, "         Dummy ");

        staticinvoke <org.apache.commons.collections4.MapPerformance: void test(java.util.Map,java.lang.String)>($r5, "         Flat3 ");

        staticinvoke <org.apache.commons.collections4.MapPerformance: void test(java.util.Map,java.lang.String)>($r4, "       HashMap ");

        staticinvoke <org.apache.commons.collections4.MapPerformance: void test(java.util.Map,java.lang.String)>($r5, "         Flat3 ");

        staticinvoke <org.apache.commons.collections4.MapPerformance: void test(java.util.Map,java.lang.String)>($r5, "         Flat3 ");

        staticinvoke <org.apache.commons.collections4.MapPerformance: void test(java.util.Map,java.lang.String)>($r5, "         Flat3 ");

        staticinvoke <org.apache.commons.collections4.MapPerformance: void test(java.util.Map,java.lang.String)>($r4, "       HashMap ");

        staticinvoke <org.apache.commons.collections4.MapPerformance: void test(java.util.Map,java.lang.String)>($r4, "       HashMap ");

        staticinvoke <org.apache.commons.collections4.MapPerformance: void test(java.util.Map,java.lang.String)>($r4, "       HashMap ");

        return;
    }

    private static void test(java.util.Map, java.lang.String)
    {
        java.util.Map r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.io.PrintStream $r3;
        long $l0, l3, l5;
        int i4;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        i4 = 20000000;

     label1:
        if i4 <= 0 goto label2;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alpha", "A");

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Beta", "B");

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Beta", "C");

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Gamma", "D");

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Delta", "E");

        interfaceinvoke r0.<java.util.Map: void clear()>();

        i4 = i4 + -1;

        goto label1;

     label2:
        l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $l0 = l5 - l3;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.MapPerformance: int RUNS> = 20000000;

        return;
    }
}
