public class org.apache.commons.collections4.keyvalue.MultiKeyTest extends java.lang.Object
{
    java.lang.Integer ONE;
    java.lang.Integer TWO;
    java.lang.Integer THREE;
    java.lang.Integer FOUR;
    java.lang.Integer FIVE;

    public void <init>()
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        java.lang.Integer $r1, $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE> = $r1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO> = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE> = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR> = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE> = $r5;

        return;
    }

    public void testConstructors() throws java.lang.Exception
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        org.apache.commons.collections4.keyvalue.MultiKey $r1, $r8, $r17, $r28, $r41;
        java.lang.Integer $r2, $r3, $r5, $r6, $r9, $r10, $r11, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r29, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r38, $r39, $r43, $r44, $r45, $r46, $r48, $r49, $r50, $r51;
        java.lang.Object[] $r4, $r7, $r12, $r16, $r22, $r27, $r34, $r40, $r47, $r52;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Integer[] $r42;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

        $r1 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r3 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r2 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        specialinvoke $r1.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r3, $r2);

        $r4 = newarray (java.lang.Object)[2];

        $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r4[0] = $r5;

        $r6 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r4[1] = $r6;

        $r7 = virtualinvoke $r1.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4, $r7);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r8 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r10 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        specialinvoke $r8.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, $r9);

        $r12 = newarray (java.lang.Object)[3];

        $r13 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r12[0] = $r13;

        $r14 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r12[1] = $r14;

        $r15 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r12[2] = $r15;

        $r16 = virtualinvoke $r8.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r12, $r16);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r17 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r21 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r20 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r19 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r18 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        specialinvoke $r17.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r21, $r20, $r19, $r18);

        $r22 = newarray (java.lang.Object)[4];

        $r23 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r22[0] = $r23;

        $r24 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r22[1] = $r24;

        $r25 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r22[2] = $r25;

        $r26 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r22[3] = $r26;

        $r27 = virtualinvoke $r17.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r22, $r27);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r28 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r33 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r32 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r31 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r30 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r29 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>;

        specialinvoke $r28.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r33, $r32, $r31, $r30, $r29);

        $r34 = newarray (java.lang.Object)[5];

        $r35 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r34[0] = $r35;

        $r36 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r34[1] = $r36;

        $r37 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r34[2] = $r37;

        $r38 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r34[3] = $r38;

        $r39 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>;

        $r34[4] = $r39;

        $r40 = virtualinvoke $r28.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $z3 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r34, $r40);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r41 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r42 = newarray (java.lang.Integer)[4];

        $r43 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r42[0] = $r43;

        $r44 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r42[1] = $r44;

        $r45 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r42[2] = $r45;

        $r46 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r42[3] = $r46;

        specialinvoke $r41.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>($r42, 0);

        $r47 = newarray (java.lang.Object)[4];

        $r48 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r47[0] = $r48;

        $r49 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r47[1] = $r49;

        $r50 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r47[2] = $r50;

        $r51 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r47[3] = $r51;

        $r52 = virtualinvoke $r41.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r47, $r52);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        return;
    }

    public void testConstructorsByArray() throws java.lang.Exception
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        java.lang.Integer[] $r1, $r23, $r42, r63;
        java.lang.Integer $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r18, $r24, $r25, $r26, $r27, $r30, $r31, $r32, $r33, $r35, $r37, $r38, $r39, $r40, $r43, $r44, $r45, $r46, $r49, $r50, $r51, $r52, $r54, $r56, $r57, $r58, $r59;
        org.apache.commons.collections4.keyvalue.MultiKey $r6, $r20, $r28, $r47;
        java.lang.Object[] $r7, $r12, $r14, $r19, $r21, $r22, $r29, $r34, $r36, $r41, $r48, $r53, $r55, $r60;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

        $r1 = newarray (java.lang.Integer)[4];

        $r2 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r1[0] = $r2;

        $r3 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r1[1] = $r3;

        $r4 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r1[2] = $r4;

        $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r1[3] = $r5;

        $r6 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r6.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>($r1);

        $r7 = newarray (java.lang.Object)[4];

        $r8 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r7[0] = $r8;

        $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r7[1] = $r9;

        $r10 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r7[2] = $r10;

        $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r7[3] = $r11;

        $r12 = virtualinvoke $r6.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r12);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r13 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>;

        $r1[3] = $r13;

        $r14 = newarray (java.lang.Object)[4];

        $r15 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r14[0] = $r15;

        $r16 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r14[1] = $r16;

        $r17 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r14[2] = $r17;

        $r18 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r14[3] = $r18;

        $r19 = virtualinvoke $r6.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r14, $r19);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        r63 = newarray (java.lang.Integer)[0];

        $r20 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r20.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>(r63);

        $r21 = newarray (java.lang.Object)[0];

        $r22 = virtualinvoke $r20.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r21, $r22);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r23 = newarray (java.lang.Integer)[4];

        $r24 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r23[0] = $r24;

        $r25 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r23[1] = $r25;

        $r26 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r23[2] = $r26;

        $r27 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r23[3] = $r27;

        $r28 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r28.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>($r23, 1);

        $r29 = newarray (java.lang.Object)[4];

        $r30 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r29[0] = $r30;

        $r31 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r29[1] = $r31;

        $r32 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r29[2] = $r32;

        $r33 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r29[3] = $r33;

        $r34 = virtualinvoke $r28.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $z3 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r29, $r34);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r35 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>;

        $r23[3] = $r35;

        $r36 = newarray (java.lang.Object)[4];

        $r37 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r36[0] = $r37;

        $r38 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r36[1] = $r38;

        $r39 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r36[2] = $r39;

        $r40 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r36[3] = $r40;

        $r41 = virtualinvoke $r28.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r36, $r41);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $r42 = newarray (java.lang.Integer)[4];

        $r43 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r42[0] = $r43;

        $r44 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r42[1] = $r44;

        $r45 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r42[2] = $r45;

        $r46 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r42[3] = $r46;

        $r47 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r47.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>($r42, 0);

        $r48 = newarray (java.lang.Object)[4];

        $r49 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r48[0] = $r49;

        $r50 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r48[1] = $r50;

        $r51 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r48[2] = $r51;

        $r52 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r48[3] = $r52;

        $r53 = virtualinvoke $r47.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $z5 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r48, $r53);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        $r54 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>;

        $r42[3] = $r54;

        $r55 = newarray (java.lang.Object)[4];

        $r56 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r55[0] = $r56;

        $r57 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r55[1] = $r57;

        $r58 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r55[2] = $r58;

        $r59 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>;

        $r55[3] = $r59;

        $r60 = virtualinvoke $r47.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $z6 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r55, $r60);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6);

        return;
    }

    public void testConstructorsByArrayNull() throws java.lang.Exception
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        org.apache.commons.collections4.keyvalue.MultiKey $r1, $r2, $r3;
        java.lang.IllegalArgumentException $r4, $r5, $r6;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

     label01:
        $r1 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r1.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>(null);

        staticinvoke <org.junit.Assert: void fail()>();

     label02:
        goto label04;

     label03:
        $r6 := @caughtexception;

     label04:
        $r2 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r2.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>(null, 1);

        staticinvoke <org.junit.Assert: void fail()>();

     label05:
        goto label07;

     label06:
        $r5 := @caughtexception;

     label07:
        $r3 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r3.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>(null, 0);

        staticinvoke <org.junit.Assert: void fail()>();

     label08:
        goto label10;

     label09:
        $r4 := @caughtexception;

     label10:
        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label04 to label05 with label06;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
    }

    public void testSize()
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        org.apache.commons.collections4.keyvalue.MultiKey $r1, $r4, $r5, $r9, $r10, $r15, $r16, $r22, $r23, $r25, $r28, $r32;
        java.lang.Integer $r2, $r3, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r27, $r30, $r31, $r34, $r35, $r36, $r37, $r38, $r39, $r40;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i18, $i20, $i22;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15, $l17, $l19, $l21, $l23;
        java.lang.Object[] $r24;
        java.lang.Integer[] $r26, $r29, $r33;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

        $r1 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r3 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r2 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        specialinvoke $r1.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i0 = virtualinvoke $r1.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1);

        $r4 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>(null, null);

        $i2 = virtualinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3);

        $r5 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r8 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r7 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r6 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        specialinvoke $r5.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, $r6);

        $i4 = virtualinvoke $r5.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5);

        $r9 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r9.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null);

        $i6 = virtualinvoke $r9.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l7);

        $r10 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r14 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r13 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r12 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        specialinvoke $r10.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r14, $r13, $r12, $r11);

        $i8 = virtualinvoke $r10.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l9);

        $r15 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r15.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null, null);

        $i10 = virtualinvoke $r15.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l11);

        $r16 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r21 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r20 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r19 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>;

        $r18 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>;

        $r17 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>;

        specialinvoke $r16.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r21, $r20, $r19, $r18, $r17);

        $i12 = virtualinvoke $r16.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        $l13 = (long) $i12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(5L, $l13);

        $r22 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r22.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null, null, null);

        $i14 = virtualinvoke $r22.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        $l15 = (long) $i14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(5L, $l15);

        $r23 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r24 = newarray (java.lang.Object)[0];

        specialinvoke $r23.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>($r24);

        $i16 = virtualinvoke $r23.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        $l17 = (long) $i16;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l17);

        $r25 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r26 = newarray (java.lang.Integer)[1];

        $r27 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r26[0] = $r27;

        specialinvoke $r25.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>($r26);

        $i18 = virtualinvoke $r25.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        $l19 = (long) $i18;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l19);

        $r28 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r29 = newarray (java.lang.Integer)[2];

        $r30 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r29[0] = $r30;

        $r31 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r29[1] = $r31;

        specialinvoke $r28.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>($r29);

        $i20 = virtualinvoke $r28.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        $l21 = (long) $i20;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l21);

        $r32 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r33 = newarray (java.lang.Integer)[7];

        $r34 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r33[0] = $r34;

        $r35 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r33[1] = $r35;

        $r36 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r33[2] = $r36;

        $r37 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r33[3] = $r37;

        $r38 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r33[4] = $r38;

        $r39 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r33[5] = $r39;

        $r40 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r33[6] = $r40;

        specialinvoke $r32.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>($r33);

        $i22 = virtualinvoke $r32.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>();

        $l23 = (long) $i22;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(7L, $l23);

        return;
    }

    public void testGetIndexed()
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        org.apache.commons.collections4.keyvalue.MultiKey $r2;
        java.lang.Integer $r3, $r4, $r5, $r7;
        java.lang.Object $r6, $r8;
        java.lang.IndexOutOfBoundsException $r11, $r12;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

        $r2 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r4 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r3 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        specialinvoke $r2.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r6 = virtualinvoke $r2.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r7 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r8 = virtualinvoke $r2.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r7, $r8);

     label1:
        virtualinvoke $r2.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(-1);

        staticinvoke <org.junit.Assert: void fail()>();

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        virtualinvoke $r2.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2);

        staticinvoke <org.junit.Assert: void fail()>();

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

     label7:
        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
        catch java.lang.IndexOutOfBoundsException from label4 to label5 with label6;
    }

    public void testGetKeysSimpleConstructor()
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        java.lang.Object[] r2;
        org.apache.commons.collections4.keyvalue.MultiKey $r3;
        java.lang.Integer $r4, $r5, $r7, $r9;
        java.lang.Object $r6, $r8;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

        $r3 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r4 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        specialinvoke $r3.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r5, $r4);

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        $r7 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r6 = r2[0];

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r7, $r6);

        $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r8 = r2[1];

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r9, $r8);

        $i0 = lengthof r2;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1);

        return;
    }

    public void testGetKeysArrayConstructorCloned()
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        java.lang.Object[] r3;
        java.lang.Integer[] $r4;
        java.lang.Integer $r5, $r6, $r9, $r11;
        org.apache.commons.collections4.keyvalue.MultiKey $r7;
        boolean $z0, $z1;
        java.lang.Object $r8, $r10;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

        $r4 = newarray (java.lang.Integer)[2];

        $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r4[0] = $r5;

        $r6 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r4[1] = $r6;

        $r7 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>($r4, 1);

        r3 = virtualinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        if r3 == $r4 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r3, $r4);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r8 = r3[0];

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r9, $r8);

        $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r10 = r3[1];

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r11, $r10);

        $i0 = lengthof r3;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1);

        return;
    }

    public void testGetKeysArrayConstructorNonCloned()
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        java.lang.Object[] r3;
        java.lang.Integer[] $r4;
        java.lang.Integer $r5, $r6, $r9, $r11;
        org.apache.commons.collections4.keyvalue.MultiKey $r7;
        boolean $z0, $z1;
        java.lang.Object $r8, $r10;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

        $r4 = newarray (java.lang.Integer)[2];

        $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r4[0] = $r5;

        $r6 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r4[1] = $r6;

        $r7 = new org.apache.commons.collections4.keyvalue.MultiKey;

        specialinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>($r4, 0);

        r3 = virtualinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>();

        if r3 == $r4 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r3, $r4);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r8 = r3[0];

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r9, $r8);

        $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r10 = r3[1];

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r11, $r10);

        $i0 = lengthof r3;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1);

        return;
    }

    public void testHashCode()
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        org.apache.commons.collections4.keyvalue.MultiKey $r4, $r7, $r10;
        java.lang.Integer $r5, $r6, $r8, $r9, $r11, $r12, $r13;
        long $l10, $l12;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

        $r4 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r6 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        specialinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r6, $r5);

        $r7 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r8 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        specialinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r9, $r8);

        $r10 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        specialinvoke $r10.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r11, "TWO");

        $i1 = virtualinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>();

        $i2 = virtualinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>();

        if $i1 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $i3 = virtualinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>();

        $i4 = virtualinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>();

        if $i3 != $i4 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $i5 = virtualinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>();

        $i6 = virtualinvoke $r10.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>();

        if $i5 == $i6 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r12 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $i7 = virtualinvoke $r12.<java.lang.Integer: int hashCode()>();

        $i8 = 0 ^ $i7;

        $r13 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $i9 = virtualinvoke $r13.<java.lang.Integer: int hashCode()>();

        i0 = $i8 ^ $i9;

        $l10 = (long) i0;

        $i11 = virtualinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>();

        $l12 = (long) $i11;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l10, $l12);

        return;
    }

    public void testEquals()
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        org.apache.commons.collections4.keyvalue.MultiKey $r4, $r7, $r10;
        java.lang.Integer $r5, $r6, $r8, $r9, $r11;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

        $r4 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r6 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        specialinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r6, $r5);

        $r7 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        $r8 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        specialinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r9, $r8);

        $r10 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        specialinvoke $r10.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r11, "TWO");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r4);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r7);

        $z0 = virtualinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: boolean equals(java.lang.Object)>($r10);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        $z1 = virtualinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: boolean equals(java.lang.Object)>("");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        $z2 = virtualinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: boolean equals(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2);

        return;
    }

    public void testEqualsAfterSerialization() throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        java.util.Map r7;
        org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey $r9, r27;
        org.apache.commons.collections4.keyvalue.MultiKey $r10, $r22;
        java.lang.Integer $r11, $r13, $r23, $r24;
        java.util.HashMap $r12;
        java.io.ByteArrayOutputStream $r15;
        java.io.ObjectOutputStream $r16;
        java.io.ByteArrayInputStream $r17;
        byte[] $r18;
        java.io.ObjectInputStream $r19;
        java.lang.Object $r20, $r21, $r25;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

        $r9 = new org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey;

        specialinvoke $r9.<org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey: void <init>(java.lang.String)>("test");

        $r10 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        specialinvoke $r10.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r11, $r9);

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        $r13 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r13);

        $r15 = new java.io.ByteArrayOutputStream;

        specialinvoke $r15.<java.io.ByteArrayOutputStream: void <init>()>();

        $r16 = new java.io.ObjectOutputStream;

        specialinvoke $r16.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r15);

        virtualinvoke $r16.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r9);

        virtualinvoke $r16.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r12);

        virtualinvoke $r16.<java.io.ObjectOutputStream: void close()>();

        $r17 = new java.io.ByteArrayInputStream;

        $r18 = virtualinvoke $r15.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r17.<java.io.ByteArrayInputStream: void <init>(byte[])>($r18);

        $r19 = new java.io.ObjectInputStream;

        specialinvoke $r19.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r17);

        $r20 = virtualinvoke $r19.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r27 = (org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey) $r20;

        $r21 = virtualinvoke $r19.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r7 = (java.util.Map) $r21;

        virtualinvoke $r19.<java.io.ObjectInputStream: void close()>();

        $i0 = virtualinvoke r27.<org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey: int hashCode()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1);

        $r22 = new org.apache.commons.collections4.keyvalue.MultiKey;

        $r23 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>;

        specialinvoke $r22.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r23, r27);

        $r24 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>;

        $r25 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r22);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25);

        return;
    }

    public void testEqualsAfterSerializationOfDerivedClass() throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.keyvalue.MultiKeyTest r0;
        org.apache.commons.collections4.keyvalue.MultiKeyTest$DerivedMultiKey r6, $r7;
        java.io.ByteArrayOutputStream $r8;
        java.io.ObjectOutputStream $r9;
        java.io.ByteArrayInputStream $r10;
        byte[] $r11;
        java.io.ObjectInputStream $r12;
        java.lang.Object $r13;
        int $i0, $i2;
        long $l1, $l3;

        r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest;

        $r7 = new org.apache.commons.collections4.keyvalue.MultiKeyTest$DerivedMultiKey;

        specialinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKeyTest$DerivedMultiKey: void <init>(java.lang.Object,java.lang.Object)>("A", "B");

        $r8 = new java.io.ByteArrayOutputStream;

        specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>();

        $r9 = new java.io.ObjectOutputStream;

        specialinvoke $r9.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r8);

        virtualinvoke $r9.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r7);

        virtualinvoke $r9.<java.io.ObjectOutputStream: void close()>();

        $r10 = new java.io.ByteArrayInputStream;

        $r11 = virtualinvoke $r8.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11);

        $r12 = new java.io.ObjectInputStream;

        specialinvoke $r12.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r10);

        $r13 = virtualinvoke $r12.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r6 = (org.apache.commons.collections4.keyvalue.MultiKeyTest$DerivedMultiKey) $r13;

        virtualinvoke $r12.<java.io.ObjectInputStream: void close()>();

        $i0 = virtualinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKeyTest$DerivedMultiKey: int hashCode()>();

        $l1 = (long) $i0;

        $i2 = virtualinvoke r6.<org.apache.commons.collections4.keyvalue.MultiKeyTest$DerivedMultiKey: int hashCode()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3);

        return;
    }
}
