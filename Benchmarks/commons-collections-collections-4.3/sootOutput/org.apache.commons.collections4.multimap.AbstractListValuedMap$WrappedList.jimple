class org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList extends org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection implements java.util.List
{
    final org.apache.commons.collections4.multimap.AbstractListValuedMap this$0;

    public void <init>(org.apache.commons.collections4.multimap.AbstractListValuedMap, java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        org.apache.commons.collections4.multimap.AbstractListValuedMap r1;
        java.lang.Object r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        r1 := @parameter0: org.apache.commons.collections4.multimap.AbstractListValuedMap;

        r2 := @parameter1: java.lang.Object;

        r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: org.apache.commons.collections4.multimap.AbstractListValuedMap this$0> = r1;

        specialinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection: void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap,java.lang.Object)>(r1, r2);

        return;
    }

    protected java.util.List getMapping()
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        org.apache.commons.collections4.multimap.AbstractListValuedMap $r1;
        java.util.Map $r2;
        java.lang.Object $r3, $r4;
        java.util.List $r5;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: org.apache.commons.collections4.multimap.AbstractListValuedMap this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.multimap.AbstractListValuedMap: java.util.Map getMap()>();

        $r3 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.lang.Object key>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.util.List) $r4;

        return $r5;
    }

    public void add(int, java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        int i0;
        java.lang.Object r1, $r5;
        org.apache.commons.collections4.multimap.AbstractListValuedMap $r2, $r3;
        java.util.Map $r4;
        java.util.List r7;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r7 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.util.List getMapping()>();

        if r7 != null goto label1;

        $r2 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: org.apache.commons.collections4.multimap.AbstractListValuedMap this$0>;

        r7 = virtualinvoke $r2.<org.apache.commons.collections4.multimap.AbstractListValuedMap: java.util.List createCollection()>();

        $r3 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: org.apache.commons.collections4.multimap.AbstractListValuedMap this$0>;

        $r4 = virtualinvoke $r3.<org.apache.commons.collections4.multimap.AbstractListValuedMap: java.util.Map getMap()>();

        $r5 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.lang.Object key>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r7);

     label1:
        interfaceinvoke r7.<java.util.List: void add(int,java.lang.Object)>(i0, r1);

        return;
    }

    public boolean addAll(int, java.util.Collection)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        int i0;
        java.util.Collection r1;
        boolean z0, $z1;
        org.apache.commons.collections4.multimap.AbstractListValuedMap $r2, $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.util.List r7, r8;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        r7 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.util.List getMapping()>();

        if r7 != null goto label2;

        $r2 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: org.apache.commons.collections4.multimap.AbstractListValuedMap this$0>;

        r8 = virtualinvoke $r2.<org.apache.commons.collections4.multimap.AbstractListValuedMap: java.util.List createCollection()>();

        z0 = interfaceinvoke r8.<java.util.List: boolean addAll(int,java.util.Collection)>(i0, r1);

        if z0 == 0 goto label1;

        $r3 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: org.apache.commons.collections4.multimap.AbstractListValuedMap this$0>;

        $r4 = virtualinvoke $r3.<org.apache.commons.collections4.multimap.AbstractListValuedMap: java.util.Map getMap()>();

        $r5 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.lang.Object key>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r8);

     label1:
        return z0;

     label2:
        $z1 = interfaceinvoke r7.<java.util.List: boolean addAll(int,java.util.Collection)>(i0, r1);

        return $z1;
    }

    public java.lang.Object get(int)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        int i0;
        java.util.List r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.util.List getMapping()>();

        r1 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List emptyIfNull(java.util.List)>($r2);

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        return $r3;
    }

    public int indexOf(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        java.lang.Object r1;
        java.util.List r2, $r3;
        int $i0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        r1 := @parameter0: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.util.List getMapping()>();

        r2 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List emptyIfNull(java.util.List)>($r3);

        $i0 = interfaceinvoke r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public int lastIndexOf(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        java.lang.Object r1;
        java.util.List r2, $r3;
        int $i0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        r1 := @parameter0: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.util.List getMapping()>();

        r2 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List emptyIfNull(java.util.List)>($r3);

        $i0 = interfaceinvoke r2.<java.util.List: int lastIndexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public java.util.ListIterator listIterator()
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator $r1;
        java.lang.Object $r2;
        org.apache.commons.collections4.multimap.AbstractListValuedMap $r3;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        $r1 = new org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator;

        $r3 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: org.apache.commons.collections4.multimap.AbstractListValuedMap this$0>;

        $r2 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.lang.Object key>;

        specialinvoke $r1.<org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator: void <init>(org.apache.commons.collections4.multimap.AbstractListValuedMap,java.lang.Object)>($r3, $r2);

        return $r1;
    }

    public java.util.ListIterator listIterator(int)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        int i0;
        org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator $r1;
        java.lang.Object $r2;
        org.apache.commons.collections4.multimap.AbstractListValuedMap $r3;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        i0 := @parameter0: int;

        $r1 = new org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator;

        $r3 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: org.apache.commons.collections4.multimap.AbstractListValuedMap this$0>;

        $r2 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.lang.Object key>;

        specialinvoke $r1.<org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator: void <init>(org.apache.commons.collections4.multimap.AbstractListValuedMap,java.lang.Object,int)>($r3, $r2, i0);

        return $r1;
    }

    public java.lang.Object remove(int)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        int i0;
        java.util.List r1, $r3;
        java.lang.Object r2, $r4;
        boolean $z0;
        org.apache.commons.collections4.multimap.AbstractListValuedMap $r5;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.util.List getMapping()>();

        r1 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List emptyIfNull(java.util.List)>($r3);

        r2 = interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i0);

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: org.apache.commons.collections4.multimap.AbstractListValuedMap this$0>;

        $r4 = r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.lang.Object key>;

        virtualinvoke $r5.<org.apache.commons.collections4.multimap.AbstractListValuedMap: java.util.List remove(java.lang.Object)>($r4);

     label1:
        return r2;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        int i0;
        java.lang.Object r1, $r4;
        java.util.List r2, $r3;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.util.List getMapping()>();

        r2 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List emptyIfNull(java.util.List)>($r3);

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return $r4;
    }

    public java.util.List subList(int, int)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        int i0, i1;
        java.util.List r1, $r2, $r3;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.util.List getMapping()>();

        r1 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List emptyIfNull(java.util.List)>($r2);

        $r3 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>(i0, i1);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        java.lang.Object r1;
        java.util.List r2, r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        r1 := @parameter0: java.lang.Object;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.util.List getMapping()>();

        if r2 != null goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $z2 = interfaceinvoke $r4.<java.util.List: boolean equals(java.lang.Object)>(r1);

        return $z2;

     label1:
        $z0 = r1 instanceof java.util.List;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = (java.util.List) r1;

        $z1 = staticinvoke <org.apache.commons.collections4.ListUtils: boolean isEqualList(java.util.Collection,java.util.Collection)>(r2, r3);

        return $z1;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        java.util.List r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.util.List getMapping()>();

        $i0 = staticinvoke <org.apache.commons.collections4.ListUtils: int hashCodeForList(java.util.Collection)>(r1);

        return $i0;
    }

    protected volatile java.util.Collection getMapping()
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: java.util.List getMapping()>();

        return $r1;
    }
}
