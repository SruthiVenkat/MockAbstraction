public final class org.apache.commons.collections4.TestUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.commons.collections4.TestUtils r0;

        r0 := @this: org.apache.commons.collections4.TestUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void assertSameAfterSerialization(java.lang.String, java.lang.Object)
    {
        java.lang.String r0;
        java.lang.Object r1, r5;
        java.io.ByteArrayOutputStream $r6;
        java.io.ObjectOutputStream $r7;
        java.io.ByteArrayInputStream $r8;
        byte[] $r9;
        java.io.ObjectInputStream $r10;
        java.lang.ClassNotFoundException $r11;
        java.lang.RuntimeException $r12, $r14;
        java.io.IOException $r13;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

     label1:
        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>();

        $r7 = new java.io.ObjectOutputStream;

        specialinvoke $r7.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r6);

        virtualinvoke $r7.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1);

        virtualinvoke $r7.<java.io.ObjectOutputStream: void close()>();

        $r8 = new java.io.ByteArrayInputStream;

        $r9 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9);

        $r10 = new java.io.ObjectInputStream;

        specialinvoke $r10.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r8);

        r5 = virtualinvoke $r10.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>(r0, r1, r5);

     label2:
        goto label5;

     label3:
        $r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label4:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.ClassNotFoundException from label1 to label2 with label4;
    }

    public static void assertSameAfterSerialization(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <org.apache.commons.collections4.TestUtils: void assertSameAfterSerialization(java.lang.String,java.lang.Object)>(null, r0);

        return;
    }
}
