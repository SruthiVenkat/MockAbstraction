class org.apache.commons.collections4.map.Flat3Map$FlatMapEntry extends java.lang.Object implements java.util.Map$Entry
{
    private final org.apache.commons.collections4.map.Flat3Map parent;
    private final int index;
    private volatile boolean removed;

    public void <init>(org.apache.commons.collections4.map.Flat3Map, int)
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapEntry r0;
        org.apache.commons.collections4.map.Flat3Map r1;
        int i0;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapEntry;

        r1 := @parameter0: org.apache.commons.collections4.map.Flat3Map;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: org.apache.commons.collections4.map.Flat3Map parent> = r1;

        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: int index> = i0;

        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: boolean removed> = 0;

        return;
    }

    void setRemoved(boolean)
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapEntry r0;
        boolean z0;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapEntry;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: boolean removed> = z0;

        return;
    }

    public java.lang.Object getKey()
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapEntry r0;
        boolean $z0;
        int $i0, $i1;
        org.apache.commons.collections4.map.Flat3Map $r1, $r3, $r5;
        java.lang.Object $r2, $r4, $r6;
        java.lang.IllegalStateException $r7, $r12;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapEntry;

        $z0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: boolean removed>;

        if $z0 == 0 goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getKey() can only be called after next() and before remove()");

        throw $r12;

     label1:
        $i0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: int index>;

        tableswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label5;
        };

     label2:
        $r1 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: org.apache.commons.collections4.map.Flat3Map parent>;

        $r2 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$100(org.apache.commons.collections4.map.Flat3Map)>($r1);

        return $r2;

     label3:
        $r3 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: org.apache.commons.collections4.map.Flat3Map parent>;

        $r4 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$200(org.apache.commons.collections4.map.Flat3Map)>($r3);

        return $r4;

     label4:
        $r5 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: org.apache.commons.collections4.map.Flat3Map parent>;

        $r6 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$300(org.apache.commons.collections4.map.Flat3Map)>($r5);

        return $r6;

     label5:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid map index: ");

        $i1 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: int index>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r7;
    }

    public java.lang.Object getValue()
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapEntry r0;
        boolean $z0;
        int $i0, $i1;
        org.apache.commons.collections4.map.Flat3Map $r1, $r3, $r5;
        java.lang.Object $r2, $r4, $r6;
        java.lang.IllegalStateException $r7, $r12;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapEntry;

        $z0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: boolean removed>;

        if $z0 == 0 goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getValue() can only be called after next() and before remove()");

        throw $r12;

     label1:
        $i0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: int index>;

        tableswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label5;
        };

     label2:
        $r1 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: org.apache.commons.collections4.map.Flat3Map parent>;

        $r2 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$400(org.apache.commons.collections4.map.Flat3Map)>($r1);

        return $r2;

     label3:
        $r3 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: org.apache.commons.collections4.map.Flat3Map parent>;

        $r4 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$500(org.apache.commons.collections4.map.Flat3Map)>($r3);

        return $r4;

     label4:
        $r5 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: org.apache.commons.collections4.map.Flat3Map parent>;

        $r6 = staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$600(org.apache.commons.collections4.map.Flat3Map)>($r5);

        return $r6;

     label5:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid map index: ");

        $i1 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: int index>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r7;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapEntry r0;
        java.lang.Object r1, r2;
        boolean $z0;
        int $i0, $i1;
        org.apache.commons.collections4.map.Flat3Map $r3, $r5, $r7;
        java.lang.IllegalStateException $r9, $r14;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapEntry;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: boolean removed>;

        if $z0 == 0 goto label1;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setValue() can only be called after next() and before remove()");

        throw $r14;

     label1:
        r2 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: java.lang.Object getValue()>();

        $i0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: int index>;

        tableswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label5;
        };

     label2:
        $r3 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: org.apache.commons.collections4.map.Flat3Map parent>;

        staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$402(org.apache.commons.collections4.map.Flat3Map,java.lang.Object)>($r3, r1);

        goto label6;

     label3:
        $r5 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: org.apache.commons.collections4.map.Flat3Map parent>;

        staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$502(org.apache.commons.collections4.map.Flat3Map,java.lang.Object)>($r5, r1);

        goto label6;

     label4:
        $r7 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: org.apache.commons.collections4.map.Flat3Map parent>;

        staticinvoke <org.apache.commons.collections4.map.Flat3Map: java.lang.Object access$602(org.apache.commons.collections4.map.Flat3Map,java.lang.Object)>($r7, r1);

        goto label6;

     label5:
        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid map index: ");

        $i1 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: int index>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label6:
        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapEntry r0;
        java.lang.Object r1, r3, r4, $r5, $r6, $r7, $r8;
        java.util.Map$Entry r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapEntry;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: boolean removed>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = r1 instanceof java.util.Map$Entry;

        if $z1 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.util.Map$Entry) r1;

        r3 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: java.lang.Object getKey()>();

        r4 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: java.lang.Object getValue()>();

        if r3 != null goto label3;

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r8 != null goto label7;

        goto label4;

     label3:
        $r5 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z2 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label7;

     label4:
        if r4 != null goto label5;

        $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r7 != null goto label7;

        goto label6;

     label5:
        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z3 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label7;

     label6:
        $z4 = 1;

        goto label8;

     label7:
        $z4 = 0;

     label8:
        return $z4;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapEntry r0;
        java.lang.Object r1, r2;
        boolean $z0;
        int $i2, $i3, $i4;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapEntry;

        $z0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: boolean removed>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: java.lang.Object getKey()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: java.lang.Object getValue()>();

        if r1 != null goto label2;

        $i2 = 0;

        goto label3;

     label2:
        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

     label3:
        if r2 != null goto label4;

        $i3 = 0;

        goto label5;

     label4:
        $i3 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

     label5:
        $i4 = $i2 ^ $i3;

        return $i4;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.map.Flat3Map$FlatMapEntry r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.Object $r2, $r5;
        java.lang.String $r7;

        r0 := @this: org.apache.commons.collections4.map.Flat3Map$FlatMapEntry;

        $z0 = r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: boolean removed>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: java.lang.Object getKey()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.map.Flat3Map$FlatMapEntry: java.lang.Object getValue()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label1:
        return "";
    }
}
