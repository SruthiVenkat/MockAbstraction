public class org.apache.commons.collections4.ClosureUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.commons.collections4.ClosureUtils r0;

        r0 := @this: org.apache.commons.collections4.ClosureUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.commons.collections4.Closure exceptionClosure()
    {
        org.apache.commons.collections4.Closure $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.functors.ExceptionClosure: org.apache.commons.collections4.Closure exceptionClosure()>();

        return $r0;
    }

    public static org.apache.commons.collections4.Closure nopClosure()
    {
        org.apache.commons.collections4.Closure $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure nopClosure()>();

        return $r0;
    }

    public static org.apache.commons.collections4.Closure asClosure(org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.Transformer r0;
        org.apache.commons.collections4.Closure $r1;

        r0 := @parameter0: org.apache.commons.collections4.Transformer;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.TransformerClosure: org.apache.commons.collections4.Closure transformerClosure(org.apache.commons.collections4.Transformer)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Closure forClosure(int, org.apache.commons.collections4.Closure)
    {
        int i0;
        org.apache.commons.collections4.Closure r0, $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.commons.collections4.Closure;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.ForClosure: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(i0, r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate, org.apache.commons.collections4.Closure)
    {
        org.apache.commons.collections4.Predicate r0;
        org.apache.commons.collections4.Closure r1, $r2;

        r0 := @parameter0: org.apache.commons.collections4.Predicate;

        r1 := @parameter1: org.apache.commons.collections4.Closure;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.WhileClosure: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,boolean)>(r0, r1, 0);

        return $r2;
    }

    public static org.apache.commons.collections4.Closure doWhileClosure(org.apache.commons.collections4.Closure, org.apache.commons.collections4.Predicate)
    {
        org.apache.commons.collections4.Closure r0, $r2;
        org.apache.commons.collections4.Predicate r1;

        r0 := @parameter0: org.apache.commons.collections4.Closure;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.WhileClosure: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,boolean)>(r1, r0, 1);

        return $r2;
    }

    public static org.apache.commons.collections4.Closure invokerClosure(java.lang.String)
    {
        java.lang.String r0;
        org.apache.commons.collections4.Transformer $r1;
        org.apache.commons.collections4.Closure $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.InvokerTransformer: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)>(r0);

        $r2 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure asClosure(org.apache.commons.collections4.Transformer)>($r1);

        return $r2;
    }

    public static org.apache.commons.collections4.Closure invokerClosure(java.lang.String, java.lang.Class[], java.lang.Object[])
    {
        java.lang.String r0;
        java.lang.Class[] r1;
        java.lang.Object[] r2;
        org.apache.commons.collections4.Transformer $r3;
        org.apache.commons.collections4.Closure $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class[];

        r2 := @parameter2: java.lang.Object[];

        $r3 = staticinvoke <org.apache.commons.collections4.functors.InvokerTransformer: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>(r0, r1, r2);

        $r4 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure asClosure(org.apache.commons.collections4.Transformer)>($r3);

        return $r4;
    }

    public static transient org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])
    {
        org.apache.commons.collections4.Closure[] r0;
        org.apache.commons.collections4.Closure $r1;

        r0 := @parameter0: org.apache.commons.collections4.Closure[];

        $r1 = staticinvoke <org.apache.commons.collections4.functors.ChainedClosure: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Closure chainedClosure(java.util.Collection)
    {
        java.util.Collection r0;
        org.apache.commons.collections4.Closure $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.ChainedClosure: org.apache.commons.collections4.Closure chainedClosure(java.util.Collection)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Closure ifClosure(org.apache.commons.collections4.Predicate, org.apache.commons.collections4.Closure)
    {
        org.apache.commons.collections4.Predicate r0;
        org.apache.commons.collections4.Closure r1, $r2;

        r0 := @parameter0: org.apache.commons.collections4.Predicate;

        r1 := @parameter1: org.apache.commons.collections4.Closure;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.IfClosure: org.apache.commons.collections4.Closure ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>(r0, r1);

        return $r2;
    }

    public static org.apache.commons.collections4.Closure ifClosure(org.apache.commons.collections4.Predicate, org.apache.commons.collections4.Closure, org.apache.commons.collections4.Closure)
    {
        org.apache.commons.collections4.Predicate r0;
        org.apache.commons.collections4.Closure r1, r2, $r3;

        r0 := @parameter0: org.apache.commons.collections4.Predicate;

        r1 := @parameter1: org.apache.commons.collections4.Closure;

        r2 := @parameter2: org.apache.commons.collections4.Closure;

        $r3 = staticinvoke <org.apache.commons.collections4.functors.IfClosure: org.apache.commons.collections4.Closure ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)>(r0, r1, r2);

        return $r3;
    }

    public static org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[], org.apache.commons.collections4.Closure[])
    {
        org.apache.commons.collections4.Predicate[] r0;
        org.apache.commons.collections4.Closure[] r1;
        org.apache.commons.collections4.Closure $r2;

        r0 := @parameter0: org.apache.commons.collections4.Predicate[];

        r1 := @parameter1: org.apache.commons.collections4.Closure[];

        $r2 = staticinvoke <org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)>(r0, r1, null);

        return $r2;
    }

    public static org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[], org.apache.commons.collections4.Closure[], org.apache.commons.collections4.Closure)
    {
        org.apache.commons.collections4.Predicate[] r0;
        org.apache.commons.collections4.Closure[] r1;
        org.apache.commons.collections4.Closure r2, $r3;

        r0 := @parameter0: org.apache.commons.collections4.Predicate[];

        r1 := @parameter1: org.apache.commons.collections4.Closure[];

        r2 := @parameter2: org.apache.commons.collections4.Closure;

        $r3 = staticinvoke <org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)>(r0, r1, r2);

        return $r3;
    }

    public static org.apache.commons.collections4.Closure switchClosure(java.util.Map)
    {
        java.util.Map r0;
        org.apache.commons.collections4.Closure $r1;

        r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.SwitchClosure: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Closure switchMapClosure(java.util.Map)
    {
        java.util.Map r0;
        org.apache.commons.collections4.Closure r1, $r8, $r13;
        int i0, i1;
        org.apache.commons.collections4.Closure[] r2;
        org.apache.commons.collections4.Predicate[] r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.Object $r6, $r9, $r10, $r12;
        java.util.Set $r7;
        boolean $z0;
        org.apache.commons.collections4.Predicate $r11;
        java.lang.NullPointerException $r14;

        r0 := @parameter0: java.util.Map;

        if r0 != null goto label1;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("The object and closure map must not be null");

        throw $r14;

     label1:
        $r6 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(null);

        r1 = (org.apache.commons.collections4.Closure) $r6;

        i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        r2 = newarray (org.apache.commons.collections4.Closure)[i0];

        r3 = newarray (org.apache.commons.collections4.Predicate)[i0];

        i1 = 0;

        $r7 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r10);

        r3[i1] = $r11;

        $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (org.apache.commons.collections4.Closure) $r12;

        r2[i1] = $r13;

        i1 = i1 + 1;

        goto label2;

     label3:
        $r8 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)>(r3, r2, r1);

        return $r8;
    }
}
