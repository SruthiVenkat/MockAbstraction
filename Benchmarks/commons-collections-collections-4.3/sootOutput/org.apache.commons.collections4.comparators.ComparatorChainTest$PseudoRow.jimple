public class org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    public int[] cols;

    public void <init>(int, int, int)
    {
        org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow r0;
        int i0, i1, i2;
        int[] $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[3];

        r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int[] cols> = $r1;

        $r2 = r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int[] cols>;

        $r2[0] = i0;

        $r3 = r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int[] cols>;

        $r3[1] = i1;

        $r4 = r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int[] cols>;

        $r4[2] = i2;

        return;
    }

    public int getColumn(int)
    {
        org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int[] cols>;

        $i1 = $r1[i0];

        return $i1;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow r0;
        java.lang.StringBuilder $r2;
        int[] $r4, $r7, $r10;
        int $i0, $i1, $i2;
        java.lang.String $r13;

        r0 := @this: org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int[] cols>;

        $i0 = $r4[0];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r7 = r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int[] cols>;

        $i1 = $r7[1];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r10 = r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int[] cols>;

        $i2 = $r10[2];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow r0, r2;
        java.lang.Object r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow) r1;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int getColumn(int)>(0);

        $i1 = virtualinvoke r2.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int getColumn(int)>(0);

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $i2 = virtualinvoke r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int getColumn(int)>(1);

        $i3 = virtualinvoke r2.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int getColumn(int)>(1);

        if $i2 == $i3 goto label3;

        return 0;

     label3:
        $i4 = virtualinvoke r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int getColumn(int)>(2);

        $i5 = virtualinvoke r2.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int getColumn(int)>(2);

        if $i4 == $i5 goto label4;

        return 0;

     label4:
        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: long serialVersionUID> = 8085570439751032499L;

        return;
    }
}
