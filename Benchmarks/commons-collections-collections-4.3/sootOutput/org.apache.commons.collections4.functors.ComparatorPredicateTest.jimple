public class org.apache.commons.collections4.functors.ComparatorPredicateTest extends org.apache.commons.collections4.functors.AbstractPredicateTest
{

    public void <init>()
    {
        org.apache.commons.collections4.functors.ComparatorPredicateTest r0;

        r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicateTest;

        specialinvoke r0.<org.apache.commons.collections4.functors.AbstractPredicateTest: void <init>()>();

        return;
    }

    public void compareEquals()
    {
        org.apache.commons.collections4.functors.ComparatorPredicateTest r0;
        java.lang.Integer r1, $r4, $r5, $r6;
        org.apache.commons.collections4.Predicate r2;
        org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicateTest;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r3 = new org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator;

        specialinvoke $r3.<org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator: void <init>(org.apache.commons.collections4.functors.ComparatorPredicateTest,org.apache.commons.collections4.functors.ComparatorPredicateTest$1)>(r0, null);

        r2 = staticinvoke <org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object,java.util.Comparator)>(r1, $r3);

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i1 = $i0 - 1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r4);

        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r5);

        $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i4 = $i3 + 1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r6);

        return;
    }

    public void compareGreater()
    {
        org.apache.commons.collections4.functors.ComparatorPredicateTest r0;
        java.lang.Integer r1, $r5, $r6, $r7;
        org.apache.commons.collections4.Predicate r2;
        org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator $r3;
        org.apache.commons.collections4.functors.ComparatorPredicate$Criterion $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicateTest;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r3 = new org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator;

        specialinvoke $r3.<org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator: void <init>(org.apache.commons.collections4.functors.ComparatorPredicateTest,org.apache.commons.collections4.functors.ComparatorPredicateTest$1)>(r0, null);

        $r4 = <org.apache.commons.collections4.functors.ComparatorPredicate$Criterion: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion GREATER>;

        r2 = staticinvoke <org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)>(r1, $r3, $r4);

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i1 = $i0 - 1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r5);

        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r6);

        $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i4 = $i3 + 1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r7);

        return;
    }

    public void compareLess()
    {
        org.apache.commons.collections4.functors.ComparatorPredicateTest r0;
        java.lang.Integer r1, $r5, $r6, $r7;
        org.apache.commons.collections4.Predicate r2;
        org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator $r3;
        org.apache.commons.collections4.functors.ComparatorPredicate$Criterion $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicateTest;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r3 = new org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator;

        specialinvoke $r3.<org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator: void <init>(org.apache.commons.collections4.functors.ComparatorPredicateTest,org.apache.commons.collections4.functors.ComparatorPredicateTest$1)>(r0, null);

        $r4 = <org.apache.commons.collections4.functors.ComparatorPredicate$Criterion: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion LESS>;

        r2 = staticinvoke <org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)>(r1, $r3, $r4);

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i1 = $i0 - 1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r5);

        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r6);

        $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i4 = $i3 + 1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r7);

        return;
    }

    public void compareGreaterOrEqual()
    {
        org.apache.commons.collections4.functors.ComparatorPredicateTest r0;
        java.lang.Integer r1, $r5, $r6, $r7;
        org.apache.commons.collections4.Predicate r2;
        org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator $r3;
        org.apache.commons.collections4.functors.ComparatorPredicate$Criterion $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicateTest;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r3 = new org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator;

        specialinvoke $r3.<org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator: void <init>(org.apache.commons.collections4.functors.ComparatorPredicateTest,org.apache.commons.collections4.functors.ComparatorPredicateTest$1)>(r0, null);

        $r4 = <org.apache.commons.collections4.functors.ComparatorPredicate$Criterion: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion GREATER_OR_EQUAL>;

        r2 = staticinvoke <org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)>(r1, $r3, $r4);

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i1 = $i0 - 1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r5);

        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r6);

        $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i4 = $i3 + 1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r7);

        return;
    }

    public void compareLessOrEqual()
    {
        org.apache.commons.collections4.functors.ComparatorPredicateTest r0;
        java.lang.Integer r1, $r5, $r6, $r7;
        org.apache.commons.collections4.Predicate r2;
        org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator $r3;
        org.apache.commons.collections4.functors.ComparatorPredicate$Criterion $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicateTest;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r3 = new org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator;

        specialinvoke $r3.<org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator: void <init>(org.apache.commons.collections4.functors.ComparatorPredicateTest,org.apache.commons.collections4.functors.ComparatorPredicateTest$1)>(r0, null);

        $r4 = <org.apache.commons.collections4.functors.ComparatorPredicate$Criterion: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion LESS_OR_EQUAL>;

        r2 = staticinvoke <org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)>(r1, $r3, $r4);

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i1 = $i0 - 1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r5);

        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r6);

        $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i4 = $i3 + 1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r7);

        return;
    }

    protected org.apache.commons.collections4.Predicate generatePredicate()
    {
        org.apache.commons.collections4.functors.ComparatorPredicateTest r0;
        java.lang.Integer $r1;
        org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator $r2;
        org.apache.commons.collections4.Predicate $r3;

        r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicateTest;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r2 = new org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator;

        specialinvoke $r2.<org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator: void <init>(org.apache.commons.collections4.functors.ComparatorPredicateTest,org.apache.commons.collections4.functors.ComparatorPredicateTest$1)>(r0, null);

        $r3 = staticinvoke <org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object,java.util.Comparator)>($r1, $r2);

        return $r3;
    }
}
