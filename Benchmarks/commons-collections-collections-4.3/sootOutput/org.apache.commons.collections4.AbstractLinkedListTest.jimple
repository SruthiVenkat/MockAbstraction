public abstract class org.apache.commons.collections4.AbstractLinkedListTest extends org.apache.commons.collections4.list.AbstractListTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractListTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public abstract java.util.LinkedList makeObject();

    public java.util.LinkedList getCollection()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.util.List $r1;
        java.util.LinkedList $r2;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.list.AbstractListTest: java.util.List getCollection()>();

        $r2 = (java.util.LinkedList) $r1;

        return $r2;
    }

    protected java.util.LinkedList getConfirmedLinkedList()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.util.List $r1;
        java.util.LinkedList $r2;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.List getConfirmed()>();

        $r2 = (java.util.LinkedList) $r1;

        return $r2;
    }

    public void testLinkedListAddFirst()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        boolean $z0;
        java.util.LinkedList $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: boolean isAddSupported()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void resetEmpty()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        virtualinvoke $r2.<java.util.LinkedList: void addFirst(java.lang.Object)>("hello");

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getConfirmedLinkedList()>();

        virtualinvoke $r3.<java.util.LinkedList: void addFirst(java.lang.Object)>("hello");

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void verify()>();

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void resetFull()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        virtualinvoke $r4.<java.util.LinkedList: void addFirst(java.lang.Object)>("hello");

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getConfirmedLinkedList()>();

        virtualinvoke $r5.<java.util.LinkedList: void addFirst(java.lang.Object)>("hello");

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void verify()>();

        return;
    }

    public void testLinkedListAddLast()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        boolean $z0;
        java.util.LinkedList $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: boolean isAddSupported()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void resetEmpty()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        virtualinvoke $r2.<java.util.LinkedList: void addLast(java.lang.Object)>("hello");

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getConfirmedLinkedList()>();

        virtualinvoke $r3.<java.util.LinkedList: void addLast(java.lang.Object)>("hello");

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void verify()>();

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void resetFull()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        virtualinvoke $r4.<java.util.LinkedList: void addLast(java.lang.Object)>("hello");

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getConfirmedLinkedList()>();

        virtualinvoke $r5.<java.util.LinkedList: void addLast(java.lang.Object)>("hello");

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void verify()>();

        return;
    }

    public void testLinkedListGetFirst()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.lang.Object r1, r8;
        java.util.LinkedList $r2, $r4, $r5;
        java.util.NoSuchElementException $r6;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void resetEmpty()>();

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        virtualinvoke $r2.<java.util.LinkedList: java.lang.Object getFirst()>();

        staticinvoke <org.apache.commons.collections4.AbstractLinkedListTest: void fail(java.lang.String)>("getFirst() should throw a NoSuchElementException for an empty list.");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void verify()>();

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void resetFull()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        r8 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getConfirmedLinkedList()>();

        r1 = virtualinvoke $r5.<java.util.LinkedList: java.lang.Object getFirst()>();

        staticinvoke <org.apache.commons.collections4.AbstractLinkedListTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Result returned by getFirst() was wrong.", r1, r8);

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void verify()>();

        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public void testLinkedListGetLast()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.lang.Object r1, r8;
        java.util.LinkedList $r2, $r4, $r5;
        java.util.NoSuchElementException $r6;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void resetEmpty()>();

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        virtualinvoke $r2.<java.util.LinkedList: java.lang.Object getLast()>();

        staticinvoke <org.apache.commons.collections4.AbstractLinkedListTest: void fail(java.lang.String)>("getLast() should throw a NoSuchElementException for an empty list.");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void verify()>();

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void resetFull()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        r8 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object getLast()>();

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getConfirmedLinkedList()>();

        r1 = virtualinvoke $r5.<java.util.LinkedList: java.lang.Object getLast()>();

        staticinvoke <org.apache.commons.collections4.AbstractLinkedListTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Result returned by getLast() was wrong.", r1, r8);

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void verify()>();

        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public void testLinkedListRemoveFirst()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.lang.Object r1, r8;
        boolean $z0;
        java.util.LinkedList $r2, $r4, $r5;
        java.util.NoSuchElementException $r6;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: boolean isRemoveSupported()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void resetEmpty()>();

     label2:
        $r2 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        virtualinvoke $r2.<java.util.LinkedList: java.lang.Object removeFirst()>();

        staticinvoke <org.apache.commons.collections4.AbstractLinkedListTest: void fail(java.lang.String)>("removeFirst() should throw a NoSuchElementException for an empty list.");

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void verify()>();

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void resetFull()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        r8 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getConfirmedLinkedList()>();

        r1 = virtualinvoke $r5.<java.util.LinkedList: java.lang.Object removeFirst()>();

        staticinvoke <org.apache.commons.collections4.AbstractLinkedListTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Result returned by removeFirst() was wrong.", r1, r8);

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void verify()>();

        return;

        catch java.util.NoSuchElementException from label2 to label3 with label4;
    }

    public void testLinkedListRemoveLast()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.lang.Object r1, r8;
        boolean $z0;
        java.util.LinkedList $r2, $r4, $r5;
        java.util.NoSuchElementException $r6;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: boolean isRemoveSupported()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void resetEmpty()>();

     label2:
        $r2 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        virtualinvoke $r2.<java.util.LinkedList: java.lang.Object removeLast()>();

        staticinvoke <org.apache.commons.collections4.AbstractLinkedListTest: void fail(java.lang.String)>("removeLast() should throw a NoSuchElementException for an empty list.");

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void verify()>();

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void resetFull()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        r8 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object removeLast()>();

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getConfirmedLinkedList()>();

        r1 = virtualinvoke $r5.<java.util.LinkedList: java.lang.Object removeLast()>();

        staticinvoke <org.apache.commons.collections4.AbstractLinkedListTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Result returned by removeLast() was wrong.", r1, r8);

        virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: void verify()>();

        return;

        catch java.util.NoSuchElementException from label2 to label3 with label4;
    }

    public java.util.Collection makeConfirmedCollection()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        return $r1;
    }

    public java.util.Collection makeConfirmedFullCollection()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.util.LinkedList $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.lang.Object[] getFullElements()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return $r2;
    }

    public volatile java.util.List getCollection()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        return $r1;
    }

    public volatile java.util.List makeObject()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList makeObject()>();

        return $r1;
    }

    public volatile java.util.Collection getCollection()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList getCollection()>();

        return $r1;
    }

    public volatile java.util.Collection makeObject()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.AbstractLinkedListTest r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.commons.collections4.AbstractLinkedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.AbstractLinkedListTest: java.util.LinkedList makeObject()>();

        return $r1;
    }
}
