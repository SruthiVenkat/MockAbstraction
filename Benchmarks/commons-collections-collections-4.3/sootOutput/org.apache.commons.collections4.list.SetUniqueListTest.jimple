public class org.apache.commons.collections4.list.SetUniqueListTest extends org.apache.commons.collections4.list.AbstractListTest
{
    boolean extraVerify;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractListTest: void <init>(java.lang.String)>(r1);

        r0.<org.apache.commons.collections4.list.SetUniqueListTest: boolean extraVerify> = 1;

        return;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        return "4";
    }

    public java.lang.Object[] getFullNonNullElements()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.lang.Object[] $r1, $r13;
        java.lang.String $r2, $r3, $r8;
        java.lang.Integer $r4, $r5, $r9;
        java.lang.Double $r6;
        java.lang.Float $r7;
        java.lang.Short $r10;
        java.lang.Long $r11;
        java.lang.Byte $r12;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r1 = newarray (java.lang.Object)[17];

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>("");

        $r1[0] = $r2;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(java.lang.String)>("One");

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r1[2] = $r4;

        $r1[3] = "Three";

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r1[4] = $r5;

        $r6 = new java.lang.Double;

        specialinvoke $r6.<java.lang.Double: void <init>(double)>(5.0);

        $r1[5] = $r6;

        $r7 = new java.lang.Float;

        specialinvoke $r7.<java.lang.Float: void <init>(float)>(6.0F);

        $r1[6] = $r7;

        $r1[7] = "Seven";

        $r1[8] = "Eight";

        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(java.lang.String)>("Nine");

        $r1[9] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r1[10] = $r9;

        $r10 = new java.lang.Short;

        specialinvoke $r10.<java.lang.Short: void <init>(short)>(11);

        $r1[11] = $r10;

        $r11 = new java.lang.Long;

        specialinvoke $r11.<java.lang.Long: void <init>(long)>(12L);

        $r1[12] = $r11;

        $r1[13] = "Thirteen";

        $r1[14] = "14";

        $r1[15] = "15";

        $r12 = new java.lang.Byte;

        specialinvoke $r12.<java.lang.Byte: void <init>(byte)>(16);

        $r1[16] = $r12;

        $r13 = (java.lang.Object[]) $r1;

        return $r13;
    }

    public java.util.List makeObject()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        org.apache.commons.collections4.list.SetUniqueList $r1;
        java.util.ArrayList $r2;
        java.util.HashSet $r3;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r1 = new org.apache.commons.collections4.list.SetUniqueList;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        specialinvoke $r1.<org.apache.commons.collections4.list.SetUniqueList: void <init>(java.util.List,java.util.Set)>($r2, $r3);

        return $r1;
    }

    public void testAdd()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.lang.Integer r2, $r6;
        org.apache.commons.collections4.list.SetUniqueList $r3;
        java.util.ArrayList $r4;
        java.util.HashSet $r5;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r3 = new org.apache.commons.collections4.list.SetUniqueList;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        specialinvoke $r3.<org.apache.commons.collections4.list.SetUniqueList: void <init>(java.util.List,java.util.Set)>($r4, $r5);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r3.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r2);

        virtualinvoke $r3.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r2);

        $i0 = virtualinvoke $r3.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.String,int,int)>("Duplicate element was added.", 1, $i0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r3.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>($r6);

        $i1 = virtualinvoke $r3.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.String,int,int)>("Unique element was not added.", 2, $i1);

        return;
    }

    public void testAddAll()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        org.apache.commons.collections4.list.SetUniqueList $r2;
        java.util.ArrayList $r3;
        java.util.HashSet $r4;
        java.lang.Integer[] $r5;
        java.lang.Integer $r6, $r7;
        java.lang.Object[] $r8;
        java.util.List $r9;
        int $i0;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r2 = new org.apache.commons.collections4.list.SetUniqueList;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        specialinvoke $r2.<org.apache.commons.collections4.list.SetUniqueList: void <init>(java.util.List,java.util.Set)>($r3, $r4);

        $r5 = newarray (java.lang.Integer)[2];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r5[1] = $r7;

        $r8 = (java.lang.Object[]) $r5;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        virtualinvoke $r2.<org.apache.commons.collections4.list.SetUniqueList: boolean addAll(java.util.Collection)>($r9);

        $i0 = virtualinvoke $r2.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.String,int,int)>("Duplicate element was added.", 1, $i0);

        return;
    }

    public void testCollectionAddAll()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.lang.Object r1, $r17;
        java.util.List $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r16, $r18;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.String $r15;
        boolean $z2, $z3, z4, z5;
        java.lang.Object[] r19, r21;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: void resetEmpty()>();

        r19 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.lang.Object[] getFullElements()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r19);

        z4 = interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getConfirmed()>();

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r19);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: void verify()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(java.lang.String,boolean)>("Empty collection should change after addAll", z4);

        i4 = lengthof r19;

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        r1 = r19[i5];

        $r18 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $z3 = interfaceinvoke $r18.<java.util.List: boolean contains(java.lang.Object)>(r1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(java.lang.String,boolean)>("Collection should contain added element", $z3);

        i5 = i5 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: void resetFull()>();

        $r6 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        i6 = interfaceinvoke $r6.<java.util.List: int size()>();

        r21 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.lang.Object[] getOtherElements()>();

        $r7 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r21);

        z5 = interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        $r9 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getConfirmed()>();

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r21);

        interfaceinvoke $r9.<java.util.List: boolean addAll(java.util.Collection)>($r10);

        virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: void verify()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(java.lang.String,boolean)>("Full collection should change after addAll", z5);

        i7 = 0;

     label3:
        $i0 = lengthof r21;

        if i7 >= $i0 goto label4;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Full collection should contain added element ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $r17 = r21[i7];

        $z2 = interfaceinvoke $r16.<java.util.List: boolean contains(java.lang.Object)>($r17);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(java.lang.String,boolean)>($r15, $z2);

        i7 = i7 + 1;

        goto label3;

     label4:
        $i1 = lengthof r21;

        $i2 = i6 + $i1;

        $r11 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $i3 = interfaceinvoke $r11.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.String,int,int)>("Size should increase after addAll", $i2, $i3);

        return;
    }

    public void testCollectionIteratorRemove()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

     label1:
        r0.<org.apache.commons.collections4.list.SetUniqueListTest: boolean extraVerify> = 0;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractListTest: void testCollectionIteratorRemove()>();

     label2:
        r0.<org.apache.commons.collections4.list.SetUniqueListTest: boolean extraVerify> = 1;

        goto label4;

     label3:
        $r2 := @caughtexception;

        r0.<org.apache.commons.collections4.list.SetUniqueListTest: boolean extraVerify> = 1;

        throw $r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void testCollections304()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        org.apache.commons.collections4.list.SetUniqueList r2;
        java.util.LinkedList $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        r2 = staticinvoke <org.apache.commons.collections4.list.SetUniqueList: org.apache.commons.collections4.list.SetUniqueList setUniqueList(java.util.List)>($r7);

        virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>("Apple");

        virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>("Lemon");

        virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>("Orange");

        $i0 = virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(3, $i0);

        virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object set(int,java.lang.Object)>(1, "Strawberry");

        $i1 = virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(3, $i1);

        virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: void add(int,java.lang.Object)>(1, "Strawberry");

        $i2 = virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(3, $i2);

        virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: void add(int,java.lang.Object)>(1, "Lemon");

        $i3 = virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(4, $i3);

        return;
    }

    public void testCollections307()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.util.ArrayList $r3, $r4, $r5, $r8;
        boolean $z2, $z3, $z5, $z6, $z9, $z10, $z12, $z13;
        org.apache.commons.collections4.list.SetUniqueListTest$SetUniqueList307 $r6;
        java.util.TreeSet $r7;
        org.apache.commons.collections4.list.SetUniqueList r10;
        java.util.List r11, r12, r16, r17;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r10 = staticinvoke <org.apache.commons.collections4.list.SetUniqueList: org.apache.commons.collections4.list.SetUniqueList setUniqueList(java.util.List)>($r3);

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>("Hello");

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>("World");

        r11 = interfaceinvoke $r3.<java.util.List: java.util.List subList(int,int)>(0, 0);

        r12 = interfaceinvoke r10.<java.util.List: java.util.List subList(int,int)>(0, 0);

        $z2 = interfaceinvoke r11.<java.util.List: boolean contains(java.lang.Object)>("World");

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertFalse(boolean)>($z2);

        $z3 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>("World");

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertFalse(boolean)>($z3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("World");

        $z5 = interfaceinvoke r11.<java.util.List: boolean contains(java.lang.Object)>("World");

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertFalse(boolean)>($z5);

        $z6 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>("World");

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertFalse(boolean)>($z6);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new org.apache.commons.collections4.list.SetUniqueListTest$SetUniqueList307;

        $r7 = new java.util.TreeSet;

        specialinvoke $r7.<java.util.TreeSet: void <init>()>();

        specialinvoke $r6.<org.apache.commons.collections4.list.SetUniqueListTest$SetUniqueList307: void <init>(org.apache.commons.collections4.list.SetUniqueListTest,java.util.List,java.util.Set)>(r0, $r5, $r7);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>("Hello");

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>("World");

        r16 = interfaceinvoke $r5.<java.util.List: java.util.List subList(int,int)>(0, 0);

        r17 = interfaceinvoke $r6.<java.util.List: java.util.List subList(int,int)>(0, 0);

        $z9 = interfaceinvoke r16.<java.util.List: boolean contains(java.lang.Object)>("World");

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertFalse(boolean)>($z9);

        $z10 = interfaceinvoke r17.<java.util.List: boolean contains(java.lang.Object)>("World");

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertFalse(boolean)>($z10);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>("World");

        $z12 = interfaceinvoke r16.<java.util.List: boolean contains(java.lang.Object)>("World");

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertFalse(boolean)>($z12);

        $z13 = interfaceinvoke r17.<java.util.List: boolean contains(java.lang.Object)>("World");

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertFalse(boolean)>($z13);

        return;
    }

    public void testCollections701()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.lang.Integer r2, r3;
        org.apache.commons.collections4.list.SetUniqueList r5, $r10;
        java.util.ArrayList $r11;
        java.util.HashSet $r12;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.LinkedList $r13;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r10 = new org.apache.commons.collections4.list.SetUniqueList;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

        specialinvoke $r10.<org.apache.commons.collections4.list.SetUniqueList: void <init>(java.util.List,java.util.Set)>($r11, $r12);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r10.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r2);

        virtualinvoke $r10.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r3);

        $i0 = virtualinvoke $r10.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(2, $i0);

        virtualinvoke $r10.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>($r10);

        $i1 = virtualinvoke $r10.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(3, $i1);

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        r5 = staticinvoke <org.apache.commons.collections4.list.SetUniqueList: org.apache.commons.collections4.list.SetUniqueList setUniqueList(java.util.List)>($r13);

        virtualinvoke r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>("Apple");

        virtualinvoke r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>("Lemon");

        virtualinvoke r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>("Orange");

        $i2 = virtualinvoke r5.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(3, $i2);

        virtualinvoke r5.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object set(int,java.lang.Object)>(1, "Strawberry");

        $i3 = virtualinvoke r5.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(3, $i3);

        virtualinvoke r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r5);

        $i4 = virtualinvoke r5.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(4, $i4);

        return;
    }

    public void testFactory()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        org.apache.commons.collections4.list.SetUniqueList r3;
        java.lang.Integer[] $r4;
        java.lang.Integer $r5, $r6, $r7, $r10, $r12, $r14, $r16;
        java.util.ArrayList $r8;
        java.util.List $r9;
        int $i0;
        java.lang.Object $r11, $r13, $r15, $r17;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r4 = newarray (java.lang.Integer)[3];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r4[1] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r4[2] = $r7;

        $r8 = new java.util.ArrayList;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        r3 = staticinvoke <org.apache.commons.collections4.list.SetUniqueList: org.apache.commons.collections4.list.SetUniqueList setUniqueList(java.util.List)>($r8);

        $i0 = virtualinvoke r3.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.String,int,int)>("Duplicate element was added.", 2, $i0);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r11 = virtualinvoke r3.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r13 = virtualinvoke r3.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r15 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r17 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r17);

        return;
    }

    public void testIntCollectionAddAll()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.lang.Integer r2, r3, r4, r5;
        org.apache.commons.collections4.list.SetUniqueList $r6;
        java.util.ArrayList $r7;
        java.util.HashSet $r8;
        java.lang.Integer[] $r9, $r13;
        int $i0, $i1;
        java.lang.Object $r10, $r11, $r12, $r14;
        java.util.List r15, r16;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r6 = new org.apache.commons.collections4.list.SetUniqueList;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        specialinvoke $r6.<org.apache.commons.collections4.list.SetUniqueList: void <init>(java.util.List,java.util.Set)>($r7, $r8);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r2);

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r9 = newarray (java.lang.Integer)[2];

        $r9[0] = r3;

        $r9[1] = r4;

        r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        interfaceinvoke $r6.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r15);

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.String,int,int)>("Unique elements should be added.", 3, $i0);

        $r10 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("First new element should be at index 0", r3, $r10);

        $r11 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Second new element should be at index 1", r4, $r11);

        $r12 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(2);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Existing element should shift to index 2", r2, $r12);

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r13 = newarray (java.lang.Integer)[2];

        $r13[0] = r2;

        $r13[1] = r5;

        r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13);

        interfaceinvoke $r6.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r16);

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.String,int,int)>("Duplicate element should not be added, unique element should be added.", 4, $i1);

        $r14 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Third new element should be at index 0", r5, $r14);

        return;
    }

    public void testListIterator()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.lang.Integer r2, r3;
        java.util.ListIterator r4;
        org.apache.commons.collections4.list.SetUniqueList $r5;
        java.util.ArrayList $r6;
        java.util.HashSet $r7;
        boolean $z2, $z3;
        int $i0;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r5 = new org.apache.commons.collections4.list.SetUniqueList;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        specialinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: void <init>(java.util.List,java.util.Set)>($r6, $r7);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r2);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r3);

        r4 = virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: java.util.ListIterator listIterator()>();

     label1:
        $z2 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        interfaceinvoke r4.<java.util.ListIterator: java.lang.Object next()>();

        $z3 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();

        if $z3 != 0 goto label1;

        interfaceinvoke r4.<java.util.ListIterator: void add(java.lang.Object)>(r2);

        goto label2;

     label2:
        $i0 = virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.String,int,int)>("Duplicate element was added", 2, $i0);

        return;
    }

    public void testListIteratorAdd()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.util.List r1, r2, $r4, $r5;
        java.lang.Object[] r3;
        java.util.ListIterator r8, r9, r12, r13;
        int i0, i1, i2, i3;
        java.lang.Object r11, r15;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: void resetEmpty()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getConfirmed()>();

        r3 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.lang.Object[] getOtherElements()>();

        r8 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator()>();

        r9 = interfaceinvoke r2.<java.util.List: java.util.ListIterator listIterator()>();

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r11 = r3[i1];

        interfaceinvoke r8.<java.util.ListIterator: void add(java.lang.Object)>(r11);

        interfaceinvoke r9.<java.util.ListIterator: void add(java.lang.Object)>(r11);

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractListTest: void verify()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: void resetFull()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        r12 = interfaceinvoke $r4.<java.util.List: java.util.ListIterator listIterator()>();

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getConfirmed()>();

        r13 = interfaceinvoke $r5.<java.util.List: java.util.ListIterator listIterator()>();

        i2 = lengthof r3;

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        r15 = r3[i3];

        interfaceinvoke r12.<java.util.ListIterator: java.lang.Object next()>();

        interfaceinvoke r13.<java.util.ListIterator: java.lang.Object next()>();

        interfaceinvoke r12.<java.util.ListIterator: void add(java.lang.Object)>(r15);

        interfaceinvoke r13.<java.util.ListIterator: void add(java.lang.Object)>(r15);

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractListTest: void verify()>();

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public void testListIteratorSet()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.util.ListIterator r1;
        java.util.List $r3;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: void resetFull()>();

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        r1 = interfaceinvoke $r3.<java.util.List: java.util.ListIterator listIterator()>();

        interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>();

     label1:
        interfaceinvoke r1.<java.util.ListIterator: void set(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    public void testListSetByIndex()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        int i0, $i1, $i2, $i3;
        java.util.List $r1, $r2, $r5, $r6, $r9, $r11;
        java.lang.Long $r3, $r7, $r10;
        java.lang.Object $r12;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: void resetFull()>();

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $r3 = new java.lang.Long;

        specialinvoke $r3.<java.lang.Long: void <init>(long)>(1000L);

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r3);

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(i0, $i1);

        $r6 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $r7 = new java.lang.Long;

        specialinvoke $r7.<java.lang.Long: void <init>(long)>(1000L);

        interfaceinvoke $r6.<java.util.List: java.lang.Object set(int,java.lang.Object)>(2, $r7);

        $i2 = i0 - 1;

        $r9 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $i3 = interfaceinvoke $r9.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>($i2, $i3);

        $r10 = new java.lang.Long;

        specialinvoke $r10.<java.lang.Long: void <init>(long)>(1000L);

        $r11 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r12);

        return;
    }

    public void testRetainAll()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        org.apache.commons.collections4.list.SetUniqueList r2;
        java.util.ArrayList $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, i2, i3;
        java.lang.Integer $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(10);

        r2 = staticinvoke <org.apache.commons.collections4.list.SetUniqueList: org.apache.commons.collections4.list.SetUniqueList setUniqueList(java.util.List)>($r3);

        i2 = 0;

     label1:
        if i2 >= 10 goto label2;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>($r11);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(5);

        i3 = 0;

     label3:
        if i3 >= 5 goto label4;

        $i1 = i3 * 2;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        i3 = i3 + 1;

        goto label3;

     label4:
        $z0 = virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: boolean retainAll(java.util.Collection)>($r4);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z0);

        $i0 = virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(5, $i0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $z1 = virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: boolean contains(java.lang.Object)>($r5);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $z2 = virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: boolean contains(java.lang.Object)>($r6);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z2);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $z3 = virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: boolean contains(java.lang.Object)>($r7);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z3);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $z4 = virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: boolean contains(java.lang.Object)>($r8);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z4);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $z5 = virtualinvoke r2.<org.apache.commons.collections4.list.SetUniqueList: boolean contains(java.lang.Object)>($r9);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z5);

        return;
    }

    public void testRetainAllWithInitialList()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.util.ArrayList $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, i2, i3, i4;
        java.lang.Integer $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        org.apache.commons.collections4.list.SetUniqueList r12;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(10);

        i2 = 0;

     label1:
        if i2 >= 5 goto label2;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r11);

        i2 = i2 + 1;

        goto label1;

     label2:
        r12 = staticinvoke <org.apache.commons.collections4.list.SetUniqueList: org.apache.commons.collections4.list.SetUniqueList setUniqueList(java.util.List)>($r2);

        i3 = 5;

     label3:
        if i3 >= 10 goto label4;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke r12.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>($r10);

        i3 = i3 + 1;

        goto label3;

     label4:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(5);

        i4 = 0;

     label5:
        if i4 >= 5 goto label6;

        $i1 = i4 * 2;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r9);

        i4 = i4 + 1;

        goto label5;

     label6:
        $z0 = virtualinvoke r12.<org.apache.commons.collections4.list.SetUniqueList: boolean retainAll(java.util.Collection)>($r3);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z0);

        $i0 = virtualinvoke r12.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(5, $i0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $z1 = virtualinvoke r12.<org.apache.commons.collections4.list.SetUniqueList: boolean contains(java.lang.Object)>($r4);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $z2 = virtualinvoke r12.<org.apache.commons.collections4.list.SetUniqueList: boolean contains(java.lang.Object)>($r5);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z2);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $z3 = virtualinvoke r12.<org.apache.commons.collections4.list.SetUniqueList: boolean contains(java.lang.Object)>($r6);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z3);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $z4 = virtualinvoke r12.<org.apache.commons.collections4.list.SetUniqueList: boolean contains(java.lang.Object)>($r7);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z4);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $z5 = virtualinvoke r12.<org.apache.commons.collections4.list.SetUniqueList: boolean contains(java.lang.Object)>($r8);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z5);

        return;
    }

    public void testSet()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.lang.Integer r2, r3, r4;
        org.apache.commons.collections4.list.SetUniqueList $r5;
        java.util.ArrayList $r6;
        java.util.HashSet $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r9, $r10, $r12, $r14, $r15, $r17;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r5 = new org.apache.commons.collections4.list.SetUniqueList;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        specialinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: void <init>(java.util.List,java.util.Set)>($r6, $r7);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r2);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r3);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object set(int,java.lang.Object)>(0, r2);

        $i0 = virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(2, $i0);

        $r9 = virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertSame(java.lang.Object,java.lang.Object)>(r2, $r9);

        $r10 = virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertSame(java.lang.Object,java.lang.Object)>(r3, $r10);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: void clear()>();

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r2);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r3);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object set(int,java.lang.Object)>(0, r3);

        $i1 = virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(1, $i1);

        $r12 = virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertSame(java.lang.Object,java.lang.Object)>(r3, $r12);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: void clear()>();

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r2);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r3);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object set(int,java.lang.Object)>(0, r4);

        $i2 = virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(2, $i2);

        $r14 = virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertSame(java.lang.Object,java.lang.Object)>(r4, $r14);

        $r15 = virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertSame(java.lang.Object,java.lang.Object)>(r3, $r15);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: void clear()>();

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r2);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r3);

        virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object set(int,java.lang.Object)>(1, r2);

        $i3 = virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(1, $i3);

        $r17 = virtualinvoke $r5.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertSame(java.lang.Object,java.lang.Object)>(r2, $r17);

        return;
    }

    public void testSetCollections444()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.lang.Integer r2, r3;
        org.apache.commons.collections4.list.SetUniqueList $r4;
        java.util.ArrayList $r5;
        java.util.HashSet $r6;
        int $i0;
        java.lang.Object $r8, $r9;
        boolean $z2, $z3;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r4 = new org.apache.commons.collections4.list.SetUniqueList;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        specialinvoke $r4.<org.apache.commons.collections4.list.SetUniqueList: void <init>(java.util.List,java.util.Set)>($r5, $r6);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r4.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r2);

        virtualinvoke $r4.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>(r3);

        virtualinvoke $r4.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object set(int,java.lang.Object)>(0, r2);

        $i0 = virtualinvoke $r4.<org.apache.commons.collections4.list.SetUniqueList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(2, $i0);

        $r8 = virtualinvoke $r4.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertSame(java.lang.Object,java.lang.Object)>(r2, $r8);

        $r9 = virtualinvoke $r4.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertSame(java.lang.Object,java.lang.Object)>(r3, $r9);

        $z2 = virtualinvoke $r4.<org.apache.commons.collections4.list.SetUniqueList: boolean contains(java.lang.Object)>(r2);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z2);

        $z3 = virtualinvoke $r4.<org.apache.commons.collections4.list.SetUniqueList: boolean contains(java.lang.Object)>(r3);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z3);

        return;
    }

    public void testSetDownwardsInList()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.util.ArrayList $r6;
        java.util.HashSet $r7;
        org.apache.commons.collections4.list.SetUniqueList $r8;
        java.lang.Object $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z2, $z3, $z4, $z5;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        $r8 = new org.apache.commons.collections4.list.SetUniqueList;

        specialinvoke $r8.<org.apache.commons.collections4.list.SetUniqueList: void <init>(java.util.List,java.util.Set)>($r6, $r7);

        $r9 = new java.lang.Object;

        specialinvoke $r9.<java.lang.Object: void <init>()>();

        $r10 = new java.lang.Object;

        specialinvoke $r10.<java.lang.Object: void <init>()>();

        virtualinvoke $r8.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>($r9);

        virtualinvoke $r8.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>($r10);

        $r11 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r11);

        $r12 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r12);

        $z2 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>($r9);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z2);

        $z3 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z3);

        $r13 = virtualinvoke $r8.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object set(int,java.lang.Object)>(0, $r10);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r13);

        $i0 = virtualinvoke $r7.<java.util.HashSet: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(1, $i0);

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(1, $i1);

        $r14 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r14);

        $z4 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z4);

        $z5 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>($r9);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertFalse(boolean)>($z5);

        return;
    }

    public void testSetInBiggerList()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.util.ArrayList $r7;
        java.util.HashSet $r8;
        org.apache.commons.collections4.list.SetUniqueList $r9;
        java.lang.Object $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        boolean $z3, $z4, $z5, $z6, $z7, $z8;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r9 = new org.apache.commons.collections4.list.SetUniqueList;

        specialinvoke $r9.<org.apache.commons.collections4.list.SetUniqueList: void <init>(java.util.List,java.util.Set)>($r7, $r8);

        $r10 = new java.lang.Object;

        specialinvoke $r10.<java.lang.Object: void <init>()>();

        $r11 = new java.lang.Object;

        specialinvoke $r11.<java.lang.Object: void <init>()>();

        $r12 = new java.lang.Object;

        specialinvoke $r12.<java.lang.Object: void <init>()>();

        virtualinvoke $r9.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>($r10);

        virtualinvoke $r9.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>($r11);

        virtualinvoke $r9.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>($r12);

        $r13 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r13);

        $r14 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r14);

        $r15 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(2);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r15);

        $z3 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z3);

        $z4 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z4);

        $z5 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z5);

        $r16 = virtualinvoke $r9.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object set(int,java.lang.Object)>(0, $r11);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r16);

        $i0 = virtualinvoke $r8.<java.util.HashSet: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(2, $i0);

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(2, $i1);

        $r17 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r17);

        $r18 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r18);

        $z6 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertFalse(boolean)>($z6);

        $z7 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z7);

        $z8 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z8);

        return;
    }

    public void testSetUpwardsInList()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.util.ArrayList $r7;
        java.util.HashSet $r8;
        org.apache.commons.collections4.list.SetUniqueList $r9;
        java.lang.String $r10, $r11, $r12;
        java.lang.Object $r13, $r14, $r15, $r16, $r17, $r18;
        boolean $z3, $z4, $z5, $z6, $z7, $z8;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r9 = new org.apache.commons.collections4.list.SetUniqueList;

        specialinvoke $r9.<org.apache.commons.collections4.list.SetUniqueList: void <init>(java.util.List,java.util.Set)>($r7, $r8);

        $r10 = new java.lang.String;

        specialinvoke $r10.<java.lang.String: void <init>(java.lang.String)>("A");

        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(java.lang.String)>("B");

        $r12 = new java.lang.String;

        specialinvoke $r12.<java.lang.String: void <init>(java.lang.String)>("C");

        virtualinvoke $r9.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>($r10);

        virtualinvoke $r9.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>($r11);

        virtualinvoke $r9.<org.apache.commons.collections4.list.SetUniqueList: boolean add(java.lang.Object)>($r12);

        $r13 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r13);

        $r14 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r14);

        $r15 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(2);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r15);

        $z3 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z3);

        $z4 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z4);

        $z5 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z5);

        $r16 = virtualinvoke $r9.<org.apache.commons.collections4.list.SetUniqueList: java.lang.Object set(int,java.lang.Object)>(1, $r10);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r16);

        $i0 = virtualinvoke $r8.<java.util.HashSet: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(2, $i0);

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(2, $i1);

        $r17 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r17);

        $r18 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r18);

        $z6 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z6);

        $z7 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertFalse(boolean)>($z7);

        $z8 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertTrue(boolean)>($z8);

        return;
    }

    public void testSubListIsUnmodifiable()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.util.List r1, $r3;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: void resetFull()>();

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        r1 = interfaceinvoke $r3.<java.util.List: java.util.List subList(int,int)>(1, 3);

     label1:
        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void fail(java.lang.String)>("subList should be unmodifiable");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    public void testUniqueListDoubleInsert()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        org.apache.commons.collections4.list.SetUniqueList r1;
        java.util.LinkedList $r2;
        java.lang.Object $r3, $r4, $r5, $r7;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r1 = staticinvoke <org.apache.commons.collections4.list.SetUniqueList: org.apache.commons.collections4.list.SetUniqueList setUniqueList(java.util.List)>($r2);

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r5);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(1, $i0);

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>(1, $r7);

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(1, $i1);

        return;
    }

    public void testUniqueListReInsert()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        org.apache.commons.collections4.list.SetUniqueList r1;
        java.lang.Object r2, $r4, $r5, $r6;
        java.util.LinkedList $r3;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r1 = staticinvoke <org.apache.commons.collections4.list.SetUniqueList: org.apache.commons.collections4.list.SetUniqueList setUniqueList(java.util.List)>($r3);

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r6);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(1, $i0);

        interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>(1, r2);

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>(2, $i1);

        return;
    }

    public void verify()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        java.util.List $r1, $r2, $r4, $r5, $r7, $r9, $r11;
        java.lang.Long $r3, $r6, $r8;
        java.lang.Object $r10;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractListTest: void verify()>();

        $z0 = r0.<org.apache.commons.collections4.list.SetUniqueListTest: boolean extraVerify>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $r3 = new java.lang.Long;

        specialinvoke $r3.<java.lang.Long: void <init>(long)>(1000L);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = i0 + 1;

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>($i1, $i2);

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $r6 = new java.lang.Long;

        specialinvoke $r6.<java.lang.Long: void <init>(long)>(1000L);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        $i3 = i0 + 1;

        $r7 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $i4 = interfaceinvoke $r7.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(int,int)>($i3, $i4);

        $r8 = new java.lang.Long;

        specialinvoke $r8.<java.lang.Long: void <init>(long)>(1000L);

        $r9 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i0);

        staticinvoke <org.apache.commons.collections4.list.SetUniqueListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r10);

        $r11 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List getCollection()>();

        interfaceinvoke $r11.<java.util.List: java.lang.Object remove(int)>(i0);

     label1:
        return;
    }

    public volatile java.util.Collection makeObject()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.list.SetUniqueListTest r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.list.SetUniqueListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.SetUniqueListTest: java.util.List makeObject()>();

        return $r1;
    }
}
