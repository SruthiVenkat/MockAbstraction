class org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    private static final long serialVersionUID;

    private void <init>()
    {
        org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator r0;

        r0 := @this: org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Integer, java.lang.Integer)
    {
        org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator r0;
        java.lang.Integer r1, r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.Integer;

        $i0 = virtualinvoke r1.<java.lang.Integer: int compareTo(java.lang.Integer)>(r2);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator r0;
        java.lang.Object r1, r2;
        java.lang.Integer $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Integer) r1;

        $r3 = (java.lang.Integer) r2;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator: int compare(java.lang.Integer,java.lang.Integer)>($r4, $r3);

        return $i0;
    }

    void <init>(org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$1)
    {
        org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator r0;
        org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$1 r1;

        r0 := @this: org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$1;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator: void <init>()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator: long serialVersionUID> = 1L;

        return;
    }
}
