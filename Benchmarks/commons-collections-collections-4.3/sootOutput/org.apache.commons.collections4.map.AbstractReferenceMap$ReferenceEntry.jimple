public class org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry extends org.apache.commons.collections4.map.AbstractHashedMap$HashEntry
{
    private final org.apache.commons.collections4.map.AbstractReferenceMap parent;

    public void <init>(org.apache.commons.collections4.map.AbstractReferenceMap, org.apache.commons.collections4.map.AbstractHashedMap$HashEntry, int, java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry r0;
        org.apache.commons.collections4.map.AbstractReferenceMap r1;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry r2;
        int i0;
        java.lang.Object r3, r4, $r6, $r8;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength $r5, $r7;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractReferenceMap;

        r2 := @parameter1: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashEntry: void <init>(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,java.lang.Object)>(r2, i0, null, null);

        r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent> = r1;

        $r5 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength access$000(org.apache.commons.collections4.map.AbstractReferenceMap)>(r1);

        $r6 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,java.lang.Object,int)>($r5, r3, i0);

        r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object key> = $r6;

        $r7 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength access$100(org.apache.commons.collections4.map.AbstractReferenceMap)>(r1);

        $r8 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,java.lang.Object,int)>($r7, r4, i0);

        r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object value> = $r8;

        return;
    }

    public java.lang.Object getKey()
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry r0;
        org.apache.commons.collections4.map.AbstractReferenceMap $r1;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength $r2, $r3;
        java.lang.Object $r4, $r6;
        java.lang.ref.Reference $r5;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r2 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength access$000(org.apache.commons.collections4.map.AbstractReferenceMap)>($r1);

        $r3 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        if $r2 != $r3 goto label1;

        $r6 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object key>;

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object key>;

        $r5 = (java.lang.ref.Reference) $r4;

        $r6 = virtualinvoke $r5.<java.lang.ref.Reference: java.lang.Object get()>();

     label2:
        return $r6;
    }

    public java.lang.Object getValue()
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry r0;
        org.apache.commons.collections4.map.AbstractReferenceMap $r1;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength $r2, $r3;
        java.lang.Object $r4, $r6;
        java.lang.ref.Reference $r5;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r2 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength access$100(org.apache.commons.collections4.map.AbstractReferenceMap)>($r1);

        $r3 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        if $r2 != $r3 goto label1;

        $r6 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object value>;

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object value>;

        $r5 = (java.lang.ref.Reference) $r4;

        $r6 = virtualinvoke $r5.<java.lang.ref.Reference: java.lang.Object get()>();

     label2:
        return $r6;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry r0;
        java.lang.Object r1, r2, $r8, $r9;
        org.apache.commons.collections4.map.AbstractReferenceMap $r3, $r6;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength $r4, $r5, $r7;
        int $i0;
        java.lang.ref.Reference $r10;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry;

        r1 := @parameter0: java.lang.Object;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object getValue()>();

        $r3 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r4 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength access$100(org.apache.commons.collections4.map.AbstractReferenceMap)>($r3);

        $r5 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        if $r4 == $r5 goto label1;

        $r9 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object value>;

        $r10 = (java.lang.ref.Reference) $r9;

        virtualinvoke $r10.<java.lang.ref.Reference: void clear()>();

     label1:
        $r6 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r7 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength access$100(org.apache.commons.collections4.map.AbstractReferenceMap)>($r6);

        $i0 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: int hashCode>;

        $r8 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,java.lang.Object,int)>($r7, r1, $i0);

        r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object value> = $r8;

        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry r0;
        java.lang.Object r1, r3, r4, $r5, $r8;
        java.util.Map$Entry r2;
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.collections4.map.AbstractReferenceMap $r6, $r7;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.util.Map$Entry) r1;

        r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        if r3 == null goto label3;

        if r4 != null goto label4;

     label3:
        return 0;

     label4:
        $r6 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r5 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object key>;

        $z1 = virtualinvoke $r6.<org.apache.commons.collections4.map.AbstractReferenceMap: boolean isEqualKey(java.lang.Object,java.lang.Object)>(r3, $r5);

        if $z1 == 0 goto label5;

        $r7 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r8 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object getValue()>();

        $z2 = virtualinvoke $r7.<org.apache.commons.collections4.map.AbstractReferenceMap: boolean isEqualValue(java.lang.Object,java.lang.Object)>(r4, $r8);

        if $z2 == 0 goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        return $z3;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry r0;
        org.apache.commons.collections4.map.AbstractReferenceMap $r1;
        java.lang.Object $r2, $r3;
        int $i0;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object getKey()>();

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object getValue()>();

        $i0 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractReferenceMap: int hashEntry(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $i0;
    }

    protected java.lang.Object toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, java.lang.Object, int)
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry r0;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength r1, $r3, $r4, $r5;
        java.lang.Object r2;
        int i0;
        java.lang.Error $r6;
        org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef $r7;
        org.apache.commons.collections4.map.AbstractReferenceMap $r8, $r11;
        java.lang.ref.ReferenceQueue $r9, $r12;
        org.apache.commons.collections4.map.AbstractReferenceMap$SoftRef $r10;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        $r3 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        if r1 != $r3 goto label1;

        return r2;

     label1:
        $r4 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength SOFT>;

        if r1 != $r4 goto label2;

        $r10 = new org.apache.commons.collections4.map.AbstractReferenceMap$SoftRef;

        $r11 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r12 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: java.lang.ref.ReferenceQueue access$200(org.apache.commons.collections4.map.AbstractReferenceMap)>($r11);

        specialinvoke $r10.<org.apache.commons.collections4.map.AbstractReferenceMap$SoftRef: void <init>(int,java.lang.Object,java.lang.ref.ReferenceQueue)>(i0, r2, $r12);

        return $r10;

     label2:
        $r5 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength WEAK>;

        if r1 != $r5 goto label3;

        $r7 = new org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef;

        $r8 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r9 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: java.lang.ref.ReferenceQueue access$200(org.apache.commons.collections4.map.AbstractReferenceMap)>($r8);

        specialinvoke $r7.<org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef: void <init>(int,java.lang.Object,java.lang.ref.ReferenceQueue)>(i0, r2, $r9);

        return $r7;

     label3:
        $r6 = new java.lang.Error;

        specialinvoke $r6.<java.lang.Error: void <init>()>();

        throw $r6;
    }

    protected void onPurge()
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry r0;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry;

        return;
    }

    protected boolean purge(java.lang.ref.Reference)
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry r0;
        java.lang.ref.Reference r1, $r13, $r15;
        org.apache.commons.collections4.map.AbstractReferenceMap $r2, $r5, $r8, $r11, $r16;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength $r3, $r4, $r6, $r7, $r9, $r10, $r17, $r18;
        boolean $z0, $z1, $z3, z4;
        java.lang.Object $r12, $r14, $r19, $r20;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry;

        r1 := @parameter0: java.lang.ref.Reference;

        $r2 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r3 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength access$000(org.apache.commons.collections4.map.AbstractReferenceMap)>($r2);

        $r4 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        if $r3 == $r4 goto label1;

        $r20 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object key>;

        if $r20 != r1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        $r16 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r17 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength access$100(org.apache.commons.collections4.map.AbstractReferenceMap)>($r16);

        $r18 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        if $r17 == $r18 goto label4;

        $r19 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object value>;

        if $r19 != r1 goto label4;

     label3:
        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        z4 = $z3;

        if $z3 == 0 goto label8;

        $r5 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r6 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength access$000(org.apache.commons.collections4.map.AbstractReferenceMap)>($r5);

        $r7 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        if $r6 == $r7 goto label6;

        $r14 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object key>;

        $r15 = (java.lang.ref.Reference) $r14;

        virtualinvoke $r15.<java.lang.ref.Reference: void clear()>();

     label6:
        $r8 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r9 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength access$100(org.apache.commons.collections4.map.AbstractReferenceMap)>($r8);

        $r10 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        if $r9 == $r10 goto label7;

        $r12 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object value>;

        $r13 = (java.lang.ref.Reference) $r12;

        virtualinvoke $r13.<java.lang.ref.Reference: void clear()>();

        goto label8;

     label7:
        $r11 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $z0 = staticinvoke <org.apache.commons.collections4.map.AbstractReferenceMap: boolean access$300(org.apache.commons.collections4.map.AbstractReferenceMap)>($r11);

        if $z0 == 0 goto label8;

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: void nullValue()>();

     label8:
        return z4;
    }

    protected org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry r0, $r2;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry next>;

        $r2 = (org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry) $r1;

        return $r2;
    }

    protected void nullValue()
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry r0;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry;

        r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object value> = null;

        return;
    }
}
