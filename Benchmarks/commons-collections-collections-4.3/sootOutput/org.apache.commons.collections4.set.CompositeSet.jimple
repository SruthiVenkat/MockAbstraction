public class org.apache.commons.collections4.set.CompositeSet extends java.lang.Object implements java.util.Set, java.io.Serializable
{
    private static final long serialVersionUID;
    private org.apache.commons.collections4.set.CompositeSet$SetMutator mutator;
    private final java.util.List all;

    public void <init>()
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all> = $r1;

        return;
    }

    public void <init>(java.util.Set)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Set r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all> = $r2;

        virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set)>(r1);

        return;
    }

    public transient void <init>(java.util.Set[])
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Set[] r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.util.Set[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all> = $r2;

        virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set[])>(r1);

        return;
    }

    public int size()
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Iterator r1;
        java.util.Set r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0, i1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        i1 = 0;

        $r3 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Set) $r4;

        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();

        i1 = i1 + $i0;

        goto label1;

     label2:
        return i1;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Iterator r1;
        java.util.Set r2;
        java.util.List $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        $r3 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Set) $r4;

        $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.lang.Object r1, $r5;
        java.util.Iterator r2;
        java.util.Set r3;
        java.util.List $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Set) $r5;

        $z1 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Iterator r2, $r8, $r9;
        java.util.Set r3;
        java.util.List $r4, $r6;
        boolean $z0, $z1;
        org.apache.commons.collections4.iterators.IteratorChain $r5;
        java.lang.Object $r7;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        $r4 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r9 = staticinvoke <org.apache.commons.collections4.iterators.EmptyIterator: java.util.Iterator emptyIterator()>();

        return $r9;

     label1:
        $r5 = new org.apache.commons.collections4.iterators.IteratorChain;

        specialinvoke $r5.<org.apache.commons.collections4.iterators.IteratorChain: void <init>()>();

        $r6 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Set) $r7;

        $r8 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

        virtualinvoke $r5.<org.apache.commons.collections4.iterators.IteratorChain: void addIterator(java.util.Iterator)>($r8);

        goto label2;

     label3:
        return $r5;
    }

    public java.lang.Object[] toArray()
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.lang.Object[] r1;
        java.util.Iterator r2;
        int $i0, i1;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: int size()>();

        r1 = newarray (java.lang.Object)[$i0];

        i1 = 0;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r1[i1] = $r3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.lang.Object[] r1, $r9, $r11, r13;
        int i0, $i1, $i2, $i3, i4;
        java.util.Iterator r2, r4;
        java.util.Collection r3;
        java.lang.Object r5, $r8, $r12;
        java.lang.Class $r6, $r7;
        java.util.List $r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.lang.Object[];

        i0 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: int size()>();

        $i1 = lengthof r1;

        if $i1 < i0 goto label1;

        r13 = r1;

        goto label2;

     label1:
        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Class getComponentType()>();

        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r7, i0);

        $r9 = (java.lang.Object[]) $r8;

        r13 = (java.lang.Object[]) $r9;

     label2:
        i4 = 0;

        $r10 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Collection) $r12;

        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $i3 = i4;

        i4 = i4 + 1;

        r13[$i3] = r5;

        goto label4;

     label5:
        goto label3;

     label6:
        $i2 = lengthof r13;

        if $i2 <= i0 goto label7;

        r13[i0] = null;

     label7:
        $r11 = (java.lang.Object[]) r13;

        return $r11;
    }

    public boolean add(java.lang.Object)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.lang.Object r1;
        org.apache.commons.collections4.set.CompositeSet$SetMutator $r2, $r4;
        java.util.List $r3;
        boolean $z0;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.set.CompositeSet: org.apache.commons.collections4.set.CompositeSet$SetMutator mutator>;

        if $r2 != null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("add() is not supported on CompositeSet without a SetMutator strategy");

        throw $r5;

     label1:
        $r4 = r0.<org.apache.commons.collections4.set.CompositeSet: org.apache.commons.collections4.set.CompositeSet$SetMutator mutator>;

        $r3 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.collections4.set.CompositeSet$SetMutator: boolean add(org.apache.commons.collections4.set.CompositeSet,java.util.List,java.lang.Object)>(r0, $r3, r1);

        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.lang.Object r1, $r5;
        java.util.Iterator r2;
        java.util.Set r3;
        java.util.List $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.lang.Object;

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List getSets()>();

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Set) $r5;

        $z1 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $z2 = interfaceinvoke r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return $z2;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean containsAll(java.util.Collection)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.util.Collection;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: boolean contains(java.lang.Object)>(r3);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public boolean addAll(java.util.Collection)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Collection r1;
        org.apache.commons.collections4.set.CompositeSet$SetMutator $r2, $r4;
        java.util.List $r3;
        boolean $z0;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.commons.collections4.set.CompositeSet: org.apache.commons.collections4.set.CompositeSet$SetMutator mutator>;

        if $r2 != null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("addAll() is not supported on CompositeSet without a SetMutator strategy");

        throw $r5;

     label1:
        $r4 = r0.<org.apache.commons.collections4.set.CompositeSet: org.apache.commons.collections4.set.CompositeSet$SetMutator mutator>;

        $r3 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.collections4.set.CompositeSet$SetMutator: boolean addAll(org.apache.commons.collections4.set.CompositeSet,java.util.List,java.util.Collection)>(r0, $r3, r1);

        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Collection r1, r3;
        java.util.Iterator r2;
        int $i0;
        java.util.List $r4;
        boolean $z0, $z1, z2;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        z2 = 0;

        $r4 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Collection) $r5;

        $z1 = interfaceinvoke r3.<java.util.Collection: boolean removeAll(java.util.Collection)>(r1);

        z2 = z2 | $z1;

        goto label2;

     label3:
        return z2;
    }

    public boolean retainAll(java.util.Collection)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Collection r1, r3;
        java.util.Iterator r2;
        java.util.List $r4;
        boolean $z0, $z1, z2;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.util.Collection;

        z2 = 0;

        $r4 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Collection) $r5;

        $z1 = interfaceinvoke r3.<java.util.Collection: boolean retainAll(java.util.Collection)>(r1);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    public void clear()
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Iterator r1;
        java.util.Collection r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        $r3 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Collection) $r4;

        interfaceinvoke r2.<java.util.Collection: void clear()>();

        goto label1;

     label2:
        return;
    }

    public void setMutator(org.apache.commons.collections4.set.CompositeSet$SetMutator)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        org.apache.commons.collections4.set.CompositeSet$SetMutator r1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: org.apache.commons.collections4.set.CompositeSet$SetMutator;

        r0.<org.apache.commons.collections4.set.CompositeSet: org.apache.commons.collections4.set.CompositeSet$SetMutator mutator> = r1;

        return;
    }

    public synchronized void addComposited(java.util.Set)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Set r1, r3;
        java.util.Iterator r2;
        java.util.Collection r4, $r10;
        java.util.List $r5, $r6;
        boolean $z0;
        java.lang.Object $r7;
        int $i0, $i1;
        org.apache.commons.collections4.set.CompositeSet$SetMutator $r8, $r9;
        java.lang.IllegalArgumentException $r11;
        java.lang.UnsupportedOperationException $r12;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.util.Set;

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List getSets()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Set) $r7;

        r4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection intersection(java.lang.Iterable,java.lang.Iterable)>(r3, r1);

        $i0 = interfaceinvoke r4.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label3;

        $r8 = r0.<org.apache.commons.collections4.set.CompositeSet: org.apache.commons.collections4.set.CompositeSet$SetMutator mutator>;

        if $r8 != null goto label2;

        $r12 = new java.lang.UnsupportedOperationException;

        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Collision adding composited set with no SetMutator set");

        throw $r12;

     label2:
        $r9 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: org.apache.commons.collections4.set.CompositeSet$SetMutator getMutator()>();

        interfaceinvoke $r9.<org.apache.commons.collections4.set.CompositeSet$SetMutator: void resolveCollision(org.apache.commons.collections4.set.CompositeSet,java.util.Set,java.util.Set,java.util.Collection)>(r0, r3, r1, r4);

        $r10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection intersection(java.lang.Iterable,java.lang.Iterable)>(r3, r1);

        $i1 = interfaceinvoke $r10.<java.util.Collection: int size()>();

        if $i1 <= 0 goto label3;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attempt to add illegal entry unresolved by SetMutator.resolveCollision()");

        throw $r11;

     label3:
        goto label1;

     label4:
        $r6 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addComposited(java.util.Set, java.util.Set)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Set r1, r2;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.util.Set;

        virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set)>(r1);

        virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set)>(r2);

        return;
    }

    public transient void addComposited(java.util.Set[])
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Set[] r1;
        int i0, i1;
        java.util.Set r3;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.util.Set[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r1[i1];

        virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void removeComposited(java.util.Set)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Set r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.util.Set;

        $r2 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public java.util.Set toSet()
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.HashSet $r1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>(r0);

        return $r1;
    }

    public java.util.List getSets()
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.List $r1, $r2;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        $r1 = r0.<org.apache.commons.collections4.set.CompositeSet: java.util.List all>;

        $r2 = staticinvoke <org.apache.commons.collections4.list.UnmodifiableList: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    protected org.apache.commons.collections4.set.CompositeSet$SetMutator getMutator()
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        org.apache.commons.collections4.set.CompositeSet$SetMutator $r1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        $r1 = r0.<org.apache.commons.collections4.set.CompositeSet: org.apache.commons.collections4.set.CompositeSet$SetMutator mutator>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.lang.Object r1;
        java.util.Set r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Set;

        if $z0 == 0 goto label3;

        r2 = (java.util.Set) r1;

        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();

        $i1 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: int size()>();

        if $i0 != $i1 goto label1;

        $z1 = interfaceinvoke r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.set.CompositeSet r0;
        java.util.Iterator r1;
        java.lang.Object r2;
        boolean $z0;
        int $i0, i1, $i2;

        r0 := @this: org.apache.commons.collections4.set.CompositeSet;

        i1 = 0;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $i0 = i1;

        if r2 != null goto label2;

        $i2 = 0;

        goto label3;

     label2:
        $i2 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

     label3:
        i1 = $i0 + $i2;

        goto label1;

     label4:
        return i1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.set.CompositeSet: long serialVersionUID> = 5185069727540378940L;

        return;
    }
}
