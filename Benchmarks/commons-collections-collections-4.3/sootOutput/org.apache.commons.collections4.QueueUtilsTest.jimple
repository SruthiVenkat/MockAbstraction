public class org.apache.commons.collections4.QueueUtilsTest extends java.lang.Object
{
    protected org.apache.commons.collections4.Predicate truePredicate;
    protected org.apache.commons.collections4.Transformer nopTransformer;

    public void <init>()
    {
        org.apache.commons.collections4.QueueUtilsTest r0;
        org.apache.commons.collections4.Predicate $r1;
        org.apache.commons.collections4.Transformer $r2;

        r0 := @this: org.apache.commons.collections4.QueueUtilsTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        r0.<org.apache.commons.collections4.QueueUtilsTest: org.apache.commons.collections4.Predicate truePredicate> = $r1;

        $r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>();

        r0.<org.apache.commons.collections4.QueueUtilsTest: org.apache.commons.collections4.Transformer nopTransformer> = $r2;

        return;
    }

    public void testSynchronizedQueue()
    {
        org.apache.commons.collections4.QueueUtilsTest r0;
        java.util.Queue r1;
        java.util.LinkedList $r3;
        boolean $z0;
        java.lang.NullPointerException $r5;

        r0 := @this: org.apache.commons.collections4.QueueUtilsTest;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r1 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue synchronizedQueue(java.util.Queue)>($r3);

        $z0 = r1 instanceof org.apache.commons.collections4.queue.SynchronizedQueue;

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be a SynchronizedQueue.", $z0);

     label1:
        staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue synchronizedQueue(java.util.Queue)>(null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null queue.");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void testUnmodifiableQueue()
    {
        org.apache.commons.collections4.QueueUtilsTest r0;
        java.util.Queue r1, $r5;
        java.util.LinkedList $r3;
        boolean $z0;
        java.lang.NullPointerException $r6;

        r0 := @this: org.apache.commons.collections4.QueueUtilsTest;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r1 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue unmodifiableQueue(java.util.Queue)>($r3);

        $z0 = r1 instanceof org.apache.commons.collections4.queue.UnmodifiableQueue;

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be an UnmodifiableQueue.", $z0);

     label1:
        staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue unmodifiableQueue(java.util.Queue)>(null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null queue.");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        $r5 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue unmodifiableQueue(java.util.Queue)>(r1);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("UnmodifiableQueue shall not be decorated", r1, $r5);

        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void testPredicatedQueue()
    {
        org.apache.commons.collections4.QueueUtilsTest r0;
        java.util.Queue r1;
        java.util.LinkedList $r2, $r6;
        org.apache.commons.collections4.Predicate $r3, $r4;
        boolean $z0;
        java.lang.NullPointerException $r8, $r9;

        r0 := @this: org.apache.commons.collections4.QueueUtilsTest;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        $r3 = r0.<org.apache.commons.collections4.QueueUtilsTest: org.apache.commons.collections4.Predicate truePredicate>;

        r1 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)>($r2, $r3);

        $z0 = r1 instanceof org.apache.commons.collections4.queue.PredicatedQueue;

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be a PredicatedQueue.", $z0);

     label1:
        $r4 = r0.<org.apache.commons.collections4.QueueUtilsTest: org.apache.commons.collections4.Predicate truePredicate>;

        staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)>(null, $r4);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null queue.");

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)>($r6, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null predicate.");

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

     label7:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label4 to label5 with label6;
    }

    public void testTransformedQueue()
    {
        org.apache.commons.collections4.QueueUtilsTest r0;
        java.util.Queue r1;
        java.util.LinkedList $r2, $r6;
        org.apache.commons.collections4.Transformer $r3, $r4;
        boolean $z0;
        java.lang.NullPointerException $r8, $r9;

        r0 := @this: org.apache.commons.collections4.QueueUtilsTest;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        $r3 = r0.<org.apache.commons.collections4.QueueUtilsTest: org.apache.commons.collections4.Transformer nopTransformer>;

        r1 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)>($r2, $r3);

        $z0 = r1 instanceof org.apache.commons.collections4.queue.TransformedQueue;

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be an TransformedQueue.", $z0);

     label1:
        $r4 = r0.<org.apache.commons.collections4.QueueUtilsTest: org.apache.commons.collections4.Transformer nopTransformer>;

        staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)>(null, $r4);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null queue.");

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)>($r6, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null transformer.");

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

     label7:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label4 to label5 with label6;
    }

    public void testEmptyQueue()
    {
        org.apache.commons.collections4.QueueUtilsTest r0;
        java.util.Queue r1;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: org.apache.commons.collections4.QueueUtilsTest;

        r1 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue emptyQueue()>();

        $z0 = r1 instanceof org.apache.commons.collections4.queue.UnmodifiableQueue;

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be an UnmodifiableQueue.", $z0);

        $z1 = interfaceinvoke r1.<java.util.Queue: boolean isEmpty()>();

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned queue is not empty.", $z1);

     label1:
        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        interfaceinvoke r1.<java.util.Queue: boolean add(java.lang.Object)>($r3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting UnsupportedOperationException for empty queue.");

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }
}
