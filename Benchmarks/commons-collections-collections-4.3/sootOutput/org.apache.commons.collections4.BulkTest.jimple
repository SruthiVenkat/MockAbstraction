public class org.apache.commons.collections4.BulkTest extends junit.framework.TestCase implements java.lang.Cloneable
{
    protected static final boolean IBMJDK16;
    protected static final java.lang.String TEST_DATA_PATH;
    java.lang.String verboseName;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.BulkTest r0;
        java.lang.String r1, $r3;
        java.lang.Class $r2;

        r0 := @this: org.apache.commons.collections4.BulkTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        r0.<org.apache.commons.collections4.BulkTest: java.lang.String verboseName> = $r3;

        return;
    }

    public java.lang.Object clone()
    {
        org.apache.commons.collections4.BulkTest r0;
        java.lang.Object $r2;
        java.lang.CloneNotSupportedException $r3;
        java.lang.Error $r4;

        r0 := @this: org.apache.commons.collections4.BulkTest;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Error;

        specialinvoke $r4.<java.lang.Error: void <init>()>();

        throw $r4;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public java.lang.String[] ignoredTests()
    {
        org.apache.commons.collections4.BulkTest r0;

        r0 := @this: org.apache.commons.collections4.BulkTest;

        return null;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.BulkTest r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r5, $r8;

        r0 := @this: org.apache.commons.collections4.BulkTest;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.BulkTest: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r5 = r0.<org.apache.commons.collections4.BulkTest: java.lang.String verboseName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static junit.framework.TestSuite makeSuite(java.lang.Class)
    {
        java.lang.Class r0, $r1;
        int $i0;
        boolean $z0, $z1;
        org.apache.commons.collections4.BulkTestSuiteMaker $r2;
        junit.framework.TestSuite $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @parameter0: java.lang.Class;

        $i0 = virtualinvoke r0.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Class must not be abstract.");

        throw $r5;

     label1:
        $r1 = class "Lorg/apache/commons/collections4/BulkTest;";

        $z1 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Class must extend BulkTest.");

        throw $r4;

     label2:
        $r2 = new org.apache.commons.collections4.BulkTestSuiteMaker;

        specialinvoke $r2.<org.apache.commons.collections4.BulkTestSuiteMaker: void <init>(java.lang.Class)>(r0);

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.BulkTestSuiteMaker: junit.framework.TestSuite make()>();

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.String r0, r1;
        boolean $z0, $z1, $z2;

        <org.apache.commons.collections4.BulkTest: java.lang.String TEST_DATA_PATH> = "src/test/resources/data/test/";

        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.name");

        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version");

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("IBM J9 VM");

        if $z0 == 0 goto label1;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("1.6.0");

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        <org.apache.commons.collections4.BulkTest: boolean IBMJDK16> = $z2;

        return;
    }
}
