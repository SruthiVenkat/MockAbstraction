public class org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    private static final long serialVersionUID;
    protected int colIndex;

    public void <init>(int)
    {
        org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator r0;
        int i0;

        r0 := @this: org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator: int colIndex> = 0;

        r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator: int colIndex> = i0;

        return;
    }

    public int compare(org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow, org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow)
    {
        org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator r0;
        org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow r1, r2;
        int i0, i1, $i2, $i3;

        r0 := @this: org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator;

        r1 := @parameter0: org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow;

        r2 := @parameter1: org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow;

        $i2 = r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator: int colIndex>;

        i0 = virtualinvoke r1.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int getColumn(int)>($i2);

        $i3 = r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator: int colIndex>;

        i1 = virtualinvoke r2.<org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow: int getColumn(int)>($i3);

        if i0 <= i1 goto label1;

        return 1;

     label1:
        if i0 >= i1 goto label2;

        return -1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator r0;
        int $i0;

        r0 := @this: org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator;

        $i0 = r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator: int colIndex>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator;

        if $z0 == 0 goto label1;

        $i1 = r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator: int colIndex>;

        $r2 = (org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator) r1;

        $i0 = $r2.<org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator: int colIndex>;

        if $i1 != $i0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator r0;
        java.lang.Object r1, r2;
        org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow) r1;

        $r3 = (org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow) r2;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator: int compare(org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow,org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow)>($r4, $r3);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator: long serialVersionUID> = -2284880866328872105L;

        return;
    }
}
