public class org.apache.commons.collections4.iterators.ArrayListIteratorTest extends org.apache.commons.collections4.iterators.ArrayIteratorTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.iterators.ArrayListIteratorTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayListIteratorTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.iterators.ArrayIteratorTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public org.apache.commons.collections4.iterators.ArrayListIterator makeEmptyIterator()
    {
        org.apache.commons.collections4.iterators.ArrayListIteratorTest r0;
        org.apache.commons.collections4.iterators.ArrayListIterator $r1;
        java.lang.Object[] $r2;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayListIteratorTest;

        $r1 = new org.apache.commons.collections4.iterators.ArrayListIterator;

        $r2 = newarray (java.lang.Object)[0];

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ArrayListIterator: void <init>(java.lang.Object)>($r2);

        return $r1;
    }

    public org.apache.commons.collections4.iterators.ArrayListIterator makeObject()
    {
        org.apache.commons.collections4.iterators.ArrayListIteratorTest r0;
        org.apache.commons.collections4.iterators.ArrayListIterator $r1;
        java.lang.String[] $r2;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayListIteratorTest;

        $r1 = new org.apache.commons.collections4.iterators.ArrayListIterator;

        $r2 = r0.<org.apache.commons.collections4.iterators.ArrayListIteratorTest: java.lang.String[] testArray>;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ArrayListIterator: void <init>(java.lang.Object)>($r2);

        return $r1;
    }

    public org.apache.commons.collections4.iterators.ArrayListIterator makeArrayListIterator(java.lang.Object)
    {
        org.apache.commons.collections4.iterators.ArrayListIteratorTest r0;
        java.lang.Object r1;
        org.apache.commons.collections4.iterators.ArrayListIterator $r2;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayListIteratorTest;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.commons.collections4.iterators.ArrayListIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.ArrayListIterator: void <init>(java.lang.Object)>(r1);

        return $r2;
    }

    public boolean supportsRemove()
    {
        org.apache.commons.collections4.iterators.ArrayListIteratorTest r0;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayListIteratorTest;

        return 0;
    }

    public void testListIterator()
    {
        org.apache.commons.collections4.iterators.ArrayListIteratorTest r0;
        org.apache.commons.collections4.iterators.ArrayListIterator r1;
        java.lang.String r2;
        java.lang.Object r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String[] $r4, $r7;
        int $i0, i1;
        java.lang.Exception $r9;
        java.lang.Class $r10, $r12;
        java.util.NoSuchElementException $r11;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayListIteratorTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayListIteratorTest: org.apache.commons.collections4.iterators.ArrayListIterator makeObject()>();

     label01:
        $z0 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>();

        goto label01;

     label02:
        $r4 = r0.<org.apache.commons.collections4.iterators.ArrayListIteratorTest: java.lang.String[] testArray>;

        $i0 = lengthof $r4;

        i1 = $i0 - 1;

     label03:
        if i1 < 0 goto label04;

        $r7 = r0.<org.apache.commons.collections4.iterators.ArrayListIteratorTest: java.lang.String[] testArray>;

        r2 = $r7[i1];

        r3 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object previous()>();

        staticinvoke <org.apache.commons.collections4.iterators.ArrayListIteratorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Iteration value is correct", r2, r3);

        i1 = i1 + -1;

        goto label03;

     label04:
        $z1 = interfaceinvoke r1.<java.util.ListIterator: boolean hasPrevious()>();

        if $z1 != 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        staticinvoke <org.apache.commons.collections4.iterators.ArrayListIteratorTest: void assertTrue(java.lang.String,boolean)>("Iterator should now be empty", $z3);

     label07:
        interfaceinvoke r1.<java.util.ListIterator: java.lang.Object previous()>();

     label08:
        goto label10;

     label09:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = new java.util.NoSuchElementException;

        specialinvoke $r11.<java.util.NoSuchElementException: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.iterators.ArrayListIteratorTest: void assertTrue(java.lang.String,boolean)>("NoSuchElementException must be thrown", $z2);

     label10:
        return;

        catch java.lang.Exception from label07 to label08 with label09;
    }

    public void testListIteratorSet()
    {
        org.apache.commons.collections4.iterators.ArrayListIteratorTest r0;
        java.lang.String[] $r3, $r4, $r5;
        boolean $z0, $z1;
        java.lang.String $r7, $r10;
        java.lang.IllegalStateException $r8;
        java.lang.Throwable $r9;
        org.apache.commons.collections4.iterators.ArrayListIterator r11, r12;
        int i0;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayListIteratorTest;

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "a";

        $r3[1] = "b";

        $r3[2] = "c";

        $r4 = newarray (java.lang.String)[3];

        $r4[0] = "0";

        $r4[1] = "1";

        $r4[2] = "2";

        r11 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayListIteratorTest: org.apache.commons.collections4.iterators.ArrayListIterator makeArrayListIterator(java.lang.Object)>($r3);

        i0 = 0;

     label1:
        $z0 = interfaceinvoke r11.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r11.<java.util.ListIterator: java.lang.Object next()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r11.<java.util.ListIterator: void set(java.lang.Object)>($r7);

        i0 = i0 + 1;

        goto label1;

     label2:
        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4);

        staticinvoke <org.apache.commons.collections4.iterators.ArrayListIteratorTest: void assertTrue(java.lang.String,boolean)>("The two arrays should have the same value, i.e. {0,1,2}", $z1);

        $r5 = r0.<org.apache.commons.collections4.iterators.ArrayListIteratorTest: java.lang.String[] testArray>;

        r12 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayListIteratorTest: org.apache.commons.collections4.iterators.ArrayListIterator makeArrayListIterator(java.lang.Object)>($r5);

     label3:
        interfaceinvoke r12.<java.util.ListIterator: void set(java.lang.Object)>("should fail");

        staticinvoke <org.apache.commons.collections4.iterators.ArrayListIteratorTest: void fail(java.lang.String)>("ListIterator#set should fail if next() or previous() have not yet been called.");

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        goto label7;

     label6:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<java.lang.Throwable: java.lang.String toString()>();

        staticinvoke <org.apache.commons.collections4.iterators.ArrayListIteratorTest: void fail(java.lang.String)>($r10);

     label7:
        return;

        catch java.lang.IllegalStateException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public volatile org.apache.commons.collections4.iterators.ArrayIterator makeObject()
    {
        org.apache.commons.collections4.iterators.ArrayListIteratorTest r0;
        org.apache.commons.collections4.iterators.ArrayListIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayListIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayListIteratorTest: org.apache.commons.collections4.iterators.ArrayListIterator makeObject()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.iterators.ArrayIterator makeEmptyIterator()
    {
        org.apache.commons.collections4.iterators.ArrayListIteratorTest r0;
        org.apache.commons.collections4.iterators.ArrayListIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayListIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayListIteratorTest: org.apache.commons.collections4.iterators.ArrayListIterator makeEmptyIterator()>();

        return $r1;
    }

    public volatile java.util.Iterator makeObject()
    {
        org.apache.commons.collections4.iterators.ArrayListIteratorTest r0;
        org.apache.commons.collections4.iterators.ArrayListIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayListIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayListIteratorTest: org.apache.commons.collections4.iterators.ArrayListIterator makeObject()>();

        return $r1;
    }

    public volatile java.util.Iterator makeEmptyIterator()
    {
        org.apache.commons.collections4.iterators.ArrayListIteratorTest r0;
        org.apache.commons.collections4.iterators.ArrayListIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayListIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayListIteratorTest: org.apache.commons.collections4.iterators.ArrayListIterator makeEmptyIterator()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.iterators.ArrayListIteratorTest r0;
        org.apache.commons.collections4.iterators.ArrayListIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayListIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayListIteratorTest: org.apache.commons.collections4.iterators.ArrayListIterator makeObject()>();

        return $r1;
    }
}
