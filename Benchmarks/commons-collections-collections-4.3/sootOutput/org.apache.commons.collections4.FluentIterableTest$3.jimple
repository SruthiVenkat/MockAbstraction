class org.apache.commons.collections4.FluentIterableTest$3 extends java.lang.Object implements org.apache.commons.collections4.Closure
{
    final java.util.concurrent.atomic.AtomicInteger val$sum;
    final org.apache.commons.collections4.FluentIterableTest this$0;

    void <init>(org.apache.commons.collections4.FluentIterableTest, java.util.concurrent.atomic.AtomicInteger)
    {
        org.apache.commons.collections4.FluentIterableTest$3 r0;
        org.apache.commons.collections4.FluentIterableTest r1;
        java.util.concurrent.atomic.AtomicInteger r2;

        r0 := @this: org.apache.commons.collections4.FluentIterableTest$3;

        r1 := @parameter0: org.apache.commons.collections4.FluentIterableTest;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicInteger;

        r0.<org.apache.commons.collections4.FluentIterableTest$3: org.apache.commons.collections4.FluentIterableTest this$0> = r1;

        r0.<org.apache.commons.collections4.FluentIterableTest$3: java.util.concurrent.atomic.AtomicInteger val$sum> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(java.lang.Integer)
    {
        org.apache.commons.collections4.FluentIterableTest$3 r0;
        java.lang.Integer r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.FluentIterableTest$3;

        r1 := @parameter0: java.lang.Integer;

        $r2 = r0.<org.apache.commons.collections4.FluentIterableTest$3: java.util.concurrent.atomic.AtomicInteger val$sum>;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i0);

        return;
    }

    public volatile void execute(java.lang.Object)
    {
        org.apache.commons.collections4.FluentIterableTest$3 r0;
        java.lang.Object r1;
        java.lang.Integer $r2;

        r0 := @this: org.apache.commons.collections4.FluentIterableTest$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Integer) r1;

        virtualinvoke r0.<org.apache.commons.collections4.FluentIterableTest$3: void execute(java.lang.Integer)>($r2);

        return;
    }
}
