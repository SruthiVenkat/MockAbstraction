public abstract class org.apache.commons.collections4.list.AbstractLinkedList extends java.lang.Object implements java.util.List
{
    transient org.apache.commons.collections4.list.AbstractLinkedList$Node header;
    transient int size;
    transient int modCount;

    protected void <init>()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void <init>(java.util.Collection)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.util.Collection r1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void init()>();

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    protected void init()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node createHeaderNode()>();

        r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header> = $r1;

        return;
    }

    public int size()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        int $i0;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $i0 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object get(int)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        int i0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(i0, 0);

        $r2 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: java.lang.Object getValue()>();

        return $r2;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.util.ListIterator $r1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: java.util.ListIterator listIterator()>();

        return $r1;
    }

    public java.util.ListIterator listIterator()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator $r1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $r1 = new org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator: void <init>(org.apache.commons.collections4.list.AbstractLinkedList,int)>(r0, 0);

        return $r1;
    }

    public java.util.ListIterator listIterator(int)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        int i0;
        org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator $r1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        i0 := @parameter0: int;

        $r1 = new org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator: void <init>(org.apache.commons.collections4.list.AbstractLinkedList,int)>(r0, i0);

        return $r1;
    }

    public int indexOf(java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.lang.Object r1, $r4;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r2, $r3, r5;
        boolean $z0;
        int i0;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.lang.Object;

        i0 = 0;

        $r2 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        r5 = $r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

     label1:
        $r3 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        if r5 == $r3 goto label3;

        $r4 = virtualinvoke r5.<org.apache.commons.collections4.list.AbstractLinkedList$Node: java.lang.Object getValue()>();

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: boolean isEqualValue(java.lang.Object,java.lang.Object)>($r4, r1);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        r5 = r5.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

        goto label1;

     label3:
        return -1;
    }

    public int lastIndexOf(java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.lang.Object r1, $r4;
        int $i0, i1;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r2, $r3, r5;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        i1 = $i0 - 1;

        $r2 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        r5 = $r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous>;

     label1:
        $r3 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        if r5 == $r3 goto label3;

        $r4 = virtualinvoke r5.<org.apache.commons.collections4.list.AbstractLinkedList$Node: java.lang.Object getValue()>();

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: boolean isEqualValue(java.lang.Object,java.lang.Object)>($r4, r1);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + -1;

        r5 = r5.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous>;

        goto label1;

     label3:
        return -1;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.lang.Object r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: int indexOf(java.lang.Object)>(r1);

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.util.Collection;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: boolean contains(java.lang.Object)>(r3);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public java.lang.Object[] toArray()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        int $i0;
        java.lang.Object[] $r1, $r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $i0 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        $r1 = newarray (java.lang.Object)[$i0];

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r1, r8, $r9;
        java.lang.Object $r2, $r4;
        java.lang.Class $r3, r7;
        java.lang.Object[] $r5, r6;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r6 := @parameter0: java.lang.Object[];

        $i1 = lengthof r6;

        $i0 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        if $i1 >= $i0 goto label1;

        $r3 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        r7 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $i5 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r7, $i5);

        $r5 = (java.lang.Object[]) $r4;

        r6 = (java.lang.Object[]) $r5;

     label1:
        i6 = 0;

        $r1 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        r8 = $r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

     label2:
        $r9 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        if r8 == $r9 goto label3;

        $r2 = virtualinvoke r8.<org.apache.commons.collections4.list.AbstractLinkedList$Node: java.lang.Object getValue()>();

        r6[i6] = $r2;

        r8 = r8.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

        i6 = i6 + 1;

        goto label2;

     label3:
        $i3 = lengthof r6;

        $i2 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        if $i3 <= $i2 goto label4;

        $i4 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        r6[$i4] = null;

     label4:
        return r6;
    }

    public java.util.List subList(int, int)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        int i0, i1;
        org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList $r1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList;

        specialinvoke $r1.<org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList: void <init>(org.apache.commons.collections4.list.AbstractLinkedList,int,int)>(r0, i0, i1);

        return $r1;
    }

    public boolean add(java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addLast(java.lang.Object)>(r1);

        return 1;
    }

    public void add(int, java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        int i0;
        java.lang.Object r1;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(i0, 1);

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList$Node,java.lang.Object)>(r2, r1);

        return;
    }

    public boolean addAll(java.util.Collection)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.util.Collection r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.util.Collection;

        $i0 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: boolean addAll(int,java.util.Collection)>($i0, r1);

        return $z0;
    }

    public boolean addAll(int, java.util.Collection)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        int i0;
        java.util.Collection r1;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(i0, 1);

        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList$Node,java.lang.Object)>(r2, r4);

        goto label1;

     label2:
        return 1;
    }

    public java.lang.Object remove(int)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        int i0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1;
        java.lang.Object r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(i0, 0);

        r2 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r1);

        return r2;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.lang.Object r1, $r4;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r2, $r3, r5;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        r5 = $r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

     label1:
        $r3 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        if r5 == $r3 goto label3;

        $r4 = virtualinvoke r5.<org.apache.commons.collections4.list.AbstractLinkedList$Node: java.lang.Object getValue()>();

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: boolean isEqualValue(java.lang.Object,java.lang.Object)>($r4, r1);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r5);

        return 1;

     label2:
        r5 = r5.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

        goto label1;

     label3:
        return 0;
    }

    public boolean removeAll(java.util.Collection)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object $r3;
        boolean $z0, z1, $z2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.util.Collection;

        z1 = 0;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        z1 = 1;

        goto label1;

     label2:
        return z1;
    }

    public boolean retainAll(java.util.Collection)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object $r3;
        boolean $z0, z1, $z2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.util.Collection;

        z1 = 0;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        z1 = 1;

        goto label1;

     label2:
        return z1;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        int i0;
        java.lang.Object r1, r3;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int,boolean)>(i0, 0);

        r3 = virtualinvoke r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void updateNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,java.lang.Object)>(r2, r1);

        return r3;
    }

    public void clear()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void removeAllNodes()>();

        return;
    }

    public java.lang.Object getFirst()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1, $r2, $r3;
        java.lang.Object $r4;
        java.util.NoSuchElementException $r5;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $r2 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        r1 = $r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

        $r3 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        if r1 != $r3 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        $r4 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: java.lang.Object getValue()>();

        return $r4;
    }

    public java.lang.Object getLast()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1, $r2, $r3;
        java.lang.Object $r4;
        java.util.NoSuchElementException $r5;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $r2 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        r1 = $r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous>;

        $r3 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        if r1 != $r3 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        $r4 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: java.lang.Object getValue()>();

        return $r4;
    }

    public boolean addFirst(java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.lang.Object r1;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList$Node,java.lang.Object)>($r2, r1);

        return 1;
    }

    public boolean addLast(java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.lang.Object r1;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList$Node,java.lang.Object)>($r2, r1);

        return 1;
    }

    public java.lang.Object removeFirst()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1, $r3, $r4;
        java.lang.Object r2;
        java.util.NoSuchElementException $r5;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $r3 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        r1 = $r3.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

        $r4 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        if r1 != $r4 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        r2 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r1);

        return r2;
    }

    public java.lang.Object removeLast()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1, $r3, $r4;
        java.lang.Object r2;
        java.util.NoSuchElementException $r5;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $r3 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        r1 = $r3.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous>;

        $r4 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        if r1 != $r4 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        r2 = virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r1);

        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.lang.Object r1, r5, r6;
        java.util.List r2;
        java.util.ListIterator r3, r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof java.util.List;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r2 = (java.util.List) r1;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $i1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size()>();

        if $i0 == $i1 goto label03;

        return 0;

     label03:
        r3 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: java.util.ListIterator listIterator()>();

        r4 = interfaceinvoke r2.<java.util.List: java.util.ListIterator listIterator()>();

     label04:
        $z1 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $z4 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();

        if $z4 == 0 goto label08;

        r5 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();

        r6 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object next()>();

        if r5 != null goto label05;

        if r6 != null goto label06;

        goto label07;

     label05:
        $z5 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>(r6);

        if $z5 != 0 goto label07;

     label06:
        return 0;

     label07:
        goto label04;

     label08:
        $z2 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>();

        if $z2 != 0 goto label09;

        $z3 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();

        if $z3 != 0 goto label09;

        $z6 = 1;

        goto label10;

     label09:
        $z6 = 0;

     label10:
        return $z6;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.util.Iterator r1;
        java.lang.Object r2;
        boolean $z0;
        int $i0, i1, $i2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        i1 = 1;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $i0 = 31 * i1;

        if r2 != null goto label2;

        $i2 = 0;

        goto label3;

     label2:
        $i2 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

     label3:
        i1 = $i0 + $i2;

        goto label1;

     label4:
        return i1;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.util.Iterator r2;
        java.lang.Object r3, $r11;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        boolean z0;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size()>();

        if $i0 != 0 goto label1;

        return "[]";

     label1:
        $r4 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size()>();

        $i2 = 16 * $i1;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        r2 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: java.util.Iterator iterator()>();

        z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

     label2:
        if z0 == 0 goto label6;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        if r3 != r0 goto label3;

        $r11 = "(this Collection)";

        goto label4;

     label3:
        $r11 = r3;

     label4:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label5;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        goto label2;

     label6:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    protected boolean isEqualValue(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.lang.Object r1, r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 == r2 goto label2;

        if r1 != null goto label1;

        goto label3;

     label1:
        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    protected void updateNode(org.apache.commons.collections4.list.AbstractLinkedList$Node, java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1;
        java.lang.Object r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: void setValue(java.lang.Object)>(r2);

        return;
    }

    protected org.apache.commons.collections4.list.AbstractLinkedList$Node createHeaderNode()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $r1 = new org.apache.commons.collections4.list.AbstractLinkedList$Node;

        specialinvoke $r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: void <init>()>();

        return $r1;
    }

    protected org.apache.commons.collections4.list.AbstractLinkedList$Node createNode(java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.lang.Object r1;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.commons.collections4.list.AbstractLinkedList$Node;

        specialinvoke $r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: void <init>(java.lang.Object)>(r1);

        return $r2;
    }

    protected void addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList$Node, java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1, r3;
        java.lang.Object r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        r2 := @parameter1: java.lang.Object;

        r3 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node createNode(java.lang.Object)>(r2);

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void addNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r3, r1);

        return;
    }

    protected void addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList$Node, java.lang.Object)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1, r3, $r4;
        java.lang.Object r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        r2 := @parameter1: java.lang.Object;

        r3 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node createNode(java.lang.Object)>(r2);

        $r4 = r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void addNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r3, $r4);

        return;
    }

    protected void addNode(org.apache.commons.collections4.list.AbstractLinkedList$Node, org.apache.commons.collections4.list.AbstractLinkedList$Node)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1, r2, $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        r2 := @parameter1: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next> = r2;

        $r3 = r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous>;

        r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous> = $r3;

        $r4 = r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous>;

        $r4.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next> = r1;

        r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous> = r1;

        $i0 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size> = $i1;

        $i2 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int modCount>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.collections4.list.AbstractLinkedList: int modCount> = $i3;

        return;
    }

    protected void removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        $r3 = r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous>;

        $r2 = r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

        $r3.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next> = $r2;

        $r5 = r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

        $r4 = r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous>;

        $r5.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous> = $r4;

        $i0 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        $i1 = $i0 - 1;

        r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size> = $i1;

        $i2 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int modCount>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.collections4.list.AbstractLinkedList: int modCount> = $i3;

        return;
    }

    protected void removeAllNodes()
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        $r2 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        $r1 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        $r2.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next> = $r1;

        $r4 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        $r3 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        $r4.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous> = $r3;

        r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size> = 0;

        $i0 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int modCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections4.list.AbstractLinkedList: int modCount> = $i1;

        return;
    }

    protected org.apache.commons.collections4.list.AbstractLinkedList$Node getNode(int, boolean) throws java.lang.IndexOutOfBoundsException
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        boolean z0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node $r1, r22;
        java.lang.IndexOutOfBoundsException $r2, $r10, $r16;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20;
        java.lang.String $r9, $r15, $r21;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if i0 >= 0 goto label1;

        $r16 = new java.lang.IndexOutOfBoundsException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t get the node: index (");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") less than zero.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r21);

        throw $r16;

     label1:
        if z0 != 0 goto label2;

        $i5 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        if i0 != $i5 goto label2;

        $r10 = new java.lang.IndexOutOfBoundsException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t get the node: index (");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is the size of the list.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label2:
        $i1 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        if i0 <= $i1 goto label3;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t get the node: index (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") greater than the size of the list (");

        $i4 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label3:
        $i2 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

        $i3 = $i2 / 2;

        if i0 >= $i3 goto label6;

        $r1 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        r22 = $r1.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

        i6 = 0;

     label4:
        if i6 >= i0 goto label5;

        r22 = r22.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node next>;

        i6 = i6 + 1;

        goto label4;

     label5:
        goto label8;

     label6:
        r22 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: org.apache.commons.collections4.list.AbstractLinkedList$Node header>;

        i7 = r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size>;

     label7:
        if i7 <= i0 goto label8;

        r22 = r22.<org.apache.commons.collections4.list.AbstractLinkedList$Node: org.apache.commons.collections4.list.AbstractLinkedList$Node previous>;

        i7 = i7 + -1;

        goto label7;

     label8:
        return r22;
    }

    protected java.util.Iterator createSubListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList r1;
        java.util.ListIterator $r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: java.util.ListIterator createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)>(r1, 0);

        return $r2;
    }

    protected java.util.ListIterator createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList, int)
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList r1;
        int i0;
        org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator $r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList;

        i0 := @parameter1: int;

        $r2 = new org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator;

        specialinvoke $r2.<org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator: void <init>(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)>(r1, i0);

        return $r2;
    }

    protected void doWriteObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.io.ObjectOutputStream r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: int size()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        r2 = virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);

        goto label1;

     label2:
        return;
    }

    protected void doReadObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.list.AbstractLinkedList r0;
        java.io.ObjectInputStream r1;
        int i0, i1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections4.list.AbstractLinkedList;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void init()>();

        i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        virtualinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
