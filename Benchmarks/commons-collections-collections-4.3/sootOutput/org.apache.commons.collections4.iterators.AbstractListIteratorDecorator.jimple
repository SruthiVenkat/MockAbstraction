public class org.apache.commons.collections4.iterators.AbstractListIteratorDecorator extends java.lang.Object implements java.util.ListIterator
{
    private final java.util.ListIterator iterator;

    public void <init>(java.util.ListIterator)
    {
        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator r0;
        java.util.ListIterator r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.apache.commons.collections4.iterators.AbstractListIteratorDecorator;

        r1 := @parameter0: java.util.ListIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("ListIterator must not be null");

        throw $r2;

     label1:
        r0.<org.apache.commons.collections4.iterators.AbstractListIteratorDecorator: java.util.ListIterator iterator> = r1;

        return;
    }

    protected java.util.ListIterator getListIterator()
    {
        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator r0;
        java.util.ListIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.AbstractListIteratorDecorator;

        $r1 = r0.<org.apache.commons.collections4.iterators.AbstractListIteratorDecorator: java.util.ListIterator iterator>;

        return $r1;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator r0;
        java.util.ListIterator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.iterators.AbstractListIteratorDecorator;

        $r1 = r0.<org.apache.commons.collections4.iterators.AbstractListIteratorDecorator: java.util.ListIterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.ListIterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator r0;
        java.util.ListIterator $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections4.iterators.AbstractListIteratorDecorator;

        $r1 = r0.<org.apache.commons.collections4.iterators.AbstractListIteratorDecorator: java.util.ListIterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.ListIterator: java.lang.Object next()>();

        return $r2;
    }

    public int nextIndex()
    {
        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator r0;
        java.util.ListIterator $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.iterators.AbstractListIteratorDecorator;

        $r1 = r0.<org.apache.commons.collections4.iterators.AbstractListIteratorDecorator: java.util.ListIterator iterator>;

        $i0 = interfaceinvoke $r1.<java.util.ListIterator: int nextIndex()>();

        return $i0;
    }

    public boolean hasPrevious()
    {
        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator r0;
        java.util.ListIterator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.iterators.AbstractListIteratorDecorator;

        $r1 = r0.<org.apache.commons.collections4.iterators.AbstractListIteratorDecorator: java.util.ListIterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.ListIterator: boolean hasPrevious()>();

        return $z0;
    }

    public java.lang.Object previous()
    {
        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator r0;
        java.util.ListIterator $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections4.iterators.AbstractListIteratorDecorator;

        $r1 = r0.<org.apache.commons.collections4.iterators.AbstractListIteratorDecorator: java.util.ListIterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.ListIterator: java.lang.Object previous()>();

        return $r2;
    }

    public int previousIndex()
    {
        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator r0;
        java.util.ListIterator $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.iterators.AbstractListIteratorDecorator;

        $r1 = r0.<org.apache.commons.collections4.iterators.AbstractListIteratorDecorator: java.util.ListIterator iterator>;

        $i0 = interfaceinvoke $r1.<java.util.ListIterator: int previousIndex()>();

        return $i0;
    }

    public void remove()
    {
        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator r0;
        java.util.ListIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.AbstractListIteratorDecorator;

        $r1 = r0.<org.apache.commons.collections4.iterators.AbstractListIteratorDecorator: java.util.ListIterator iterator>;

        interfaceinvoke $r1.<java.util.ListIterator: void remove()>();

        return;
    }

    public void set(java.lang.Object)
    {
        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator r0;
        java.lang.Object r1;
        java.util.ListIterator $r2;

        r0 := @this: org.apache.commons.collections4.iterators.AbstractListIteratorDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.iterators.AbstractListIteratorDecorator: java.util.ListIterator iterator>;

        interfaceinvoke $r2.<java.util.ListIterator: void set(java.lang.Object)>(r1);

        return;
    }

    public void add(java.lang.Object)
    {
        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator r0;
        java.lang.Object r1;
        java.util.ListIterator $r2;

        r0 := @this: org.apache.commons.collections4.iterators.AbstractListIteratorDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.iterators.AbstractListIteratorDecorator: java.util.ListIterator iterator>;

        interfaceinvoke $r2.<java.util.ListIterator: void add(java.lang.Object)>(r1);

        return;
    }
}
