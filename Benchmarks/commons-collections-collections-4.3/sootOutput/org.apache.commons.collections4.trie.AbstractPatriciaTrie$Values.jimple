class org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values extends java.util.AbstractCollection
{
    final org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0;

    private void <init>(org.apache.commons.collections4.trie.AbstractPatriciaTrie)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values r0;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie r1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values;

        r1 := @parameter0: org.apache.commons.collections4.trie.AbstractPatriciaTrie;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0> = r1;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values r0;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator $r1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values;

        $r1 = new org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator;

        specialinvoke $r1.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator: void <init>(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values,org.apache.commons.collections4.trie.AbstractPatriciaTrie$1)>(r0, null);

        return $r1;
    }

    public int size()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values r0;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values;

        $r1 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: int size()>();

        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values r0;
        java.lang.Object r1;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $z0 = virtualinvoke $r2.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public void clear()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values r0;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values;

        $r1 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        virtualinvoke $r1.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: void clear()>();

        return;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values r0;
        java.lang.Object r1, r3;
        java.util.Iterator r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values;

        r1 := @parameter0: java.lang.Object;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = staticinvoke <org.apache.commons.collections4.trie.AbstractBitwiseTrie: boolean compare(java.lang.Object,java.lang.Object)>(r3, r1);

        if $z1 == 0 goto label2;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    void <init>(org.apache.commons.collections4.trie.AbstractPatriciaTrie, org.apache.commons.collections4.trie.AbstractPatriciaTrie$1)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values r0;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie r1;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$1 r2;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values;

        r1 := @parameter0: org.apache.commons.collections4.trie.AbstractPatriciaTrie;

        r2 := @parameter1: org.apache.commons.collections4.trie.AbstractPatriciaTrie$1;

        specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values: void <init>(org.apache.commons.collections4.trie.AbstractPatriciaTrie)>(r1);

        return;
    }
}
