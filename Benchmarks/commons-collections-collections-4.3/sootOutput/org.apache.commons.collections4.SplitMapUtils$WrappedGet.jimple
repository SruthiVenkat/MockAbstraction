class org.apache.commons.collections4.SplitMapUtils$WrappedGet extends java.lang.Object implements org.apache.commons.collections4.IterableMap, org.apache.commons.collections4.Unmodifiable
{
    private final org.apache.commons.collections4.Get get;

    private void <init>(org.apache.commons.collections4.Get)
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        org.apache.commons.collections4.Get r1;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        r1 := @parameter0: org.apache.commons.collections4.Get;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get> = r1;

        return;
    }

    public void clear()
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        java.lang.Object r1;
        org.apache.commons.collections4.Get $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.collections4.Get: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        java.lang.Object r1;
        org.apache.commons.collections4.Get $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.collections4.Get: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        org.apache.commons.collections4.Get $r1;
        java.util.Set $r2, $r3;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        $r1 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.collections4.Get: java.util.Set entrySet()>();

        $r3 = staticinvoke <org.apache.commons.collections4.map.UnmodifiableEntrySet: java.util.Set unmodifiableEntrySet(java.util.Set)>($r2);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        org.apache.commons.collections4.Get $r3, $r4;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        if $z0 == 0 goto label2;

        $r2 = (org.apache.commons.collections4.SplitMapUtils$WrappedGet) r1;

        $r4 = $r2.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $r3 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        java.lang.Object r1, $r3;
        org.apache.commons.collections4.Get $r2;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.Get: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.collections4.Get $r2;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        $r1 = "WrappedGet";

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = $i0 << 4;

        $r2 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i3 = $i1 | $i2;

        return $i3;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        org.apache.commons.collections4.Get $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        $r1 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.collections4.Get: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        org.apache.commons.collections4.Get $r1;
        java.util.Set $r2, $r3;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        $r1 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.collections4.Get: java.util.Set keySet()>();

        $r3 = staticinvoke <org.apache.commons.collections4.set.UnmodifiableSet: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        return $r3;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        java.lang.Object r1, r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public void putAll(java.util.Map)
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        java.util.Map r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        r1 := @parameter0: java.util.Map;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        java.lang.Object r1, $r3;
        org.apache.commons.collections4.Get $r2;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.Get: java.lang.Object remove(java.lang.Object)>(r1);

        return $r3;
    }

    public int size()
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        org.apache.commons.collections4.Get $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        $r1 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $i0 = interfaceinvoke $r1.<org.apache.commons.collections4.Get: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        org.apache.commons.collections4.Get $r1;
        java.util.Collection $r2, $r3;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        $r1 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.collections4.Get: java.util.Collection values()>();

        $r3 = staticinvoke <org.apache.commons.collections4.collection.UnmodifiableCollection: java.util.Collection unmodifiableCollection(java.util.Collection)>($r2);

        return $r3;
    }

    public org.apache.commons.collections4.MapIterator mapIterator()
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        org.apache.commons.collections4.Get $r1, $r3, $r6;
        boolean $z0;
        org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter $r2;
        java.util.Set $r4;
        org.apache.commons.collections4.MapIterator $r5, r8;
        org.apache.commons.collections4.IterableGet $r7;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        $r1 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $z0 = $r1 instanceof org.apache.commons.collections4.IterableGet;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $r7 = (org.apache.commons.collections4.IterableGet) $r6;

        r8 = interfaceinvoke $r7.<org.apache.commons.collections4.IterableGet: org.apache.commons.collections4.MapIterator mapIterator()>();

        goto label2;

     label1:
        $r2 = new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter;

        $r3 = r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: org.apache.commons.collections4.Get get>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.Get: java.util.Set entrySet()>();

        specialinvoke $r2.<org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter: void <init>(java.util.Set)>($r4);

        r8 = $r2;

     label2:
        $r5 = staticinvoke <org.apache.commons.collections4.iterators.UnmodifiableMapIterator: org.apache.commons.collections4.MapIterator unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)>(r8);

        return $r5;
    }

    void <init>(org.apache.commons.collections4.Get, org.apache.commons.collections4.SplitMapUtils$1)
    {
        org.apache.commons.collections4.SplitMapUtils$WrappedGet r0;
        org.apache.commons.collections4.Get r1;
        org.apache.commons.collections4.SplitMapUtils$1 r2;

        r0 := @this: org.apache.commons.collections4.SplitMapUtils$WrappedGet;

        r1 := @parameter0: org.apache.commons.collections4.Get;

        r2 := @parameter1: org.apache.commons.collections4.SplitMapUtils$1;

        specialinvoke r0.<org.apache.commons.collections4.SplitMapUtils$WrappedGet: void <init>(org.apache.commons.collections4.Get)>(r1);

        return;
    }
}
