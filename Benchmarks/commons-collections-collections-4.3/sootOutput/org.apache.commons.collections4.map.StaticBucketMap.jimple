public final class org.apache.commons.collections4.map.StaticBucketMap extends org.apache.commons.collections4.map.AbstractIterableMap
{
    private static final int DEFAULT_BUCKETS;
    private final org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets;
    private final org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks;

    public void <init>()
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        specialinvoke r0.<org.apache.commons.collections4.map.StaticBucketMap: void <init>(int)>(255);

        return;
    }

    public void <init>(int)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        int i0, $i1, i2, i3;
        org.apache.commons.collections4.map.StaticBucketMap$Node[] $r1;
        org.apache.commons.collections4.map.StaticBucketMap$Lock[] $r2, $r4;
        org.apache.commons.collections4.map.StaticBucketMap$Lock $r3;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMap: void <init>()>();

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(17, i0);

        $i1 = i2 % 2;

        if $i1 != 0 goto label1;

        i2 = i2 + -1;

     label1:
        $r1 = newarray (org.apache.commons.collections4.map.StaticBucketMap$Node)[i2];

        r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets> = $r1;

        $r2 = newarray (org.apache.commons.collections4.map.StaticBucketMap$Lock)[i2];

        r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks> = $r2;

        i3 = 0;

     label2:
        if i3 >= i2 goto label3;

        $r4 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r3 = new org.apache.commons.collections4.map.StaticBucketMap$Lock;

        specialinvoke $r3.<org.apache.commons.collections4.map.StaticBucketMap$Lock: void <init>(org.apache.commons.collections4.map.StaticBucketMap$1)>(null);

        $r4[i3] = $r3;

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    private int getHash(java.lang.Object)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        java.lang.Object r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14, i15, i16, $i17;
        org.apache.commons.collections4.map.StaticBucketMap$Node[] $r2;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        i9 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i0 = i9 << 15;

        $i1 = $i0 ^ -1;

        i10 = i9 + $i1;

        $i2 = i10 >>> 10;

        i11 = i10 ^ $i2;

        $i3 = i11 << 3;

        i12 = i11 + $i3;

        $i4 = i12 >>> 6;

        i13 = i12 ^ $i4;

        $i5 = i13 << 11;

        $i6 = $i5 ^ -1;

        i14 = i13 + $i6;

        $i7 = i14 >>> 16;

        i15 = i14 ^ $i7;

        $r2 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        $i8 = lengthof $r2;

        i16 = i15 % $i8;

        if i16 >= 0 goto label2;

        $i17 = i16 * -1;

        goto label3;

     label2:
        $i17 = i16;

     label3:
        return $i17;
    }

    public int size()
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        org.apache.commons.collections4.map.StaticBucketMap$Node[] $r3;
        int $i0, $i1, i2, i3;
        org.apache.commons.collections4.map.StaticBucketMap$Lock[] $r4, $r6;
        org.apache.commons.collections4.map.StaticBucketMap$Lock $r5, $r7;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        i2 = 0;

        i3 = 0;

     label1:
        $r3 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        $i0 = lengthof $r3;

        if i3 >= $i0 goto label7;

        $r4 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r5 = $r4[i3];

        entermonitor $r5;

     label2:
        $r6 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r7 = $r6[i3];

        $i1 = $r7.<org.apache.commons.collections4.map.StaticBucketMap$Lock: int size>;

        i2 = i2 + $i1;

        exitmonitor $r5;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r5;

     label5:
        throw $r8;

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        return i2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.map.StaticBucketMap: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        java.lang.Object r1, $r7, $r8, $r9, $r10;
        int i0;
        org.apache.commons.collections4.map.StaticBucketMap$Lock[] $r4;
        org.apache.commons.collections4.map.StaticBucketMap$Lock $r5;
        org.apache.commons.collections4.map.StaticBucketMap$Node[] $r6;
        boolean $z0;
        java.lang.Throwable $r11;
        org.apache.commons.collections4.map.StaticBucketMap$Node r12;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Object;

        i0 = specialinvoke r0.<org.apache.commons.collections4.map.StaticBucketMap: int getHash(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r5 = $r4[i0];

        entermonitor $r5;

     label01:
        $r6 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        r12 = $r6[i0];

     label02:
        if r12 == null goto label06;

        $r7 = r12.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r7 == r1 goto label03;

        $r9 = r12.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r9 == null goto label05;

        $r10 = r12.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key>;

        $z0 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label05;

     label03:
        $r8 = r12.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object value>;

        exitmonitor $r5;

     label04:
        return $r8;

     label05:
        r12 = r12.<org.apache.commons.collections4.map.StaticBucketMap$Node: org.apache.commons.collections4.map.StaticBucketMap$Node next>;

        goto label02;

     label06:
        exitmonitor $r5;

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        exitmonitor $r5;

     label09:
        throw $r11;

     label10:
        return null;

        catch java.lang.Throwable from label01 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        java.lang.Object r1, $r7, $r8, $r9;
        int i0;
        org.apache.commons.collections4.map.StaticBucketMap$Lock[] $r4;
        org.apache.commons.collections4.map.StaticBucketMap$Lock $r5;
        org.apache.commons.collections4.map.StaticBucketMap$Node[] $r6;
        boolean $z0;
        java.lang.Throwable $r10;
        org.apache.commons.collections4.map.StaticBucketMap$Node r11;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Object;

        i0 = specialinvoke r0.<org.apache.commons.collections4.map.StaticBucketMap: int getHash(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r5 = $r4[i0];

        entermonitor $r5;

     label01:
        $r6 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        r11 = $r6[i0];

     label02:
        if r11 == null goto label06;

        $r7 = r11.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r7 == r1 goto label03;

        $r8 = r11.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r8 == null goto label05;

        $r9 = r11.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key>;

        $z0 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label05;

     label03:
        exitmonitor $r5;

     label04:
        return 1;

     label05:
        r11 = r11.<org.apache.commons.collections4.map.StaticBucketMap$Node: org.apache.commons.collections4.map.StaticBucketMap$Node next>;

        goto label02;

     label06:
        exitmonitor $r5;

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

        exitmonitor $r5;

     label09:
        throw $r10;

     label10:
        return 0;

        catch java.lang.Throwable from label01 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        java.lang.Object r1, $r8, $r9, $r10;
        org.apache.commons.collections4.map.StaticBucketMap$Node[] $r4, $r7;
        int $i0, i1;
        org.apache.commons.collections4.map.StaticBucketMap$Lock[] $r5;
        org.apache.commons.collections4.map.StaticBucketMap$Lock $r6;
        boolean $z0;
        java.lang.Throwable $r11;
        org.apache.commons.collections4.map.StaticBucketMap$Node r12;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Object;

        i1 = 0;

     label01:
        $r4 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        $i0 = lengthof $r4;

        if i1 >= $i0 goto label12;

        $r5 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r6 = $r5[i1];

        entermonitor $r6;

     label02:
        $r7 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        r12 = $r7[i1];

     label03:
        if r12 == null goto label07;

        $r8 = r12.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object value>;

        if $r8 == r1 goto label04;

        $r9 = r12.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object value>;

        if $r9 == null goto label06;

        $r10 = r12.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object value>;

        $z0 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label06;

     label04:
        exitmonitor $r6;

     label05:
        return 1;

     label06:
        r12 = r12.<org.apache.commons.collections4.map.StaticBucketMap$Node: org.apache.commons.collections4.map.StaticBucketMap$Node next>;

        goto label03;

     label07:
        exitmonitor $r6;

     label08:
        goto label11;

     label09:
        $r11 := @caughtexception;

        exitmonitor $r6;

     label10:
        throw $r11;

     label11:
        i1 = i1 + 1;

        goto label01;

     label12:
        return 0;

        catch java.lang.Throwable from label02 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        java.lang.Object r1, r2, r4, $r12, $r13, $r14;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.commons.collections4.map.StaticBucketMap$Lock[] $r6, $r10, $r18;
        org.apache.commons.collections4.map.StaticBucketMap$Lock $r7, $r11, $r19;
        org.apache.commons.collections4.map.StaticBucketMap$Node[] $r8, $r17;
        org.apache.commons.collections4.map.StaticBucketMap$Node $r9, $r16, r21, r23;
        boolean $z0;
        java.lang.Throwable $r20;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        i0 = specialinvoke r0.<org.apache.commons.collections4.map.StaticBucketMap: int getHash(java.lang.Object)>(r1);

        $r6 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r7 = $r6[i0];

        entermonitor $r7;

     label01:
        $r8 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        r21 = $r8[i0];

        if r21 != null goto label03;

        $r16 = new org.apache.commons.collections4.map.StaticBucketMap$Node;

        specialinvoke $r16.<org.apache.commons.collections4.map.StaticBucketMap$Node: void <init>(org.apache.commons.collections4.map.StaticBucketMap$1)>(null);

        $r16.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key> = r1;

        $r16.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object value> = r2;

        $r17 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        $r17[i0] = $r16;

        $r18 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r19 = $r18[i0];

        $i3 = $r19.<org.apache.commons.collections4.map.StaticBucketMap$Lock: int size>;

        $i4 = $i3 + 1;

        $r19.<org.apache.commons.collections4.map.StaticBucketMap$Lock: int size> = $i4;

        exitmonitor $r7;

     label02:
        return null;

     label03:
        r23 = r21;

     label04:
        if r23 == null goto label08;

        r21 = r23;

        $r12 = r23.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r12 == r1 goto label05;

        $r13 = r23.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r13 == null goto label07;

        $r14 = r23.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key>;

        $z0 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label07;

     label05:
        r4 = r21.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object value>;

        r21.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object value> = r2;

        exitmonitor $r7;

     label06:
        return r4;

     label07:
        r23 = r23.<org.apache.commons.collections4.map.StaticBucketMap$Node: org.apache.commons.collections4.map.StaticBucketMap$Node next>;

        goto label04;

     label08:
        $r9 = new org.apache.commons.collections4.map.StaticBucketMap$Node;

        specialinvoke $r9.<org.apache.commons.collections4.map.StaticBucketMap$Node: void <init>(org.apache.commons.collections4.map.StaticBucketMap$1)>(null);

        $r9.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key> = r1;

        $r9.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object value> = r2;

        r21.<org.apache.commons.collections4.map.StaticBucketMap$Node: org.apache.commons.collections4.map.StaticBucketMap$Node next> = $r9;

        $r10 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r11 = $r10[i0];

        $i1 = $r11.<org.apache.commons.collections4.map.StaticBucketMap$Lock: int size>;

        $i2 = $i1 + 1;

        $r11.<org.apache.commons.collections4.map.StaticBucketMap$Lock: int size> = $i2;

        exitmonitor $r7;

     label09:
        goto label12;

     label10:
        $r20 := @caughtexception;

        exitmonitor $r7;

     label11:
        throw $r20;

     label12:
        return null;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        java.lang.Object r1, $r7, $r11, $r14, $r15;
        int i0, $i1, $i2;
        org.apache.commons.collections4.map.StaticBucketMap$Lock[] $r4, $r9;
        org.apache.commons.collections4.map.StaticBucketMap$Lock $r5, $r10;
        org.apache.commons.collections4.map.StaticBucketMap$Node[] $r6, $r13;
        org.apache.commons.collections4.map.StaticBucketMap$Node $r8, $r12, r17, r18;
        boolean $z0;
        java.lang.Throwable $r16;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Object;

        i0 = specialinvoke r0.<org.apache.commons.collections4.map.StaticBucketMap: int getHash(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r5 = $r4[i0];

        entermonitor $r5;

     label01:
        $r6 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        r17 = $r6[i0];

        r18 = null;

     label02:
        if r17 == null goto label08;

        $r7 = r17.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r7 == r1 goto label03;

        $r14 = r17.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r14 == null goto label07;

        $r15 = r17.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object key>;

        $z0 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label07;

     label03:
        if null != r18 goto label04;

        $r13 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        $r12 = r17.<org.apache.commons.collections4.map.StaticBucketMap$Node: org.apache.commons.collections4.map.StaticBucketMap$Node next>;

        $r13[i0] = $r12;

        goto label05;

     label04:
        $r8 = r17.<org.apache.commons.collections4.map.StaticBucketMap$Node: org.apache.commons.collections4.map.StaticBucketMap$Node next>;

        r18.<org.apache.commons.collections4.map.StaticBucketMap$Node: org.apache.commons.collections4.map.StaticBucketMap$Node next> = $r8;

     label05:
        $r9 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r10 = $r9[i0];

        $i1 = $r10.<org.apache.commons.collections4.map.StaticBucketMap$Lock: int size>;

        $i2 = $i1 - 1;

        $r10.<org.apache.commons.collections4.map.StaticBucketMap$Lock: int size> = $i2;

        $r11 = r17.<org.apache.commons.collections4.map.StaticBucketMap$Node: java.lang.Object value>;

        exitmonitor $r5;

     label06:
        return $r11;

     label07:
        r18 = r17;

        r17 = r17.<org.apache.commons.collections4.map.StaticBucketMap$Node: org.apache.commons.collections4.map.StaticBucketMap$Node next>;

        goto label02;

     label08:
        exitmonitor $r5;

     label09:
        goto label12;

     label10:
        $r16 := @caughtexception;

        exitmonitor $r5;

     label11:
        throw $r16;

     label12:
        return null;

        catch java.lang.Throwable from label01 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public java.util.Set keySet()
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        org.apache.commons.collections4.map.StaticBucketMap$KeySet $r1;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        $r1 = new org.apache.commons.collections4.map.StaticBucketMap$KeySet;

        specialinvoke $r1.<org.apache.commons.collections4.map.StaticBucketMap$KeySet: void <init>(org.apache.commons.collections4.map.StaticBucketMap,org.apache.commons.collections4.map.StaticBucketMap$1)>(r0, null);

        return $r1;
    }

    public java.util.Collection values()
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        org.apache.commons.collections4.map.StaticBucketMap$Values $r1;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        $r1 = new org.apache.commons.collections4.map.StaticBucketMap$Values;

        specialinvoke $r1.<org.apache.commons.collections4.map.StaticBucketMap$Values: void <init>(org.apache.commons.collections4.map.StaticBucketMap,org.apache.commons.collections4.map.StaticBucketMap$1)>(r0, null);

        return $r1;
    }

    public java.util.Set entrySet()
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        org.apache.commons.collections4.map.StaticBucketMap$EntrySet $r1;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        $r1 = new org.apache.commons.collections4.map.StaticBucketMap$EntrySet;

        specialinvoke $r1.<org.apache.commons.collections4.map.StaticBucketMap$EntrySet: void <init>(org.apache.commons.collections4.map.StaticBucketMap,org.apache.commons.collections4.map.StaticBucketMap$1)>(r0, null);

        return $r1;
    }

    public void putAll(java.util.Map)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        r1 := @parameter0: java.util.Map;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.StaticBucketMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    public void clear()
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        org.apache.commons.collections4.map.StaticBucketMap$Lock r1;
        org.apache.commons.collections4.map.StaticBucketMap$Node[] $r4, $r7;
        int $i0, i1;
        org.apache.commons.collections4.map.StaticBucketMap$Lock[] $r5;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        i1 = 0;

     label1:
        $r4 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        $i0 = lengthof $r4;

        if i1 >= $i0 goto label7;

        $r5 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        r1 = $r5[i1];

        entermonitor r1;

     label2:
        $r7 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        $r7[i1] = null;

        r1.<org.apache.commons.collections4.map.StaticBucketMap$Lock: int size> = 0;

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor r1;

     label5:
        throw $r8;

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        java.lang.Object r1;
        java.util.Map r2;
        boolean $z0, $z1;
        java.util.Set $r3, $r4;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof java.util.Map;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.util.Map) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.StaticBucketMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        org.apache.commons.collections4.map.StaticBucketMap$Node[] $r3, $r6;
        int $i0, $i1, i2, i3;
        org.apache.commons.collections4.map.StaticBucketMap$Lock[] $r4;
        org.apache.commons.collections4.map.StaticBucketMap$Lock $r5;
        java.lang.Throwable $r7;
        org.apache.commons.collections4.map.StaticBucketMap$Node r8;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        i2 = 0;

        i3 = 0;

     label1:
        $r3 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        $i0 = lengthof $r3;

        if i3 >= $i0 goto label9;

        $r4 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r5 = $r4[i3];

        entermonitor $r5;

     label2:
        $r6 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        r8 = $r6[i3];

     label3:
        if r8 == null goto label4;

        $i1 = virtualinvoke r8.<org.apache.commons.collections4.map.StaticBucketMap$Node: int hashCode()>();

        i2 = i2 + $i1;

        r8 = r8.<org.apache.commons.collections4.map.StaticBucketMap$Node: org.apache.commons.collections4.map.StaticBucketMap$Node next>;

        goto label3;

     label4:
        exitmonitor $r5;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r5;

     label7:
        throw $r7;

     label8:
        i3 = i3 + 1;

        goto label1;

     label9:
        return i2;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void atomic(java.lang.Runnable)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        java.lang.Runnable r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Runnable;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        specialinvoke r0.<org.apache.commons.collections4.map.StaticBucketMap: void atomic(java.lang.Runnable,int)>(r1, 0);

        return;
    }

    private void atomic(java.lang.Runnable, int)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        java.lang.Runnable r1;
        int i0, $i1, $i2;
        org.apache.commons.collections4.map.StaticBucketMap$Node[] $r4;
        org.apache.commons.collections4.map.StaticBucketMap$Lock[] $r5;
        org.apache.commons.collections4.map.StaticBucketMap$Lock $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.commons.collections4.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Runnable;

        i0 := @parameter1: int;

        $r4 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        $i1 = lengthof $r4;

        if i0 < $i1 goto label1;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

        return;

     label1:
        $r5 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        $r6 = $r5[i0];

        entermonitor $r6;

     label2:
        $i2 = i0 + 1;

        specialinvoke r0.<org.apache.commons.collections4.map.StaticBucketMap: void atomic(java.lang.Runnable,int)>(r1, $i2);

        exitmonitor $r6;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r6;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static org.apache.commons.collections4.map.StaticBucketMap$Node[] access$500(org.apache.commons.collections4.map.StaticBucketMap)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        org.apache.commons.collections4.map.StaticBucketMap$Node[] $r1;

        r0 := @parameter0: org.apache.commons.collections4.map.StaticBucketMap;

        $r1 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets>;

        return $r1;
    }

    static org.apache.commons.collections4.map.StaticBucketMap$Lock[] access$600(org.apache.commons.collections4.map.StaticBucketMap)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        org.apache.commons.collections4.map.StaticBucketMap$Lock[] $r1;

        r0 := @parameter0: org.apache.commons.collections4.map.StaticBucketMap;

        $r1 = r0.<org.apache.commons.collections4.map.StaticBucketMap: org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks>;

        return $r1;
    }

    static int access$900(org.apache.commons.collections4.map.StaticBucketMap, java.lang.Object)
    {
        org.apache.commons.collections4.map.StaticBucketMap r0;
        java.lang.Object r1;
        int $i0;

        r0 := @parameter0: org.apache.commons.collections4.map.StaticBucketMap;

        r1 := @parameter1: java.lang.Object;

        $i0 = specialinvoke r0.<org.apache.commons.collections4.map.StaticBucketMap: int getHash(java.lang.Object)>(r1);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.map.StaticBucketMap: int DEFAULT_BUCKETS> = 255;

        return;
    }
}
