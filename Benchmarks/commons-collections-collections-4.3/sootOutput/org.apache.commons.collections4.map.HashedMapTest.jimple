public class org.apache.commons.collections4.map.HashedMapTest extends org.apache.commons.collections4.map.AbstractIterableMapTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.map.HashedMapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.map.HashedMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.BulkTest: junit.framework.TestSuite makeSuite(java.lang.Class)>(class "Lorg/apache/commons/collections4/map/HashedMapTest;");

        return $r0;
    }

    public org.apache.commons.collections4.map.HashedMap makeObject()
    {
        org.apache.commons.collections4.map.HashedMapTest r0;
        org.apache.commons.collections4.map.HashedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.HashedMapTest;

        $r1 = new org.apache.commons.collections4.map.HashedMap;

        specialinvoke $r1.<org.apache.commons.collections4.map.HashedMap: void <init>()>();

        return $r1;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.map.HashedMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.HashedMapTest;

        return "4";
    }

    public void testClone()
    {
        org.apache.commons.collections4.map.HashedMapTest r0;
        org.apache.commons.collections4.map.HashedMap r2, $r3;
        int $i0, $i1;
        java.lang.Object $r5, $r6;

        r0 := @this: org.apache.commons.collections4.map.HashedMapTest;

        $r3 = new org.apache.commons.collections4.map.HashedMap;

        specialinvoke $r3.<org.apache.commons.collections4.map.HashedMap: void <init>(int)>(10);

        virtualinvoke $r3.<org.apache.commons.collections4.map.HashedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("1", "1");

        r2 = virtualinvoke $r3.<org.apache.commons.collections4.map.HashedMap: org.apache.commons.collections4.map.HashedMap clone()>();

        $i0 = virtualinvoke $r3.<org.apache.commons.collections4.map.HashedMap: int size()>();

        $i1 = virtualinvoke r2.<org.apache.commons.collections4.map.HashedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.HashedMapTest: void assertEquals(int,int)>($i0, $i1);

        $r5 = virtualinvoke $r3.<org.apache.commons.collections4.map.HashedMap: java.lang.Object get(java.lang.Object)>("1");

        $r6 = virtualinvoke r2.<org.apache.commons.collections4.map.HashedMap: java.lang.Object get(java.lang.Object)>("1");

        staticinvoke <org.apache.commons.collections4.map.HashedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r5, $r6);

        return;
    }

    public void testInternalState()
    {
        org.apache.commons.collections4.map.HashedMapTest r0;
        org.apache.commons.collections4.map.HashedMap $r2;
        float $f0;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry[] $r3;

        r0 := @this: org.apache.commons.collections4.map.HashedMapTest;

        $r2 = new org.apache.commons.collections4.map.HashedMap;

        specialinvoke $r2.<org.apache.commons.collections4.map.HashedMap: void <init>(int,float)>(42, 0.75F);

        $f0 = $r2.<org.apache.commons.collections4.map.HashedMap: float loadFactor>;

        staticinvoke <org.apache.commons.collections4.map.HashedMapTest: void assertEquals(float,float,float)>(0.75F, $f0, 0.1F);

        $i0 = $r2.<org.apache.commons.collections4.map.HashedMap: int size>;

        staticinvoke <org.apache.commons.collections4.map.HashedMapTest: void assertEquals(int,int)>(0, $i0);

        $r3 = $r2.<org.apache.commons.collections4.map.HashedMap: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry[] data>;

        $i1 = lengthof $r3;

        staticinvoke <org.apache.commons.collections4.map.HashedMapTest: void assertEquals(int,int)>(64, $i1);

        $i2 = $r2.<org.apache.commons.collections4.map.HashedMap: int threshold>;

        staticinvoke <org.apache.commons.collections4.map.HashedMapTest: void assertEquals(int,int)>(48, $i2);

        $i3 = $r2.<org.apache.commons.collections4.map.HashedMap: int modCount>;

        staticinvoke <org.apache.commons.collections4.map.HashedMapTest: void assertEquals(int,int)>(0, $i3);

        return;
    }

    public void testInitialCapacityZero()
    {
        org.apache.commons.collections4.map.HashedMapTest r0;
        org.apache.commons.collections4.map.HashedMap $r2;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry[] $r3;
        int $i0;

        r0 := @this: org.apache.commons.collections4.map.HashedMapTest;

        $r2 = new org.apache.commons.collections4.map.HashedMap;

        specialinvoke $r2.<org.apache.commons.collections4.map.HashedMap: void <init>(int)>(0);

        $r3 = $r2.<org.apache.commons.collections4.map.HashedMap: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry[] data>;

        $i0 = lengthof $r3;

        staticinvoke <org.apache.commons.collections4.map.HashedMapTest: void assertEquals(int,int)>(1, $i0);

        return;
    }

    public volatile org.apache.commons.collections4.IterableMap makeObject()
    {
        org.apache.commons.collections4.map.HashedMapTest r0;
        org.apache.commons.collections4.map.HashedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.HashedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.HashedMapTest: org.apache.commons.collections4.map.HashedMap makeObject()>();

        return $r1;
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.HashedMapTest r0;
        org.apache.commons.collections4.map.HashedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.HashedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.HashedMapTest: org.apache.commons.collections4.map.HashedMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.HashedMapTest r0;
        org.apache.commons.collections4.map.HashedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.HashedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.HashedMapTest: org.apache.commons.collections4.map.HashedMap makeObject()>();

        return $r1;
    }
}
