public abstract class org.apache.commons.collections4.trie.KeyAnalyzer extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final int NULL_BIT_KEY;
    public static final int EQUAL_BIT_KEY;
    public static final int OUT_OF_BOUNDS_BIT_KEY;

    public void <init>()
    {
        org.apache.commons.collections4.trie.KeyAnalyzer r0;

        r0 := @this: org.apache.commons.collections4.trie.KeyAnalyzer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean isOutOfBoundsIndex(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 != -3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static boolean isEqualBitKey(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 != -2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static boolean isNullBitKey(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static boolean isValidBitIndex(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public abstract int bitsPerElement();

    public abstract int lengthInBits(java.lang.Object);

    public abstract boolean isBitSet(java.lang.Object, int, int);

    public abstract int bitIndex(java.lang.Object, int, int, java.lang.Object, int, int);

    public abstract boolean isPrefix(java.lang.Object, int, int, java.lang.Object);

    public int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.trie.KeyAnalyzer r0;
        java.lang.Object r1, r2;
        java.lang.Comparable $r3;
        int $i0;
        byte $b1;

        r0 := @this: org.apache.commons.collections4.trie.KeyAnalyzer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 != null goto label3;

        if r2 != null goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = -1;

     label2:
        return $b1;

     label3:
        if r2 != null goto label4;

        return 1;

     label4:
        $r3 = (java.lang.Comparable) r1;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.trie.KeyAnalyzer: int OUT_OF_BOUNDS_BIT_KEY> = -3;

        <org.apache.commons.collections4.trie.KeyAnalyzer: int EQUAL_BIT_KEY> = -2;

        <org.apache.commons.collections4.trie.KeyAnalyzer: int NULL_BIT_KEY> = -1;

        <org.apache.commons.collections4.trie.KeyAnalyzer: long serialVersionUID> = -20497563720380683L;

        return;
    }
}
