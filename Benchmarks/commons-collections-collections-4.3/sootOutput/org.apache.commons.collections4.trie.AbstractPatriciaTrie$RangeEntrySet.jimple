class org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet extends java.util.AbstractSet
{
    private final org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap delegate;
    private transient int size;
    private transient int expectedModCount;
    final org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0;

    public void <init>(org.apache.commons.collections4.trie.AbstractPatriciaTrie, org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet r0;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie r1;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap r2;
        java.lang.NullPointerException $r3;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet;

        r1 := @parameter0: org.apache.commons.collections4.trie.AbstractPatriciaTrie;

        r2 := @parameter1: org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0> = r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: int size> = -1;

        if r2 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("delegate");

        throw $r3;

     label1:
        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap delegate> = r2;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet r0;
        java.lang.Object r1, r2;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap $r3, $r4;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r5, $r7, $r8;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator $r6;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry r9, r10;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet;

        $r3 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap delegate>;

        r1 = virtualinvoke $r3.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap: java.lang.Object getFromKey()>();

        $r4 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap delegate>;

        r2 = virtualinvoke $r4.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap: java.lang.Object getToKey()>();

        if r1 != null goto label1;

        $r8 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        r9 = virtualinvoke $r8.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry firstEntry()>();

        goto label2;

     label1:
        $r5 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        r9 = virtualinvoke $r5.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry ceilingEntry(java.lang.Object)>(r1);

     label2:
        r10 = null;

        if r2 == null goto label3;

        $r7 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        r10 = virtualinvoke $r7.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry ceilingEntry(java.lang.Object)>(r2);

     label3:
        $r6 = new org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator;

        specialinvoke $r6.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator: void <init>(org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$1)>(r0, r9, r10, null);

        return $r6;
    }

    public int size()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet r0;
        java.util.Iterator r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r2, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet;

        $i0 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: int size>;

        if $i0 == -1 goto label1;

        $i6 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: int expectedModCount>;

        $r4 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $i5 = $r4.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: int modCount>;

        if $i6 == $i5 goto label4;

     label1:
        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: int size> = 0;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i3 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: int size>;

        $i4 = $i3 + 1;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: int size> = $i4;

        interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        goto label2;

     label3:
        $r2 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $i1 = $r2.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: int modCount>;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: int expectedModCount> = $i1;

     label4:
        $i2 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: int size>;

        return $i2;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet r0;
        java.util.Iterator $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet r0;
        java.lang.Object r1, r3, $r7, $r8;
        java.util.Map$Entry r2;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry r4;
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap $r5;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r6;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.util.Map$Entry) r1;

        r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap delegate>;

        $z1 = virtualinvoke $r5.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap: boolean inRange(java.lang.Object)>(r3);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r6 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        r4 = virtualinvoke $r6.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry getEntry(java.lang.Object)>(r3);

        if r4 == null goto label3;

        $r7 = virtualinvoke r4.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry: java.lang.Object getValue()>();

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = staticinvoke <org.apache.commons.collections4.trie.AbstractBitwiseTrie: boolean compare(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z2 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet r0;
        java.lang.Object r1, r3, $r7, $r8;
        java.util.Map$Entry r2;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry r4;
        boolean $z0, $z1, $z2;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap $r5;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r6, $r9;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.util.Map$Entry) r1;

        r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap delegate>;

        $z1 = virtualinvoke $r5.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap: boolean inRange(java.lang.Object)>(r3);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r6 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        r4 = virtualinvoke $r6.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry getEntry(java.lang.Object)>(r3);

        if r4 == null goto label3;

        $r7 = virtualinvoke r4.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry: java.lang.Object getValue()>();

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = staticinvoke <org.apache.commons.collections4.trie.AbstractBitwiseTrie: boolean compare(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z2 == 0 goto label3;

        $r9 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        virtualinvoke $r9.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: java.lang.Object removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)>(r4);

        return 1;

     label3:
        return 0;
    }
}
