public class org.apache.commons.collections4.list.GrowthListTest extends org.apache.commons.collections4.list.AbstractListTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractListTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public java.util.List makeObject()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        org.apache.commons.collections4.list.GrowthList $r1;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        $r1 = new org.apache.commons.collections4.list.GrowthList;

        specialinvoke $r1.<org.apache.commons.collections4.list.GrowthList: void <init>()>();

        return $r1;
    }

    public java.util.List makeFullCollection()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.util.ArrayList $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;
        org.apache.commons.collections4.list.GrowthList $r5;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.list.GrowthListTest: java.lang.Object[] getFullElements()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        $r5 = staticinvoke <org.apache.commons.collections4.list.GrowthList: org.apache.commons.collections4.list.GrowthList growthList(java.util.List)>($r2);

        return $r5;
    }

    public void testGrowthAdd()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.lang.Integer r1;
        org.apache.commons.collections4.list.GrowthList $r3;
        int $i0, $i1;
        java.lang.Object $r4, $r5;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r3 = new org.apache.commons.collections4.list.GrowthList;

        specialinvoke $r3.<org.apache.commons.collections4.list.GrowthList: void <init>()>();

        $i0 = virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(int,int)>(0, $i0);

        virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: void add(int,java.lang.Object)>(1, r1);

        $i1 = virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(int,int)>(2, $i1);

        $r4 = virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r4);

        $r5 = virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r5);

        return;
    }

    public void testGrowthAddAll()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.lang.Integer r1, r2;
        java.util.ArrayList $r5;
        org.apache.commons.collections4.list.GrowthList $r6;
        int $i0, $i1;
        java.lang.Object $r7, $r8, $r9;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        $r6 = new org.apache.commons.collections4.list.GrowthList;

        specialinvoke $r6.<org.apache.commons.collections4.list.GrowthList: void <init>()>();

        $i0 = virtualinvoke $r6.<org.apache.commons.collections4.list.GrowthList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(int,int)>(0, $i0);

        virtualinvoke $r6.<org.apache.commons.collections4.list.GrowthList: boolean addAll(int,java.util.Collection)>(1, $r5);

        $i1 = virtualinvoke $r6.<org.apache.commons.collections4.list.GrowthList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(int,int)>(3, $i1);

        $r7 = virtualinvoke $r6.<org.apache.commons.collections4.list.GrowthList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r7);

        $r8 = virtualinvoke $r6.<org.apache.commons.collections4.list.GrowthList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r8);

        $r9 = virtualinvoke $r6.<org.apache.commons.collections4.list.GrowthList: java.lang.Object get(int)>(2);

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r9);

        return;
    }

    public void testGrowthSet1()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.lang.Integer r1;
        org.apache.commons.collections4.list.GrowthList $r3;
        int $i0, $i1;
        java.lang.Object $r5, $r6;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r3 = new org.apache.commons.collections4.list.GrowthList;

        specialinvoke $r3.<org.apache.commons.collections4.list.GrowthList: void <init>()>();

        $i0 = virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(int,int)>(0, $i0);

        virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: java.lang.Object set(int,java.lang.Object)>(1, r1);

        $i1 = virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(int,int)>(2, $i1);

        $r5 = virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r5);

        $r6 = virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r6);

        return;
    }

    public void testGrowthSet2()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.lang.Integer r1;
        org.apache.commons.collections4.list.GrowthList $r3;
        int $i0, $i1;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r3 = new org.apache.commons.collections4.list.GrowthList;

        specialinvoke $r3.<org.apache.commons.collections4.list.GrowthList: void <init>()>();

        $i0 = virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(int,int)>(0, $i0);

        virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: java.lang.Object set(int,java.lang.Object)>(0, r1);

        $i1 = virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: int size()>();

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(int,int)>(1, $i1);

        $r5 = virtualinvoke $r3.<org.apache.commons.collections4.list.GrowthList: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r5);

        return;
    }

    public void testListAddByIndexBoundsChecking()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.util.List r1;
        java.lang.Object r2;
        java.lang.Object[] $r4;
        java.lang.IndexOutOfBoundsException $r5;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.list.GrowthListTest: java.lang.Object[] getOtherElements()>();

        r2 = $r4[0];

     label1:
        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.GrowthListTest: java.util.List makeObject()>();

        interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>(-1, r2);

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void fail(java.lang.String)>("List.add should throw IndexOutOfBoundsException [-1]");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public void testListAddByIndexBoundsChecking2()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.util.List r1;
        java.lang.Object r2;
        java.lang.Object[] $r4;
        java.lang.IndexOutOfBoundsException $r5;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.list.GrowthListTest: java.lang.Object[] getOtherElements()>();

        r2 = $r4[0];

     label1:
        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.GrowthListTest: java.util.List makeFullCollection()>();

        interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>(-1, r2);

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void fail(java.lang.String)>("List.add should throw IndexOutOfBoundsException [-1]");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public void testListSetByIndexBoundsChecking()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.util.List r1;
        java.lang.Object r2;
        java.lang.Object[] $r4;
        java.lang.IndexOutOfBoundsException $r6;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.GrowthListTest: java.util.List makeObject()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.list.GrowthListTest: java.lang.Object[] getOtherElements()>();

        r2 = $r4[0];

     label1:
        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(-1, r2);

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void fail(java.lang.String)>("List.set should throw IndexOutOfBoundsException [-1]");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public void testListSetByIndexBoundsChecking2()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.util.List r1;
        java.lang.Object r2;
        java.lang.Object[] $r4;
        java.lang.IndexOutOfBoundsException $r6;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.GrowthListTest: java.util.List makeFullCollection()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.list.GrowthListTest: java.lang.Object[] getOtherElements()>();

        r2 = $r4[0];

     label1:
        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(-1, r2);

        staticinvoke <org.apache.commons.collections4.list.GrowthListTest: void fail(java.lang.String)>("List.set should throw IndexOutOfBoundsException [-1]");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        return "4";
    }

    public volatile java.util.Collection makeFullCollection()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.GrowthListTest: java.util.List makeFullCollection()>();

        return $r1;
    }

    public volatile java.util.Collection makeObject()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.GrowthListTest: java.util.List makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.list.GrowthListTest r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.list.GrowthListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.GrowthListTest: java.util.List makeObject()>();

        return $r1;
    }
}
