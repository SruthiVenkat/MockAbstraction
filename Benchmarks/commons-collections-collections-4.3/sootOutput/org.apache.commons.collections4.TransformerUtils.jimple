public class org.apache.commons.collections4.TransformerUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.commons.collections4.TransformerUtils r0;

        r0 := @this: org.apache.commons.collections4.TransformerUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.commons.collections4.Transformer exceptionTransformer()
    {
        org.apache.commons.collections4.Transformer $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.functors.ExceptionTransformer: org.apache.commons.collections4.Transformer exceptionTransformer()>();

        return $r0;
    }

    public static org.apache.commons.collections4.Transformer nullTransformer()
    {
        org.apache.commons.collections4.Transformer $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer nullTransformer()>();

        return $r0;
    }

    public static org.apache.commons.collections4.Transformer nopTransformer()
    {
        org.apache.commons.collections4.Transformer $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.functors.NOPTransformer: org.apache.commons.collections4.Transformer nopTransformer()>();

        return $r0;
    }

    public static org.apache.commons.collections4.Transformer cloneTransformer()
    {
        org.apache.commons.collections4.Transformer $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.functors.CloneTransformer: org.apache.commons.collections4.Transformer cloneTransformer()>();

        return $r0;
    }

    public static org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.collections4.Transformer $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Closure)
    {
        org.apache.commons.collections4.Closure r0;
        org.apache.commons.collections4.Transformer $r1;

        r0 := @parameter0: org.apache.commons.collections4.Closure;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.ClosureTransformer: org.apache.commons.collections4.Transformer closureTransformer(org.apache.commons.collections4.Closure)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Predicate)
    {
        org.apache.commons.collections4.Predicate r0;
        org.apache.commons.collections4.Transformer $r1;

        r0 := @parameter0: org.apache.commons.collections4.Predicate;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.PredicateTransformer: org.apache.commons.collections4.Transformer predicateTransformer(org.apache.commons.collections4.Predicate)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Factory)
    {
        org.apache.commons.collections4.Factory r0;
        org.apache.commons.collections4.Transformer $r1;

        r0 := @parameter0: org.apache.commons.collections4.Factory;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.FactoryTransformer: org.apache.commons.collections4.Transformer factoryTransformer(org.apache.commons.collections4.Factory)>(r0);

        return $r1;
    }

    public static transient org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])
    {
        org.apache.commons.collections4.Transformer[] r0;
        org.apache.commons.collections4.Transformer $r1;

        r0 := @parameter0: org.apache.commons.collections4.Transformer[];

        $r1 = staticinvoke <org.apache.commons.collections4.functors.ChainedTransformer: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Transformer chainedTransformer(java.util.Collection)
    {
        java.util.Collection r0;
        org.apache.commons.collections4.Transformer $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.ChainedTransformer: org.apache.commons.collections4.Transformer chainedTransformer(java.util.Collection)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate, org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.Predicate r0;
        org.apache.commons.collections4.Transformer r1, $r2;

        r0 := @parameter0: org.apache.commons.collections4.Predicate;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.IfTransformer: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)>(r0, r1);

        return $r2;
    }

    public static org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate, org.apache.commons.collections4.Transformer, org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.Predicate r0;
        org.apache.commons.collections4.Transformer r1, r2, $r3;

        r0 := @parameter0: org.apache.commons.collections4.Predicate;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        r2 := @parameter2: org.apache.commons.collections4.Transformer;

        $r3 = staticinvoke <org.apache.commons.collections4.functors.IfTransformer: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>(r0, r1, r2);

        return $r3;
    }

    public static org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate, org.apache.commons.collections4.Transformer, org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.Predicate r0;
        org.apache.commons.collections4.Transformer r1, r2, $r5;
        org.apache.commons.collections4.Predicate[] $r3;
        org.apache.commons.collections4.Transformer[] $r4;

        r0 := @parameter0: org.apache.commons.collections4.Predicate;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        r2 := @parameter2: org.apache.commons.collections4.Transformer;

        $r3 = newarray (org.apache.commons.collections4.Predicate)[1];

        $r3[0] = r0;

        $r4 = newarray (org.apache.commons.collections4.Transformer)[1];

        $r4[0] = r1;

        $r5 = staticinvoke <org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)>($r3, $r4, r2);

        return $r5;
    }

    public static org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[], org.apache.commons.collections4.Transformer[])
    {
        org.apache.commons.collections4.Predicate[] r0;
        org.apache.commons.collections4.Transformer[] r1;
        org.apache.commons.collections4.Transformer $r2;

        r0 := @parameter0: org.apache.commons.collections4.Predicate[];

        r1 := @parameter1: org.apache.commons.collections4.Transformer[];

        $r2 = staticinvoke <org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)>(r0, r1, null);

        return $r2;
    }

    public static org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[], org.apache.commons.collections4.Transformer[], org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.Predicate[] r0;
        org.apache.commons.collections4.Transformer[] r1;
        org.apache.commons.collections4.Transformer r2, $r3;

        r0 := @parameter0: org.apache.commons.collections4.Predicate[];

        r1 := @parameter1: org.apache.commons.collections4.Transformer[];

        r2 := @parameter2: org.apache.commons.collections4.Transformer;

        $r3 = staticinvoke <org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)>(r0, r1, r2);

        return $r3;
    }

    public static org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)
    {
        java.util.Map r0;
        org.apache.commons.collections4.Transformer $r1;

        r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)
    {
        java.util.Map r0;
        org.apache.commons.collections4.Transformer r1, $r8, $r13;
        int i0, $i1, i2;
        org.apache.commons.collections4.Transformer[] r2;
        org.apache.commons.collections4.Predicate[] r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.Object $r6, $r9, $r10, $r12;
        java.util.Set $r7;
        boolean $z0;
        org.apache.commons.collections4.Predicate $r11;
        java.lang.NullPointerException $r14;

        r0 := @parameter0: java.util.Map;

        if r0 != null goto label1;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("The object and transformer map must not be null");

        throw $r14;

     label1:
        $r6 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(null);

        r1 = (org.apache.commons.collections4.Transformer) $r6;

        i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        r2 = newarray (org.apache.commons.collections4.Transformer)[i0];

        r3 = newarray (org.apache.commons.collections4.Predicate)[i0];

        i2 = 0;

        $r7 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r10);

        r3[i2] = $r11;

        $i1 = i2;

        i2 = i2 + 1;

        $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (org.apache.commons.collections4.Transformer) $r12;

        r2[$i1] = $r13;

        goto label2;

     label3:
        $r8 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)>(r3, r2, r1);

        return $r8;
    }

    public static org.apache.commons.collections4.Transformer instantiateTransformer()
    {
        org.apache.commons.collections4.Transformer $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.functors.InstantiateTransformer: org.apache.commons.collections4.Transformer instantiateTransformer()>();

        return $r0;
    }

    public static org.apache.commons.collections4.Transformer instantiateTransformer(java.lang.Class[], java.lang.Object[])
    {
        java.lang.Class[] r0;
        java.lang.Object[] r1;
        org.apache.commons.collections4.Transformer $r2;

        r0 := @parameter0: java.lang.Class[];

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <org.apache.commons.collections4.functors.InstantiateTransformer: org.apache.commons.collections4.Transformer instantiateTransformer(java.lang.Class[],java.lang.Object[])>(r0, r1);

        return $r2;
    }

    public static org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)
    {
        java.util.Map r0;
        org.apache.commons.collections4.Transformer $r1;

        r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.MapTransformer: org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)
    {
        java.lang.String r0;
        org.apache.commons.collections4.Transformer $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.InvokerTransformer: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>(r0, null, null);

        return $r1;
    }

    public static org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String, java.lang.Class[], java.lang.Object[])
    {
        java.lang.String r0;
        java.lang.Class[] r1;
        java.lang.Object[] r2;
        org.apache.commons.collections4.Transformer $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class[];

        r2 := @parameter2: java.lang.Object[];

        $r3 = staticinvoke <org.apache.commons.collections4.functors.InvokerTransformer: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>(r0, r1, r2);

        return $r3;
    }

    public static org.apache.commons.collections4.Transformer stringValueTransformer()
    {
        org.apache.commons.collections4.Transformer $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.functors.StringValueTransformer: org.apache.commons.collections4.Transformer stringValueTransformer()>();

        return $r0;
    }
}
