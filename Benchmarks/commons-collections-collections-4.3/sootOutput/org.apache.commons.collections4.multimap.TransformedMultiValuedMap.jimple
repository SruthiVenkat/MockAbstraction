public class org.apache.commons.collections4.multimap.TransformedMultiValuedMap extends org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator
{
    private static final long serialVersionUID;
    private final org.apache.commons.collections4.Transformer keyTransformer;
    private final org.apache.commons.collections4.Transformer valueTransformer;

    public static org.apache.commons.collections4.multimap.TransformedMultiValuedMap transformingMap(org.apache.commons.collections4.MultiValuedMap, org.apache.commons.collections4.Transformer, org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.MultiValuedMap r0;
        org.apache.commons.collections4.Transformer r1, r2;
        org.apache.commons.collections4.multimap.TransformedMultiValuedMap $r3;

        r0 := @parameter0: org.apache.commons.collections4.MultiValuedMap;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        r2 := @parameter2: org.apache.commons.collections4.Transformer;

        $r3 = new org.apache.commons.collections4.multimap.TransformedMultiValuedMap;

        specialinvoke $r3.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: void <init>(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>(r0, r1, r2);

        return $r3;
    }

    public static org.apache.commons.collections4.multimap.TransformedMultiValuedMap transformedMap(org.apache.commons.collections4.MultiValuedMap, org.apache.commons.collections4.Transformer, org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.MultiValuedMap r0;
        org.apache.commons.collections4.Transformer r1, r2;
        org.apache.commons.collections4.multimap.TransformedMultiValuedMap $r5;
        boolean $z0;
        org.apache.commons.collections4.multimap.ArrayListValuedHashMap $r6;

        r0 := @parameter0: org.apache.commons.collections4.MultiValuedMap;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        r2 := @parameter2: org.apache.commons.collections4.Transformer;

        $r5 = new org.apache.commons.collections4.multimap.TransformedMultiValuedMap;

        specialinvoke $r5.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: void <init>(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>(r0, r1, r2);

        $z0 = interfaceinvoke r0.<org.apache.commons.collections4.MultiValuedMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r6 = new org.apache.commons.collections4.multimap.ArrayListValuedHashMap;

        specialinvoke $r6.<org.apache.commons.collections4.multimap.ArrayListValuedHashMap: void <init>(org.apache.commons.collections4.MultiValuedMap)>(r0);

        virtualinvoke $r5.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: void clear()>();

        virtualinvoke $r5.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: boolean putAll(org.apache.commons.collections4.MultiValuedMap)>($r6);

     label1:
        return $r5;
    }

    protected void <init>(org.apache.commons.collections4.MultiValuedMap, org.apache.commons.collections4.Transformer, org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.multimap.TransformedMultiValuedMap r0;
        org.apache.commons.collections4.MultiValuedMap r1;
        org.apache.commons.collections4.Transformer r2, r3;

        r0 := @this: org.apache.commons.collections4.multimap.TransformedMultiValuedMap;

        r1 := @parameter0: org.apache.commons.collections4.MultiValuedMap;

        r2 := @parameter1: org.apache.commons.collections4.Transformer;

        r3 := @parameter2: org.apache.commons.collections4.Transformer;

        specialinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator: void <init>(org.apache.commons.collections4.MultiValuedMap)>(r1);

        r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: org.apache.commons.collections4.Transformer keyTransformer> = r2;

        r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: org.apache.commons.collections4.Transformer valueTransformer> = r3;

        return;
    }

    protected java.lang.Object transformKey(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.TransformedMultiValuedMap r0;
        java.lang.Object r1, $r4;
        org.apache.commons.collections4.Transformer $r2, $r3;

        r0 := @this: org.apache.commons.collections4.multimap.TransformedMultiValuedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: org.apache.commons.collections4.Transformer keyTransformer>;

        if $r2 != null goto label1;

        return r1;

     label1:
        $r3 = r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: org.apache.commons.collections4.Transformer keyTransformer>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r1);

        return $r4;
    }

    protected java.lang.Object transformValue(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.TransformedMultiValuedMap r0;
        java.lang.Object r1, $r4;
        org.apache.commons.collections4.Transformer $r2, $r3;

        r0 := @this: org.apache.commons.collections4.multimap.TransformedMultiValuedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: org.apache.commons.collections4.Transformer valueTransformer>;

        if $r2 != null goto label1;

        return r1;

     label1:
        $r3 = r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: org.apache.commons.collections4.Transformer valueTransformer>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r1);

        return $r4;
    }

    public boolean put(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.multimap.TransformedMultiValuedMap r0;
        java.lang.Object r1, r2, $r4, $r5;
        org.apache.commons.collections4.MultiValuedMap $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.multimap.TransformedMultiValuedMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: org.apache.commons.collections4.MultiValuedMap decorated()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: java.lang.Object transformKey(java.lang.Object)>(r1);

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: java.lang.Object transformValue(java.lang.Object)>(r2);

        $z0 = interfaceinvoke $r3.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $z0;
    }

    public boolean putAll(java.lang.Object, java.lang.Iterable)
    {
        org.apache.commons.collections4.multimap.TransformedMultiValuedMap r0;
        java.lang.Object r1, $r8;
        java.lang.Iterable r2;
        org.apache.commons.collections4.FluentIterable r3, $r5;
        java.util.Iterator r4;
        org.apache.commons.collections4.Transformer $r6;
        boolean $z0, $z1, $z2;
        org.apache.commons.collections4.MultiValuedMap $r7;
        java.util.Collection $r9;
        java.lang.NullPointerException $r10;

        r0 := @this: org.apache.commons.collections4.multimap.TransformedMultiValuedMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        if r2 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("Values must not be null.");

        throw $r10;

     label1:
        $r5 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>(r2);

        $r6 = r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: org.apache.commons.collections4.Transformer valueTransformer>;

        r3 = virtualinvoke $r5.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable transform(org.apache.commons.collections4.Transformer)>($r6);

        r4 = interfaceinvoke r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: org.apache.commons.collections4.MultiValuedMap decorated()>();

        $r8 = virtualinvoke r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: java.lang.Object transformKey(java.lang.Object)>(r1);

        $r9 = interfaceinvoke $r7.<org.apache.commons.collections4.MultiValuedMap: java.util.Collection get(java.lang.Object)>($r8);

        $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.util.Iterator)>($r9, r4);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean putAll(java.util.Map)
    {
        org.apache.commons.collections4.multimap.TransformedMultiValuedMap r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0, $z1, z2;
        java.lang.Object $r5, $r6, $r7;
        java.lang.NullPointerException $r8;

        r0 := @this: org.apache.commons.collections4.multimap.TransformedMultiValuedMap;

        r1 := @parameter0: java.util.Map;

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("Map must not be null.");

        throw $r8;

     label1:
        z2 = 0;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>($r6, $r7);

        z2 = z2 | $z1;

        goto label2;

     label3:
        return z2;
    }

    public boolean putAll(org.apache.commons.collections4.MultiValuedMap)
    {
        org.apache.commons.collections4.multimap.TransformedMultiValuedMap r0;
        org.apache.commons.collections4.MultiValuedMap r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Collection $r4;
        boolean $z0, $z1, z2;
        java.lang.Object $r5, $r6, $r7;
        java.lang.NullPointerException $r8;

        r0 := @this: org.apache.commons.collections4.multimap.TransformedMultiValuedMap;

        r1 := @parameter0: org.apache.commons.collections4.MultiValuedMap;

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("Map must not be null.");

        throw $r8;

     label1:
        z2 = 0;

        $r4 = interfaceinvoke r1.<org.apache.commons.collections4.MultiValuedMap: java.util.Collection entries()>();

        r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.TransformedMultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>($r6, $r7);

        z2 = z2 | $z1;

        goto label2;

     label3:
        return z2;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.multimap.TransformedMultiValuedMap: long serialVersionUID> = 20150612L;

        return;
    }
}
