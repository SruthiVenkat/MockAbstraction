public class org.apache.commons.collections4.bidimap.TreeBidiMap extends java.lang.Object implements org.apache.commons.collections4.OrderedBidiMap, java.io.Serializable
{
    private static final long serialVersionUID;
    private transient org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode;
    private transient int nodeCount;
    private transient int modifications;
    private transient java.util.Set keySet;
    private transient java.util.Set valuesSet;
    private transient java.util.Set entrySet;
    private transient org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse inverse;

    public void <init>()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount> = 0;

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int modifications> = 0;

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse inverse> = null;

        $r1 = newarray (org.apache.commons.collections4.bidimap.TreeBidiMap$Node)[2];

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode> = $r1;

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.util.Map r1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void <init>()>();

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public int size()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $i0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount>;

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $i0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkKey(java.lang.Object)>(r1);

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookupKey(java.lang.Object)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkValue(java.lang.Object)>(r1);

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookupValue(java.lang.Object)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Comparable get(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r2;
        java.lang.Comparable $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkKey(java.lang.Object)>(r1);

        r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookupKey(java.lang.Object)>(r1);

        if r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getValue()>();

     label2:
        return $r3;
    }

    public java.lang.Comparable put(java.lang.Comparable, java.lang.Comparable)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Comparable r1, r2, r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Comparable;

        r2 := @parameter1: java.lang.Comparable;

        r3 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable get(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void doPut(java.lang.Comparable,java.lang.Comparable)>(r1, r2);

        return r3;
    }

    public void putAll(java.util.Map)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r8;
        java.lang.Comparable $r7, $r9;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.util.Map;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.Comparable) $r6;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.Comparable) $r8;

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable put(java.lang.Comparable,java.lang.Comparable)>($r7, $r9);

        goto label1;

     label2:
        return;
    }

    public java.lang.Comparable remove(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        java.lang.Comparable $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable doRemoveKey(java.lang.Object)>(r1);

        return $r2;
    }

    public void clear()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r1, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r2, $r4;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void modify()>();

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount> = 0;

        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $r1 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r2[$i0] = null;

        $r4 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $r3 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        $i1 = virtualinvoke $r3.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r4[$i1] = null;

        return;
    }

    public java.lang.Comparable getKey(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r2;
        java.lang.Comparable $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkValue(java.lang.Object)>(r1);

        r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookupValue(java.lang.Object)>(r1);

        if r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getKey()>();

     label2:
        return $r3;
    }

    public java.lang.Comparable removeValue(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        java.lang.Comparable $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable doRemoveValue(java.lang.Object)>(r1);

        return $r2;
    }

    public java.lang.Comparable firstKey()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        int $i0, $i1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r1, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node $r4, $r5;
        java.lang.Comparable $r6;
        java.util.NoSuchElementException $r7;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $i0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount>;

        if $i0 != 0 goto label1;

        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Map is empty");

        throw $r7;

     label1:
        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $r1 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $i1 = virtualinvoke $r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r4 = $r2[$i1];

        $r3 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $r5 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r4, $r3);

        $r6 = virtualinvoke $r5.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getKey()>();

        return $r6;
    }

    public java.lang.Comparable lastKey()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        int $i0, $i1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r1, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node $r4, $r5;
        java.lang.Comparable $r6;
        java.util.NoSuchElementException $r7;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $i0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount>;

        if $i0 != 0 goto label1;

        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Map is empty");

        throw $r7;

     label1:
        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $r1 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $i1 = virtualinvoke $r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r4 = $r2[$i1];

        $r3 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $r5 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r4, $r3);

        $r6 = virtualinvoke $r5.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getKey()>();

        return $r6;
    }

    public java.lang.Comparable nextKey(java.lang.Comparable)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Comparable r1, $r5;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r2, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r4;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Comparable;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkKey(java.lang.Object)>(r1);

        $r3 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookupKey(java.lang.Object)>(r1);

        $r4 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r3, $r4);

        if r2 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getKey()>();

     label2:
        return $r5;
    }

    public java.lang.Comparable previousKey(java.lang.Comparable)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Comparable r1, $r5;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r2, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r4;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Comparable;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkKey(java.lang.Object)>(r1);

        $r3 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookupKey(java.lang.Object)>(r1);

        $r4 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r3, $r4);

        if r2 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getKey()>();

     label2:
        return $r5;
    }

    public java.util.Set keySet()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.util.Set $r1, $r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r4;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.util.Set keySet>;

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView;

        $r4 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        specialinvoke $r3.<org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView: void <init>(org.apache.commons.collections4.bidimap.TreeBidiMap,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r0, $r4);

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.util.Set keySet> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.util.Set keySet>;

        return $r2;
    }

    public java.util.Set values()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.util.Set $r1, $r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r4;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.util.Set valuesSet>;

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView;

        $r4 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        specialinvoke $r3.<org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView: void <init>(org.apache.commons.collections4.bidimap.TreeBidiMap,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r0, $r4);

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.util.Set valuesSet> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.util.Set valuesSet>;

        return $r2;
    }

    public java.util.Set entrySet()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.util.Set $r1, $r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.util.Set entrySet>;

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView;

        specialinvoke $r3.<org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView: void <init>(org.apache.commons.collections4.bidimap.TreeBidiMap)>(r0);

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.util.Set entrySet> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.util.Set entrySet>;

        return $r2;
    }

    public org.apache.commons.collections4.OrderedMapIterator mapIterator()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        boolean $z0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator $r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r2;
        org.apache.commons.collections4.OrderedMapIterator $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.commons.collections4.iterators.EmptyOrderedMapIterator: org.apache.commons.collections4.OrderedMapIterator emptyOrderedMapIterator()>();

        return $r3;

     label1:
        $r1 = new org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator;

        $r2 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        specialinvoke $r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator: void <init>(org.apache.commons.collections4.bidimap.TreeBidiMap,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r0, $r2);

        return $r1;
    }

    public org.apache.commons.collections4.OrderedBidiMap inverseBidiMap()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse $r1, $r2, $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse inverse>;

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse;

        specialinvoke $r3.<org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse: void <init>(org.apache.commons.collections4.bidimap.TreeBidiMap)>(r0);

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse inverse> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse inverse>;

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $z0 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, $r2);

        return $z0;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $r1 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $i0 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $r1 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.String doToString(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r1);

        return $r2;
    }

    private void doPut(java.lang.Comparable, java.lang.Comparable)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Comparable r1, r2, $r7;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r5, $r8, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r29, $r31;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r6, $r30, $r32;
        int $i0, $i1, $i2, i3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node $r9, $r10, $r16, $r17, $r28, r33;
        java.lang.IllegalArgumentException $r22;
        java.lang.StringBuilder $r23, $r24, $r25, $r26;
        java.lang.String $r27;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Comparable;

        r2 := @parameter1: java.lang.Comparable;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkKeyAndValue(java.lang.Object,java.lang.Object)>(r1, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable doRemoveKey(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable doRemoveValue(java.lang.Object)>(r2);

        $r6 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $r5 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $i0 = virtualinvoke $r5.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        r33 = $r6[$i0];

        if r33 != null goto label1;

        $r28 = new org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        specialinvoke $r28.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void <init>(java.lang.Comparable,java.lang.Comparable)>(r1, r2);

        $r30 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $r29 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $i1 = virtualinvoke $r29.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r30[$i1] = $r28;

        $r32 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $r31 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        $i2 = virtualinvoke $r31.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r32[$i2] = $r28;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void grow()>();

        goto label7;

     label1:
        $r7 = virtualinvoke r33.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getKey()>();

        i3 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: int compare(java.lang.Comparable,java.lang.Comparable)>(r1, $r7);

        if i3 != 0 goto label2;

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot store a duplicate key (\"");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\") in this Map");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r22;

     label2:
        if i3 >= 0 goto label4;

        $r15 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $r16 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r33, $r15);

        if $r16 == null goto label3;

        $r21 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        r33 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r33, $r21);

        goto label6;

     label3:
        $r17 = new org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        specialinvoke $r17.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void <init>(java.lang.Comparable,java.lang.Comparable)>(r1, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)>($r17);

        $r18 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r33, $r17, $r18);

        $r19 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r17, r33, $r19);

        $r20 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r17, $r20);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void grow()>();

        goto label7;

     label4:
        $r8 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $r9 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r33, $r8);

        if $r9 == null goto label5;

        $r14 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        r33 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r33, $r14);

        goto label6;

     label5:
        $r10 = new org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        specialinvoke $r10.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void <init>(java.lang.Comparable,java.lang.Comparable)>(r1, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)>($r10);

        $r11 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r33, $r10, $r11);

        $r12 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r10, r33, $r12);

        $r13 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r10, $r13);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void grow()>();

        goto label7;

     label6:
        goto label1;

     label7:
        return;
    }

    private java.lang.Comparable doRemoveKey(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r2;
        java.lang.Comparable $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookupKey(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)>(r2);

        $r3 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getValue()>();

        return $r3;
    }

    private java.lang.Comparable doRemoveValue(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r2;
        java.lang.Comparable $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookupValue(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)>(r2);

        $r3 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getKey()>();

        return $r3;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookup(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1, $r5;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        int i0, $i1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r3;
        java.lang.Comparable $r4, $r6;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r7, r8, $r9;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        r7 = null;

        $r3 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i1 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        r8 = $r3[$i1];

     label1:
        if r8 == null goto label5;

        $r4 = (java.lang.Comparable) r1;

        $r5 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Object access$500(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r8, r2);

        $r6 = (java.lang.Comparable) $r5;

        i0 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: int compare(java.lang.Comparable,java.lang.Comparable)>($r4, $r6);

        if i0 != 0 goto label2;

        r7 = r8;

        goto label5;

     label2:
        if i0 >= 0 goto label3;

        $r9 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r8, r2);

        goto label4;

     label3:
        $r9 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r8, r2);

     label4:
        r8 = $r9;

        goto label1;

     label5:
        return r7;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookupKey(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookup(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, $r2);

        return $r3;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookupValue(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookup(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, $r2);

        return $r3;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3, $r4, $r5, r6, r7, r8;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        if r1 != null goto label1;

        r6 = null;

        goto label5;

     label1:
        $r3 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        if $r3 == null goto label2;

        $r5 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        r6 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r5, r2);

        goto label5;

     label2:
        r7 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        r8 = r1;

     label3:
        if r7 == null goto label4;

        $r4 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r7, r2);

        if r8 != $r4 goto label4;

        r8 = r7;

        r7 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r7, r2);

        goto label3;

     label4:
        r6 = r7;

     label5:
        return r6;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3, $r4, $r5, r6, r7, r8;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        if r1 != null goto label1;

        r6 = null;

        goto label5;

     label1:
        $r3 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        if $r3 == null goto label2;

        $r5 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        r6 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r5, r2);

        goto label5;

     label2:
        r7 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        r8 = r1;

     label3:
        if r7 == null goto label4;

        $r4 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r7, r2);

        if r8 != $r4 goto label4;

        r8 = r7;

        r7 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r7, r2);

        goto label3;

     label4:
        r6 = r7;

     label5:
        return r6;
    }

    private static int compare(java.lang.Comparable, java.lang.Comparable)
    {
        java.lang.Comparable r0, r1;
        int $i0;

        r0 := @parameter0: java.lang.Comparable;

        r1 := @parameter1: java.lang.Comparable;

        $i0 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1);

        return $i0;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3, r4;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        r4 = r1;

        if r1 == null goto label2;

     label1:
        $r3 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r4, r2);

        if $r3 == null goto label2;

        r4 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r4, r2);

        goto label1;

     label2:
        return r4;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3, r4;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        r4 = r1;

        if r1 == null goto label2;

     label1:
        $r3 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r4, r2);

        if $r3 == null goto label2;

        r4 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r4, r2);

        goto label1;

     label2:
        return r4;
    }

    private void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r3 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        if r2 == null goto label2;

        if r1 != null goto label1;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$700(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r3);

        goto label2;

     label1:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$800(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r1, r3);

     label2:
        return;
    }

    private static boolean isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        if r0 == null goto label1;

        $z0 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean access$900(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r0, r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        if r0 == null goto label1;

        $z0 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean access$1000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r0, r1);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private static void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        if r0 == null goto label1;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$1100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r0, r1);

     label1:
        return;
    }

    private static void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        if r0 == null goto label1;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$700(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r0, r1);

     label1:
        return;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3, $r4;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        $r4 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r3, r2);

        return $r4;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

     label2:
        return $r3;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

     label2:
        return $r3;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

     label2:
        return $r3;
    }

    private void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r12;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        r3 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        $r4 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r3, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, $r4, r2);

        $r5 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r3, r2);

        if $r5 == null goto label1;

        $r13 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r3, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r13, r1, r2);

     label1:
        $r6 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r3, $r6, r2);

        $r7 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        if $r7 != null goto label2;

        $r12 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i0 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r12[$i0] = r3;

        goto label4;

     label2:
        $r8 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        $r9 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r8, r2);

        if $r9 != r1 goto label3;

        $r11 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r11, r3, r2);

        goto label4;

     label3:
        $r10 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r10, r3, r2);

     label4:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r3, r1, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3, r2);

        return;
    }

    private void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r12;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        r3 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        $r4 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r3, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, $r4, r2);

        $r5 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r3, r2);

        if $r5 == null goto label1;

        $r13 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r3, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r13, r1, r2);

     label1:
        $r6 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r3, $r6, r2);

        $r7 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        if $r7 != null goto label2;

        $r12 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i0 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r12[$i0] = r3;

        goto label4;

     label2:
        $r8 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        $r9 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r8, r2);

        if $r9 != r1 goto label3;

        $r11 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r11, r3, r2);

        goto label4;

     label3:
        $r10 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r10, r3, r2);

     label4:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r3, r1, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3, r2);

        return;
    }

    private void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, r20, r21, r22, $r24;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r3, $r23;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        r20 = r1;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

     label1:
        if r20 == null goto label9;

        $r3 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i0 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r4 = $r3[$i0];

        if r20 == $r4 goto label9;

        $r5 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        $z0 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r5, r2);

        if $z0 == 0 goto label9;

        $z1 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean access$1200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        if $z1 == 0 goto label5;

        $r13 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        r21 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r13, r2);

        $z4 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r21, r2);

        if $z4 == 0 goto label2;

        $r18 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r18, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r21, r2);

        $r19 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r19, r2);

        r20 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        goto label4;

     label2:
        $z5 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean access$1300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        if $z5 == 0 goto label3;

        r20 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

     label3:
        $r14 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r14, r2);

        $r15 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r15, r2);

        $r16 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        if $r16 == null goto label4;

        $r17 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r17, r2);

     label4:
        goto label1;

     label5:
        $r6 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        r22 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r6, r2);

        $z2 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r22, r2);

        if $z2 == 0 goto label6;

        $r11 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r11, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r22, r2);

        $r12 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r12, r2);

        r20 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        goto label8;

     label6:
        $z3 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean access$1200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        if $z3 == 0 goto label7;

        r20 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

     label7:
        $r7 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r7, r2);

        $r8 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r8, r2);

        $r9 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        if $r9 == null goto label8;

        $r10 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r20, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r10, r2);

     label8:
        goto label1;

     label9:
        $r23 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i1 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r24 = $r23[$i1];

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r24, r2);

        return;
    }

    private void doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement[] r2;
        int i0, $i1, $i2, i3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r3;
        boolean $z0, $z1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r12, $r19;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement[] values()>();

        i0 = lengthof r2;

        i3 = 0;

     label01:
        if i3 >= i0 goto label14;

        r3 = r2[i3];

        $r5 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        if $r5 == null goto label02;

        $r20 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        if $r20 == null goto label02;

        $r21 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r21, r1, r3);

     label02:
        $r22 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        if $r22 == null goto label03;

        $r23 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        goto label04;

     label03:
        $r23 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

     label04:
        r4 = $r23;

        if $r23 == null goto label08;

        $r13 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r23, $r13, r3);

        $r14 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        if $r14 != null goto label05;

        $r19 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i2 = virtualinvoke r3.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r19[$i2] = $r23;

        goto label07;

     label05:
        $r15 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        $r16 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r15, r3);

        if r1 != $r16 goto label06;

        $r18 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r18, $r23, r3);

        goto label07;

     label06:
        $r17 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r17, $r23, r3);

     label07:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, null, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, null, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, null, r3);

        $z1 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        if $z1 == 0 goto label13;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r4, r3);

        goto label13;

     label08:
        $r6 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        if $r6 != null goto label09;

        $r12 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i1 = virtualinvoke r3.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r12[$i1] = null;

        goto label13;

     label09:
        $z0 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        if $z0 == 0 goto label10;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

     label10:
        $r7 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        if $r7 == null goto label13;

        $r8 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        $r9 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r8, r3);

        if r1 != $r9 goto label11;

        $r11 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r11, null, r3);

        goto label12;

     label11:
        $r10 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r10, null, r3);

     label12:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, null, r3);

     label13:
        i3 = i3 + 1;

        goto label01;

     label14:
        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void shrink()>();

        return;
    }

    private void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r30, r31, $r33, r34, r35;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r10, $r24, $r32;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        r31 = r1;

     label01:
        $r32 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i2 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r33 = $r32[$i2];

        if r31 == $r33 goto label11;

        $z0 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        if $z0 == 0 goto label11;

        $z1 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean access$1200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        if $z1 == 0 goto label06;

        $r17 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        r34 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r17, r2);

        $z6 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r34, r2);

        if $z6 == 0 goto label02;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r34, r2);

        $r28 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r28, r2);

        $r29 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r29, r2);

        $r30 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        r34 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r30, r2);

     label02:
        $r18 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r34, r2);

        $z7 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r18, r2);

        if $z7 == 0 goto label03;

        $r27 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r34, r2);

        $z9 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r27, r2);

        if $z9 == 0 goto label03;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r34, r2);

        r31 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        goto label05;

     label03:
        $r19 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r34, r2);

        $z8 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r19, r2);

        if $z8 == 0 goto label04;

        $r25 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r34, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r25, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r34, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r34, r2);

        $r26 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        r34 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r26, r2);

     label04:
        $r20 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r20, r34, r2);

        $r21 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r21, r2);

        $r22 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r34, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r22, r2);

        $r23 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r23, r2);

        $r24 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i1 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        r31 = $r24[$i1];

     label05:
        goto label01;

     label06:
        $r3 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        r35 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r3, r2);

        $z2 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r35, r2);

        if $z2 == 0 goto label07;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r35, r2);

        $r14 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r14, r2);

        $r15 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r15, r2);

        $r16 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        r35 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r16, r2);

     label07:
        $r4 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r35, r2);

        $z3 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r4, r2);

        if $z3 == 0 goto label08;

        $r13 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r35, r2);

        $z5 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r13, r2);

        if $z5 == 0 goto label08;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r35, r2);

        r31 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        goto label10;

     label08:
        $r5 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r35, r2);

        $z4 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r5, r2);

        if $z4 == 0 goto label09;

        $r11 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r35, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r11, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r35, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r35, r2);

        $r12 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        r35 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r12, r2);

     label09:
        $r6 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r6, r35, r2);

        $r7 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r7, r2);

        $r8 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r35, r2);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r8, r2);

        $r9 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r9, r2);

        $r10 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i0 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        r31 = $r10[$i0];

     label10:
        goto label01;

     label11:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r31, r2);

        return;
    }

    private void swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, r2, r4, r5, r6, r7, r8, r9, $r10, $r11, $r12, $r13, $r15, $r17, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r3;
        boolean z0, $z2, $z3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r14, $r16, $r18, $r19;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r3 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        r4 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        r5 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        r6 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        r7 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r3);

        r8 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r3);

        r9 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r3);

        $r10 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        if $r10 == null goto label01;

        $r26 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        $r27 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r26, r3);

        if r1 != $r27 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        $r28 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r3);

        if $r28 == null goto label03;

        $r24 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r3);

        $r25 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r24, r3);

        if r2 != $r25 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        if r1 != r7 goto label06;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2, r3);

        if $z3 == 0 goto label05;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r1, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r6, r3);

        goto label09;

     label05:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r1, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r5, r3);

        goto label09;

     label06:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r7, r3);

        if r7 == null goto label08;

        if $z3 == 0 goto label07;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r7, r1, r3);

        goto label08;

     label07:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r7, r1, r3);

     label08:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r5, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r6, r3);

     label09:
        if r2 != r4 goto label11;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r1, r3);

        if z0 == 0 goto label10;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r9, r3);

        goto label14;

     label10:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r8, r3);

        goto label14;

     label11:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r4, r3);

        if r4 == null goto label13;

        if z0 == 0 goto label12;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r4, r2, r3);

        goto label13;

     label12:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r4, r2, r3);

     label13:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r8, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r9, r3);

     label14:
        $r29 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        if $r29 == null goto label15;

        $r23 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r23, r1, r3);

     label15:
        $r11 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        if $r11 == null goto label16;

        $r22 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r22, r1, r3);

     label16:
        $r12 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r3);

        if $r12 == null goto label17;

        $r21 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r21, r2, r3);

     label17:
        $r13 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r3);

        if $r13 == null goto label18;

        $r20 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2, r3);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>($r20, r2, r3);

     label18:
        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$1400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2, r3);

        $r14 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i0 = virtualinvoke r3.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r15 = $r14[$i0];

        if $r15 != r1 goto label19;

        $r19 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i3 = virtualinvoke r3.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r19[$i3] = r2;

        goto label20;

     label19:
        $r16 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i1 = virtualinvoke r3.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r17 = $r16[$i1];

        if $r17 != r2 goto label20;

        $r18 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $i2 = virtualinvoke r3.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r18[$i2] = r1;

     label20:
        return;
    }

    private static void checkNonNullComparable(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        java.lang.Object r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        boolean $z0;
        java.lang.ClassCastException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10;
        java.lang.String $r6, $r11;
        java.lang.NullPointerException $r7;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        if r0 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be null");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        $z0 = r0 instanceof java.lang.Comparable;

        if $z0 != 0 goto label2;

        $r2 = new java.lang.ClassCastException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be Comparable");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.ClassCastException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        return;
    }

    private static void checkKey(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkNonNullComparable(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r0, $r1);

        return;
    }

    private static void checkValue(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkNonNullComparable(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r0, $r1);

        return;
    }

    private static void checkKeyAndValue(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkKey(java.lang.Object)>(r0);

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkValue(java.lang.Object)>(r1);

        return;
    }

    private void modify()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $i0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int modifications>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int modifications> = $i1;

        return;
    }

    private void grow()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void modify()>();

        $i0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount> = $i1;

        return;
    }

    private void shrink()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void modify()>();

        $i0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount>;

        $i1 = $i0 - 1;

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount> = $i1;

        return;
    }

    private void insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r7, $r13, r26;
        int i0, $i1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement $r2, $r6, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r21;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r3;
        java.lang.Comparable $r4, $r5;
        java.lang.IllegalArgumentException $r18;
        java.lang.StringBuilder $r19, $r20, $r23, $r24;
        java.lang.Object $r22;
        java.lang.String $r25;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        $r3 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        $r2 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        $i1 = virtualinvoke $r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        r26 = $r3[$i1];

     label1:
        $r4 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getValue()>();

        $r5 = virtualinvoke r26.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getValue()>();

        i0 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: int compare(java.lang.Comparable,java.lang.Comparable)>($r4, $r5);

        if i0 != 0 goto label2;

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot store a duplicate value (\"");

        $r21 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        $r22 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Object access$500(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, $r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\") in this Map");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r18;

     label2:
        if i0 >= 0 goto label4;

        $r12 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        $r13 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r26, $r12);

        if $r13 == null goto label3;

        $r17 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        r26 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r26, $r17);

        goto label6;

     label3:
        $r14 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r26, r1, $r14);

        $r15 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r26, $r15);

        $r16 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, $r16);

        goto label7;

     label4:
        $r6 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        $r7 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r26, $r6);

        if $r7 == null goto label5;

        $r11 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        r26 = staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r26, $r11);

        goto label6;

     label5:
        $r8 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r26, r1, $r8);

        $r9 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r26, $r9);

        $r10 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, $r10);

        goto label7;

     label6:
        goto label1;

     label7:
        return;
    }

    private boolean doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1, r4, r5, $r6;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        java.util.Map r3;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        java.lang.ClassCastException $r7;
        java.lang.NullPointerException $r8;
        org.apache.commons.collections4.MapIterator r9;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        if r1 != r0 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof java.util.Map;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r3 = (java.util.Map) r1;

        $i0 = interfaceinvoke r3.<java.util.Map: int size()>();

        $i1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int size()>();

        if $i0 == $i1 goto label03;

        return 0;

     label03:
        $i2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount>;

        if $i2 <= 0 goto label11;

     label04:
        r9 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.MapIterator getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r2);

     label05:
        $z1 = interfaceinvoke r9.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        r4 = interfaceinvoke r9.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        r5 = interfaceinvoke r9.<org.apache.commons.collections4.MapIterator: java.lang.Object getValue()>();

        $r6 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $z2 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label07;

     label06:
        return 0;

     label07:
        goto label05;

     label08:
        goto label11;

     label09:
        $r7 := @caughtexception;

        return 0;

     label10:
        $r8 := @caughtexception;

        return 0;

     label11:
        return 1;

        catch java.lang.ClassCastException from label04 to label06 with label09;
        catch java.lang.ClassCastException from label07 to label08 with label09;
        catch java.lang.NullPointerException from label04 to label06 with label10;
        catch java.lang.NullPointerException from label07 to label08 with label10;
    }

    private int doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        org.apache.commons.collections4.MapIterator r2;
        java.lang.Object r3, r4;
        int $i0, $i1, $i2, $i3, i4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        i4 = 0;

        $i0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount>;

        if $i0 <= 0 goto label2;

        r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.MapIterator getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

     label1:
        $z0 = interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        r4 = interfaceinvoke r2.<org.apache.commons.collections4.MapIterator: java.lang.Object getValue()>();

        $i1 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

        $i2 = virtualinvoke r4.<java.lang.Object: int hashCode()>();

        $i3 = $i1 ^ $i2;

        i4 = i4 + $i3;

        goto label1;

     label2:
        return i4;
    }

    private java.lang.String doToString(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        org.apache.commons.collections4.MapIterator r3;
        java.lang.Object r4, r5, $r15, $r16;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r6, $r10, $r11;
        java.lang.String $r9;
        boolean z0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $i0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount>;

        if $i0 != 0 goto label1;

        return "{}";

     label1:
        $r6 = new java.lang.StringBuilder;

        $i1 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount>;

        $i2 = $i1 * 32;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        r3 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.MapIterator getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        z0 = interfaceinvoke r3.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

     label2:
        if z0 == 0 goto label8;

        r4 = interfaceinvoke r3.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        r5 = interfaceinvoke r3.<org.apache.commons.collections4.MapIterator: java.lang.Object getValue()>();

        if r4 != r0 goto label3;

        $r15 = "(this Map)";

        goto label4;

     label3:
        $r15 = r4;

     label4:
        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        if r5 != r0 goto label5;

        $r16 = "(this Map)";

        goto label6;

     label5:
        $r16 = r5;

     label6:
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        z0 = interfaceinvoke r3.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if z0 == 0 goto label7;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label7:
        goto label2;

     label8:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private org.apache.commons.collections4.MapIterator getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1, $r4, $r6;
        int[] $r2;
        int $i0, $i1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator $r5;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = <org.apache.commons.collections4.bidimap.TreeBidiMap$1: int[] $SwitchMap$org$apache$commons$collections4$bidimap$TreeBidiMap$DataElement>;

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $i1 = $r2[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r5 = new org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator;

        $r6 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement KEY>;

        specialinvoke $r5.<org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator: void <init>(org.apache.commons.collections4.bidimap.TreeBidiMap,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r0, $r6);

        return $r5;

     label2:
        $r3 = new org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator;

        $r4 = <org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement VALUE>;

        specialinvoke $r3.<org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator: void <init>(org.apache.commons.collections4.bidimap.TreeBidiMap,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r0, $r4);

        return $r3;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.io.ObjectInputStream r1;
        int i0, i1;
        java.lang.Comparable r2, r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r4;
        java.lang.Object $r5, $r6;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r4 = newarray (org.apache.commons.collections4.bidimap.TreeBidiMap$Node)[2];

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode> = $r4;

        i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r2 = (java.lang.Comparable) $r5;

        $r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r3 = (java.lang.Comparable) $r6;

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable put(java.lang.Comparable,java.lang.Comparable)>(r2, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.io.ObjectOutputStream r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        int $i0;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int size()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r6);

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r7);

        goto label1;

     label2:
        return;
    }

    public volatile org.apache.commons.collections4.BidiMap inverseBidiMap()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.OrderedBidiMap $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.OrderedBidiMap inverseBidiMap()>();

        return $r1;
    }

    public volatile java.lang.Object removeValue(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        java.lang.Comparable $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable removeValue(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.Object getKey(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        java.lang.Comparable $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable getKey(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1, r2;
        java.lang.Comparable $r3, $r4, $r5;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Comparable) r1;

        $r3 = (java.lang.Comparable) r2;

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable put(java.lang.Comparable,java.lang.Comparable)>($r4, $r3);

        return $r5;
    }

    public volatile java.util.Collection values()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.util.Set values()>();

        return $r1;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        java.lang.Comparable $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable remove(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        java.lang.Comparable $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable get(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile org.apache.commons.collections4.MapIterator mapIterator()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.OrderedMapIterator $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

        return $r1;
    }

    public volatile java.lang.Object previousKey(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        java.lang.Comparable $r2, $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Comparable) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable previousKey(java.lang.Comparable)>($r2);

        return $r3;
    }

    public volatile java.lang.Object nextKey(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        java.lang.Comparable $r2, $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Comparable) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable nextKey(java.lang.Comparable)>($r2);

        return $r3;
    }

    public volatile java.lang.Object lastKey()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Comparable $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable lastKey()>();

        return $r1;
    }

    public volatile java.lang.Object firstKey()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Comparable $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable firstKey()>();

        return $r1;
    }

    static void access$1500(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        java.lang.Object r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkNonNullComparable(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r0, r1);

        return;
    }

    static org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$1600(org.apache.commons.collections4.bidimap.TreeBidiMap, java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node $r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookupKey(java.lang.Object)>(r1);

        return $r2;
    }

    static java.lang.Comparable access$1700(org.apache.commons.collections4.bidimap.TreeBidiMap, java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        java.lang.Comparable $r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable doRemoveKey(java.lang.Object)>(r1);

        return $r2;
    }

    static org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$1800(org.apache.commons.collections4.bidimap.TreeBidiMap, java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node $r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookupValue(java.lang.Object)>(r1);

        return $r2;
    }

    static java.lang.Comparable access$1900(org.apache.commons.collections4.bidimap.TreeBidiMap, java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        java.lang.Comparable $r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.Comparable doRemoveValue(java.lang.Object)>(r1);

        return $r2;
    }

    static void access$2000(org.apache.commons.collections4.bidimap.TreeBidiMap, org.apache.commons.collections4.bidimap.TreeBidiMap$Node)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)>(r1);

        return;
    }

    static int access$2100(org.apache.commons.collections4.bidimap.TreeBidiMap)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        int $i0;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $i0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int modifications>;

        return $i0;
    }

    static org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] access$2200(org.apache.commons.collections4.bidimap.TreeBidiMap)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r1;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $r1 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode>;

        return $r1;
    }

    static org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$2300(org.apache.commons.collections4.bidimap.TreeBidiMap, org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        return $r3;
    }

    static org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$2400(org.apache.commons.collections4.bidimap.TreeBidiMap, org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        return $r3;
    }

    static org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$2500(org.apache.commons.collections4.bidimap.TreeBidiMap, org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        return $r3;
    }

    static org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$2600(org.apache.commons.collections4.bidimap.TreeBidiMap, org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r1, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        return $r3;
    }

    static int access$2700(org.apache.commons.collections4.bidimap.TreeBidiMap)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        int $i0;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        $i0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int nodeCount>;

        return $i0;
    }

    static void access$2800(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <org.apache.commons.collections4.bidimap.TreeBidiMap: void checkKey(java.lang.Object)>(r0);

        return;
    }

    static org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$2900(org.apache.commons.collections4.bidimap.TreeBidiMap, java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node $r3;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r3 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: org.apache.commons.collections4.bidimap.TreeBidiMap$Node lookup(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        return $r3;
    }

    static void access$3000(org.apache.commons.collections4.bidimap.TreeBidiMap, java.lang.Comparable, java.lang.Comparable)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Comparable r1, r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: java.lang.Comparable;

        r2 := @parameter2: java.lang.Comparable;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: void doPut(java.lang.Comparable,java.lang.Comparable)>(r1, r2);

        return;
    }

    static boolean access$3100(org.apache.commons.collections4.bidimap.TreeBidiMap, java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        boolean $z0;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $z0 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        return $z0;
    }

    static int access$3200(org.apache.commons.collections4.bidimap.TreeBidiMap, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        int $i0;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $i0 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: int doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        return $i0;
    }

    static java.lang.String access$3300(org.apache.commons.collections4.bidimap.TreeBidiMap, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        java.lang.String $r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap: java.lang.String doToString(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.bidimap.TreeBidiMap: long serialVersionUID> = 721969328361807L;

        return;
    }
}
