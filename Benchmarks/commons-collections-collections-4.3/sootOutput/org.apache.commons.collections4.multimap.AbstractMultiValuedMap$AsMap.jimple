class org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap extends java.util.AbstractMap
{
    final transient java.util.Map decoratedMap;
    final org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0;

    void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap, java.util.Map)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap r1;
        java.util.Map r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        r1 := @parameter0: org.apache.commons.collections4.multimap.AbstractMultiValuedMap;

        r2 := @parameter1: java.util.Map;

        r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0> = r1;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: java.util.Map decoratedMap> = r2;

        return;
    }

    public java.util.Set entrySet()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap$AsMapEntrySet $r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        $r1 = new org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap$AsMapEntrySet;

        specialinvoke $r1.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap$AsMapEntrySet: void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap)>(r0);

        return $r1;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: java.util.Map decoratedMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Collection get(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        java.lang.Object r1, $r5;
        java.util.Collection r2, $r7;
        java.util.Map $r4;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap $r6;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: java.util.Map decoratedMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.Collection) $r5;

        if r2 != null goto label1;

        return null;

     label1:
        $r6 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0>;

        $r7 = virtualinvoke $r6.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: java.util.Collection wrappedCollection(java.lang.Object)>(r1);

        return $r7;
    }

    public java.util.Set keySet()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap $r1;
        java.util.Set $r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: java.util.Set keySet()>();

        return $r2;
    }

    public int size()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: java.util.Map decoratedMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Collection remove(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        java.lang.Object r1, $r5;
        java.util.Collection r2, r3;
        java.util.Map $r4;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap $r6;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: java.util.Map decoratedMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (java.util.Collection) $r5;

        if r2 != null goto label1;

        return null;

     label1:
        $r6 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0>;

        r3 = virtualinvoke $r6.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: java.util.Collection createCollection()>();

        interfaceinvoke r3.<java.util.Collection: boolean addAll(java.util.Collection)>(r2);

        interfaceinvoke r2.<java.util.Collection: void clear()>();

        return r3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $r2 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: java.util.Map decoratedMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: java.util.Map decoratedMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        java.util.Map $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: java.util.Map decoratedMap>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public void clear()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap $r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0>;

        virtualinvoke $r1.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: void clear()>();

        return;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        java.lang.Object r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: java.util.Collection remove(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap r0;
        java.lang.Object r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap: java.util.Collection get(java.lang.Object)>(r1);

        return $r2;
    }
}
