public class org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet extends org.apache.commons.collections4.set.AbstractSetTest
{
    final org.apache.commons.collections4.map.AbstractMapTest this$0;

    public void <init>(org.apache.commons.collections4.map.AbstractMapTest)
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        org.apache.commons.collections4.map.AbstractMapTest r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractMapTest;

        r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0> = r1;

        specialinvoke r0.<org.apache.commons.collections4.set.AbstractSetTest: void <init>(java.lang.String)>("MapEntrySet");

        return;
    }

    public java.util.Map$Entry[] getFullElements()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        java.util.Map$Entry[] $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Map$Entry[] getFullNonNullElements()>();

        return $r1;
    }

    public java.util.Map$Entry[] getFullNonNullElements()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        java.lang.Object[] r1, r2;
        org.apache.commons.collections4.map.AbstractMapTest $r3, $r4, $r5;
        java.util.Map$Entry[] $r6;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r3 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        r1 = virtualinvoke $r3.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getSampleKeys()>();

        $r4 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        r2 = virtualinvoke $r4.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getSampleValues()>();

        $r5 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r6 = staticinvoke <org.apache.commons.collections4.map.AbstractMapTest: java.util.Map$Entry[] access$000(org.apache.commons.collections4.map.AbstractMapTest,java.lang.Object[],java.lang.Object[])>($r5, r1, r2);

        return $r6;
    }

    public java.util.Map$Entry[] getOtherElements()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        java.lang.Object[] r1, r2;
        org.apache.commons.collections4.map.AbstractMapTest $r3, $r4, $r5;
        java.util.Map$Entry[] $r6;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r3 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        r1 = virtualinvoke $r3.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getOtherKeys()>();

        $r4 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        r2 = virtualinvoke $r4.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getOtherValues()>();

        $r5 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r6 = staticinvoke <org.apache.commons.collections4.map.AbstractMapTest: java.util.Map$Entry[] access$000(org.apache.commons.collections4.map.AbstractMapTest,java.lang.Object[],java.lang.Object[])>($r5, r1, r2);

        return $r6;
    }

    public java.util.Set makeObject()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        java.util.Map $r2;
        java.util.Set $r3;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map makeObject()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        return $r3;
    }

    public java.util.Set makeFullCollection()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        java.util.Map $r2;
        java.util.Set $r3;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map makeFullMap()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        return $r3;
    }

    public boolean isAddSupported()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        return 0;
    }

    public boolean isRemoveSupported()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $z0 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: boolean isRemoveSupported()>();

        return $z0;
    }

    public boolean isGetStructuralModify()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $z0 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: boolean isGetStructuralModify()>();

        return $z0;
    }

    public boolean areEqualElementsDistinguishable()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $z0 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: boolean areEqualElementsDistinguishable()>();

        return $z0;
    }

    public boolean isTestSerialization()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        return 0;
    }

    public void resetFull()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1, $r2, $r5;
        java.util.Map $r3, $r6;
        java.util.Set $r4, $r7;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: void resetFull()>();

        $r2 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void setCollection(java.util.Collection)>($r4);

        $r5 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r6 = virtualinvoke $r5.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getConfirmed()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void setConfirmed(java.util.Collection)>($r7);

        return;
    }

    public void resetEmpty()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1, $r2, $r5;
        java.util.Map $r3, $r6;
        java.util.Set $r4, $r7;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: void resetEmpty()>();

        $r2 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void setCollection(java.util.Collection)>($r4);

        $r5 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r6 = virtualinvoke $r5.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getConfirmed()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void setConfirmed(java.util.Collection)>($r7);

        return;
    }

    public void testMapEntrySetIteratorEntry()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        java.util.Set $r3, $r4;
        boolean $z0, $z1, $z2, $z3;
        int $i0, i1;
        java.lang.Object $r5, $r8, $r11, $r14, $r15, $r16;
        org.apache.commons.collections4.map.AbstractMapTest $r6, $r9, $r12;
        java.util.Map $r7, $r10, $r13;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void resetFull()>();

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Set getCollection()>();

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        i1 = 0;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r5;

        $r6 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r7 = virtualinvoke $r6.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(boolean,boolean)>(1, $z1);

        $r9 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r10 = virtualinvoke $r9.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $r11 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = interfaceinvoke $r10.<java.util.Map: boolean containsValue(java.lang.Object)>($r11);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(boolean,boolean)>(1, $z2);

        $z3 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: boolean isGetStructuralModify()>();

        if $z3 != 0 goto label2;

        $r12 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r13 = virtualinvoke $r12.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $r14 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);

        $r16 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Set getCollection()>();

        $i0 = interfaceinvoke $r4.<java.util.Set: int size()>();

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(int,int)>($i0, i1);

        return;
    }

    public void testMapEntrySetIteratorEntrySetValue()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        java.lang.Object r1, r2, r3, $r29, $r32, $r37, $r38, $r41, $r44, $r49, $r50, $r53, $r56, $r61, $r62, $r69, $r70;
        java.util.Map$Entry r5, r6, r7, r8;
        org.apache.commons.collections4.map.AbstractMapTest $r10, $r12, $r14, $r16, $r18, $r20, $r26, $r30, $r33, $r35, $r42, $r45, $r47, $r54, $r57, $r59, $r64, $r66;
        java.lang.Object[] $r11, $r13, $r15, $r17, $r19, $r21, $r65, $r67;
        int $i0, $i1;
        java.util.Set $r22, $r23, $r24, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Map $r31, $r34, $r36, $r43, $r46, $r48, $r55, $r58, $r60;
        java.lang.UnsupportedOperationException $r68;
        java.util.Iterator r71, r72, r73, r74;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r10 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r11 = virtualinvoke $r10.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getSampleKeys()>();

        r1 = $r11[0];

        $r12 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r13 = virtualinvoke $r12.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getSampleKeys()>();

        $i0 = lengthof $r13;

        if $i0 != 1 goto label1;

        $r66 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r67 = virtualinvoke $r66.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getSampleKeys()>();

        $r69 = $r67[0];

        goto label2;

     label1:
        $r14 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r15 = virtualinvoke $r14.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getSampleKeys()>();

        $r69 = $r15[1];

     label2:
        r2 = $r69;

        $r16 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r17 = virtualinvoke $r16.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getNewSampleValues()>();

        r3 = $r17[0];

        $r18 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r19 = virtualinvoke $r18.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getNewSampleValues()>();

        $i1 = lengthof $r19;

        if $i1 != 1 goto label3;

        $r64 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r65 = virtualinvoke $r64.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getNewSampleValues()>();

        $r70 = $r65[0];

        goto label4;

     label3:
        $r20 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r21 = virtualinvoke $r20.<org.apache.commons.collections4.map.AbstractMapTest: java.lang.Object[] getNewSampleValues()>();

        $r70 = $r21[1];

     label4:
        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void resetFull()>();

        $r22 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Set getCollection()>();

        r71 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

        r5 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Map$Entry getEntry(java.util.Iterator,java.lang.Object)>(r71, r1);

        $r23 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Set getCollection()>();

        r72 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

        r6 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Map$Entry getEntry(java.util.Iterator,java.lang.Object)>(r72, r2);

        $r24 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Set getConfirmed()>();

        r73 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>();

        r7 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Map$Entry getEntry(java.util.Iterator,java.lang.Object)>(r73, r1);

        $r25 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Set getConfirmed()>();

        r74 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>();

        r8 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Map$Entry getEntry(java.util.Iterator,java.lang.Object)>(r74, r2);

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void verify()>();

        $r26 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $z0 = virtualinvoke $r26.<org.apache.commons.collections4.map.AbstractMapTest: boolean isSetValueSupported()>();

        if $z0 != 0 goto label9;

     label5:
        interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(r3);

     label6:
        goto label8;

     label7:
        $r68 := @caughtexception;

     label8:
        return;

     label9:
        interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(r3);

        interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(r3);

        $r29 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(java.lang.Object,java.lang.Object)>(r3, $r29);

        $r30 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r31 = virtualinvoke $r30.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $r32 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = interfaceinvoke $r31.<java.util.Map: boolean containsKey(java.lang.Object)>($r32);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(boolean,boolean)>(1, $z1);

        $r33 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r34 = virtualinvoke $r33.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $z2 = interfaceinvoke $r34.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(boolean,boolean)>(1, $z2);

        $r35 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r36 = virtualinvoke $r35.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $r37 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r38 = interfaceinvoke $r36.<java.util.Map: java.lang.Object get(java.lang.Object)>($r37);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(java.lang.Object,java.lang.Object)>(r3, $r38);

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void verify()>();

        interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(r3);

        interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(r3);

        $r41 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(java.lang.Object,java.lang.Object)>(r3, $r41);

        $r42 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r43 = virtualinvoke $r42.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $r44 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z3 = interfaceinvoke $r43.<java.util.Map: boolean containsKey(java.lang.Object)>($r44);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(boolean,boolean)>(1, $z3);

        $r45 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r46 = virtualinvoke $r45.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $z4 = interfaceinvoke $r46.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(boolean,boolean)>(1, $z4);

        $r47 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r48 = virtualinvoke $r47.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $r49 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r50 = interfaceinvoke $r48.<java.util.Map: java.lang.Object get(java.lang.Object)>($r49);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(java.lang.Object,java.lang.Object)>(r3, $r50);

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void verify()>();

        interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r70);

        interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r70);

        $r53 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(java.lang.Object,java.lang.Object)>($r70, $r53);

        $r54 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r55 = virtualinvoke $r54.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $r56 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z5 = interfaceinvoke $r55.<java.util.Map: boolean containsKey(java.lang.Object)>($r56);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(boolean,boolean)>(1, $z5);

        $r57 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r58 = virtualinvoke $r57.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $z6 = interfaceinvoke $r58.<java.util.Map: boolean containsValue(java.lang.Object)>($r70);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(boolean,boolean)>(1, $z6);

        $r59 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        $r60 = virtualinvoke $r59.<org.apache.commons.collections4.map.AbstractMapTest: java.util.Map getMap()>();

        $r61 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r62 = interfaceinvoke $r60.<java.util.Map: java.lang.Object get(java.lang.Object)>($r61);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(java.lang.Object,java.lang.Object)>($r70, $r62);

        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void verify()>();

        return;

        catch java.lang.UnsupportedOperationException from label5 to label6 with label7;
    }

    public java.util.Map$Entry getEntry(java.util.Iterator, java.lang.Object)
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        java.util.Iterator r1;
        java.lang.Object r2, $r4, $r5, $r6;
        java.util.Map$Entry r3, r7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: java.lang.Object;

        r7 = null;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r4;

        $r5 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r5 != null goto label2;

        if r2 != null goto label3;

        r7 = r3;

        goto label4;

     label2:
        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

        r7 = r3;

        goto label4;

     label3:
        goto label1;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No matching entry in map for key \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertNotNull(java.lang.String,java.lang.Object)>($r12, r7);

        return r7;
    }

    public void testMapEntrySetRemoveNonMapEntry()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        boolean $z0, $z1, $z2;
        java.util.Set $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: boolean isRemoveSupported()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void resetFull()>();

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Set getCollection()>();

        $z1 = interfaceinvoke $r1.<java.util.Set: boolean remove(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(boolean,boolean)>(0, $z1);

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Set getCollection()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        $z2 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r3);

        staticinvoke <org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: void assertEquals(boolean,boolean)>(0, $z2);

        return;
    }

    public void verify()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        org.apache.commons.collections4.map.AbstractMapTest $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        specialinvoke r0.<org.apache.commons.collections4.set.AbstractSetTest: void verify()>();

        $r1 = r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: org.apache.commons.collections4.map.AbstractMapTest this$0>;

        virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractMapTest: void verify()>();

        return;
    }

    public volatile java.lang.Object[] getFullNonNullElements()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        java.util.Map$Entry[] $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Map$Entry[] getFullNonNullElements()>();

        return $r1;
    }

    public volatile java.lang.Object[] getOtherElements()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        java.util.Map$Entry[] $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Map$Entry[] getOtherElements()>();

        return $r1;
    }

    public volatile java.lang.Object[] getFullElements()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        java.util.Map$Entry[] $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Map$Entry[] getFullElements()>();

        return $r1;
    }

    public volatile java.util.Collection makeFullCollection()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Set makeFullCollection()>();

        return $r1;
    }

    public volatile java.util.Collection makeObject()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Set makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet: java.util.Set makeObject()>();

        return $r1;
    }
}
