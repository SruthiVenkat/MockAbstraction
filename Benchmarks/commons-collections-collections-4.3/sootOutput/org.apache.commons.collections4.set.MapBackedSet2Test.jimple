public class org.apache.commons.collections4.set.MapBackedSet2Test extends org.apache.commons.collections4.set.AbstractSetTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.set.MapBackedSet2Test r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.set.MapBackedSet2Test;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.set.AbstractSetTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public java.util.Set makeObject()
    {
        org.apache.commons.collections4.set.MapBackedSet2Test r0;
        org.apache.commons.collections4.map.LinkedMap $r1;
        org.apache.commons.collections4.set.MapBackedSet $r2;

        r0 := @this: org.apache.commons.collections4.set.MapBackedSet2Test;

        $r1 = new org.apache.commons.collections4.map.LinkedMap;

        specialinvoke $r1.<org.apache.commons.collections4.map.LinkedMap: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.collections4.set.MapBackedSet: org.apache.commons.collections4.set.MapBackedSet mapBackedSet(java.util.Map)>($r1);

        return $r2;
    }

    protected java.util.Set setupSet()
    {
        org.apache.commons.collections4.set.MapBackedSet2Test r0;
        java.util.Set r1;
        java.lang.String $r2;
        int i0;

        r0 := @this: org.apache.commons.collections4.set.MapBackedSet2Test;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.set.MapBackedSet2Test: java.util.Set makeObject()>();

        i0 = 0;

     label1:
        if i0 >= 10 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    public void testOrdering()
    {
        org.apache.commons.collections4.set.MapBackedSet2Test r0;
        java.util.Set r1;
        int $i0, i1, i2, i3, i4, i5, i6;
        java.lang.String $r2, $r4, $r6, $r7, $r9, $r10;
        java.lang.Object $r3, $r5, $r8, $r11;
        boolean $z1;
        java.util.Iterator r12, r13, r14;

        r0 := @this: org.apache.commons.collections4.set.MapBackedSet2Test;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.set.MapBackedSet2Test: java.util.Set setupSet()>();

        r12 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

        i1 = 0;

     label01:
        if i1 >= 10 goto label02;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        $r11 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.set.MapBackedSet2Test: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Sequence is wrong", $r10, $r11);

        i1 = i1 + 1;

        goto label01;

     label02:
        i2 = 0;

     label03:
        if i2 >= 10 goto label04;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        $z1 = interfaceinvoke r1.<java.util.Set: boolean remove(java.lang.Object)>($r9);

        staticinvoke <org.apache.commons.collections4.set.MapBackedSet2Test: void assertTrue(java.lang.String,boolean)>("Must be able to remove int", $z1);

        i2 = i2 + 2;

        goto label03;

     label04:
        r13 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

        i3 = 1;

     label05:
        if i3 >= 10 goto label06;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

        $r8 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.set.MapBackedSet2Test: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Sequence is wrong after remove ", $r7, $r8);

        i3 = i3 + 2;

        goto label05;

     label06:
        i4 = 0;

     label07:
        if i4 >= 10 goto label08;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i4);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r6);

        i4 = i4 + 1;

        goto label07;

     label08:
        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        staticinvoke <org.apache.commons.collections4.set.MapBackedSet2Test: void assertEquals(java.lang.String,int,int)>("Size of set is wrong!", 10, $i0);

        r14 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

        i5 = 1;

     label09:
        if i5 >= 10 goto label10;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i5);

        $r5 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.set.MapBackedSet2Test: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Sequence is wrong", $r4, $r5);

        i5 = i5 + 2;

        goto label09;

     label10:
        i6 = 0;

     label11:
        if i6 >= 10 goto label12;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i6);

        $r3 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.set.MapBackedSet2Test: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Sequence is wrong", $r2, $r3);

        i6 = i6 + 2;

        goto label11;

     label12:
        return;
    }

    public void testCanonicalEmptyCollectionExists()
    {
        org.apache.commons.collections4.set.MapBackedSet2Test r0;

        r0 := @this: org.apache.commons.collections4.set.MapBackedSet2Test;

        return;
    }

    public void testCanonicalFullCollectionExists()
    {
        org.apache.commons.collections4.set.MapBackedSet2Test r0;

        r0 := @this: org.apache.commons.collections4.set.MapBackedSet2Test;

        return;
    }

    public volatile java.util.Collection makeObject()
    {
        org.apache.commons.collections4.set.MapBackedSet2Test r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.set.MapBackedSet2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.set.MapBackedSet2Test: java.util.Set makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.set.MapBackedSet2Test r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.set.MapBackedSet2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.set.MapBackedSet2Test: java.util.Set makeObject()>();

        return $r1;
    }
}
