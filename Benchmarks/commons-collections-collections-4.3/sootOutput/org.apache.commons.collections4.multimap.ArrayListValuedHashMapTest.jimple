public class org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest extends org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.BulkTest: junit.framework.TestSuite makeSuite(java.lang.Class)>(class "Lorg/apache/commons/collections4/multimap/ArrayListValuedHashMapTest;");

        return $r0;
    }

    public org.apache.commons.collections4.ListValuedMap makeObject()
    {
        org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest r0;
        org.apache.commons.collections4.multimap.ArrayListValuedHashMap $r1;

        r0 := @this: org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest;

        $r1 = new org.apache.commons.collections4.multimap.ArrayListValuedHashMap;

        specialinvoke $r1.<org.apache.commons.collections4.multimap.ArrayListValuedHashMap: void <init>()>();

        return $r1;
    }

    public void testListValuedMapAdd()
    {
        org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest r0;
        org.apache.commons.collections4.ListValuedMap r1;
        java.util.List r2, $r3;
        boolean $z0, $z2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: org.apache.commons.collections4.ListValuedMap makeObject()>();

        $r3 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: java.util.List get(java.lang.Object)>("whatever");

        $z0 = $r3 instanceof java.util.List;

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertTrue(boolean)>($z0);

        r2 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: java.util.List get(java.lang.Object)>("A");

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("a1");

        $i0 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(int,int)>(1, $i0);

        $z2 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: boolean containsKey(java.lang.Object)>("A");

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertTrue(boolean)>($z2);

        return;
    }

    public void testListValuedMapAddViaListIterator()
    {
        org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest r0;
        org.apache.commons.collections4.ListValuedMap r1;
        java.util.ListIterator r2;
        java.util.List $r3;
        boolean $z0, $z1, $z2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: org.apache.commons.collections4.ListValuedMap makeObject()>();

        $r3 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: java.util.List get(java.lang.Object)>("B");

        r2 = interfaceinvoke $r3.<java.util.List: java.util.ListIterator listIterator()>();

        $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertFalse(boolean)>($z0);

        interfaceinvoke r2.<java.util.ListIterator: void add(java.lang.Object)>("b1");

        interfaceinvoke r2.<java.util.ListIterator: void add(java.lang.Object)>("b2");

        interfaceinvoke r2.<java.util.ListIterator: void add(java.lang.Object)>("b3");

        $i0 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(int,int)>(3, $i0);

        $z1 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: boolean containsKey(java.lang.Object)>("B");

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertTrue(boolean)>($z1);

        $z2 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertFalse(boolean)>($z2);

        return;
    }

    public void testListValuedMapRemove()
    {
        org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest r0;
        org.apache.commons.collections4.ListValuedMap r1;
        java.util.List r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3, $r4, $r5;
        boolean $z3;

        r0 := @this: org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: org.apache.commons.collections4.ListValuedMap makeObject()>();

        r2 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: java.util.List get(java.lang.Object)>("A");

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("a1");

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("a2");

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("a3");

        $i0 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(int,int)>(3, $i0);

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(0);

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("a1", $r3);

        $i1 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(int,int)>(2, $i1);

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(0);

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("a2", $r4);

        $i2 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(int,int)>(1, $i2);

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(0);

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("a3", $r5);

        $i3 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(int,int)>(0, $i3);

        $z3 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: boolean containsKey(java.lang.Object)>("A");

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertFalse(boolean)>($z3);

        return;
    }

    public void testListValuedMapRemoveViaListIterator()
    {
        org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest r0;
        org.apache.commons.collections4.ListValuedMap r1;
        java.util.List $r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        java.util.ListIterator r6, r7;

        r0 := @this: org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: org.apache.commons.collections4.ListValuedMap makeObject()>();

        $r2 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: java.util.List get(java.lang.Object)>("B");

        r6 = interfaceinvoke $r2.<java.util.List: java.util.ListIterator listIterator()>();

        interfaceinvoke r6.<java.util.ListIterator: void add(java.lang.Object)>("b1");

        interfaceinvoke r6.<java.util.ListIterator: void add(java.lang.Object)>("b2");

        $i0 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(int,int)>(2, $i0);

        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: boolean containsKey(java.lang.Object)>("B");

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertTrue(boolean)>($z0);

        $r3 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: java.util.List get(java.lang.Object)>("B");

        r7 = interfaceinvoke $r3.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $z1 = interfaceinvoke r7.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        interfaceinvoke r7.<java.util.ListIterator: java.lang.Object next()>();

        interfaceinvoke r7.<java.util.ListIterator: void remove()>();

        goto label1;

     label2:
        $z2 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: boolean containsKey(java.lang.Object)>("B");

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertFalse(boolean)>($z2);

        interfaceinvoke r7.<java.util.ListIterator: void add(java.lang.Object)>("b1");

        interfaceinvoke r7.<java.util.ListIterator: void add(java.lang.Object)>("b2");

        $z3 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: boolean containsKey(java.lang.Object)>("B");

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertTrue(boolean)>($z3);

        $r4 = interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: java.util.List get(java.lang.Object)>("B");

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(int,int)>(2, $i1);

        return;
    }

    public void testEqualsHashCodeContract()
    {
        org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest r0;
        org.apache.commons.collections4.ListValuedMap r1, r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r3, $r4;

        r0 := @this: org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: org.apache.commons.collections4.ListValuedMap makeObject()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: org.apache.commons.collections4.ListValuedMap makeObject()>();

        interfaceinvoke r1.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("a", "a1");

        interfaceinvoke r1.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("a", "a2");

        interfaceinvoke r2.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("a", "a1");

        interfaceinvoke r2.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("a", "a2");

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r2);

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(int,int)>($i0, $i1);

        interfaceinvoke r2.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("a", "a2");

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertNotSame(java.lang.Object,java.lang.Object)>(r1, r2);

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i3 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertNotSame(java.lang.Object,java.lang.Object)>($r3, $r4);

        return;
    }

    public void testListValuedMapEqualsHashCodeContract()
    {
        org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest r0;
        org.apache.commons.collections4.ListValuedMap r1, r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r3, $r4;

        r0 := @this: org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: org.apache.commons.collections4.ListValuedMap makeObject()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: org.apache.commons.collections4.ListValuedMap makeObject()>();

        interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: boolean put(java.lang.Object,java.lang.Object)>("a", "a1");

        interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: boolean put(java.lang.Object,java.lang.Object)>("a", "a2");

        interfaceinvoke r2.<org.apache.commons.collections4.ListValuedMap: boolean put(java.lang.Object,java.lang.Object)>("a", "a1");

        interfaceinvoke r2.<org.apache.commons.collections4.ListValuedMap: boolean put(java.lang.Object,java.lang.Object)>("a", "a2");

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r2);

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertEquals(int,int)>($i0, $i1);

        interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: boolean put(java.lang.Object,java.lang.Object)>("b", "b1");

        interfaceinvoke r1.<org.apache.commons.collections4.ListValuedMap: boolean put(java.lang.Object,java.lang.Object)>("b", "b2");

        interfaceinvoke r2.<org.apache.commons.collections4.ListValuedMap: boolean put(java.lang.Object,java.lang.Object)>("b", "b2");

        interfaceinvoke r2.<org.apache.commons.collections4.ListValuedMap: boolean put(java.lang.Object,java.lang.Object)>("b", "b1");

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertNotSame(java.lang.Object,java.lang.Object)>(r1, r2);

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i3 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        staticinvoke <org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: void assertNotSame(java.lang.Object,java.lang.Object)>($r3, $r4);

        return;
    }

    public volatile org.apache.commons.collections4.MultiValuedMap makeObject()
    {
        org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest r0;
        org.apache.commons.collections4.ListValuedMap $r1;

        r0 := @this: org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: org.apache.commons.collections4.ListValuedMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest r0;
        org.apache.commons.collections4.ListValuedMap $r1;

        r0 := @this: org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest: org.apache.commons.collections4.ListValuedMap makeObject()>();

        return $r1;
    }
}
