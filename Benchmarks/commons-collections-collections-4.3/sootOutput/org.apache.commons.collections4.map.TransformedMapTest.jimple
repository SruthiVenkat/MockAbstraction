public class org.apache.commons.collections4.map.TransformedMapTest extends org.apache.commons.collections4.map.AbstractIterableMapTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.map.TransformedMapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.map.TransformedMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public org.apache.commons.collections4.IterableMap makeObject()
    {
        org.apache.commons.collections4.map.TransformedMapTest r0;
        java.util.HashMap $r1;
        org.apache.commons.collections4.Transformer $r2, $r3;
        org.apache.commons.collections4.map.TransformedMap $r4;

        r0 := @this: org.apache.commons.collections4.map.TransformedMapTest;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>();

        $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>();

        $r4 = staticinvoke <org.apache.commons.collections4.map.TransformedMap: org.apache.commons.collections4.map.TransformedMap transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r1, $r2, $r3);

        return $r4;
    }

    public void testTransformedMap()
    {
        org.apache.commons.collections4.map.TransformedMapTest r0;
        java.util.Map$Entry[] r2, $r21;
        java.util.Map$Entry r3, $r23, $r26, $r29;
        java.lang.Object[] $r4, $r22;
        java.util.HashMap $r5, $r14;
        org.apache.commons.collections4.Transformer $r6, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.lang.Object $r7, $r8, $r9, $r11, $r13, $r16, $r19, $r20, $r27, $r30, $r31, $r33, $r36, $r38, $r39, $r40, $r41, $r43, $r46, $r47, $r48, $r51, $r52, $r53, $r54, $r56, $r59, $r60, $r61, $r63, $r65;
        java.lang.String $r10, $r17, $r44, $r49, $r57, $r62;
        java.lang.Integer $r12, $r18, $r25, $r28, $r35, $r37, $r45, $r50, $r58, $r64;
        java.util.Iterator $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.commons.collections4.map.TransformedMap r66, r67;
        java.util.Set r68;

        r0 := @this: org.apache.commons.collections4.map.TransformedMapTest;

        $r4 = newarray (java.lang.Object)[7];

        $r4[0] = "1";

        $r4[1] = "3";

        $r4[2] = "5";

        $r4[3] = "7";

        $r4[4] = "2";

        $r4[5] = "4";

        $r4[6] = "6";

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r6 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer STRING_TO_INTEGER_TRANSFORMER>;

        r66 = staticinvoke <org.apache.commons.collections4.map.TransformedMap: org.apache.commons.collections4.map.TransformedMap transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r5, $r6, null);

        $i0 = interfaceinvoke r66.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(int,int)>(0, $i0);

        i8 = 0;

     label1:
        $i1 = lengthof $r4;

        if i8 >= $i1 goto label2;

        $r54 = $r4[i8];

        $r53 = $r4[i8];

        interfaceinvoke r66.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r54, $r53);

        $i6 = i8 + 1;

        $i7 = interfaceinvoke r66.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(int,int)>($i6, $i7);

        $r56 = $r4[i8];

        $r57 = (java.lang.String) $r56;

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r57);

        $z3 = interfaceinvoke r66.<java.util.Map: boolean containsKey(java.lang.Object)>($r58);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(boolean,boolean)>(1, $z3);

        $r59 = $r4[i8];

        $z4 = interfaceinvoke r66.<java.util.Map: boolean containsKey(java.lang.Object)>($r59);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(boolean,boolean)>(0, $z4);

        $r60 = $r4[i8];

        $z5 = interfaceinvoke r66.<java.util.Map: boolean containsValue(java.lang.Object)>($r60);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(boolean,boolean)>(1, $z5);

        $r63 = $r4[i8];

        $r61 = $r4[i8];

        $r62 = (java.lang.String) $r61;

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r62);

        $r65 = interfaceinvoke r66.<java.util.Map: java.lang.Object get(java.lang.Object)>($r64);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r63, $r65);

        i8 = i8 + 1;

        goto label1;

     label2:
        $r7 = $r4[0];

        $r8 = interfaceinvoke r66.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r7);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r8);

        $r11 = $r4[0];

        $r9 = $r4[0];

        $r10 = (java.lang.String) $r9;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r10);

        $r13 = interfaceinvoke r66.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r13);

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        $r15 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer STRING_TO_INTEGER_TRANSFORMER>;

        r67 = staticinvoke <org.apache.commons.collections4.map.TransformedMap: org.apache.commons.collections4.map.TransformedMap transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r14, null, $r15);

        $i2 = interfaceinvoke r67.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(int,int)>(0, $i2);

        i9 = 0;

     label3:
        $i3 = lengthof $r4;

        if i9 >= $i3 goto label4;

        $r41 = $r4[i9];

        $r40 = $r4[i9];

        interfaceinvoke r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, $r40);

        $i4 = i9 + 1;

        $i5 = interfaceinvoke r67.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(int,int)>($i4, $i5);

        $r43 = $r4[i9];

        $r44 = (java.lang.String) $r43;

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r44);

        $z0 = interfaceinvoke r67.<java.util.Map: boolean containsValue(java.lang.Object)>($r45);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r46 = $r4[i9];

        $z1 = interfaceinvoke r67.<java.util.Map: boolean containsValue(java.lang.Object)>($r46);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(boolean,boolean)>(0, $z1);

        $r47 = $r4[i9];

        $z2 = interfaceinvoke r67.<java.util.Map: boolean containsKey(java.lang.Object)>($r47);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(boolean,boolean)>(1, $z2);

        $r48 = $r4[i9];

        $r49 = (java.lang.String) $r48;

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r49);

        $r51 = $r4[i9];

        $r52 = interfaceinvoke r67.<java.util.Map: java.lang.Object get(java.lang.Object)>($r51);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r50, $r52);

        i9 = i9 + 1;

        goto label3;

     label4:
        $r16 = $r4[0];

        $r17 = (java.lang.String) $r16;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r17);

        $r19 = $r4[0];

        $r20 = interfaceinvoke r67.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r19);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r20);

        r68 = interfaceinvoke r67.<java.util.Map: java.util.Set entrySet()>();

        $r21 = newarray (java.util.Map$Entry)[0];

        $r22 = interfaceinvoke r68.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r21);

        r2 = (java.util.Map$Entry[]) $r22;

        $r23 = r2[0];

        interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("66");

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(66);

        $r26 = r2[0];

        $r27 = interfaceinvoke $r26.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r25, $r27);

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(66);

        $r29 = r2[0];

        $r30 = interfaceinvoke $r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = interfaceinvoke r67.<java.util.Map: java.lang.Object get(java.lang.Object)>($r30);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r31);

        $r32 = interfaceinvoke r68.<java.util.Set: java.util.Iterator iterator()>();

        $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r33;

        interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("88");

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(88);

        $r36 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r35, $r36);

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(88);

        $r38 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r39 = interfaceinvoke r67.<java.util.Map: java.lang.Object get(java.lang.Object)>($r38);

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r37, $r39);

        return;
    }

    public void testFactory_Decorate()
    {
        org.apache.commons.collections4.map.TransformedMapTest r0;
        org.apache.commons.collections4.map.TransformedMap r2;
        java.util.HashMap $r3;
        org.apache.commons.collections4.Transformer $r7;
        int $i0;
        java.lang.Object $r8, $r9, $r10, $r13;
        java.lang.Integer $r12;

        r0 := @this: org.apache.commons.collections4.map.TransformedMapTest;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("A", "1");

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("B", "2");

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("C", "3");

        $r7 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer STRING_TO_INTEGER_TRANSFORMER>;

        r2 = staticinvoke <org.apache.commons.collections4.map.TransformedMap: org.apache.commons.collections4.map.TransformedMap transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r3, null, $r7);

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(int,int)>(3, $i0);

        $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("A");

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("1", $r8);

        $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("B");

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("2", $r9);

        $r10 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("C");

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("3", $r10);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("D", "4");

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r13 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("D");

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13);

        return;
    }

    public void testFactory_decorateTransform()
    {
        org.apache.commons.collections4.map.TransformedMapTest r0;
        org.apache.commons.collections4.map.TransformedMap r2;
        java.util.HashMap $r3;
        org.apache.commons.collections4.Transformer $r7;
        int $i0;
        java.lang.Integer $r8, $r10, $r12, $r15;
        java.lang.Object $r9, $r11, $r13, $r16;

        r0 := @this: org.apache.commons.collections4.map.TransformedMapTest;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("A", "1");

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("B", "2");

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("C", "3");

        $r7 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer STRING_TO_INTEGER_TRANSFORMER>;

        r2 = staticinvoke <org.apache.commons.collections4.map.TransformedMap: org.apache.commons.collections4.map.TransformedMap transformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r3, null, $r7);

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(int,int)>(3, $i0);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("A");

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r11 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("B");

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r13 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("C");

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("D", "4");

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r16 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("D");

        staticinvoke <org.apache.commons.collections4.map.TransformedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16);

        return;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.map.TransformedMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.TransformedMapTest;

        return "4";
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.TransformedMapTest r0;
        org.apache.commons.collections4.IterableMap $r1;

        r0 := @this: org.apache.commons.collections4.map.TransformedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.TransformedMapTest: org.apache.commons.collections4.IterableMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.TransformedMapTest r0;
        org.apache.commons.collections4.IterableMap $r1;

        r0 := @this: org.apache.commons.collections4.map.TransformedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.TransformedMapTest: org.apache.commons.collections4.IterableMap makeObject()>();

        return $r1;
    }
}
