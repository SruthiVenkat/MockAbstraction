public class org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator extends org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator implements org.apache.commons.collections4.OrderedMapIterator, org.apache.commons.collections4.ResettableIterator
{

    protected void <init>(org.apache.commons.collections4.map.AbstractLinkedMap)
    {
        org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator r0;
        org.apache.commons.collections4.map.AbstractLinkedMap r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractLinkedMap;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator: void <init>(org.apache.commons.collections4.map.AbstractLinkedMap)>(r1);

        return;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator r0;
        org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator: org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry: java.lang.Object getKey()>();

        return $r2;
    }

    public java.lang.Object previous()
    {
        org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator r0;
        org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator: org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry previousEntry()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry: java.lang.Object getKey()>();

        return $r2;
    }

    public java.lang.Object getKey()
    {
        org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator r0;
        org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry r1;
        java.lang.Object $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator: org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getKey() can only be called after next() and before remove()");

        throw $r3;

     label1:
        $r2 = virtualinvoke r1.<org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry: java.lang.Object getKey()>();

        return $r2;
    }

    public java.lang.Object getValue()
    {
        org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator r0;
        org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry r1;
        java.lang.Object $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator: org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getValue() can only be called after next() and before remove()");

        throw $r3;

     label1:
        $r2 = virtualinvoke r1.<org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry: java.lang.Object getValue()>();

        return $r2;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator r0;
        java.lang.Object r1, $r3;
        org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator;

        r1 := @parameter0: java.lang.Object;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator: org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()>();

        if r2 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setValue() can only be called after next() and before remove()");

        throw $r4;

     label1:
        $r3 = virtualinvoke r2.<org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry: java.lang.Object setValue(java.lang.Object)>(r1);

        return $r3;
    }
}
