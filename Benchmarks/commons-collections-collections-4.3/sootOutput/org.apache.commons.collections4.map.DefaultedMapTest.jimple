public class org.apache.commons.collections4.map.DefaultedMapTest extends org.apache.commons.collections4.map.AbstractIterableMapTest
{
    protected final org.apache.commons.collections4.Factory nullFactory;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.map.DefaultedMapTest r0;
        java.lang.String r1;
        org.apache.commons.collections4.Factory $r2;

        r0 := @this: org.apache.commons.collections4.map.DefaultedMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMapTest: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>();

        r0.<org.apache.commons.collections4.map.DefaultedMapTest: org.apache.commons.collections4.Factory nullFactory> = $r2;

        return;
    }

    public org.apache.commons.collections4.IterableMap makeObject()
    {
        org.apache.commons.collections4.map.DefaultedMapTest r0;
        java.util.HashMap $r1;
        org.apache.commons.collections4.Factory $r2;
        org.apache.commons.collections4.map.DefaultedMap $r3;

        r0 := @this: org.apache.commons.collections4.map.DefaultedMapTest;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = r0.<org.apache.commons.collections4.map.DefaultedMapTest: org.apache.commons.collections4.Factory nullFactory>;

        $r3 = staticinvoke <org.apache.commons.collections4.map.DefaultedMap: org.apache.commons.collections4.map.DefaultedMap defaultedMap(java.util.Map,org.apache.commons.collections4.Factory)>($r1, $r2);

        return $r3;
    }

    public void testMapGet()
    {
        org.apache.commons.collections4.map.DefaultedMapTest r0;
        org.apache.commons.collections4.map.DefaultedMap $r2;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        java.lang.Object $r3, $r5, $r6;

        r0 := @this: org.apache.commons.collections4.map.DefaultedMapTest;

        $r2 = new org.apache.commons.collections4.map.DefaultedMap;

        specialinvoke $r2.<org.apache.commons.collections4.map.DefaultedMap: void <init>(java.lang.Object)>("NULL");

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(0, $i0);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(boolean,boolean)>(0, $z0);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NULL", $r3);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Key", "Value");

        $i1 = interfaceinvoke $r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(1, $i1);

        $z1 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("Key");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("Key");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("Value", $r5);

        $z2 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(boolean,boolean)>(0, $z2);

        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NULL", $r6);

        return;
    }

    public void testMapGet2()
    {
        org.apache.commons.collections4.map.DefaultedMapTest r0;
        org.apache.commons.collections4.map.DefaultedMap r2;
        java.util.HashMap $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4, $r6, $r7;

        r0 := @this: org.apache.commons.collections4.map.DefaultedMapTest;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r2 = staticinvoke <org.apache.commons.collections4.map.DefaultedMap: org.apache.commons.collections4.map.DefaultedMap defaultedMap(java.util.Map,java.lang.Object)>($r3, "NULL");

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(0, $i0);

        $i1 = virtualinvoke $r3.<java.util.HashMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(0, $i1);

        $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(boolean,boolean)>(0, $z0);

        $r4 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NULL", $r4);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Key", "Value");

        $i2 = interfaceinvoke r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(1, $i2);

        $i3 = virtualinvoke $r3.<java.util.HashMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(1, $i3);

        $z1 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("Key");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("Key");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("Value", $r6);

        $z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(boolean,boolean)>(0, $z2);

        $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NULL", $r7);

        return;
    }

    public void testMapGet3()
    {
        org.apache.commons.collections4.map.DefaultedMapTest r0;
        org.apache.commons.collections4.map.DefaultedMap r2;
        java.util.HashMap $r3;
        org.apache.commons.collections4.Factory $r4;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5, $r7, $r8;

        r0 := @this: org.apache.commons.collections4.map.DefaultedMapTest;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = staticinvoke <org.apache.commons.collections4.functors.ConstantFactory: org.apache.commons.collections4.Factory constantFactory(java.lang.Object)>("NULL");

        r2 = staticinvoke <org.apache.commons.collections4.map.DefaultedMap: org.apache.commons.collections4.map.DefaultedMap defaultedMap(java.util.Map,org.apache.commons.collections4.Factory)>($r3, $r4);

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(0, $i0);

        $i1 = virtualinvoke $r3.<java.util.HashMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(0, $i1);

        $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(boolean,boolean)>(0, $z0);

        $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NULL", $r5);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Key", "Value");

        $i2 = interfaceinvoke r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(1, $i2);

        $i3 = virtualinvoke $r3.<java.util.HashMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(1, $i3);

        $z1 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("Key");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("Key");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("Value", $r7);

        $z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(boolean,boolean)>(0, $z2);

        $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NULL", $r8);

        return;
    }

    public void testMapGet4()
    {
        org.apache.commons.collections4.map.DefaultedMapTest r0;
        java.util.Map r2;
        java.util.HashMap $r3;
        org.apache.commons.collections4.map.DefaultedMapTest$1 $r4;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5, $r7, $r9, $r10, $r12;
        java.lang.Integer $r6, $r11;

        r0 := @this: org.apache.commons.collections4.map.DefaultedMapTest;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = new org.apache.commons.collections4.map.DefaultedMapTest$1;

        specialinvoke $r4.<org.apache.commons.collections4.map.DefaultedMapTest$1: void <init>(org.apache.commons.collections4.map.DefaultedMapTest)>(r0);

        r2 = staticinvoke <org.apache.commons.collections4.map.DefaultedMap: java.util.Map defaultedMap(java.util.Map,org.apache.commons.collections4.Transformer)>($r3, $r4);

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(0, $i0);

        $i1 = virtualinvoke $r3.<java.util.HashMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(0, $i1);

        $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(boolean,boolean)>(0, $z0);

        $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NULL", $r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NULL_OBJECT", $r7);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Key", "Value");

        $i2 = interfaceinvoke r2.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(1, $i2);

        $i3 = virtualinvoke $r3.<java.util.HashMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(int,int)>(1, $i3);

        $z1 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("Key");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("Key");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("Value", $r9);

        $z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(boolean,boolean)>(0, $z2);

        $r10 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("NotInMap");

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NULL", $r10);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r12 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        staticinvoke <org.apache.commons.collections4.map.DefaultedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("NULL_OBJECT", $r12);

        return;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.map.DefaultedMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.DefaultedMapTest;

        return "4";
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.DefaultedMapTest r0;
        org.apache.commons.collections4.IterableMap $r1;

        r0 := @this: org.apache.commons.collections4.map.DefaultedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.DefaultedMapTest: org.apache.commons.collections4.IterableMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.DefaultedMapTest r0;
        org.apache.commons.collections4.IterableMap $r1;

        r0 := @this: org.apache.commons.collections4.map.DefaultedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.DefaultedMapTest: org.apache.commons.collections4.IterableMap makeObject()>();

        return $r1;
    }
}
