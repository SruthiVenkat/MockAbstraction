public class org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet extends org.apache.commons.collections4.set.AbstractSetTest
{
    final org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0;

    public void <init>(org.apache.commons.collections4.multiset.AbstractMultiSetTest)
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;
        org.apache.commons.collections4.multiset.AbstractMultiSetTest r1;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        r1 := @parameter0: org.apache.commons.collections4.multiset.AbstractMultiSetTest;

        r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0> = r1;

        specialinvoke r0.<org.apache.commons.collections4.set.AbstractSetTest: void <init>(java.lang.String)>("");

        return;
    }

    public java.lang.Object[] getFullElements()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;
        org.apache.commons.collections4.multiset.AbstractMultiSetTest $r1;
        java.lang.Object[] $r2;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        $r1 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.multiset.AbstractMultiSetTest: java.lang.Object[] getFullElements()>();

        return $r2;
    }

    public java.lang.Object[] getOtherElements()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;
        org.apache.commons.collections4.multiset.AbstractMultiSetTest $r1;
        java.lang.Object[] $r2;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        $r1 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.multiset.AbstractMultiSetTest: java.lang.Object[] getOtherElements()>();

        return $r2;
    }

    public java.util.Set makeObject()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;
        org.apache.commons.collections4.multiset.AbstractMultiSetTest $r1;
        org.apache.commons.collections4.MultiSet $r2;
        java.util.Set $r3;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        $r1 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.multiset.AbstractMultiSetTest: org.apache.commons.collections4.MultiSet makeObject()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.MultiSet: java.util.Set uniqueSet()>();

        return $r3;
    }

    public java.util.Set makeFullCollection()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;
        org.apache.commons.collections4.multiset.AbstractMultiSetTest $r1;
        org.apache.commons.collections4.MultiSet $r2;
        java.util.Set $r3;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        $r1 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.multiset.AbstractMultiSetTest: org.apache.commons.collections4.MultiSet makeFullCollection()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.MultiSet: java.util.Set uniqueSet()>();

        return $r3;
    }

    public boolean isNullSupported()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;
        org.apache.commons.collections4.multiset.AbstractMultiSetTest $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        $r1 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0>;

        $z0 = virtualinvoke $r1.<org.apache.commons.collections4.multiset.AbstractMultiSetTest: boolean isNullSupported()>();

        return $z0;
    }

    public boolean isAddSupported()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        return 0;
    }

    public boolean isRemoveSupported()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;
        org.apache.commons.collections4.multiset.AbstractMultiSetTest $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        $r1 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0>;

        $z0 = virtualinvoke $r1.<org.apache.commons.collections4.multiset.AbstractMultiSetTest: boolean isRemoveSupported()>();

        return $z0;
    }

    public boolean isTestSerialization()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        return 0;
    }

    public void resetEmpty()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;
        org.apache.commons.collections4.multiset.AbstractMultiSetTest $r1, $r2, $r6;
        org.apache.commons.collections4.MultiSet $r3;
        java.util.Set $r4;
        java.util.HashSet $r5;
        java.util.Collection $r7;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        $r1 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0>;

        virtualinvoke $r1.<org.apache.commons.collections4.multiset.AbstractMultiSetTest: void resetEmpty()>();

        $r2 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.multiset.AbstractMultiSetTest: org.apache.commons.collections4.MultiSet getCollection()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.MultiSet: java.util.Set uniqueSet()>();

        virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: void setCollection(java.util.Collection)>($r4);

        $r5 = new java.util.HashSet;

        $r6 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0>;

        $r7 = virtualinvoke $r6.<org.apache.commons.collections4.multiset.AbstractMultiSetTest: java.util.Collection getConfirmed()>();

        specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>($r7);

        virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: void setConfirmed(java.util.Collection)>($r5);

        return;
    }

    public void resetFull()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;
        org.apache.commons.collections4.multiset.AbstractMultiSetTest $r1, $r2, $r6;
        org.apache.commons.collections4.MultiSet $r3;
        java.util.Set $r4;
        java.util.HashSet $r5;
        java.util.Collection $r7;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        $r1 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0>;

        virtualinvoke $r1.<org.apache.commons.collections4.multiset.AbstractMultiSetTest: void resetFull()>();

        $r2 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.multiset.AbstractMultiSetTest: org.apache.commons.collections4.MultiSet getCollection()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.MultiSet: java.util.Set uniqueSet()>();

        virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: void setCollection(java.util.Collection)>($r4);

        $r5 = new java.util.HashSet;

        $r6 = r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: org.apache.commons.collections4.multiset.AbstractMultiSetTest this$0>;

        $r7 = virtualinvoke $r6.<org.apache.commons.collections4.multiset.AbstractMultiSetTest: java.util.Collection getConfirmed()>();

        specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>($r7);

        virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: void setConfirmed(java.util.Collection)>($r5);

        return;
    }

    public void verify()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        specialinvoke r0.<org.apache.commons.collections4.set.AbstractSetTest: void verify()>();

        return;
    }

    public volatile java.util.Collection makeFullCollection()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: java.util.Set makeFullCollection()>();

        return $r1;
    }

    public volatile java.util.Collection makeObject()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: java.util.Set makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet: java.util.Set makeObject()>();

        return $r1;
    }
}
