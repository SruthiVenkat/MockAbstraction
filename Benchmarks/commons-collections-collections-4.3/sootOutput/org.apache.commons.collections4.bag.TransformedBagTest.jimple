public class org.apache.commons.collections4.bag.TransformedBagTest extends org.apache.commons.collections4.bag.AbstractBagTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.bag.TransformedBagTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.bag.TransformedBagTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.bag.AbstractBagTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.BulkTest: junit.framework.TestSuite makeSuite(java.lang.Class)>(class "Lorg/apache/commons/collections4/bag/TransformedBagTest;");

        return $r0;
    }

    public org.apache.commons.collections4.Bag makeObject()
    {
        org.apache.commons.collections4.bag.TransformedBagTest r0;
        org.apache.commons.collections4.bag.HashBag $r1;
        org.apache.commons.collections4.Transformer $r2;
        org.apache.commons.collections4.Bag $r3;

        r0 := @this: org.apache.commons.collections4.bag.TransformedBagTest;

        $r1 = new org.apache.commons.collections4.bag.HashBag;

        specialinvoke $r1.<org.apache.commons.collections4.bag.HashBag: void <init>()>();

        $r2 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer NOOP_TRANSFORMER>;

        $r3 = staticinvoke <org.apache.commons.collections4.bag.TransformedBag: org.apache.commons.collections4.Bag transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)>($r1, $r2);

        return $r3;
    }

    public void testTransformedBag()
    {
        org.apache.commons.collections4.bag.TransformedBagTest r0;
        org.apache.commons.collections4.Bag r1;
        org.apache.commons.collections4.bag.HashBag $r3;
        org.apache.commons.collections4.Transformer $r4;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Object[] $r5;
        java.lang.Object $r6, $r7, $r10, $r11, $r14;
        boolean $z0, $z1, $z3, $z4;
        java.lang.String $r8, $r12;
        java.lang.Integer $r9, $r13;

        r0 := @this: org.apache.commons.collections4.bag.TransformedBagTest;

        $r3 = new org.apache.commons.collections4.bag.HashBag;

        specialinvoke $r3.<org.apache.commons.collections4.bag.HashBag: void <init>()>();

        $r4 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer STRING_TO_INTEGER_TRANSFORMER>;

        r1 = staticinvoke <org.apache.commons.collections4.bag.TransformedBag: org.apache.commons.collections4.Bag transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)>($r3, $r4);

        $i0 = interfaceinvoke r1.<org.apache.commons.collections4.Bag: int size()>();

        staticinvoke <org.apache.commons.collections4.bag.TransformedBagTest: void assertEquals(int,int)>(0, $i0);

        $r5 = newarray (java.lang.Object)[7];

        $r5[0] = "1";

        $r5[1] = "3";

        $r5[2] = "5";

        $r5[3] = "7";

        $r5[4] = "2";

        $r5[5] = "4";

        $r5[6] = "6";

        i4 = 0;

     label1:
        $i1 = lengthof $r5;

        if i4 >= $i1 goto label2;

        $r10 = $r5[i4];

        interfaceinvoke r1.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object)>($r10);

        $i2 = i4 + 1;

        $i3 = interfaceinvoke r1.<org.apache.commons.collections4.Bag: int size()>();

        staticinvoke <org.apache.commons.collections4.bag.TransformedBagTest: void assertEquals(int,int)>($i2, $i3);

        $r11 = $r5[i4];

        $r12 = (java.lang.String) $r11;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $z3 = interfaceinvoke r1.<org.apache.commons.collections4.Bag: boolean contains(java.lang.Object)>($r13);

        staticinvoke <org.apache.commons.collections4.bag.TransformedBagTest: void assertEquals(boolean,boolean)>(1, $z3);

        $r14 = $r5[i4];

        $z4 = interfaceinvoke r1.<org.apache.commons.collections4.Bag: boolean contains(java.lang.Object)>($r14);

        staticinvoke <org.apache.commons.collections4.bag.TransformedBagTest: void assertEquals(boolean,boolean)>(0, $z4);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r6 = $r5[0];

        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.Bag: boolean remove(java.lang.Object)>($r6);

        staticinvoke <org.apache.commons.collections4.bag.TransformedBagTest: void assertEquals(boolean,boolean)>(0, $z0);

        $r7 = $r5[0];

        $r8 = (java.lang.String) $r7;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r8);

        $z1 = interfaceinvoke r1.<org.apache.commons.collections4.Bag: boolean remove(java.lang.Object)>($r9);

        staticinvoke <org.apache.commons.collections4.bag.TransformedBagTest: void assertEquals(boolean,boolean)>(1, $z1);

        return;
    }

    public void testTransformedBag_decorateTransform()
    {
        org.apache.commons.collections4.bag.TransformedBagTest r0;
        java.lang.Object r3, $r7, $r8, r14;
        org.apache.commons.collections4.bag.HashBag $r4;
        java.lang.Object[] $r5;
        org.apache.commons.collections4.Transformer $r6;
        int $i0, $i1, i2, i3, i4, i5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r9, $r11;
        java.lang.Integer $r10, $r12;
        org.apache.commons.collections4.Bag r15;

        r0 := @this: org.apache.commons.collections4.bag.TransformedBagTest;

        $r4 = new org.apache.commons.collections4.bag.HashBag;

        specialinvoke $r4.<org.apache.commons.collections4.bag.HashBag: void <init>()>();

        $r5 = newarray (java.lang.Object)[7];

        $r5[0] = "1";

        $r5[1] = "3";

        $r5[2] = "5";

        $r5[3] = "7";

        $r5[4] = "2";

        $r5[5] = "4";

        $r5[6] = "6";

        i2 = lengthof $r5;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        r14 = $r5[i3];

        interfaceinvoke $r4.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object)>(r14);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r6 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer STRING_TO_INTEGER_TRANSFORMER>;

        r15 = staticinvoke <org.apache.commons.collections4.bag.TransformedBag: org.apache.commons.collections4.Bag transformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)>($r4, $r6);

        $i0 = lengthof $r5;

        $i1 = interfaceinvoke r15.<org.apache.commons.collections4.Bag: int size()>();

        staticinvoke <org.apache.commons.collections4.bag.TransformedBagTest: void assertEquals(int,int)>($i0, $i1);

        i4 = lengthof $r5;

        i5 = 0;

     label3:
        if i5 >= i4 goto label4;

        r3 = $r5[i5];

        $r11 = (java.lang.String) r3;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r11);

        $z2 = interfaceinvoke r15.<org.apache.commons.collections4.Bag: boolean contains(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.bag.TransformedBagTest: void assertEquals(boolean,boolean)>(1, $z2);

        $z3 = interfaceinvoke r15.<org.apache.commons.collections4.Bag: boolean contains(java.lang.Object)>(r3);

        staticinvoke <org.apache.commons.collections4.bag.TransformedBagTest: void assertEquals(boolean,boolean)>(0, $z3);

        i5 = i5 + 1;

        goto label3;

     label4:
        $r7 = $r5[0];

        $z0 = interfaceinvoke r15.<org.apache.commons.collections4.Bag: boolean remove(java.lang.Object)>($r7);

        staticinvoke <org.apache.commons.collections4.bag.TransformedBagTest: void assertEquals(boolean,boolean)>(0, $z0);

        $r8 = $r5[0];

        $r9 = (java.lang.String) $r8;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r9);

        $z1 = interfaceinvoke r15.<org.apache.commons.collections4.Bag: boolean remove(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.bag.TransformedBagTest: void assertEquals(boolean,boolean)>(1, $z1);

        return;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.bag.TransformedBagTest r0;

        r0 := @this: org.apache.commons.collections4.bag.TransformedBagTest;

        return "4";
    }

    public volatile java.util.Collection makeObject()
    {
        org.apache.commons.collections4.bag.TransformedBagTest r0;
        org.apache.commons.collections4.Bag $r1;

        r0 := @this: org.apache.commons.collections4.bag.TransformedBagTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bag.TransformedBagTest: org.apache.commons.collections4.Bag makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.bag.TransformedBagTest r0;
        org.apache.commons.collections4.Bag $r1;

        r0 := @this: org.apache.commons.collections4.bag.TransformedBagTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bag.TransformedBagTest: org.apache.commons.collections4.Bag makeObject()>();

        return $r1;
    }
}
