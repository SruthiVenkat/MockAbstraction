public class org.apache.commons.collections4.iterators.LoopingListIteratorTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testConstructorEx() throws java.lang.Exception
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;
        org.apache.commons.collections4.iterators.LoopingListIterator $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

     label1:
        $r2 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(null);

        staticinvoke <org.junit.Assert: void fail()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void testLooping0() throws java.lang.Exception
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;
        java.util.ArrayList $r3;
        org.apache.commons.collections4.iterators.LoopingListIterator $r4;
        boolean $z0, $z1;
        java.util.NoSuchElementException $r7, $r8;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>($r3);

        $z0 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        $z1 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

     label1:
        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void fail()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void fail()>();

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

     label7:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
        catch java.util.NoSuchElementException from label4 to label5 with label6;
    }

    public void testLooping1() throws java.lang.Exception
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;
        java.util.List r1;
        java.lang.String[] $r3;
        org.apache.commons.collections4.iterators.LoopingListIterator $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "a";

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1);

        $z0 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5);

        $z1 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r6 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r6);

        $z2 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r7 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r7);

        $z3 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r8 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8);

        $z4 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $r9 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r9);

        $z5 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        $r10 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r10);

        return;
    }

    public void testLooping2() throws java.lang.Exception
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;
        java.util.List r1;
        java.lang.String[] $r3;
        org.apache.commons.collections4.iterators.LoopingListIterator $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "a";

        $r3[1] = "b";

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1);

        $z0 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5);

        $z1 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r6 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r6);

        $z2 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r7 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r7);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $z3 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r8 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r8);

        $z4 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $r9 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r9);

        $z5 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        $r10 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r10);

        return;
    }

    public void testJoggingNotOverBoundary()
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;
        java.util.List r1;
        java.lang.String[] $r3;
        org.apache.commons.collections4.iterators.LoopingListIterator $r4;
        java.lang.Object $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "a";

        $r3[1] = "b";

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5);

        $r6 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r6);

        $r7 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r7);

        $r8 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r8);

        $r9 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9);

        $r10 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r10);

        return;
    }

    public void testJoggingOverBoundary()
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;
        java.util.List r1;
        java.lang.String[] $r3;
        org.apache.commons.collections4.iterators.LoopingListIterator $r4;
        java.lang.Object $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "a";

        $r3[1] = "b";

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1);

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r5);

        $r6 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r6);

        $r7 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r7);

        $r8 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8);

        $r9 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r9);

        $r10 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r10);

        return;
    }

    public void testRemovingElementsAndIteratingForward()
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;
        java.util.ArrayList $r4;
        java.lang.String[] $r5;
        java.util.List $r6;
        org.apache.commons.collections4.iterators.LoopingListIterator $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r8, $r9, $r10;
        int $i0, $i2, $i4;
        long $l1, $l3, $l5;
        java.util.NoSuchElementException $r12;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

        $r4 = new java.util.ArrayList;

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "a";

        $r5[1] = "b";

        $r5[2] = "c";

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        $r7 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>($r4);

        $z0 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r8 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8);

        virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: void remove()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1);

        $z1 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r9 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9);

        virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: void remove()>();

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3);

        $z2 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r10 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r10);

        virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: void remove()>();

        $i4 = interfaceinvoke $r4.<java.util.List: int size()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l5);

        $z3 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3);

     label1:
        virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void fail()>();

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public void testRemovingElementsAndIteratingBackwards()
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;
        java.util.ArrayList $r4;
        java.lang.String[] $r5;
        java.util.List $r6;
        org.apache.commons.collections4.iterators.LoopingListIterator $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r8, $r9, $r10;
        int $i0, $i2, $i4;
        long $l1, $l3, $l5;
        java.util.NoSuchElementException $r12;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

        $r4 = new java.util.ArrayList;

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "a";

        $r5[1] = "b";

        $r5[2] = "c";

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        $r7 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>($r4);

        $z0 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r8 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r8);

        virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: void remove()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1);

        $z1 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r9 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9);

        virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: void remove()>();

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3);

        $z2 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r10 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r10);

        virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: void remove()>();

        $i4 = interfaceinvoke $r4.<java.util.List: int size()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l5);

        $z3 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>();

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3);

     label1:
        virtualinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void fail()>();

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public void testReset()
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;
        java.util.List r1;
        java.lang.String[] $r3;
        org.apache.commons.collections4.iterators.LoopingListIterator $r4;
        java.lang.Object $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "a";

        $r3[1] = "b";

        $r3[2] = "c";

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1);

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5);

        $r6 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r6);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $r7 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r7);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $r8 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8);

        $r9 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9);

        $r10 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r10);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $r11 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r11);

        $r12 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r12);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $r13 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r13);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $r14 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r14);

        $r15 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r15);

        $r16 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r16);

        return;
    }

    public void testAdd()
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;
        java.util.ArrayList $r1, $r19;
        java.lang.String[] $r2, $r20;
        java.util.List $r3, $r21;
        org.apache.commons.collections4.iterators.LoopingListIterator $r4, $r22;
        java.lang.Object $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

        $r1 = new java.util.ArrayList;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "b";

        $r2[1] = "e";

        $r2[2] = "f";

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>($r1);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void add(java.lang.Object)>("a");

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r5);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $r6 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r6);

        $r7 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r7);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void add(java.lang.Object)>("c");

        $r8 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("e", $r8);

        $r9 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("e", $r9);

        $r10 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r10);

        $r11 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r11);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void add(java.lang.Object)>("d");

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $r12 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r12);

        $r13 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r13);

        $r14 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r14);

        $r15 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("d", $r15);

        $r16 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("e", $r16);

        $r17 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("f", $r17);

        $r18 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r18);

        $r19 = new java.util.ArrayList;

        $r20 = newarray (java.lang.String)[3];

        $r20[0] = "b";

        $r20[1] = "e";

        $r20[2] = "f";

        $r21 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r20);

        specialinvoke $r19.<java.util.ArrayList: void <init>(java.util.Collection)>($r21);

        $r22 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>($r19);

        virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: void add(java.lang.Object)>("a");

        $r23 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r23);

        virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $r24 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("f", $r24);

        $r25 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("e", $r25);

        virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: void add(java.lang.Object)>("d");

        $r26 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("d", $r26);

        virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: void add(java.lang.Object)>("c");

        $r27 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r27);

        virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $r28 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r28);

        $r29 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r29);

        $r30 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r30);

        $r31 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("d", $r31);

        $r32 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("e", $r32);

        $r33 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("f", $r33);

        $r34 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r34);

        return;
    }

    public void testNextAndPreviousIndex()
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;
        java.util.List r1;
        java.lang.String[] $r3;
        org.apache.commons.collections4.iterators.LoopingListIterator $r4;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i18, $i20, $i22;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15, $l17, $l19, $l21, $l23;
        java.lang.Object $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "a";

        $r3[1] = "b";

        $r3[2] = "c";

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1);

        $i0 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: int nextIndex()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        $i2 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: int previousIndex()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3);

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5);

        $i4 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: int nextIndex()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5);

        $i6 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: int previousIndex()>();

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l7);

        $r6 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r6);

        $i8 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: int nextIndex()>();

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9);

        $i10 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: int previousIndex()>();

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l11);

        $r7 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r7);

        $i12 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: int nextIndex()>();

        $l13 = (long) $i12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l13);

        $i14 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: int previousIndex()>();

        $l15 = (long) $i14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l15);

        $r8 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r8);

        $i16 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: int nextIndex()>();

        $l17 = (long) $i16;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l17);

        $i18 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: int previousIndex()>();

        $l19 = (long) $i18;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l19);

        $r9 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r9);

        $i20 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: int nextIndex()>();

        $l21 = (long) $i20;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l21);

        $i22 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: int previousIndex()>();

        $l23 = (long) $i22;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l23);

        return;
    }

    public void testSet()
    {
        org.apache.commons.collections4.iterators.LoopingListIteratorTest r0;
        java.util.List r1;
        java.lang.String[] $r3;
        org.apache.commons.collections4.iterators.LoopingListIterator $r4;
        java.lang.Object $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest;

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "q";

        $r3[1] = "r";

        $r3[2] = "z";

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1);

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("z", $r5);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void set(java.lang.Object)>("c");

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $r6 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("q", $r6);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void set(java.lang.Object)>("a");

        $r7 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("r", $r7);

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void set(java.lang.Object)>("b");

        virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>();

        $r8 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8);

        $r9 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9);

        $r10 = virtualinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r10);

        return;
    }
}
