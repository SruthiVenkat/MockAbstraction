public class org.apache.commons.collections4.bidimap.DualHashBidiMap extends org.apache.commons.collections4.bidimap.AbstractDualBidiMap implements java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.collections4.bidimap.DualHashBidiMap r0;
        java.util.HashMap $r1, $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.DualHashBidiMap;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: void <init>(java.util.Map,java.util.Map)>($r1, $r2);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.commons.collections4.bidimap.DualHashBidiMap r0;
        java.util.Map r1;
        java.util.HashMap $r2, $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.DualHashBidiMap;

        r1 := @parameter0: java.util.Map;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: void <init>(java.util.Map,java.util.Map)>($r2, $r3);

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.DualHashBidiMap: void putAll(java.util.Map)>(r1);

        return;
    }

    protected void <init>(java.util.Map, java.util.Map, org.apache.commons.collections4.BidiMap)
    {
        org.apache.commons.collections4.bidimap.DualHashBidiMap r0;
        java.util.Map r1, r2;
        org.apache.commons.collections4.BidiMap r3;

        r0 := @this: org.apache.commons.collections4.bidimap.DualHashBidiMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: org.apache.commons.collections4.BidiMap;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: void <init>(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)>(r1, r2, r3);

        return;
    }

    protected org.apache.commons.collections4.BidiMap createBidiMap(java.util.Map, java.util.Map, org.apache.commons.collections4.BidiMap)
    {
        org.apache.commons.collections4.bidimap.DualHashBidiMap r0, $r4;
        java.util.Map r1, r2;
        org.apache.commons.collections4.BidiMap r3;

        r0 := @this: org.apache.commons.collections4.bidimap.DualHashBidiMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: org.apache.commons.collections4.BidiMap;

        $r4 = new org.apache.commons.collections4.bidimap.DualHashBidiMap;

        specialinvoke $r4.<org.apache.commons.collections4.bidimap.DualHashBidiMap: void <init>(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)>(r1, r2, r3);

        return $r4;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections4.bidimap.DualHashBidiMap r0;
        java.io.ObjectOutputStream r1;
        java.util.Map $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.DualHashBidiMap;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r0.<org.apache.commons.collections4.bidimap.DualHashBidiMap: java.util.Map normalMap>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.bidimap.DualHashBidiMap r0;
        java.io.ObjectInputStream r1;
        java.util.Map r2;
        java.util.HashMap $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.collections4.bidimap.DualHashBidiMap;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.collections4.bidimap.DualHashBidiMap: java.util.Map normalMap> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.collections4.bidimap.DualHashBidiMap: java.util.Map reverseMap> = $r4;

        $r5 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r2 = (java.util.Map) $r5;

        virtualinvoke r0.<org.apache.commons.collections4.bidimap.DualHashBidiMap: void putAll(java.util.Map)>(r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.bidimap.DualHashBidiMap: long serialVersionUID> = 721969328361808L;

        return;
    }
}
