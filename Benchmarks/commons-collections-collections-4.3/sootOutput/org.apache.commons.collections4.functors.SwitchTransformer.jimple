public class org.apache.commons.collections4.functors.SwitchTransformer extends java.lang.Object implements org.apache.commons.collections4.Transformer, java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.apache.commons.collections4.Predicate[] iPredicates;
    private final org.apache.commons.collections4.Transformer[] iTransformers;
    private final org.apache.commons.collections4.Transformer iDefault;

    public static org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[], org.apache.commons.collections4.Transformer[], org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.Predicate[] r0;
        org.apache.commons.collections4.Transformer[] r1;
        org.apache.commons.collections4.Transformer r2, $r5;
        int $i0, $i1, $i2;
        org.apache.commons.collections4.functors.SwitchTransformer $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: org.apache.commons.collections4.Predicate[];

        r1 := @parameter1: org.apache.commons.collections4.Transformer[];

        r2 := @parameter2: org.apache.commons.collections4.Transformer;

        staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: void validate(org.apache.commons.collections4.Predicate[])>(r0);

        staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: void validate(org.apache.commons.collections4.Transformer[])>(r1);

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The predicate and transformer arrays must be the same size");

        throw $r4;

     label1:
        $i2 = lengthof r0;

        if $i2 != 0 goto label4;

        if r2 != null goto label2;

        $r5 = staticinvoke <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer nullTransformer()>();

        goto label3;

     label2:
        $r5 = r2;

     label3:
        return $r5;

     label4:
        $r3 = new org.apache.commons.collections4.functors.SwitchTransformer;

        specialinvoke $r3.<org.apache.commons.collections4.functors.SwitchTransformer: void <init>(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)>(r0, r1, r2);

        return $r3;
    }

    public static org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)
    {
        java.util.Map r0;
        org.apache.commons.collections4.Transformer r1, $r13, $r14, $r16;
        int i0, $i1, i2;
        org.apache.commons.collections4.Transformer[] r2;
        org.apache.commons.collections4.Predicate[] r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.Object $r6, $r9, $r10, $r12;
        java.util.Set $r7;
        boolean $z0;
        org.apache.commons.collections4.functors.SwitchTransformer $r8;
        org.apache.commons.collections4.Predicate $r11;
        java.lang.NullPointerException $r15;

        r0 := @parameter0: java.util.Map;

        if r0 != null goto label1;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("The predicate and transformer map must not be null");

        throw $r15;

     label1:
        $i1 = interfaceinvoke r0.<java.util.Map: int size()>();

        if $i1 != 0 goto label2;

        $r14 = staticinvoke <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer nullTransformer()>();

        return $r14;

     label2:
        $r6 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(null);

        r1 = (org.apache.commons.collections4.Transformer) $r6;

        i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        if i0 != 0 goto label5;

        if r1 != null goto label3;

        $r16 = staticinvoke <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer nullTransformer()>();

        goto label4;

     label3:
        $r16 = r1;

     label4:
        return $r16;

     label5:
        r2 = newarray (org.apache.commons.collections4.Transformer)[i0];

        r3 = newarray (org.apache.commons.collections4.Predicate)[i0];

        i2 = 0;

        $r7 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (org.apache.commons.collections4.Predicate) $r10;

        r3[i2] = $r11;

        $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (org.apache.commons.collections4.Transformer) $r12;

        r2[i2] = $r13;

        i2 = i2 + 1;

        goto label6;

     label7:
        $r8 = new org.apache.commons.collections4.functors.SwitchTransformer;

        specialinvoke $r8.<org.apache.commons.collections4.functors.SwitchTransformer: void <init>(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)>(0, r3, r2, r1);

        return $r8;
    }

    private void <init>(boolean, org.apache.commons.collections4.Predicate[], org.apache.commons.collections4.Transformer[], org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.functors.SwitchTransformer r0;
        boolean z0;
        org.apache.commons.collections4.Predicate[] r1, $r7;
        org.apache.commons.collections4.Transformer[] r2, $r8;
        org.apache.commons.collections4.Transformer r3, $r9;

        r0 := @this: org.apache.commons.collections4.functors.SwitchTransformer;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.commons.collections4.Predicate[];

        r2 := @parameter2: org.apache.commons.collections4.Transformer[];

        r3 := @parameter3: org.apache.commons.collections4.Transformer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if z0 == 0 goto label1;

        $r7 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Predicate[] copy(org.apache.commons.collections4.Predicate[])>(r1);

        goto label2;

     label1:
        $r7 = r1;

     label2:
        r0.<org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Predicate[] iPredicates> = $r7;

        if z0 == 0 goto label3;

        $r8 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Transformer[] copy(org.apache.commons.collections4.Transformer[])>(r2);

        goto label4;

     label3:
        $r8 = r2;

     label4:
        r0.<org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Transformer[] iTransformers> = $r8;

        if r3 != null goto label5;

        $r9 = staticinvoke <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer nullTransformer()>();

        goto label6;

     label5:
        $r9 = r3;

     label6:
        r0.<org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Transformer iDefault> = $r9;

        return;
    }

    public void <init>(org.apache.commons.collections4.Predicate[], org.apache.commons.collections4.Transformer[], org.apache.commons.collections4.Transformer)
    {
        org.apache.commons.collections4.functors.SwitchTransformer r0;
        org.apache.commons.collections4.Predicate[] r1;
        org.apache.commons.collections4.Transformer[] r2;
        org.apache.commons.collections4.Transformer r3;

        r0 := @this: org.apache.commons.collections4.functors.SwitchTransformer;

        r1 := @parameter0: org.apache.commons.collections4.Predicate[];

        r2 := @parameter1: org.apache.commons.collections4.Transformer[];

        r3 := @parameter2: org.apache.commons.collections4.Transformer;

        specialinvoke r0.<org.apache.commons.collections4.functors.SwitchTransformer: void <init>(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)>(1, r1, r2, r3);

        return;
    }

    public java.lang.Object transform(java.lang.Object)
    {
        org.apache.commons.collections4.functors.SwitchTransformer r0;
        java.lang.Object r1, $r4, $r9;
        org.apache.commons.collections4.Predicate[] $r2, $r5;
        int $i0, i1;
        org.apache.commons.collections4.Transformer $r3, $r8;
        org.apache.commons.collections4.Predicate $r6;
        boolean $z0;
        org.apache.commons.collections4.Transformer[] $r7;

        r0 := @this: org.apache.commons.collections4.functors.SwitchTransformer;

        r1 := @parameter0: java.lang.Object;

        i1 = 0;

     label1:
        $r2 = r0.<org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Predicate[] iPredicates>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label3;

        $r5 = r0.<org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Predicate[] iPredicates>;

        $r6 = $r5[i1];

        $z0 = interfaceinvoke $r6.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r1);

        if $z0 != 1 goto label2;

        $r7 = r0.<org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Transformer[] iTransformers>;

        $r8 = $r7[i1];

        $r9 = interfaceinvoke $r8.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r1);

        return $r9;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = r0.<org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Transformer iDefault>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r1);

        return $r4;
    }

    public org.apache.commons.collections4.Predicate[] getPredicates()
    {
        org.apache.commons.collections4.functors.SwitchTransformer r0;
        org.apache.commons.collections4.Predicate[] $r1, $r2;

        r0 := @this: org.apache.commons.collections4.functors.SwitchTransformer;

        $r1 = r0.<org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Predicate[] iPredicates>;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Predicate[] copy(org.apache.commons.collections4.Predicate[])>($r1);

        return $r2;
    }

    public org.apache.commons.collections4.Transformer[] getTransformers()
    {
        org.apache.commons.collections4.functors.SwitchTransformer r0;
        org.apache.commons.collections4.Transformer[] $r1, $r2;

        r0 := @this: org.apache.commons.collections4.functors.SwitchTransformer;

        $r1 = r0.<org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Transformer[] iTransformers>;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Transformer[] copy(org.apache.commons.collections4.Transformer[])>($r1);

        return $r2;
    }

    public org.apache.commons.collections4.Transformer getDefaultTransformer()
    {
        org.apache.commons.collections4.functors.SwitchTransformer r0;
        org.apache.commons.collections4.Transformer $r1;

        r0 := @this: org.apache.commons.collections4.functors.SwitchTransformer;

        $r1 = r0.<org.apache.commons.collections4.functors.SwitchTransformer: org.apache.commons.collections4.Transformer iDefault>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.functors.SwitchTransformer: long serialVersionUID> = -6404460890903469332L;

        return;
    }
}
