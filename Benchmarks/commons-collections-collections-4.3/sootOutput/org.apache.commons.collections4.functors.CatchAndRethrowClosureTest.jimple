public class org.apache.commons.collections4.functors.CatchAndRethrowClosureTest extends org.apache.commons.collections4.functors.AbstractClosureTest
{

    public void <init>()
    {
        org.apache.commons.collections4.functors.CatchAndRethrowClosureTest r0;

        r0 := @this: org.apache.commons.collections4.functors.CatchAndRethrowClosureTest;

        specialinvoke r0.<org.apache.commons.collections4.functors.AbstractClosureTest: void <init>()>();

        return;
    }

    private static org.apache.commons.collections4.Closure generateIOExceptionClosure()
    {
        org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$1 $r0;

        $r0 = new org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$1;

        specialinvoke $r0.<org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$1: void <init>()>();

        return $r0;
    }

    private static org.apache.commons.collections4.Closure generateNullPointerExceptionClosure()
    {
        org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$2 $r0;

        $r0 = new org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$2;

        specialinvoke $r0.<org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$2: void <init>()>();

        return $r0;
    }

    private static org.apache.commons.collections4.Closure generateNoExceptionClosure()
    {
        org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$3 $r0;

        $r0 = new org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$3;

        specialinvoke $r0.<org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$3: void <init>()>();

        return $r0;
    }

    protected org.apache.commons.collections4.Closure generateClosure()
    {
        org.apache.commons.collections4.functors.CatchAndRethrowClosureTest r0;
        org.apache.commons.collections4.Closure $r1;

        r0 := @this: org.apache.commons.collections4.functors.CatchAndRethrowClosureTest;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.CatchAndRethrowClosureTest: org.apache.commons.collections4.Closure generateNoExceptionClosure()>();

        return $r1;
    }

    public void testThrowingClosure()
    {
        org.apache.commons.collections4.functors.CatchAndRethrowClosureTest r0;
        java.lang.Integer $r1, $r13, $r17;
        org.apache.commons.collections4.FunctorException $r2, $r6, $r7;
        java.lang.RuntimeException $r3, $r4, $r5;
        boolean $z0, $z1;
        java.lang.Throwable $r8;
        org.apache.commons.collections4.Closure r9, r12, r16;

        r0 := @this: org.apache.commons.collections4.functors.CatchAndRethrowClosureTest;

        r9 = staticinvoke <org.apache.commons.collections4.functors.CatchAndRethrowClosureTest: org.apache.commons.collections4.Closure generateNoExceptionClosure()>();

     label01:
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke r9.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>($r1);

     label02:
        goto label05;

     label03:
        $r6 := @caughtexception;

        staticinvoke <org.junit.Assert: void fail()>();

        goto label05;

     label04:
        $r5 := @caughtexception;

        staticinvoke <org.junit.Assert: void fail()>();

     label05:
        r12 = staticinvoke <org.apache.commons.collections4.functors.CatchAndRethrowClosureTest: org.apache.commons.collections4.Closure generateIOExceptionClosure()>();

     label06:
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke r12.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>($r13);

        staticinvoke <org.junit.Assert: void fail()>();

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<org.apache.commons.collections4.FunctorException: java.lang.Throwable getCause()>();

        $z1 = $r8 instanceof java.io.IOException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        goto label10;

     label09:
        $r3 := @caughtexception;

        staticinvoke <org.junit.Assert: void fail()>();

     label10:
        r16 = staticinvoke <org.apache.commons.collections4.functors.CatchAndRethrowClosureTest: org.apache.commons.collections4.Closure generateNullPointerExceptionClosure()>();

     label11:
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke r16.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>($r17);

        staticinvoke <org.junit.Assert: void fail()>();

     label12:
        goto label15;

     label13:
        $r2 := @caughtexception;

        staticinvoke <org.junit.Assert: void fail()>();

        goto label15;

     label14:
        $r4 := @caughtexception;

        $z0 = $r4 instanceof java.lang.NullPointerException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

     label15:
        return;

        catch org.apache.commons.collections4.FunctorException from label01 to label02 with label03;
        catch java.lang.RuntimeException from label01 to label02 with label04;
        catch org.apache.commons.collections4.FunctorException from label06 to label07 with label08;
        catch java.lang.RuntimeException from label06 to label07 with label09;
        catch org.apache.commons.collections4.FunctorException from label11 to label12 with label13;
        catch java.lang.RuntimeException from label11 to label12 with label14;
    }
}
