public final class org.apache.commons.collections4.functors.NonePredicate extends org.apache.commons.collections4.functors.AbstractQuantifierPredicate
{
    private static final long serialVersionUID;

    public static transient org.apache.commons.collections4.Predicate nonePredicate(org.apache.commons.collections4.Predicate[])
    {
        org.apache.commons.collections4.Predicate[] r0, $r2;
        int $i0;
        org.apache.commons.collections4.functors.NonePredicate $r1;
        org.apache.commons.collections4.Predicate $r3;

        r0 := @parameter0: org.apache.commons.collections4.Predicate[];

        staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: void validate(org.apache.commons.collections4.Predicate[])>(r0);

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r3 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        return $r3;

     label1:
        $r1 = new org.apache.commons.collections4.functors.NonePredicate;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Predicate[] copy(org.apache.commons.collections4.Predicate[])>(r0);

        specialinvoke $r1.<org.apache.commons.collections4.functors.NonePredicate: void <init>(org.apache.commons.collections4.Predicate[])>($r2);

        return $r1;
    }

    public static org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)
    {
        java.util.Collection r0;
        org.apache.commons.collections4.Predicate[] r1;
        int $i0;
        org.apache.commons.collections4.functors.NonePredicate $r2;
        org.apache.commons.collections4.Predicate $r3;

        r0 := @parameter0: java.util.Collection;

        r1 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Predicate[] validate(java.util.Collection)>(r0);

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        $r3 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        return $r3;

     label1:
        $r2 = new org.apache.commons.collections4.functors.NonePredicate;

        specialinvoke $r2.<org.apache.commons.collections4.functors.NonePredicate: void <init>(org.apache.commons.collections4.Predicate[])>(r1);

        return $r2;
    }

    public transient void <init>(org.apache.commons.collections4.Predicate[])
    {
        org.apache.commons.collections4.functors.NonePredicate r0;
        org.apache.commons.collections4.Predicate[] r1;

        r0 := @this: org.apache.commons.collections4.functors.NonePredicate;

        r1 := @parameter0: org.apache.commons.collections4.Predicate[];

        specialinvoke r0.<org.apache.commons.collections4.functors.AbstractQuantifierPredicate: void <init>(org.apache.commons.collections4.Predicate[])>(r1);

        return;
    }

    public boolean evaluate(java.lang.Object)
    {
        org.apache.commons.collections4.functors.NonePredicate r0;
        java.lang.Object r1;
        org.apache.commons.collections4.Predicate[] r2;
        int i0, i1;
        org.apache.commons.collections4.Predicate r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.functors.NonePredicate;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<org.apache.commons.collections4.functors.NonePredicate: org.apache.commons.collections4.Predicate[] iPredicates>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = interfaceinvoke r3.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.functors.NonePredicate: long serialVersionUID> = 2007613066565892961L;

        return;
    }
}
