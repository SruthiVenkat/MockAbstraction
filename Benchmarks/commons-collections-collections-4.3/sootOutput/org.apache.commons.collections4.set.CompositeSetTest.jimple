public class org.apache.commons.collections4.set.CompositeSetTest extends org.apache.commons.collections4.set.AbstractSetTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.set.AbstractSetTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public org.apache.commons.collections4.set.CompositeSet makeObject()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        java.util.HashSet $r3;
        org.apache.commons.collections4.set.CompositeSet $r4;
        org.apache.commons.collections4.set.EmptySetMutator $r5;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r4 = new org.apache.commons.collections4.set.CompositeSet;

        specialinvoke $r4.<org.apache.commons.collections4.set.CompositeSet: void <init>(java.util.Set)>($r3);

        $r5 = new org.apache.commons.collections4.set.EmptySetMutator;

        specialinvoke $r5.<org.apache.commons.collections4.set.EmptySetMutator: void <init>(java.util.Set)>($r3);

        virtualinvoke $r4.<org.apache.commons.collections4.set.CompositeSet: void setMutator(org.apache.commons.collections4.set.CompositeSet$SetMutator)>($r5);

        return $r4;
    }

    public java.util.Set buildOne()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        java.util.HashSet $r2;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>("1");

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>("2");

        return $r2;
    }

    public java.util.Set buildTwo()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        java.util.HashSet $r2;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>("3");

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>("4");

        return $r2;
    }

    public void testContains()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        org.apache.commons.collections4.set.CompositeSet $r2;
        java.util.Set[] $r3;
        java.util.Set $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        $r2 = new org.apache.commons.collections4.set.CompositeSet;

        $r3 = newarray (java.util.Set)[2];

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildOne()>();

        $r3[0] = $r4;

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildTwo()>();

        $r3[1] = $r5;

        specialinvoke $r2.<org.apache.commons.collections4.set.CompositeSet: void <init>(java.util.Set[])>($r3);

        $z0 = virtualinvoke $r2.<org.apache.commons.collections4.set.CompositeSet: boolean contains(java.lang.Object)>("1");

        staticinvoke <org.apache.commons.collections4.set.CompositeSetTest: void assertTrue(boolean)>($z0);

        return;
    }

    public void testRemoveUnderlying()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        java.util.Set r1, r2;
        org.apache.commons.collections4.set.CompositeSet $r4;
        java.util.Set[] $r5;
        boolean $z1, $z3;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildOne()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildTwo()>();

        $r4 = new org.apache.commons.collections4.set.CompositeSet;

        $r5 = newarray (java.util.Set)[2];

        $r5[0] = r1;

        $r5[1] = r2;

        specialinvoke $r4.<org.apache.commons.collections4.set.CompositeSet: void <init>(java.util.Set[])>($r5);

        interfaceinvoke r1.<java.util.Set: boolean remove(java.lang.Object)>("1");

        $z1 = virtualinvoke $r4.<org.apache.commons.collections4.set.CompositeSet: boolean contains(java.lang.Object)>("1");

        staticinvoke <org.apache.commons.collections4.set.CompositeSetTest: void assertFalse(boolean)>($z1);

        interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>("3");

        $z3 = virtualinvoke $r4.<org.apache.commons.collections4.set.CompositeSet: boolean contains(java.lang.Object)>("3");

        staticinvoke <org.apache.commons.collections4.set.CompositeSetTest: void assertFalse(boolean)>($z3);

        return;
    }

    public void testRemoveComposited()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        java.util.Set r1, r2;
        org.apache.commons.collections4.set.CompositeSet $r4;
        java.util.Set[] $r5;
        boolean $z1, $z3;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildOne()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildTwo()>();

        $r4 = new org.apache.commons.collections4.set.CompositeSet;

        $r5 = newarray (java.util.Set)[2];

        $r5[0] = r1;

        $r5[1] = r2;

        specialinvoke $r4.<org.apache.commons.collections4.set.CompositeSet: void <init>(java.util.Set[])>($r5);

        virtualinvoke $r4.<org.apache.commons.collections4.set.CompositeSet: boolean remove(java.lang.Object)>("1");

        $z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>("1");

        staticinvoke <org.apache.commons.collections4.set.CompositeSetTest: void assertFalse(boolean)>($z1);

        virtualinvoke $r4.<org.apache.commons.collections4.set.CompositeSet: boolean remove(java.lang.Object)>("3");

        $z3 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>("3");

        staticinvoke <org.apache.commons.collections4.set.CompositeSetTest: void assertFalse(boolean)>($z3);

        return;
    }

    public void testFailedCollisionResolution()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        java.util.Set r1, r2;
        org.apache.commons.collections4.set.CompositeSet $r6;
        java.util.Set[] $r7;
        org.apache.commons.collections4.set.CompositeSetTest$1 $r8;
        java.util.HashSet $r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildOne()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildTwo()>();

        $r6 = new org.apache.commons.collections4.set.CompositeSet;

        $r7 = newarray (java.util.Set)[2];

        $r7[0] = r1;

        $r7[1] = r2;

        specialinvoke $r6.<org.apache.commons.collections4.set.CompositeSet: void <init>(java.util.Set[])>($r7);

        $r8 = new org.apache.commons.collections4.set.CompositeSetTest$1;

        specialinvoke $r8.<org.apache.commons.collections4.set.CompositeSetTest$1: void <init>(org.apache.commons.collections4.set.CompositeSetTest)>(r0);

        virtualinvoke $r6.<org.apache.commons.collections4.set.CompositeSet: void setMutator(org.apache.commons.collections4.set.CompositeSet$SetMutator)>($r8);

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        virtualinvoke $r9.<java.util.HashSet: boolean add(java.lang.Object)>("1");

     label1:
        virtualinvoke $r6.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set)>($r9);

        staticinvoke <org.apache.commons.collections4.set.CompositeSetTest: void fail(java.lang.String)>("IllegalArgumentException should have been thrown");

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void testAddComposited()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        java.util.Set r1, r2, $r11, $r12;
        org.apache.commons.collections4.set.CompositeSet $r9, $r10, $r15;
        boolean $z0, $z5;
        java.util.HashSet $r13, $r14;
        java.lang.UnsupportedOperationException $r16;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildOne()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildTwo()>();

        $r9 = new org.apache.commons.collections4.set.CompositeSet;

        specialinvoke $r9.<org.apache.commons.collections4.set.CompositeSet: void <init>()>();

        virtualinvoke $r9.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set,java.util.Set)>(r1, r2);

        $r10 = new org.apache.commons.collections4.set.CompositeSet;

        $r11 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildOne()>();

        specialinvoke $r10.<org.apache.commons.collections4.set.CompositeSet: void <init>(java.util.Set)>($r11);

        $r12 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildTwo()>();

        virtualinvoke $r10.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set)>($r12);

        $z0 = virtualinvoke $r9.<org.apache.commons.collections4.set.CompositeSet: boolean equals(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.set.CompositeSetTest: void assertTrue(boolean)>($z0);

        $r13 = new java.util.HashSet;

        specialinvoke $r13.<java.util.HashSet: void <init>()>();

        virtualinvoke $r13.<java.util.HashSet: boolean add(java.lang.Object)>("1");

        virtualinvoke $r13.<java.util.HashSet: boolean add(java.lang.Object)>("2");

        virtualinvoke $r13.<java.util.HashSet: boolean add(java.lang.Object)>("3");

        $r14 = new java.util.HashSet;

        specialinvoke $r14.<java.util.HashSet: void <init>()>();

        virtualinvoke $r14.<java.util.HashSet: boolean add(java.lang.Object)>("4");

        $r15 = new org.apache.commons.collections4.set.CompositeSet;

        specialinvoke $r15.<org.apache.commons.collections4.set.CompositeSet: void <init>(java.util.Set)>($r13);

        virtualinvoke $r15.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set)>($r14);

        $z5 = virtualinvoke $r9.<org.apache.commons.collections4.set.CompositeSet: boolean equals(java.lang.Object)>($r15);

        staticinvoke <org.apache.commons.collections4.set.CompositeSetTest: void assertTrue(boolean)>($z5);

     label1:
        virtualinvoke $r9.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set)>($r13);

        staticinvoke <org.apache.commons.collections4.set.CompositeSetTest: void fail(java.lang.String)>("Expecting UnsupportedOperationException.");

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

     label4:
        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    public void testAddCompositedCollision()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        java.util.HashSet $r4, $r5;
        org.apache.commons.collections4.set.CompositeSet $r6;
        java.util.Set $r7, $r9, $r10;
        java.util.Set[] $r8;
        java.lang.UnsupportedOperationException $r11, $r12;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>("1");

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>("2");

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>("3");

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>("4");

        $r6 = new org.apache.commons.collections4.set.CompositeSet;

        specialinvoke $r6.<org.apache.commons.collections4.set.CompositeSet: void <init>(java.util.Set)>($r4);

     label1:
        $r7 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildOne()>();

        virtualinvoke $r6.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set,java.util.Set)>($r4, $r7);

        staticinvoke <org.apache.commons.collections4.set.CompositeSetTest: void fail(java.lang.String)>("Expecting UnsupportedOperationException.");

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        $r8 = newarray (java.util.Set)[3];

        $r8[0] = $r4;

        $r9 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildOne()>();

        $r8[1] = $r9;

        $r10 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: java.util.Set buildTwo()>();

        $r8[2] = $r10;

        virtualinvoke $r6.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set[])>($r8);

        staticinvoke <org.apache.commons.collections4.set.CompositeSetTest: void fail(java.lang.String)>("Expecting UnsupportedOperationException.");

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

     label7:
        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
        catch java.lang.UnsupportedOperationException from label4 to label5 with label6;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        return "4";
    }

    public volatile java.util.Set makeObject()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        org.apache.commons.collections4.set.CompositeSet $r1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: org.apache.commons.collections4.set.CompositeSet makeObject()>();

        return $r1;
    }

    public volatile java.util.Collection makeObject()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        org.apache.commons.collections4.set.CompositeSet $r1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: org.apache.commons.collections4.set.CompositeSet makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.set.CompositeSetTest r0;
        org.apache.commons.collections4.set.CompositeSet $r1;

        r0 := @this: org.apache.commons.collections4.set.CompositeSetTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.set.CompositeSetTest: org.apache.commons.collections4.set.CompositeSet makeObject()>();

        return $r1;
    }
}
