class org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap extends org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap
{
    private final java.lang.Object prefix;
    private final int offsetInBits;
    private final int lengthInBits;
    private java.lang.Object fromKey;
    private java.lang.Object toKey;
    private transient int expectedModCount;
    private int size;
    final org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0;

    private void <init>(org.apache.commons.collections4.trie.AbstractPatriciaTrie, java.lang.Object, int, int)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie r1;
        java.lang.Object r2;
        int i0, i1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        r1 := @parameter0: org.apache.commons.collections4.trie.AbstractPatriciaTrie;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0> = r1;

        specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap: void <init>(org.apache.commons.collections4.trie.AbstractPatriciaTrie,org.apache.commons.collections4.trie.AbstractPatriciaTrie$1)>(r1, null);

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object fromKey> = null;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object toKey> = null;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int expectedModCount> = 0;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int size> = -1;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object prefix> = r2;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int offsetInBits> = i0;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int lengthInBits> = i1;

        return;
    }

    private int fixup()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        java.util.Iterator r1;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry r2, $r6, $r11, r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.Set $r3;
        boolean $z0, $z1;
        java.lang.Object $r4, $r5, $r10, $r15, $r18, $r19, $r20, $r21, $r23;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r7, $r12, $r16, $r24;
        java.util.Map$Entry r17;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        $i0 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int size>;

        if $i0 == -1 goto label01;

        $r16 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $i4 = $r16.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: int modCount>;

        $i3 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int expectedModCount>;

        if $i4 == $i3 goto label15;

     label01:
        $r3 = specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int size> = 0;

        r17 = null;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r15 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r15;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int size> = 1;

     label02:
        if r17 != null goto label03;

        $r18 = null;

        goto label04;

     label03:
        $r18 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

     label04:
        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object fromKey> = $r18;

        $r4 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object fromKey>;

        if $r4 == null goto label07;

        $r12 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $r11 = (org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) r17;

        r2 = virtualinvoke $r12.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)>($r11);

        if r2 != null goto label05;

        $r19 = null;

        goto label06;

     label05:
        $r19 = virtualinvoke r2.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry: java.lang.Object getKey()>();

     label06:
        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object fromKey> = $r19;

     label07:
        $r20 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object fromKey>;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object toKey> = $r20;

     label08:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $i1 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int size>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int size> = $i2;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r10;

        goto label08;

     label09:
        if r17 != null goto label10;

        $r21 = null;

        goto label11;

     label10:
        $r21 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

     label11:
        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object toKey> = $r21;

        $r5 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object toKey>;

        if $r5 == null goto label14;

        $r7 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $r6 = (org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) r17;

        r22 = virtualinvoke $r7.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)>($r6);

        if r22 != null goto label12;

        $r23 = null;

        goto label13;

     label12:
        $r23 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getKey()>();

     label13:
        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object toKey> = $r23;

     label14:
        $r24 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $i5 = $r24.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: int modCount>;

        r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int expectedModCount> = $i5;

     label15:
        $i6 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int size>;

        return $i6;
    }

    public java.lang.Object firstKey()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        java.lang.Object $r2, $r3, $r8, $r11;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r4, $r6, $r9;
        java.util.NoSuchElementException $r5;
        org.apache.commons.collections4.trie.KeyAnalyzer $r7;
        int $i0, $i1;
        boolean $z0;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry r10;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int fixup()>();

        $r2 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object fromKey>;

        if $r2 != null goto label1;

        $r9 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        r10 = virtualinvoke $r9.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry firstEntry()>();

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $r3 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object fromKey>;

        r10 = virtualinvoke $r4.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry higherEntry(java.lang.Object)>($r3);

     label2:
        if r10 == null goto label3;

        $r11 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        goto label4;

     label3:
        $r11 = null;

     label4:
        if r10 == null goto label5;

        $r6 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $r7 = virtualinvoke $r6.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.KeyAnalyzer getKeyAnalyzer()>();

        $r8 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object prefix>;

        $i1 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int offsetInBits>;

        $i0 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int lengthInBits>;

        $z0 = virtualinvoke $r7.<org.apache.commons.collections4.trie.KeyAnalyzer: boolean isPrefix(java.lang.Object,int,int,java.lang.Object)>($r8, $i1, $i0, $r11);

        if $z0 != 0 goto label6;

     label5:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label6:
        return $r11;
    }

    public java.lang.Object lastKey()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        java.lang.Object $r2, $r3, $r8, $r11;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r4, $r6, $r9;
        java.util.NoSuchElementException $r5;
        org.apache.commons.collections4.trie.KeyAnalyzer $r7;
        int $i0, $i1;
        boolean $z0;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry r10;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int fixup()>();

        $r2 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object toKey>;

        if $r2 != null goto label1;

        $r9 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        r10 = virtualinvoke $r9.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry lastEntry()>();

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $r3 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object toKey>;

        r10 = virtualinvoke $r4.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry lowerEntry(java.lang.Object)>($r3);

     label2:
        if r10 == null goto label3;

        $r11 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        goto label4;

     label3:
        $r11 = null;

     label4:
        if r10 == null goto label5;

        $r6 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $r7 = virtualinvoke $r6.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.KeyAnalyzer getKeyAnalyzer()>();

        $r8 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object prefix>;

        $i1 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int offsetInBits>;

        $i0 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int lengthInBits>;

        $z0 = virtualinvoke $r7.<org.apache.commons.collections4.trie.KeyAnalyzer: boolean isPrefix(java.lang.Object,int,int,java.lang.Object)>($r8, $i1, $i0, $r11);

        if $z0 != 0 goto label6;

     label5:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label6:
        return $r11;
    }

    protected boolean inRange(java.lang.Object)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        java.lang.Object r1, $r4;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r2;
        org.apache.commons.collections4.trie.KeyAnalyzer $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.KeyAnalyzer getKeyAnalyzer()>();

        $r4 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object prefix>;

        $i1 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int offsetInBits>;

        $i0 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int lengthInBits>;

        $z0 = virtualinvoke $r3.<org.apache.commons.collections4.trie.KeyAnalyzer: boolean isPrefix(java.lang.Object,int,int,java.lang.Object)>($r4, $i1, $i0, r1);

        return $z0;
    }

    protected boolean inRange2(java.lang.Object)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: boolean inRange(java.lang.Object)>(r1);

        return $z0;
    }

    protected boolean inFromRange(java.lang.Object, boolean)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        java.lang.Object r1, $r4;
        boolean z0, $z1;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r2;
        org.apache.commons.collections4.trie.KeyAnalyzer $r3;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.KeyAnalyzer getKeyAnalyzer()>();

        $r4 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object prefix>;

        $i1 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int offsetInBits>;

        $i0 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int lengthInBits>;

        $z1 = virtualinvoke $r3.<org.apache.commons.collections4.trie.KeyAnalyzer: boolean isPrefix(java.lang.Object,int,int,java.lang.Object)>($r4, $i1, $i0, r1);

        return $z1;
    }

    protected boolean inToRange(java.lang.Object, boolean)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        java.lang.Object r1, $r4;
        boolean z0, $z1;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r2;
        org.apache.commons.collections4.trie.KeyAnalyzer $r3;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.trie.KeyAnalyzer getKeyAnalyzer()>();

        $r4 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object prefix>;

        $i1 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int offsetInBits>;

        $i0 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int lengthInBits>;

        $z1 = virtualinvoke $r3.<org.apache.commons.collections4.trie.KeyAnalyzer: boolean isPrefix(java.lang.Object,int,int,java.lang.Object)>($r4, $i1, $i0, r1);

        return $z1;
    }

    protected java.util.Set createEntrySet()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet $r1;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r2;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        $r1 = new org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet;

        $r2 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        specialinvoke $r1.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet: void <init>(org.apache.commons.collections4.trie.AbstractPatriciaTrie,org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap)>($r2, r0);

        return $r1;
    }

    public java.lang.Object getFromKey()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        $r1 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object fromKey>;

        return $r1;
    }

    public java.lang.Object getToKey()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        $r1 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object toKey>;

        return $r1;
    }

    public boolean isFromInclusive()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        return 0;
    }

    public boolean isToInclusive()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        return 0;
    }

    protected java.util.SortedMap createRangeMap(java.lang.Object, boolean, java.lang.Object, boolean)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        java.lang.Object r1, r2;
        boolean z0, z1;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap $r3;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r4;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.Object;

        z1 := @parameter3: boolean;

        $r3 = new org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap;

        $r4 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        specialinvoke $r3.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap: void <init>(org.apache.commons.collections4.trie.AbstractPatriciaTrie,java.lang.Object,boolean,java.lang.Object,boolean)>($r4, r1, z0, r2, z1);

        return $r3;
    }

    public void clear()
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        java.util.Iterator r1;
        java.util.Set r2, $r4;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie $r3;
        java.lang.Object $r5, $r7;
        java.util.Map$Entry $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        $r3 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: org.apache.commons.collections4.trie.AbstractPatriciaTrie this$0>;

        $r4 = virtualinvoke $r3.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.util.Set keySet()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    void <init>(org.apache.commons.collections4.trie.AbstractPatriciaTrie, java.lang.Object, int, int, org.apache.commons.collections4.trie.AbstractPatriciaTrie$1)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie r1;
        java.lang.Object r2;
        int i0, i1;
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$1 r3;

        r0 := @this: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        r1 := @parameter0: org.apache.commons.collections4.trie.AbstractPatriciaTrie;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: org.apache.commons.collections4.trie.AbstractPatriciaTrie$1;

        specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: void <init>(org.apache.commons.collections4.trie.AbstractPatriciaTrie,java.lang.Object,int,int)>(r1, r2, i0, i1);

        return;
    }

    static int access$1100(org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        int $i0;

        r0 := @parameter0: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        $i0 = specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int fixup()>();

        return $i0;
    }

    static java.lang.Object access$1200(org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        $r1 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: java.lang.Object prefix>;

        return $r1;
    }

    static int access$1300(org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        int $i0;

        r0 := @parameter0: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        $i0 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int offsetInBits>;

        return $i0;
    }

    static int access$1400(org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap)
    {
        org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap r0;
        int $i0;

        r0 := @parameter0: org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap;

        $i0 = r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap: int lengthInBits>;

        return $i0;
    }
}
