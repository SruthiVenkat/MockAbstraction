public class org.apache.commons.collections4.keyvalue.TiedMapEntryTest extends org.apache.commons.collections4.keyvalue.AbstractMapEntryTest
{

    public void <init>()
    {
        org.apache.commons.collections4.keyvalue.TiedMapEntryTest r0;

        r0 := @this: org.apache.commons.collections4.keyvalue.TiedMapEntryTest;

        specialinvoke r0.<org.apache.commons.collections4.keyvalue.AbstractMapEntryTest: void <init>()>();

        return;
    }

    public java.util.Map$Entry makeMapEntry(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.keyvalue.TiedMapEntryTest r0;
        java.lang.Object r1, r2;
        java.util.HashMap $r4;
        org.apache.commons.collections4.keyvalue.TiedMapEntry $r6;

        r0 := @this: org.apache.commons.collections4.keyvalue.TiedMapEntryTest;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r6 = new org.apache.commons.collections4.keyvalue.TiedMapEntry;

        specialinvoke $r6.<org.apache.commons.collections4.keyvalue.TiedMapEntry: void <init>(java.util.Map,java.lang.Object)>($r4, r1);

        return $r6;
    }

    public void testConstructors()
    {
        org.apache.commons.collections4.keyvalue.TiedMapEntryTest r0;

        r0 := @this: org.apache.commons.collections4.keyvalue.TiedMapEntryTest;

        return;
    }

    public void testSetValue()
    {
        org.apache.commons.collections4.keyvalue.TiedMapEntryTest r0;
        java.util.HashMap $r2;
        org.apache.commons.collections4.keyvalue.TiedMapEntry $r6, $r12, $r18;
        java.lang.Object $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23;

        r0 := @this: org.apache.commons.collections4.keyvalue.TiedMapEntryTest;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("A", "a");

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("B", "b");

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("C", "c");

        $r6 = new org.apache.commons.collections4.keyvalue.TiedMapEntry;

        specialinvoke $r6.<org.apache.commons.collections4.keyvalue.TiedMapEntry: void <init>(java.util.Map,java.lang.Object)>($r2, "A");

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("A", $r7);

        $r8 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("a", $r8);

        $r9 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("x");

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("a", $r9);

        $r10 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("A", $r10);

        $r11 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("x", $r11);

        $r12 = new org.apache.commons.collections4.keyvalue.TiedMapEntry;

        specialinvoke $r12.<org.apache.commons.collections4.keyvalue.TiedMapEntry: void <init>(java.util.Map,java.lang.Object)>($r2, "B");

        $r13 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("B", $r13);

        $r14 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("b", $r14);

        $r15 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("y");

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("b", $r15);

        $r16 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("B", $r16);

        $r17 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("y", $r17);

        $r18 = new org.apache.commons.collections4.keyvalue.TiedMapEntry;

        specialinvoke $r18.<org.apache.commons.collections4.keyvalue.TiedMapEntry: void <init>(java.util.Map,java.lang.Object)>($r2, "C");

        $r19 = interfaceinvoke $r18.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("C", $r19);

        $r20 = interfaceinvoke $r18.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("c", $r20);

        $r21 = interfaceinvoke $r18.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("z");

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("c", $r21);

        $r22 = interfaceinvoke $r18.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("C", $r22);

        $r23 = interfaceinvoke $r18.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("z", $r23);

        return;
    }
}
