class org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch extends java.lang.Object
{
    java.util.List leaves;

    void <init>()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: java.util.List leaves> = $r1;

        return;
    }

    org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf addLeaf()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch r0;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf $r1, $r4;
        java.util.List $r2, $r3;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch;

        $r2 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: java.util.List leaves>;

        $r1 = new org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf: void <init>()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r3 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: java.util.List leaves>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf getLeaf(int)>($i1);

        return $r4;
    }

    org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf getLeaf(int)
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf $r3;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: java.util.List leaves>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf) $r2;

        return $r3;
    }

    java.util.Iterator leafIterator()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch;

        $r1 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: java.util.List leaves>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }
}
