public class org.apache.commons.collections4.functors.WhileClosure extends java.lang.Object implements org.apache.commons.collections4.Closure
{
    private final org.apache.commons.collections4.Predicate iPredicate;
    private final org.apache.commons.collections4.Closure iClosure;
    private final boolean iDoLoop;

    public static org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate, org.apache.commons.collections4.Closure, boolean)
    {
        org.apache.commons.collections4.Predicate r0;
        org.apache.commons.collections4.Closure r1;
        boolean z0;
        org.apache.commons.collections4.functors.WhileClosure $r2;
        java.lang.NullPointerException $r3, $r4;

        r0 := @parameter0: org.apache.commons.collections4.Predicate;

        r1 := @parameter1: org.apache.commons.collections4.Closure;

        z0 := @parameter2: boolean;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Closure must not be null");

        throw $r3;

     label2:
        $r2 = new org.apache.commons.collections4.functors.WhileClosure;

        specialinvoke $r2.<org.apache.commons.collections4.functors.WhileClosure: void <init>(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,boolean)>(r0, r1, z0);

        return $r2;
    }

    public void <init>(org.apache.commons.collections4.Predicate, org.apache.commons.collections4.Closure, boolean)
    {
        org.apache.commons.collections4.functors.WhileClosure r0;
        org.apache.commons.collections4.Predicate r1;
        org.apache.commons.collections4.Closure r2;
        boolean z0;

        r0 := @this: org.apache.commons.collections4.functors.WhileClosure;

        r1 := @parameter0: org.apache.commons.collections4.Predicate;

        r2 := @parameter1: org.apache.commons.collections4.Closure;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.functors.WhileClosure: org.apache.commons.collections4.Predicate iPredicate> = r1;

        r0.<org.apache.commons.collections4.functors.WhileClosure: org.apache.commons.collections4.Closure iClosure> = r2;

        r0.<org.apache.commons.collections4.functors.WhileClosure: boolean iDoLoop> = z0;

        return;
    }

    public void execute(java.lang.Object)
    {
        org.apache.commons.collections4.functors.WhileClosure r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        org.apache.commons.collections4.Closure $r2, $r3;
        org.apache.commons.collections4.Predicate $r4;

        r0 := @this: org.apache.commons.collections4.functors.WhileClosure;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections4.functors.WhileClosure: boolean iDoLoop>;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.commons.collections4.functors.WhileClosure: org.apache.commons.collections4.Closure iClosure>;

        interfaceinvoke $r3.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(r1);

     label1:
        $r4 = r0.<org.apache.commons.collections4.functors.WhileClosure: org.apache.commons.collections4.Predicate iPredicate>;

        $z1 = interfaceinvoke $r4.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r2 = r0.<org.apache.commons.collections4.functors.WhileClosure: org.apache.commons.collections4.Closure iClosure>;

        interfaceinvoke $r2.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(r1);

        goto label1;

     label2:
        return;
    }

    public org.apache.commons.collections4.Predicate getPredicate()
    {
        org.apache.commons.collections4.functors.WhileClosure r0;
        org.apache.commons.collections4.Predicate $r1;

        r0 := @this: org.apache.commons.collections4.functors.WhileClosure;

        $r1 = r0.<org.apache.commons.collections4.functors.WhileClosure: org.apache.commons.collections4.Predicate iPredicate>;

        return $r1;
    }

    public org.apache.commons.collections4.Closure getClosure()
    {
        org.apache.commons.collections4.functors.WhileClosure r0;
        org.apache.commons.collections4.Closure $r1;

        r0 := @this: org.apache.commons.collections4.functors.WhileClosure;

        $r1 = r0.<org.apache.commons.collections4.functors.WhileClosure: org.apache.commons.collections4.Closure iClosure>;

        return $r1;
    }

    public boolean isDoLoop()
    {
        org.apache.commons.collections4.functors.WhileClosure r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.functors.WhileClosure;

        $z0 = r0.<org.apache.commons.collections4.functors.WhileClosure: boolean iDoLoop>;

        return $z0;
    }
}
