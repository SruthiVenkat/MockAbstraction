public abstract class org.apache.commons.collections4.functors.AbstractPredicateTest extends java.lang.Object
{
    protected java.lang.Object cObject;
    protected java.lang.String cString;
    protected java.lang.Integer cInteger;

    public void <init>()
    {
        org.apache.commons.collections4.functors.AbstractPredicateTest r0;

        r0 := @this: org.apache.commons.collections4.functors.AbstractPredicateTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void initialiseTestObjects() throws java.lang.Exception
    {
        org.apache.commons.collections4.functors.AbstractPredicateTest r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;

        r0 := @this: org.apache.commons.collections4.functors.AbstractPredicateTest;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.functors.AbstractPredicateTest: java.lang.Object cObject> = $r1;

        r0.<org.apache.commons.collections4.functors.AbstractPredicateTest: java.lang.String cString> = "Hello";

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        r0.<org.apache.commons.collections4.functors.AbstractPredicateTest: java.lang.Integer cInteger> = $r2;

        return;
    }

    public void predicateSanityTests() throws java.lang.Exception
    {
        org.apache.commons.collections4.functors.AbstractPredicateTest r0;
        org.apache.commons.collections4.Predicate r1;

        r0 := @this: org.apache.commons.collections4.functors.AbstractPredicateTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractPredicateTest: org.apache.commons.collections4.Predicate generatePredicate()>();

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1);

        return;
    }

    protected abstract org.apache.commons.collections4.Predicate generatePredicate();

    protected void assertFalse(org.apache.commons.collections4.Predicate, java.lang.Object)
    {
        org.apache.commons.collections4.functors.AbstractPredicateTest r0;
        org.apache.commons.collections4.Predicate r1;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.functors.AbstractPredicateTest;

        r1 := @parameter0: org.apache.commons.collections4.Predicate;

        r2 := @parameter1: java.lang.Object;

        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r2);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        return;
    }

    protected void assertTrue(org.apache.commons.collections4.Predicate, java.lang.Object)
    {
        org.apache.commons.collections4.functors.AbstractPredicateTest r0;
        org.apache.commons.collections4.Predicate r1;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.functors.AbstractPredicateTest;

        r1 := @parameter0: org.apache.commons.collections4.Predicate;

        r2 := @parameter1: java.lang.Object;

        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r2);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        return;
    }
}
