public class org.apache.commons.collections4.map.CompositeMap extends org.apache.commons.collections4.map.AbstractIterableMap implements java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.Map[] composite;
    private org.apache.commons.collections4.map.CompositeMap$MapMutator mutator;

    public void <init>()
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.util.Map[] $r1;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        $r1 = newarray (java.util.Map)[0];

        specialinvoke r0.<org.apache.commons.collections4.map.CompositeMap: void <init>(java.util.Map[],org.apache.commons.collections4.map.CompositeMap$MapMutator)>($r1, null);

        return;
    }

    public void <init>(java.util.Map, java.util.Map)
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.util.Map r1, r2;
        java.util.Map[] $r3;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        $r3 = newarray (java.util.Map)[2];

        $r3[0] = r1;

        $r3[1] = r2;

        specialinvoke r0.<org.apache.commons.collections4.map.CompositeMap: void <init>(java.util.Map[],org.apache.commons.collections4.map.CompositeMap$MapMutator)>($r3, null);

        return;
    }

    public void <init>(java.util.Map, java.util.Map, org.apache.commons.collections4.map.CompositeMap$MapMutator)
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.util.Map r1, r2;
        org.apache.commons.collections4.map.CompositeMap$MapMutator r3;
        java.util.Map[] $r4;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: org.apache.commons.collections4.map.CompositeMap$MapMutator;

        $r4 = newarray (java.util.Map)[2];

        $r4[0] = r1;

        $r4[1] = r2;

        specialinvoke r0.<org.apache.commons.collections4.map.CompositeMap: void <init>(java.util.Map[],org.apache.commons.collections4.map.CompositeMap$MapMutator)>($r4, r3);

        return;
    }

    public transient void <init>(java.util.Map[])
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.util.Map[] r1;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.util.Map[];

        specialinvoke r0.<org.apache.commons.collections4.map.CompositeMap: void <init>(java.util.Map[],org.apache.commons.collections4.map.CompositeMap$MapMutator)>(r1, null);

        return;
    }

    public void <init>(java.util.Map[], org.apache.commons.collections4.map.CompositeMap$MapMutator)
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.util.Map[] r1, $r3;
        org.apache.commons.collections4.map.CompositeMap$MapMutator r2;
        int $i0, i1;
        java.util.Map $r4;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.util.Map[];

        r2 := @parameter1: org.apache.commons.collections4.map.CompositeMap$MapMutator;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractIterableMap: void <init>()>();

        r0.<org.apache.commons.collections4.map.CompositeMap: org.apache.commons.collections4.map.CompositeMap$MapMutator mutator> = r2;

        $r3 = newarray (java.util.Map)[0];

        r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite> = $r3;

        $i0 = lengthof r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = r1[i1];

        virtualinvoke r0.<org.apache.commons.collections4.map.CompositeMap: void addComposited(java.util.Map)>($r4);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    public void setMutator(org.apache.commons.collections4.map.CompositeMap$MapMutator)
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        org.apache.commons.collections4.map.CompositeMap$MapMutator r1;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: org.apache.commons.collections4.map.CompositeMap$MapMutator;

        r0.<org.apache.commons.collections4.map.CompositeMap: org.apache.commons.collections4.map.CompositeMap$MapMutator mutator> = r1;

        return;
    }

    public synchronized void addComposited(java.util.Map) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.util.Map r1, $r8, $r13;
        java.util.Collection r2;
        java.util.Map[] $r3, $r4, $r5, $r6, $r7, $r12, r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.util.Set $r9, $r10;
        org.apache.commons.collections4.map.CompositeMap$MapMutator $r11, $r14;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.util.Map;

        $r3 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i0 = lengthof $r3;

        i7 = $i0 - 1;

     label1:
        if i7 < 0 goto label4;

        $r7 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r8 = $r7[i7];

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>();

        $r10 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection intersection(java.lang.Iterable,java.lang.Iterable)>($r9, $r10);

        $i6 = interfaceinvoke r2.<java.util.Collection: int size()>();

        if $i6 == 0 goto label3;

        $r11 = r0.<org.apache.commons.collections4.map.CompositeMap: org.apache.commons.collections4.map.CompositeMap$MapMutator mutator>;

        if $r11 != null goto label2;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key collision adding Map to CompositeMap");

        throw $r15;

     label2:
        $r14 = r0.<org.apache.commons.collections4.map.CompositeMap: org.apache.commons.collections4.map.CompositeMap$MapMutator mutator>;

        $r12 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r13 = $r12[i7];

        interfaceinvoke $r14.<org.apache.commons.collections4.map.CompositeMap$MapMutator: void resolveCollision(org.apache.commons.collections4.map.CompositeMap,java.util.Map,java.util.Map,java.util.Collection)>(r0, $r13, r1, r2);

     label3:
        i7 = i7 + -1;

        goto label1;

     label4:
        $r4 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i1 = lengthof $r4;

        $i2 = $i1 + 1;

        r16 = newarray (java.util.Map)[$i2];

        $r6 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r5 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i3 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r16, 0, $i3);

        $i4 = lengthof r16;

        $i5 = $i4 - 1;

        r16[$i5] = r1;

        r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite> = r16;

        return;
    }

    public synchronized java.util.Map removeComposited(java.util.Map)
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.util.Map r1, $r5;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.util.Map[] r2, $r3, $r4, $r6, $r7;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.util.Map;

        $r3 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        i0 = lengthof $r3;

        i5 = 0;

     label1:
        if i5 >= i0 goto label3;

        $r4 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r5 = $r4[i5];

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $i1 = i0 - 1;

        r2 = newarray (java.util.Map)[$i1];

        $r6 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r2, 0, i5);

        $r7 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i4 = i5 + 1;

        $i2 = i0 - i5;

        $i3 = $i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i4, r2, i5, $i3);

        r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite> = r2;

        return r1;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return null;
    }

    public void clear()
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.util.Map[] $r1, $r2;
        int $i0, i1;
        java.util.Map $r3;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        $r1 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i0 = lengthof $r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r3 = $r2[i1];

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.lang.Object r1;
        java.util.Map[] $r2, $r3;
        int $i0, i1;
        java.util.Map $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i0 = lengthof $r2;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r4 = $r3[i1];

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.lang.Object r1;
        java.util.Map[] $r2, $r3;
        int $i0, i1;
        java.util.Map $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i0 = lengthof $r2;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r4 = $r3[i1];

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    public java.util.Set entrySet()
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        org.apache.commons.collections4.set.CompositeSet $r2;
        java.util.Map[] $r3, $r4;
        int $i0, i1;
        java.util.Map $r5;
        java.util.Set $r6;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        $r2 = new org.apache.commons.collections4.set.CompositeSet;

        specialinvoke $r2.<org.apache.commons.collections4.set.CompositeSet: void <init>()>();

        $r3 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i0 = lengthof $r3;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r5 = $r4[i1];

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        virtualinvoke $r2.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set)>($r6);

        i1 = i1 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.lang.Object r1, $r7;
        java.util.Map[] $r2, $r3, $r5;
        int $i0, i1;
        java.util.Map $r4, $r6;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i0 = lengthof $r2;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r4 = $r3[i1];

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r6 = $r5[i1];

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r7;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return null;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.util.Map[] $r1, $r2;
        int $i0, i1;
        java.util.Map $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        $r1 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i0 = lengthof $r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r3 = $r2[i1];

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 1;
    }

    public java.util.Set keySet()
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        org.apache.commons.collections4.set.CompositeSet $r2;
        java.util.Map[] $r3, $r4;
        int $i0, i1;
        java.util.Map $r5;
        java.util.Set $r6;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        $r2 = new org.apache.commons.collections4.set.CompositeSet;

        specialinvoke $r2.<org.apache.commons.collections4.set.CompositeSet: void <init>()>();

        $r3 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i0 = lengthof $r3;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r5 = $r4[i1];

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        virtualinvoke $r2.<org.apache.commons.collections4.set.CompositeSet: void addComposited(java.util.Set)>($r6);

        i1 = i1 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.lang.Object r1, r2, $r6;
        org.apache.commons.collections4.map.CompositeMap$MapMutator $r3, $r5;
        java.util.Map[] $r4;
        java.lang.UnsupportedOperationException $r7;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.commons.collections4.map.CompositeMap: org.apache.commons.collections4.map.CompositeMap$MapMutator mutator>;

        if $r3 != null goto label1;

        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No mutator specified");

        throw $r7;

     label1:
        $r5 = r0.<org.apache.commons.collections4.map.CompositeMap: org.apache.commons.collections4.map.CompositeMap$MapMutator mutator>;

        $r4 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.collections4.map.CompositeMap$MapMutator: java.lang.Object put(org.apache.commons.collections4.map.CompositeMap,java.util.Map[],java.lang.Object,java.lang.Object)>(r0, $r4, r1, r2);

        return $r6;
    }

    public void putAll(java.util.Map)
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.util.Map r1;
        org.apache.commons.collections4.map.CompositeMap$MapMutator $r2, $r4;
        java.util.Map[] $r3;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.commons.collections4.map.CompositeMap: org.apache.commons.collections4.map.CompositeMap$MapMutator mutator>;

        if $r2 != null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No mutator specified");

        throw $r5;

     label1:
        $r4 = r0.<org.apache.commons.collections4.map.CompositeMap: org.apache.commons.collections4.map.CompositeMap$MapMutator mutator>;

        $r3 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        interfaceinvoke $r4.<org.apache.commons.collections4.map.CompositeMap$MapMutator: void putAll(org.apache.commons.collections4.map.CompositeMap,java.util.Map[],java.util.Map)>(r0, $r3, r1);

        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.lang.Object r1, $r7;
        java.util.Map[] $r2, $r3, $r5;
        int $i0, i1;
        java.util.Map $r4, $r6;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i0 = lengthof $r2;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r4 = $r3[i1];

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r6 = $r5[i1];

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return $r7;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return null;
    }

    public int size()
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.util.Map[] $r1, $r2;
        int $i0, $i1, i2, i3;
        java.util.Map $r3;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        i2 = 0;

        $r1 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i0 = lengthof $r1;

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label2;

        $r2 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r3 = $r2[i3];

        $i1 = interfaceinvoke $r3.<java.util.Map: int size()>();

        i2 = i2 + $i1;

        i3 = i3 + -1;

        goto label1;

     label2:
        return i2;
    }

    public java.util.Collection values()
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        org.apache.commons.collections4.collection.CompositeCollection $r2;
        java.util.Map[] $r3, $r4;
        int $i0, i1;
        java.util.Map $r5;
        java.util.Collection $r6;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        $r2 = new org.apache.commons.collections4.collection.CompositeCollection;

        specialinvoke $r2.<org.apache.commons.collections4.collection.CompositeCollection: void <init>()>();

        $r3 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $i0 = lengthof $r3;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Map[] composite>;

        $r5 = $r4[i1];

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        virtualinvoke $r2.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection)>($r6);

        i1 = i1 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.lang.Object r1;
        java.util.Map r2;
        boolean $z0, $z1;
        java.util.Set $r3, $r4;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Map;

        if $z0 == 0 goto label1;

        r2 = (java.util.Map) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.map.CompositeMap r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0, i1;

        r0 := @this: org.apache.commons.collections4.map.CompositeMap;

        i1 = 0;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.CompositeMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r4;

        $i0 = interfaceinvoke r2.<java.util.Map$Entry: int hashCode()>();

        i1 = i1 + $i0;

        goto label1;

     label2:
        return i1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.map.CompositeMap: long serialVersionUID> = -6096931280583808322L;

        return;
    }
}
