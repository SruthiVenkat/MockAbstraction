public class org.apache.commons.collections4.functors.ChainedClosure extends java.lang.Object implements org.apache.commons.collections4.Closure, java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.apache.commons.collections4.Closure[] iClosures;

    public static transient org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])
    {
        org.apache.commons.collections4.Closure[] r0;
        int $i0;
        org.apache.commons.collections4.functors.ChainedClosure $r1;
        org.apache.commons.collections4.Closure $r2;

        r0 := @parameter0: org.apache.commons.collections4.Closure[];

        staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: void validate(org.apache.commons.collections4.Closure[])>(r0);

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure nopClosure()>();

        return $r2;

     label1:
        $r1 = new org.apache.commons.collections4.functors.ChainedClosure;

        specialinvoke $r1.<org.apache.commons.collections4.functors.ChainedClosure: void <init>(org.apache.commons.collections4.Closure[])>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Closure chainedClosure(java.util.Collection)
    {
        java.util.Collection r0;
        org.apache.commons.collections4.Closure[] r1;
        java.util.Iterator r2;
        org.apache.commons.collections4.Closure r3, $r6;
        int $i0, $i1, $i2, i3;
        boolean $z0;
        org.apache.commons.collections4.functors.ChainedClosure $r4;
        java.lang.Object $r5;
        java.lang.NullPointerException $r7;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("Closure collection must not be null");

        throw $r7;

     label1:
        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

        $r6 = staticinvoke <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure nopClosure()>();

        return $r6;

     label2:
        $i1 = interfaceinvoke r0.<java.util.Collection: int size()>();

        r1 = newarray (org.apache.commons.collections4.Closure)[$i1];

        i3 = 0;

        r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.commons.collections4.Closure) $r5;

        $i2 = i3;

        i3 = i3 + 1;

        r1[$i2] = r3;

        goto label3;

     label4:
        staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: void validate(org.apache.commons.collections4.Closure[])>(r1);

        $r4 = new org.apache.commons.collections4.functors.ChainedClosure;

        specialinvoke $r4.<org.apache.commons.collections4.functors.ChainedClosure: void <init>(boolean,org.apache.commons.collections4.Closure[])>(0, r1);

        return $r4;
    }

    private transient void <init>(boolean, org.apache.commons.collections4.Closure[])
    {
        org.apache.commons.collections4.functors.ChainedClosure r0;
        boolean z0;
        org.apache.commons.collections4.Closure[] r1, $r3;

        r0 := @this: org.apache.commons.collections4.functors.ChainedClosure;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.commons.collections4.Closure[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Closure[] copy(org.apache.commons.collections4.Closure[])>(r1);

        goto label2;

     label1:
        $r3 = r1;

     label2:
        r0.<org.apache.commons.collections4.functors.ChainedClosure: org.apache.commons.collections4.Closure[] iClosures> = $r3;

        return;
    }

    public transient void <init>(org.apache.commons.collections4.Closure[])
    {
        org.apache.commons.collections4.functors.ChainedClosure r0;
        org.apache.commons.collections4.Closure[] r1;

        r0 := @this: org.apache.commons.collections4.functors.ChainedClosure;

        r1 := @parameter0: org.apache.commons.collections4.Closure[];

        specialinvoke r0.<org.apache.commons.collections4.functors.ChainedClosure: void <init>(boolean,org.apache.commons.collections4.Closure[])>(1, r1);

        return;
    }

    public void execute(java.lang.Object)
    {
        org.apache.commons.collections4.functors.ChainedClosure r0;
        java.lang.Object r1;
        org.apache.commons.collections4.Closure[] r2;
        int i0, i1;
        org.apache.commons.collections4.Closure r3;

        r0 := @this: org.apache.commons.collections4.functors.ChainedClosure;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<org.apache.commons.collections4.functors.ChainedClosure: org.apache.commons.collections4.Closure[] iClosures>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        interfaceinvoke r3.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public org.apache.commons.collections4.Closure[] getClosures()
    {
        org.apache.commons.collections4.functors.ChainedClosure r0;
        org.apache.commons.collections4.Closure[] $r1, $r2;

        r0 := @this: org.apache.commons.collections4.functors.ChainedClosure;

        $r1 = r0.<org.apache.commons.collections4.functors.ChainedClosure: org.apache.commons.collections4.Closure[] iClosures>;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Closure[] copy(org.apache.commons.collections4.Closure[])>($r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.functors.ChainedClosure: long serialVersionUID> = -3520677225766901240L;

        return;
    }
}
