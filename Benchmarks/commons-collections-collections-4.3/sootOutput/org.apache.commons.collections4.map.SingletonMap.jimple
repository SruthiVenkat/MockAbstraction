public class org.apache.commons.collections4.map.SingletonMap extends java.lang.Object implements org.apache.commons.collections4.OrderedMap, org.apache.commons.collections4.BoundedMap, org.apache.commons.collections4.KeyValue, java.io.Serializable, java.lang.Cloneable
{
    private static final long serialVersionUID;
    private final java.lang.Object key;
    private java.lang.Object value;

    public void <init>()
    {
        org.apache.commons.collections4.map.SingletonMap r0;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object key> = null;

        return;
    }

    public void <init>(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object key> = r1;

        r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object value> = r2;

        return;
    }

    public void <init>(org.apache.commons.collections4.KeyValue)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        org.apache.commons.collections4.KeyValue r1;
        java.lang.Object $r2, $r3;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: org.apache.commons.collections4.KeyValue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<org.apache.commons.collections4.KeyValue: java.lang.Object getKey()>();

        r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object key> = $r2;

        $r3 = interfaceinvoke r1.<org.apache.commons.collections4.KeyValue: java.lang.Object getValue()>();

        r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object value> = $r3;

        return;
    }

    public void <init>(java.util.Map$Entry)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.util.Map$Entry r1;
        java.lang.Object $r2, $r3;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.util.Map$Entry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object key> = $r2;

        $r3 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object value> = $r3;

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.util.Map r1;
        java.util.Map$Entry r2;
        int $i0;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5, $r6, $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        if $i0 == 1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The map size must be 1");

        throw $r8;

     label1:
        $r3 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object key> = $r6;

        $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object value> = $r7;

        return;
    }

    public java.lang.Object getKey()
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r1 = r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object key>;

        return $r1;
    }

    public java.lang.Object getValue()
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r1 = r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object value>;

        return $r1;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object value>;

        r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object value> = r1;

        return r2;
    }

    public boolean isFull()
    {
        org.apache.commons.collections4.map.SingletonMap r0;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        return 1;
    }

    public int maxSize()
    {
        org.apache.commons.collections4.map.SingletonMap r0;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        return 1;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: boolean isEqualKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object value>;

        return $r2;

     label1:
        return null;
    }

    public int size()
    {
        org.apache.commons.collections4.map.SingletonMap r0;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        return 1;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections4.map.SingletonMap r0;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        return 0;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: boolean isEqualKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: boolean isEqualValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object r1, r2, $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: boolean isEqualKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object setValue(java.lang.Object)>(r2);

        return $r4;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot put new key/value pair - Map is fixed size singleton");

        throw $r3;
    }

    public void putAll(java.util.Map)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.util.Map r1;
        java.util.Map$Entry r2;
        int $i0;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5, $r6, $r7;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.util.Map;

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        return;

     label2:
        $r3 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        return;

     label3:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The map size must be 0 or 1");

        throw $r9;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void clear()
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public java.util.Set entrySet()
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        org.apache.commons.collections4.keyvalue.TiedMapEntry $r2;
        java.lang.Object $r3;
        java.util.Set $r4;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r2 = new org.apache.commons.collections4.keyvalue.TiedMapEntry;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getKey()>();

        specialinvoke $r2.<org.apache.commons.collections4.keyvalue.TiedMapEntry: void <init>(java.util.Map,java.lang.Object)>(r0, $r3);

        $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2);

        return $r4;
    }

    public java.util.Set keySet()
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object $r1;
        java.util.Set $r2;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r1 = r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object key>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        return $r2;
    }

    public java.util.Collection values()
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        org.apache.commons.collections4.map.SingletonMap$SingletonValues $r1;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r1 = new org.apache.commons.collections4.map.SingletonMap$SingletonValues;

        specialinvoke $r1.<org.apache.commons.collections4.map.SingletonMap$SingletonValues: void <init>(org.apache.commons.collections4.map.SingletonMap)>(r0);

        return $r1;
    }

    public org.apache.commons.collections4.OrderedMapIterator mapIterator()
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator $r1;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r1 = new org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator;

        specialinvoke $r1.<org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator: void <init>(org.apache.commons.collections4.map.SingletonMap)>(r0);

        return $r1;
    }

    public java.lang.Object firstKey()
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getKey()>();

        return $r1;
    }

    public java.lang.Object lastKey()
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getKey()>();

        return $r1;
    }

    public java.lang.Object nextKey(java.lang.Object)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    public java.lang.Object previousKey(java.lang.Object)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    protected boolean isEqualKey(java.lang.Object)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label2;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getKey()>();

        if $r3 != null goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getKey()>();

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

     label3:
        return $z0;
    }

    protected boolean isEqualValue(java.lang.Object)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label2;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getValue()>();

        if $r3 != null goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getValue()>();

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

     label3:
        return $z0;
    }

    public org.apache.commons.collections4.map.SingletonMap clone()
    {
        org.apache.commons.collections4.map.SingletonMap r0, $r3;
        java.lang.Object $r2;
        java.lang.CloneNotSupportedException $r4;
        java.lang.InternalError $r5;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.apache.commons.collections4.map.SingletonMap) $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.InternalError;

        specialinvoke $r5.<java.lang.InternalError: void <init>()>();

        throw $r5;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object r1, $r6, $r7, $r8;
        java.util.Map r2;
        java.util.Map$Entry r3;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        java.util.Set $r4;
        java.util.Iterator $r5;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof java.util.Map;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.util.Map) r1;

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        if $i0 == 1 goto label3;

        return 0;

     label3:
        $r4 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: boolean isEqualKey(java.lang.Object)>($r7);

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: boolean isEqualValue(java.lang.Object)>($r8);

        if $z2 == 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.Object $r1, $r2, $r3, $r4;
        int $i2, $i3, $i4;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getKey()>();

        if $r1 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getKey()>();

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getValue()>();

        if $r3 != null goto label3;

        $i3 = 0;

        goto label4;

     label3:
        $r4 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getValue()>();

        $i3 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label4:
        $i4 = $i2 ^ $i3;

        return $i4;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8;
        java.lang.Object $r3, $r6, $r10, $r11;
        java.lang.String $r9;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(128);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getKey()>();

        if $r3 != r0 goto label1;

        $r10 = "(this Map)";

        goto label2;

     label1:
        $r10 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getKey()>();

     label2:
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r6 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getValue()>();

        if $r6 != r0 goto label3;

        $r11 = "(this Map)";

        goto label4;

     label3:
        $r11 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: java.lang.Object getValue()>();

     label4:
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.commons.collections4.map.SingletonMap r0, $r1;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: org.apache.commons.collections4.map.SingletonMap clone()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.MapIterator mapIterator()
    {
        org.apache.commons.collections4.map.SingletonMap r0;
        org.apache.commons.collections4.OrderedMapIterator $r1;

        r0 := @this: org.apache.commons.collections4.map.SingletonMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.SingletonMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.map.SingletonMap: long serialVersionUID> = -8931271118676803261L;

        return;
    }
}
