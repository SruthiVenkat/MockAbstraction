public final class org.apache.commons.collections4.map.ReferenceMapTest$lambda_testCustomPurge_4d3b256b_1__121 extends java.lang.Object implements java.util.function.Consumer, java.io.Serializable
{
    java.util.List cap0;

    public static java.util.function.Consumer bootstrap$(java.util.List)
    {
        java.util.List $r0;
        org.apache.commons.collections4.map.ReferenceMapTest$lambda_testCustomPurge_4d3b256b_1__121 $r1;

        $r0 := @parameter0: java.util.List;

        $r1 = new org.apache.commons.collections4.map.ReferenceMapTest$lambda_testCustomPurge_4d3b256b_1__121;

        specialinvoke $r1.<org.apache.commons.collections4.map.ReferenceMapTest$lambda_testCustomPurge_4d3b256b_1__121: void <init>(java.util.List)>($r0);

        return $r1;
    }

    public void <init>(java.util.List)
    {
        org.apache.commons.collections4.map.ReferenceMapTest$lambda_testCustomPurge_4d3b256b_1__121 $r0;
        java.util.List $r1;

        $r0 := @this: org.apache.commons.collections4.map.ReferenceMapTest$lambda_testCustomPurge_4d3b256b_1__121;

        $r1 := @parameter0: java.util.List;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.commons.collections4.map.ReferenceMapTest$lambda_testCustomPurge_4d3b256b_1__121: java.util.List cap0> = $r1;

        return;
    }

    public void accept(java.lang.Object)
    {
        org.apache.commons.collections4.map.ReferenceMapTest$lambda_testCustomPurge_4d3b256b_1__121 $r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;
        java.util.List $r3;

        $r0 := @this: org.apache.commons.collections4.map.ReferenceMapTest$lambda_testCustomPurge_4d3b256b_1__121;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Integer) $r1;

        $r3 = $r0.<org.apache.commons.collections4.map.ReferenceMapTest$lambda_testCustomPurge_4d3b256b_1__121: java.util.List cap0>;

        staticinvoke <org.apache.commons.collections4.map.ReferenceMapTest: void lambda$testCustomPurge$4d3b256b$1(java.util.List,java.lang.Integer)>($r3, $r2);

        return;
    }
}
