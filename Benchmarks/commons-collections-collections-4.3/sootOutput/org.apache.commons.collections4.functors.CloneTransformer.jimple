public class org.apache.commons.collections4.functors.CloneTransformer extends java.lang.Object implements org.apache.commons.collections4.Transformer
{
    public static final org.apache.commons.collections4.Transformer INSTANCE;

    public static org.apache.commons.collections4.Transformer cloneTransformer()
    {
        org.apache.commons.collections4.Transformer $r0;

        $r0 = <org.apache.commons.collections4.functors.CloneTransformer: org.apache.commons.collections4.Transformer INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        org.apache.commons.collections4.functors.CloneTransformer r0;

        r0 := @this: org.apache.commons.collections4.functors.CloneTransformer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object transform(java.lang.Object)
    {
        org.apache.commons.collections4.functors.CloneTransformer r0;
        java.lang.Object r1, $r3;
        org.apache.commons.collections4.Factory $r2;

        r0 := @this: org.apache.commons.collections4.functors.CloneTransformer;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <org.apache.commons.collections4.functors.PrototypeFactory: org.apache.commons.collections4.Factory prototypeFactory(java.lang.Object)>(r1);

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.Factory: java.lang.Object create()>();

        return $r3;
    }

    static void <clinit>()
    {
        org.apache.commons.collections4.functors.CloneTransformer $r0;

        $r0 = new org.apache.commons.collections4.functors.CloneTransformer;

        specialinvoke $r0.<org.apache.commons.collections4.functors.CloneTransformer: void <init>()>();

        <org.apache.commons.collections4.functors.CloneTransformer: org.apache.commons.collections4.Transformer INSTANCE> = $r0;

        return;
    }
}
