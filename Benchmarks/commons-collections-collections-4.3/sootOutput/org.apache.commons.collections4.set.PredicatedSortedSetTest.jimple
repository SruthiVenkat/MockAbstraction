public class org.apache.commons.collections4.set.PredicatedSortedSetTest extends org.apache.commons.collections4.set.AbstractSortedSetTest
{
    protected org.apache.commons.collections4.Predicate truePredicate;
    protected org.apache.commons.collections4.Predicate testPredicate;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        java.lang.String r1;
        org.apache.commons.collections4.Predicate $r2;
        org.apache.commons.collections4.set.PredicatedSortedSetTest$1 $r3;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.set.AbstractSortedSetTest: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>();

        r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: org.apache.commons.collections4.Predicate truePredicate> = $r2;

        $r3 = new org.apache.commons.collections4.set.PredicatedSortedSetTest$1;

        specialinvoke $r3.<org.apache.commons.collections4.set.PredicatedSortedSetTest$1: void <init>(org.apache.commons.collections4.set.PredicatedSortedSetTest)>(r0);

        r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: org.apache.commons.collections4.Predicate testPredicate> = $r3;

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.BulkTest: junit.framework.TestSuite makeSuite(java.lang.Class)>(class "Lorg/apache/commons/collections4/set/PredicatedSortedSetTest;");

        return $r0;
    }

    public java.util.SortedSet makeObject()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        java.util.TreeSet $r1;
        org.apache.commons.collections4.Predicate $r2;
        org.apache.commons.collections4.set.PredicatedSortedSet $r3;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        $r1 = new java.util.TreeSet;

        specialinvoke $r1.<java.util.TreeSet: void <init>()>();

        $r2 = r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: org.apache.commons.collections4.Predicate truePredicate>;

        $r3 = staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSet: org.apache.commons.collections4.set.PredicatedSortedSet predicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)>($r1, $r2);

        return $r3;
    }

    public java.util.SortedSet makeFullCollection()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        java.util.TreeSet $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;
        org.apache.commons.collections4.Predicate $r5;
        org.apache.commons.collections4.set.PredicatedSortedSet $r6;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        $r2 = new java.util.TreeSet;

        specialinvoke $r2.<java.util.TreeSet: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: java.lang.Object[] getFullElements()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        virtualinvoke $r2.<java.util.TreeSet: boolean addAll(java.util.Collection)>($r4);

        $r5 = r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: org.apache.commons.collections4.Predicate truePredicate>;

        $r6 = staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSet: org.apache.commons.collections4.set.PredicatedSortedSet predicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)>($r2, $r5);

        return $r6;
    }

    protected org.apache.commons.collections4.set.PredicatedSortedSet makeTestSet()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        java.util.TreeSet $r1;
        org.apache.commons.collections4.Predicate $r2;
        org.apache.commons.collections4.set.PredicatedSortedSet $r3;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        $r1 = new java.util.TreeSet;

        specialinvoke $r1.<java.util.TreeSet: void <init>()>();

        $r2 = r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: org.apache.commons.collections4.Predicate testPredicate>;

        $r3 = staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSet: org.apache.commons.collections4.set.PredicatedSortedSet predicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)>($r1, $r2);

        return $r3;
    }

    public void testGetSet()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        org.apache.commons.collections4.set.PredicatedSortedSet r1;
        java.util.SortedSet $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: org.apache.commons.collections4.set.PredicatedSortedSet makeTestSet()>();

        $r3 = virtualinvoke r1.<org.apache.commons.collections4.set.PredicatedSortedSet: java.util.SortedSet decorated()>();

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSetTest: void assertTrue(java.lang.String,boolean)>("returned set should not be null", $z0);

        return;
    }

    public void testIllegalAdd()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        org.apache.commons.collections4.set.PredicatedSortedSet r1;
        boolean $z1, $z2;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: org.apache.commons.collections4.set.PredicatedSortedSet makeTestSet()>();

     label1:
        interfaceinvoke r1.<java.util.SortedSet: boolean add(java.lang.Object)>("B");

        staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSetTest: void fail(java.lang.String)>("Should fail string predicate.");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        $z1 = interfaceinvoke r1.<java.util.SortedSet: boolean contains(java.lang.Object)>("B");

        if $z1 != 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSetTest: void assertTrue(java.lang.String,boolean)>("Collection shouldn\'t contain illegal element", $z2);

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void testIllegalAddAll()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        org.apache.commons.collections4.set.PredicatedSortedSet r1;
        java.util.TreeSet $r4;
        boolean $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: org.apache.commons.collections4.set.PredicatedSortedSet makeTestSet()>();

        $r4 = new java.util.TreeSet;

        specialinvoke $r4.<java.util.TreeSet: void <init>()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>("Aone");

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>("Atwo");

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>("Bthree");

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>("Afour");

     label01:
        interfaceinvoke r1.<java.util.SortedSet: boolean addAll(java.util.Collection)>($r4);

        staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSetTest: void fail(java.lang.String)>("Should fail string predicate.");

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

     label04:
        $z5 = interfaceinvoke r1.<java.util.SortedSet: boolean contains(java.lang.Object)>("Aone");

        if $z5 != 0 goto label05;

        $z9 = 1;

        goto label06;

     label05:
        $z9 = 0;

     label06:
        staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSetTest: void assertTrue(java.lang.String,boolean)>("Set shouldn\'t contain illegal element", $z9);

        $z6 = interfaceinvoke r1.<java.util.SortedSet: boolean contains(java.lang.Object)>("Atwo");

        if $z6 != 0 goto label07;

        $z10 = 1;

        goto label08;

     label07:
        $z10 = 0;

     label08:
        staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSetTest: void assertTrue(java.lang.String,boolean)>("Set shouldn\'t contain illegal element", $z10);

        $z7 = interfaceinvoke r1.<java.util.SortedSet: boolean contains(java.lang.Object)>("Bthree");

        if $z7 != 0 goto label09;

        $z11 = 1;

        goto label10;

     label09:
        $z11 = 0;

     label10:
        staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSetTest: void assertTrue(java.lang.String,boolean)>("Set shouldn\'t contain illegal element", $z11);

        $z8 = interfaceinvoke r1.<java.util.SortedSet: boolean contains(java.lang.Object)>("Afour");

        if $z8 != 0 goto label11;

        $z12 = 1;

        goto label12;

     label11:
        $z12 = 0;

     label12:
        staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSetTest: void assertTrue(java.lang.String,boolean)>("Set shouldn\'t contain illegal element", $z12);

        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label03;
    }

    public void testComparator()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        org.apache.commons.collections4.set.PredicatedSortedSet r1;
        java.util.Comparator r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: org.apache.commons.collections4.set.PredicatedSortedSet makeTestSet()>();

        r2 = interfaceinvoke r1.<java.util.SortedSet: java.util.Comparator comparator()>();

        if r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.set.PredicatedSortedSetTest: void assertTrue(java.lang.String,boolean)>("natural order, so comparator should be null", $z0);

        return;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        return "4";
    }

    public volatile java.util.Set makeFullCollection()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        java.util.SortedSet $r1;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: java.util.SortedSet makeFullCollection()>();

        return $r1;
    }

    public volatile java.util.Set makeObject()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        java.util.SortedSet $r1;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: java.util.SortedSet makeObject()>();

        return $r1;
    }

    public volatile java.util.Collection makeFullCollection()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        java.util.SortedSet $r1;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: java.util.SortedSet makeFullCollection()>();

        return $r1;
    }

    public volatile java.util.Collection makeObject()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        java.util.SortedSet $r1;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: java.util.SortedSet makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.set.PredicatedSortedSetTest r0;
        java.util.SortedSet $r1;

        r0 := @this: org.apache.commons.collections4.set.PredicatedSortedSetTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.set.PredicatedSortedSetTest: java.util.SortedSet makeObject()>();

        return $r1;
    }
}
