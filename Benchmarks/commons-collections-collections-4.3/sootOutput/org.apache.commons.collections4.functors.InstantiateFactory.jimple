public class org.apache.commons.collections4.functors.InstantiateFactory extends java.lang.Object implements org.apache.commons.collections4.Factory
{
    private final java.lang.Class iClassToInstantiate;
    private final java.lang.Class[] iParamTypes;
    private final java.lang.Object[] iArgs;
    private transient java.lang.reflect.Constructor iConstructor;

    public static org.apache.commons.collections4.Factory instantiateFactory(java.lang.Class, java.lang.Class[], java.lang.Object[])
    {
        java.lang.Class r0;
        java.lang.Class[] r1;
        java.lang.Object[] r2;
        org.apache.commons.collections4.functors.InstantiateFactory $r3, $r4;
        int $i0, $i1, $i2;
        java.lang.NullPointerException $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class[];

        r2 := @parameter2: java.lang.Object[];

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Class to instantiate must not be null");

        throw $r5;

     label1:
        if r1 != null goto label2;

        if r2 != null goto label4;

     label2:
        if r1 == null goto label3;

        if r2 == null goto label4;

     label3:
        if r1 == null goto label5;

        if r2 == null goto label5;

        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label5;

     label4:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter types must match the arguments");

        throw $r6;

     label5:
        if r1 == null goto label6;

        $i0 = lengthof r1;

        if $i0 != 0 goto label7;

     label6:
        $r3 = new org.apache.commons.collections4.functors.InstantiateFactory;

        specialinvoke $r3.<org.apache.commons.collections4.functors.InstantiateFactory: void <init>(java.lang.Class)>(r0);

        return $r3;

     label7:
        $r4 = new org.apache.commons.collections4.functors.InstantiateFactory;

        specialinvoke $r4.<org.apache.commons.collections4.functors.InstantiateFactory: void <init>(java.lang.Class,java.lang.Class[],java.lang.Object[])>(r0, r1, r2);

        return $r4;
    }

    public void <init>(java.lang.Class)
    {
        org.apache.commons.collections4.functors.InstantiateFactory r0;
        java.lang.Class r1;

        r0 := @this: org.apache.commons.collections4.functors.InstantiateFactory;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.reflect.Constructor iConstructor> = null;

        r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.Class iClassToInstantiate> = r1;

        r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.Class[] iParamTypes> = null;

        r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.Object[] iArgs> = null;

        specialinvoke r0.<org.apache.commons.collections4.functors.InstantiateFactory: void findConstructor()>();

        return;
    }

    public void <init>(java.lang.Class, java.lang.Class[], java.lang.Object[])
    {
        org.apache.commons.collections4.functors.InstantiateFactory r0;
        java.lang.Class r1;
        java.lang.Class[] r2, $r5;
        java.lang.Object[] r3, $r7;
        java.lang.Object $r4, $r6;

        r0 := @this: org.apache.commons.collections4.functors.InstantiateFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class[];

        r3 := @parameter2: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.reflect.Constructor iConstructor> = null;

        r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.Class iClassToInstantiate> = r1;

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (java.lang.Class[]) $r4;

        r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.Class[] iParamTypes> = $r5;

        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Object clone()>();

        $r7 = (java.lang.Object[]) $r6;

        r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.Object[] iArgs> = $r7;

        specialinvoke r0.<org.apache.commons.collections4.functors.InstantiateFactory: void findConstructor()>();

        return;
    }

    private void findConstructor()
    {
        org.apache.commons.collections4.functors.InstantiateFactory r0;
        java.lang.Class[] $r2;
        java.lang.Class $r3;
        java.lang.reflect.Constructor $r4;
        java.lang.NoSuchMethodException $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.apache.commons.collections4.functors.InstantiateFactory;

     label1:
        $r3 = r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.Class iClassToInstantiate>;

        $r2 = r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.Class[] iParamTypes>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

        r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.reflect.Constructor iConstructor> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("InstantiateFactory: The constructor must exist and be public ");

        throw $r6;

     label4:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public java.lang.Object create()
    {
        org.apache.commons.collections4.functors.InstantiateFactory r0;
        java.lang.reflect.Constructor $r1, $r3;
        java.lang.Object[] $r2;
        java.lang.Object $r4;
        java.lang.reflect.InvocationTargetException $r5;
        org.apache.commons.collections4.FunctorException $r6, $r8, $r10;
        java.lang.IllegalAccessException $r7;
        java.lang.InstantiationException $r9;

        r0 := @this: org.apache.commons.collections4.functors.InstantiateFactory;

        $r1 = r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.reflect.Constructor iConstructor>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.apache.commons.collections4.functors.InstantiateFactory: void findConstructor()>();

     label1:
        $r3 = r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.reflect.Constructor iConstructor>;

        $r2 = r0.<org.apache.commons.collections4.functors.InstantiateFactory: java.lang.Object[] iArgs>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r2);

     label2:
        return $r4;

     label3:
        $r9 := @caughtexception;

        $r10 = new org.apache.commons.collections4.FunctorException;

        specialinvoke $r10.<org.apache.commons.collections4.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>("InstantiateFactory: InstantiationException", $r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new org.apache.commons.collections4.FunctorException;

        specialinvoke $r8.<org.apache.commons.collections4.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>("InstantiateFactory: Constructor must be public", $r7);

        throw $r8;

     label5:
        $r5 := @caughtexception;

        $r6 = new org.apache.commons.collections4.FunctorException;

        specialinvoke $r6.<org.apache.commons.collections4.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>("InstantiateFactory: Constructor threw an exception", $r5);

        throw $r6;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }
}
