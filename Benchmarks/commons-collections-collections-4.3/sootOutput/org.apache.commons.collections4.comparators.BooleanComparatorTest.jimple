public class org.apache.commons.collections4.comparators.BooleanComparatorTest extends org.apache.commons.collections4.comparators.AbstractComparatorTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.comparators.AbstractComparatorTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public java.util.Comparator makeObject()
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;
        org.apache.commons.collections4.comparators.BooleanComparator $r1;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        $r1 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r1.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>()>();

        return $r1;
    }

    public java.util.List getComparableObjectsOrdered()
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;
        java.util.ArrayList $r2;
        java.lang.Boolean $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.lang.Boolean;

        specialinvoke $r3.<java.lang.Boolean: void <init>(boolean)>(0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = new java.lang.Boolean;

        specialinvoke $r5.<java.lang.Boolean: void <init>(boolean)>(0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = new java.lang.Boolean;

        specialinvoke $r7.<java.lang.Boolean: void <init>(boolean)>(1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r8);

        return $r2;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        return "4";
    }

    public void testConstructors()
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;
        org.apache.commons.collections4.comparators.BooleanComparator $r1, $r2, $r3;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        $r1 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r1.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>()>();

        virtualinvoke r0.<org.apache.commons.collections4.comparators.BooleanComparatorTest: void allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)>(0, $r1);

        $r2 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r2.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>(boolean)>(0);

        virtualinvoke r0.<org.apache.commons.collections4.comparators.BooleanComparatorTest: void allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)>(0, $r2);

        $r3 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r3.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>(boolean)>(1);

        virtualinvoke r0.<org.apache.commons.collections4.comparators.BooleanComparatorTest: void allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)>(1, $r3);

        return;
    }

    public void testStaticFactoryMethods()
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;
        org.apache.commons.collections4.comparators.BooleanComparator $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        $r1 = staticinvoke <org.apache.commons.collections4.comparators.BooleanComparator: org.apache.commons.collections4.comparators.BooleanComparator getFalseFirstComparator()>();

        virtualinvoke r0.<org.apache.commons.collections4.comparators.BooleanComparatorTest: void allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)>(0, $r1);

        $r2 = staticinvoke <org.apache.commons.collections4.comparators.BooleanComparator: org.apache.commons.collections4.comparators.BooleanComparator booleanComparator(boolean)>(0);

        virtualinvoke r0.<org.apache.commons.collections4.comparators.BooleanComparatorTest: void allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)>(0, $r2);

        $r3 = staticinvoke <org.apache.commons.collections4.comparators.BooleanComparator: org.apache.commons.collections4.comparators.BooleanComparator getTrueFirstComparator()>();

        virtualinvoke r0.<org.apache.commons.collections4.comparators.BooleanComparatorTest: void allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)>(1, $r3);

        $r4 = staticinvoke <org.apache.commons.collections4.comparators.BooleanComparator: org.apache.commons.collections4.comparators.BooleanComparator booleanComparator(boolean)>(1);

        virtualinvoke r0.<org.apache.commons.collections4.comparators.BooleanComparatorTest: void allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)>(1, $r4);

        return;
    }

    public void testEqualsCompatibleInstance()
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;
        org.apache.commons.collections4.comparators.BooleanComparator $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        $r1 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r1.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>()>();

        $r2 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r2.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>(boolean)>(0);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r3 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r3.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>(boolean)>(0);

        $r4 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r4.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>(boolean)>(0);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r5 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r5.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>(boolean)>(0);

        $r6 = staticinvoke <org.apache.commons.collections4.comparators.BooleanComparator: org.apache.commons.collections4.comparators.BooleanComparator getFalseFirstComparator()>();

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r7 = staticinvoke <org.apache.commons.collections4.comparators.BooleanComparator: org.apache.commons.collections4.comparators.BooleanComparator getFalseFirstComparator()>();

        $r8 = staticinvoke <org.apache.commons.collections4.comparators.BooleanComparator: org.apache.commons.collections4.comparators.BooleanComparator booleanComparator(boolean)>(0);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertSame(java.lang.Object,java.lang.Object)>($r7, $r8);

        $r9 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r9.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>(boolean)>(1);

        $r10 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r10.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>(boolean)>(1);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r11 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r11.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>(boolean)>(1);

        $r12 = staticinvoke <org.apache.commons.collections4.comparators.BooleanComparator: org.apache.commons.collections4.comparators.BooleanComparator getTrueFirstComparator()>();

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12);

        $r13 = staticinvoke <org.apache.commons.collections4.comparators.BooleanComparator: org.apache.commons.collections4.comparators.BooleanComparator getTrueFirstComparator()>();

        $r14 = staticinvoke <org.apache.commons.collections4.comparators.BooleanComparator: org.apache.commons.collections4.comparators.BooleanComparator booleanComparator(boolean)>(1);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertSame(java.lang.Object,java.lang.Object)>($r13, $r14);

        $r15 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r15.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>()>();

        $r16 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r16.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>(boolean)>(1);

        $z0 = virtualinvoke $r15.<org.apache.commons.collections4.comparators.BooleanComparator: boolean equals(java.lang.Object)>($r16);

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertTrue(boolean)>($z2);

        $r17 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r17.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>(boolean)>(1);

        $r18 = new org.apache.commons.collections4.comparators.BooleanComparator;

        specialinvoke $r18.<org.apache.commons.collections4.comparators.BooleanComparator: void <init>(boolean)>(0);

        $z1 = virtualinvoke $r17.<org.apache.commons.collections4.comparators.BooleanComparator: boolean equals(java.lang.Object)>($r18);

        if $z1 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertTrue(boolean)>($z3);

        return;
    }

    protected void allTests(boolean, org.apache.commons.collections4.comparators.BooleanComparator)
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;
        boolean z0;
        org.apache.commons.collections4.comparators.BooleanComparator r1;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.commons.collections4.comparators.BooleanComparator;

        virtualinvoke r0.<org.apache.commons.collections4.comparators.BooleanComparatorTest: void orderIndependentTests(org.apache.commons.collections4.comparators.BooleanComparator)>(r1);

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.commons.collections4.comparators.BooleanComparatorTest: void trueFirstTests(org.apache.commons.collections4.comparators.BooleanComparator)>(r1);

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.commons.collections4.comparators.BooleanComparatorTest: void falseFirstTests(org.apache.commons.collections4.comparators.BooleanComparator)>(r1);

     label2:
        return;
    }

    protected void trueFirstTests(org.apache.commons.collections4.comparators.BooleanComparator)
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;
        org.apache.commons.collections4.comparators.BooleanComparator r1;
        java.lang.Boolean $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        r1 := @parameter0: org.apache.commons.collections4.comparators.BooleanComparator;

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertNotNull(java.lang.Object)>(r1);

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>($r2, $r3);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertEquals(int,int)>(0, $i0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>($r4, $r5);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertEquals(int,int)>(0, $i1);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $i2 = virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>($r6, $r7);

        if $i2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertTrue(boolean)>($z0);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $i3 = virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>($r8, $r9);

        if $i3 >= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertTrue(boolean)>($z1);

        return;
    }

    protected void falseFirstTests(org.apache.commons.collections4.comparators.BooleanComparator)
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;
        org.apache.commons.collections4.comparators.BooleanComparator r1;
        java.lang.Boolean $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        r1 := @parameter0: org.apache.commons.collections4.comparators.BooleanComparator;

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertNotNull(java.lang.Object)>(r1);

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>($r2, $r3);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertEquals(int,int)>(0, $i0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>($r4, $r5);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertEquals(int,int)>(0, $i1);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $i2 = virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>($r6, $r7);

        if $i2 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertTrue(boolean)>($z0);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $i3 = virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>($r8, $r9);

        if $i3 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertTrue(boolean)>($z1);

        return;
    }

    protected void orderIndependentTests(org.apache.commons.collections4.comparators.BooleanComparator)
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;
        org.apache.commons.collections4.comparators.BooleanComparator r1;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        r1 := @parameter0: org.apache.commons.collections4.comparators.BooleanComparator;

        virtualinvoke r0.<org.apache.commons.collections4.comparators.BooleanComparatorTest: void nullArgumentTests(org.apache.commons.collections4.comparators.BooleanComparator)>(r1);

        return;
    }

    protected void nullArgumentTests(org.apache.commons.collections4.comparators.BooleanComparator)
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;
        org.apache.commons.collections4.comparators.BooleanComparator r1;
        java.lang.Boolean $r2, $r3, $r4, $r5;
        java.lang.NullPointerException $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        r1 := @parameter0: org.apache.commons.collections4.comparators.BooleanComparator;

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void assertNotNull(java.lang.Object)>(r1);

     label01:
        virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>(null, null);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void fail(java.lang.String)>("Expected NullPointerException");

     label02:
        goto label04;

     label03:
        $r10 := @caughtexception;

     label04:
        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>($r2, null);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void fail(java.lang.String)>("Expected NullPointerException");

     label05:
        goto label07;

     label06:
        $r8 := @caughtexception;

     label07:
        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>($r3, null);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void fail(java.lang.String)>("Expected NullPointerException");

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

     label10:
        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>(null, $r4);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void fail(java.lang.String)>("Expected NullPointerException");

     label11:
        goto label13;

     label12:
        $r7 := @caughtexception;

     label13:
        $r5 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke r1.<org.apache.commons.collections4.comparators.BooleanComparator: int compare(java.lang.Boolean,java.lang.Boolean)>(null, $r5);

        staticinvoke <org.apache.commons.collections4.comparators.BooleanComparatorTest: void fail(java.lang.String)>("Expected NullPointerException");

     label14:
        goto label16;

     label15:
        $r9 := @caughtexception;

     label16:
        return;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NullPointerException from label04 to label05 with label06;
        catch java.lang.NullPointerException from label07 to label08 with label09;
        catch java.lang.NullPointerException from label10 to label11 with label12;
        catch java.lang.NullPointerException from label13 to label14 with label15;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.comparators.BooleanComparatorTest r0;
        java.util.Comparator $r1;

        r0 := @this: org.apache.commons.collections4.comparators.BooleanComparatorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.comparators.BooleanComparatorTest: java.util.Comparator makeObject()>();

        return $r1;
    }
}
