public class org.apache.commons.collections4.trie.PatriciaTrie extends org.apache.commons.collections4.trie.AbstractPatriciaTrie
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.collections4.trie.PatriciaTrie r0;
        org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer $r1;

        r0 := @this: org.apache.commons.collections4.trie.PatriciaTrie;

        $r1 = new org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer;

        specialinvoke $r1.<org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: void <init>(org.apache.commons.collections4.trie.KeyAnalyzer)>($r1);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.commons.collections4.trie.PatriciaTrie r0;
        java.util.Map r1;
        org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer $r2;

        r0 := @this: org.apache.commons.collections4.trie.PatriciaTrie;

        r1 := @parameter0: java.util.Map;

        $r2 = new org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer;

        specialinvoke $r2.<org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: void <init>(org.apache.commons.collections4.trie.KeyAnalyzer,java.util.Map)>($r2, r1);

        return;
    }

    public volatile org.apache.commons.collections4.OrderedMapIterator mapIterator()
    {
        org.apache.commons.collections4.trie.PatriciaTrie r0;
        org.apache.commons.collections4.OrderedMapIterator $r1;

        r0 := @this: org.apache.commons.collections4.trie.PatriciaTrie;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

        return $r1;
    }

    public volatile java.util.Comparator comparator()
    {
        org.apache.commons.collections4.trie.PatriciaTrie r0;
        java.util.Comparator $r1;

        r0 := @this: org.apache.commons.collections4.trie.PatriciaTrie;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: java.util.Comparator comparator()>();

        return $r1;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        org.apache.commons.collections4.trie.PatriciaTrie r0;
        java.lang.Object r1, $r2;

        r0 := @this: org.apache.commons.collections4.trie.PatriciaTrie;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: java.lang.Object remove(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.Collection values()
    {
        org.apache.commons.collections4.trie.PatriciaTrie r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.collections4.trie.PatriciaTrie;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: java.util.Collection values()>();

        return $r1;
    }

    public volatile java.util.Set keySet()
    {
        org.apache.commons.collections4.trie.PatriciaTrie r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.trie.PatriciaTrie;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: java.util.Set keySet()>();

        return $r1;
    }

    public volatile java.util.Set entrySet()
    {
        org.apache.commons.collections4.trie.PatriciaTrie r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections4.trie.PatriciaTrie;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: java.util.Set entrySet()>();

        return $r1;
    }

    public volatile boolean containsKey(java.lang.Object)
    {
        org.apache.commons.collections4.trie.PatriciaTrie r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.trie.PatriciaTrie;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        org.apache.commons.collections4.trie.PatriciaTrie r0;
        java.lang.Object r1, $r2;

        r0 := @this: org.apache.commons.collections4.trie.PatriciaTrie;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: java.lang.Object get(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile int size()
    {
        org.apache.commons.collections4.trie.PatriciaTrie r0;
        int $i0;

        r0 := @this: org.apache.commons.collections4.trie.PatriciaTrie;

        $i0 = specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: int size()>();

        return $i0;
    }

    public volatile void clear()
    {
        org.apache.commons.collections4.trie.PatriciaTrie r0;

        r0 := @this: org.apache.commons.collections4.trie.PatriciaTrie;

        specialinvoke r0.<org.apache.commons.collections4.trie.AbstractPatriciaTrie: void clear()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.trie.PatriciaTrie: long serialVersionUID> = 4446367780901817838L;

        return;
    }
}
