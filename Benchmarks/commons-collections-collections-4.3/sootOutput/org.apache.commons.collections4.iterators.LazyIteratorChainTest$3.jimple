class org.apache.commons.collections4.iterators.LazyIteratorChainTest$3 extends java.lang.Object implements org.apache.commons.collections4.Predicate
{
    final org.apache.commons.collections4.iterators.LazyIteratorChainTest this$0;

    void <init>(org.apache.commons.collections4.iterators.LazyIteratorChainTest)
    {
        org.apache.commons.collections4.iterators.LazyIteratorChainTest$3 r0;
        org.apache.commons.collections4.iterators.LazyIteratorChainTest r1;

        r0 := @this: org.apache.commons.collections4.iterators.LazyIteratorChainTest$3;

        r1 := @parameter0: org.apache.commons.collections4.iterators.LazyIteratorChainTest;

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChainTest$3: org.apache.commons.collections4.iterators.LazyIteratorChainTest this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean evaluate(java.lang.Integer)
    {
        org.apache.commons.collections4.iterators.LazyIteratorChainTest$3 r0;
        java.lang.Integer r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.iterators.LazyIteratorChainTest$3;

        r1 := @parameter0: java.lang.Integer;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $i0 = virtualinvoke r1.<java.lang.Integer: int compareTo(java.lang.Integer)>($r2);

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public volatile boolean evaluate(java.lang.Object)
    {
        org.apache.commons.collections4.iterators.LazyIteratorChainTest$3 r0;
        java.lang.Object r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.iterators.LazyIteratorChainTest$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Integer) r1;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.iterators.LazyIteratorChainTest$3: boolean evaluate(java.lang.Integer)>($r2);

        return $z0;
    }
}
