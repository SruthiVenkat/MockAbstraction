public class org.apache.commons.collections4.bag.CollectionSortedBagTest extends org.apache.commons.collections4.collection.AbstractCollectionTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.bag.CollectionSortedBagTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.bag.CollectionSortedBagTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.collection.AbstractCollectionTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public boolean isNullSupported()
    {
        org.apache.commons.collections4.bag.CollectionSortedBagTest r0;

        r0 := @this: org.apache.commons.collections4.bag.CollectionSortedBagTest;

        return 0;
    }

    public org.apache.commons.collections4.Bag makeObject()
    {
        org.apache.commons.collections4.bag.CollectionSortedBagTest r0;
        org.apache.commons.collections4.bag.TreeBag $r1;
        org.apache.commons.collections4.SortedBag $r2;

        r0 := @this: org.apache.commons.collections4.bag.CollectionSortedBagTest;

        $r1 = new org.apache.commons.collections4.bag.TreeBag;

        specialinvoke $r1.<org.apache.commons.collections4.bag.TreeBag: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.collections4.bag.CollectionSortedBag: org.apache.commons.collections4.SortedBag collectionSortedBag(org.apache.commons.collections4.SortedBag)>($r1);

        return $r2;
    }

    public java.util.Collection makeConfirmedCollection()
    {
        org.apache.commons.collections4.bag.CollectionSortedBagTest r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections4.bag.CollectionSortedBagTest;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;
    }

    public java.util.Collection makeConfirmedFullCollection()
    {
        org.apache.commons.collections4.bag.CollectionSortedBagTest r0;
        java.util.Collection r1;
        java.lang.Object[] $r2;
        java.util.List $r3;

        r0 := @this: org.apache.commons.collections4.bag.CollectionSortedBagTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: java.util.Collection makeConfirmedCollection()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: java.lang.Object[] getFullElements()>();

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        interfaceinvoke r1.<java.util.Collection: boolean addAll(java.util.Collection)>($r3);

        return r1;
    }

    public java.lang.Object[] getFullNonNullElements()
    {
        org.apache.commons.collections4.bag.CollectionSortedBagTest r0;
        java.lang.Object[] r1, $r2;
        int $i0, $i1, i2;
        java.lang.Integer $r3;

        r0 := @this: org.apache.commons.collections4.bag.CollectionSortedBagTest;

        r1 = newarray (java.lang.Object)[30];

        i2 = 0;

     label1:
        if i2 >= 30 goto label2;

        $i0 = i2 + i2;

        $i1 = $i0 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = (java.lang.Object[]) r1;

        return $r2;
    }

    public java.lang.Object[] getOtherNonNullElements()
    {
        org.apache.commons.collections4.bag.CollectionSortedBagTest r0;
        java.lang.Object[] r1, $r2;
        int $i0, $i1, i2;
        java.lang.Integer $r3;

        r0 := @this: org.apache.commons.collections4.bag.CollectionSortedBagTest;

        r1 = newarray (java.lang.Object)[30];

        i2 = 0;

     label1:
        if i2 >= 30 goto label2;

        $i0 = i2 + i2;

        $i1 = $i0 + 2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = (java.lang.Object[]) r1;

        return $r2;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.bag.CollectionSortedBagTest r0;

        r0 := @this: org.apache.commons.collections4.bag.CollectionSortedBagTest;

        return "4";
    }

    public void testEmptyBagCompatibility() throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.bag.CollectionSortedBagTest r0;
        org.apache.commons.collections4.Bag r1, r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r3;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bag.CollectionSortedBagTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: org.apache.commons.collections4.Bag makeObject()>();

        $z0 = r1 instanceof java.io.Serializable;

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: boolean skipSerializedCanonicalTests()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: boolean isTestSerialization()>();

        if $z2 == 0 goto label3;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: java.lang.String getCanonicalEmptyCollectionName(java.lang.Object)>(r1);

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: java.lang.Object readExternalFormFromDisk(java.lang.String)>($r3);

        r2 = (org.apache.commons.collections4.Bag) $r4;

        $i0 = interfaceinvoke r2.<org.apache.commons.collections4.Bag: int size()>();

        if $i0 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.bag.CollectionSortedBagTest: void assertTrue(java.lang.String,boolean)>("Bag is empty", $z3);

        staticinvoke <org.apache.commons.collections4.bag.CollectionSortedBagTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r2);

     label3:
        return;
    }

    public void testFullBagCompatibility() throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.bag.CollectionSortedBagTest r0;
        org.apache.commons.collections4.SortedBag r1, r2;
        java.util.Collection $r3;
        boolean $z0, $z1, $z2;
        java.lang.String $r4;
        java.lang.Object $r5;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.bag.CollectionSortedBagTest;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: java.util.Collection makeFullCollection()>();

        r1 = (org.apache.commons.collections4.SortedBag) $r3;

        $z0 = r1 instanceof java.io.Serializable;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: boolean skipSerializedCanonicalTests()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: boolean isTestSerialization()>();

        if $z2 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: java.lang.String getCanonicalFullCollectionName(java.lang.Object)>(r1);

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: java.lang.Object readExternalFormFromDisk(java.lang.String)>($r4);

        r2 = (org.apache.commons.collections4.SortedBag) $r5;

        $i0 = interfaceinvoke r1.<org.apache.commons.collections4.SortedBag: int size()>();

        $i1 = interfaceinvoke r2.<org.apache.commons.collections4.SortedBag: int size()>();

        staticinvoke <org.apache.commons.collections4.bag.CollectionSortedBagTest: void assertEquals(java.lang.String,int,int)>("Bag is the right size", $i0, $i1);

        staticinvoke <org.apache.commons.collections4.bag.CollectionSortedBagTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r2);

     label1:
        return;
    }

    public volatile java.util.Collection makeObject()
    {
        org.apache.commons.collections4.bag.CollectionSortedBagTest r0;
        org.apache.commons.collections4.Bag $r1;

        r0 := @this: org.apache.commons.collections4.bag.CollectionSortedBagTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: org.apache.commons.collections4.Bag makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.bag.CollectionSortedBagTest r0;
        org.apache.commons.collections4.Bag $r1;

        r0 := @this: org.apache.commons.collections4.bag.CollectionSortedBagTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bag.CollectionSortedBagTest: org.apache.commons.collections4.Bag makeObject()>();

        return $r1;
    }
}
