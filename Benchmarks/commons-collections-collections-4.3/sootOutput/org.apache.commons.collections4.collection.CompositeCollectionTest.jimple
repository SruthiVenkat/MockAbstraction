public class org.apache.commons.collections4.collection.CompositeCollectionTest extends org.apache.commons.collections4.collection.AbstractCollectionTest
{
    protected org.apache.commons.collections4.collection.CompositeCollection c;
    protected java.util.Collection one;
    protected java.util.Collection two;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.collection.AbstractCollectionTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public boolean isAddSupported()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        return 0;
    }

    public boolean isRemoveSupported()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        return 0;
    }

    public java.util.Collection makeObject()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        org.apache.commons.collections4.collection.CompositeCollection $r1;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        $r1 = new org.apache.commons.collections4.collection.CompositeCollection;

        specialinvoke $r1.<org.apache.commons.collections4.collection.CompositeCollection: void <init>()>();

        return $r1;
    }

    public java.util.Collection makeConfirmedCollection()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.HashSet $r1;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        return $r1;
    }

    public java.lang.Object[] getFullElements()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.lang.Object[] $r1, $r2;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        $r1 = newarray (java.lang.Object)[4];

        $r1[0] = "1";

        $r1[1] = "2";

        $r1[2] = "3";

        $r1[3] = "4";

        $r2 = (java.lang.Object[]) $r1;

        return $r2;
    }

    public java.util.Collection makeFullCollection()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.lang.Object[] r2;
        int i0, i1;
        java.lang.Object r4;
        org.apache.commons.collections4.collection.CompositeCollection $r6;
        java.util.HashSet $r7;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        $r6 = new org.apache.commons.collections4.collection.CompositeCollection;

        specialinvoke $r6.<org.apache.commons.collections4.collection.CompositeCollection: void <init>()>();

        r2 = virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.lang.Object[] getFullElements()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r2[i1];

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r7.<java.util.Collection: boolean add(java.lang.Object)>(r4);

        virtualinvoke $r6.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r6;
    }

    public java.util.Collection makeConfirmedFullCollection()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.HashSet $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.lang.Object[] getFullElements()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        interfaceinvoke $r2.<java.util.Collection: boolean addAll(java.util.Collection)>($r4);

        return $r2;
    }

    public void testUnsupportedRemove()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.Collection $r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void resetFull()>();

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection getCollection()>();

        interfaceinvoke $r2.<java.util.Collection: boolean remove(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void fail(java.lang.String)>("remove should raise UnsupportedOperationException");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void verify()>();

        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    protected void setUpTest()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        org.apache.commons.collections4.collection.CompositeCollection $r1;
        java.util.HashSet $r2, $r3;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        $r1 = new org.apache.commons.collections4.collection.CompositeCollection;

        specialinvoke $r1.<org.apache.commons.collections4.collection.CompositeCollection: void <init>()>();

        r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two> = $r3;

        return;
    }

    protected void setUpMutatorTest()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        org.apache.commons.collections4.collection.CompositeCollectionTest$1 $r1;
        org.apache.commons.collections4.collection.CompositeCollection $r2;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpTest()>();

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r1 = new org.apache.commons.collections4.collection.CompositeCollectionTest$1;

        specialinvoke $r1.<org.apache.commons.collections4.collection.CompositeCollectionTest$1: void <init>(org.apache.commons.collections4.collection.CompositeCollectionTest)>(r0);

        virtualinvoke $r2.<org.apache.commons.collections4.collection.CompositeCollection: void setMutator(org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator)>($r1);

        return;
    }

    public void testSize()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.HashSet $r2;
        org.apache.commons.collections4.collection.CompositeCollection $r3, $r4;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpTest()>();

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>("a");

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>("b");

        $r3 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        virtualinvoke $r3.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection)>($r2);

        $i0 = virtualinvoke $r2.<java.util.HashSet: int size()>();

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $i1 = virtualinvoke $r4.<org.apache.commons.collections4.collection.CompositeCollection: int size()>();

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertEquals(int,int)>($i0, $i1);

        return;
    }

    public void testMultipleCollectionsSize()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.HashSet $r3, $r5;
        org.apache.commons.collections4.collection.CompositeCollection $r4, $r6, $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpTest()>();

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>("a");

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>("b");

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        virtualinvoke $r4.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection)>($r3);

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>("c");

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        virtualinvoke $r6.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection)>($r5);

        $i0 = virtualinvoke $r3.<java.util.HashSet: int size()>();

        $i1 = virtualinvoke $r5.<java.util.HashSet: int size()>();

        $i2 = $i0 + $i1;

        $r7 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $i3 = virtualinvoke $r7.<org.apache.commons.collections4.collection.CompositeCollection: int size()>();

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertEquals(int,int)>($i2, $i3);

        return;
    }

    public void testIsEmpty()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        org.apache.commons.collections4.collection.CompositeCollection $r2, $r4, $r5, $r6;
        boolean $z0, $z1, $z3, $z4;
        java.util.HashSet $r3;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpTest()>();

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z0 = virtualinvoke $r2.<org.apache.commons.collections4.collection.CompositeCollection: boolean isEmpty()>();

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z0);

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        virtualinvoke $r4.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection)>($r3);

        $r5 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z1 = virtualinvoke $r5.<org.apache.commons.collections4.collection.CompositeCollection: boolean isEmpty()>();

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z1);

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>("a");

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z3 = virtualinvoke $r6.<org.apache.commons.collections4.collection.CompositeCollection: boolean isEmpty()>();

        if $z3 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z4);

        return;
    }

    public void testIterator()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.Iterator r1;
        java.util.Collection $r2, $r3, $r4, $r6, $r10, $r12;
        org.apache.commons.collections4.collection.CompositeCollection $r5, $r7, $r8, $r9, $r11;
        boolean $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object r13, r14;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpTest()>();

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r3 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>("2");

        $r5 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        virtualinvoke $r5.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection)>($r4);

        $r7 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        virtualinvoke $r7.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection)>($r6);

        $r8 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        r1 = virtualinvoke $r8.<org.apache.commons.collections4.collection.CompositeCollection: java.util.Iterator iterator()>();

        r13 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r9 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z2 = virtualinvoke $r9.<org.apache.commons.collections4.collection.CompositeCollection: boolean contains(java.lang.Object)>(r13);

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z2);

        $r10 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $z3 = interfaceinvoke $r10.<java.util.Collection: boolean contains(java.lang.Object)>(r13);

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z3);

        r14 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        $r11 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z4 = virtualinvoke $r11.<org.apache.commons.collections4.collection.CompositeCollection: boolean contains(java.lang.Object)>(r14);

        if $z4 != 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z6);

        $r12 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        $z5 = interfaceinvoke $r12.<java.util.Collection: boolean contains(java.lang.Object)>(r14);

        if $z5 != 0 goto label3;

        $z7 = 1;

        goto label4;

     label3:
        $z7 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z7);

        return;
    }

    public void testClear()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.Collection $r1, $r2, $r3, $r4, $r7, $r8;
        org.apache.commons.collections4.collection.CompositeCollection $r5, $r6, $r9;
        boolean $z2, $z3, $z4;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpTest()>();

        $r1 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>("2");

        $r5 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $r3 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        virtualinvoke $r5.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection,java.util.Collection)>($r4, $r3);

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        virtualinvoke $r6.<org.apache.commons.collections4.collection.CompositeCollection: void clear()>();

        $r7 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $z2 = interfaceinvoke $r7.<java.util.Collection: boolean isEmpty()>();

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z2);

        $r8 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        $z3 = interfaceinvoke $r8.<java.util.Collection: boolean isEmpty()>();

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z3);

        $r9 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z4 = virtualinvoke $r9.<org.apache.commons.collections4.collection.CompositeCollection: boolean isEmpty()>();

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z4);

        return;
    }

    public void testContainsAll()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.Collection $r1, $r2, $r3, $r5;
        org.apache.commons.collections4.collection.CompositeCollection $r4, $r6;
        boolean $z2;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpTest()>();

        $r1 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r3 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        virtualinvoke $r4.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection)>($r3);

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r5 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        $z2 = virtualinvoke $r6.<org.apache.commons.collections4.collection.CompositeCollection: boolean containsAll(java.util.Collection)>($r5);

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z2);

        return;
    }

    public void testRetainAll()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.Collection $r1, $r2, $r3, $r4, $r6, $r9, $r11;
        org.apache.commons.collections4.collection.CompositeCollection $r5, $r7, $r8, $r10;
        boolean $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpTest()>();

        $r1 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>("2");

        $r3 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r5 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        virtualinvoke $r5.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection)>($r4);

        $r7 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        virtualinvoke $r7.<org.apache.commons.collections4.collection.CompositeCollection: boolean retainAll(java.util.Collection)>($r6);

        $r8 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z4 = virtualinvoke $r8.<org.apache.commons.collections4.collection.CompositeCollection: boolean contains(java.lang.Object)>("2");

        if $z4 != 0 goto label1;

        $z8 = 1;

        goto label2;

     label1:
        $z8 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z8);

        $r9 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $z5 = interfaceinvoke $r9.<java.util.Collection: boolean contains(java.lang.Object)>("2");

        if $z5 != 0 goto label3;

        $z9 = 1;

        goto label4;

     label3:
        $z9 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z9);

        $r10 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z6 = virtualinvoke $r10.<org.apache.commons.collections4.collection.CompositeCollection: boolean contains(java.lang.Object)>("1");

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z6);

        $r11 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $z7 = interfaceinvoke $r11.<java.util.Collection: boolean contains(java.lang.Object)>("1");

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z7);

        return;
    }

    public void testAddAllMutator()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        org.apache.commons.collections4.collection.CompositeCollectionTest$2 $r1;
        org.apache.commons.collections4.collection.CompositeCollection $r2, $r4, $r7, $r8;
        java.util.Collection $r3, $r5, $r6, $r9;
        boolean $z2, $z3;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpTest()>();

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r1 = new org.apache.commons.collections4.collection.CompositeCollectionTest$2;

        specialinvoke $r1.<org.apache.commons.collections4.collection.CompositeCollectionTest$2: void <init>(org.apache.commons.collections4.collection.CompositeCollectionTest)>(r0);

        virtualinvoke $r2.<org.apache.commons.collections4.collection.CompositeCollection: void setMutator(org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator)>($r1);

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r3 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        virtualinvoke $r4.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection)>($r3);

        $r5 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>("foo");

        $r7 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        virtualinvoke $r7.<org.apache.commons.collections4.collection.CompositeCollection: boolean addAll(java.util.Collection)>($r6);

        $r8 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z2 = virtualinvoke $r8.<org.apache.commons.collections4.collection.CompositeCollection: boolean contains(java.lang.Object)>("foo");

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z2);

        $r9 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $z3 = interfaceinvoke $r9.<java.util.Collection: boolean contains(java.lang.Object)>("foo");

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z3);

        return;
    }

    public void testAddMutator()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        org.apache.commons.collections4.collection.CompositeCollectionTest$3 $r1;
        org.apache.commons.collections4.collection.CompositeCollection $r2, $r4, $r5, $r6;
        java.util.Collection $r3, $r7;
        boolean $z1, $z2;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpTest()>();

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r1 = new org.apache.commons.collections4.collection.CompositeCollectionTest$3;

        specialinvoke $r1.<org.apache.commons.collections4.collection.CompositeCollectionTest$3: void <init>(org.apache.commons.collections4.collection.CompositeCollectionTest)>(r0);

        virtualinvoke $r2.<org.apache.commons.collections4.collection.CompositeCollection: void setMutator(org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator)>($r1);

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r3 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        virtualinvoke $r4.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection)>($r3);

        $r5 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        virtualinvoke $r5.<org.apache.commons.collections4.collection.CompositeCollection: boolean add(java.lang.Object)>("foo");

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z1 = virtualinvoke $r6.<org.apache.commons.collections4.collection.CompositeCollection: boolean contains(java.lang.Object)>("foo");

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z1);

        $r7 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $z2 = interfaceinvoke $r7.<java.util.Collection: boolean contains(java.lang.Object)>("foo");

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z2);

        return;
    }

    public void testToCollection()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.Collection r1, $r2, $r3, $r4, $r5, $r10;
        org.apache.commons.collections4.collection.CompositeCollection $r6, $r7, $r8, $r9, $r11;
        boolean $z2, $z4, $z5;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpTest()>();

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r3 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>("2");

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r5 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        virtualinvoke $r6.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection,java.util.Collection)>($r5, $r4);

        $r7 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        r1 = virtualinvoke $r7.<org.apache.commons.collections4.collection.CompositeCollection: java.util.Collection toCollection()>();

        $r8 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z2 = interfaceinvoke r1.<java.util.Collection: boolean containsAll(java.util.Collection)>($r8);

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z2);

        $r9 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $i0 = virtualinvoke $r9.<org.apache.commons.collections4.collection.CompositeCollection: int size()>();

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertEquals(int,int)>($i0, $i1);

        $r10 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>("3");

        $r11 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z4 = interfaceinvoke r1.<java.util.Collection: boolean containsAll(java.util.Collection)>($r11);

        if $z4 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z5);

        return;
    }

    public void testAddAllToCollection()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.Collection $r2, $r3, $r4, $r5;
        org.apache.commons.collections4.collection.CompositeCollection $r6, $r8, $r9, $r10;
        java.util.HashSet $r7;
        boolean $z3;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpTest()>();

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r3 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>("2");

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r5 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        virtualinvoke $r6.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection,java.util.Collection)>($r5, $r4);

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        $r8 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        interfaceinvoke $r7.<java.util.Collection: boolean addAll(java.util.Collection)>($r8);

        $r9 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z3 = interfaceinvoke $r7.<java.util.Collection: boolean containsAll(java.util.Collection)>($r9);

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z3);

        $r10 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $i0 = virtualinvoke $r10.<org.apache.commons.collections4.collection.CompositeCollection: int size()>();

        $i1 = interfaceinvoke $r7.<java.util.Collection: int size()>();

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertEquals(int,int)>($i0, $i1);

        return;
    }

    public void testRemove()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.Collection $r1, $r2, $r3, $r4, $r5, $r9, $r10;
        org.apache.commons.collections4.collection.CompositeCollection $r6, $r7, $r8;
        boolean $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpMutatorTest()>();

        $r1 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>("2");

        $r3 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r5 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        virtualinvoke $r6.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection,java.util.Collection)>($r5, $r4);

        $r7 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        virtualinvoke $r7.<org.apache.commons.collections4.collection.CompositeCollection: boolean remove(java.lang.Object)>("1");

        $r8 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z4 = virtualinvoke $r8.<org.apache.commons.collections4.collection.CompositeCollection: boolean contains(java.lang.Object)>("1");

        if $z4 != 0 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z7);

        $r9 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $z5 = interfaceinvoke $r9.<java.util.Collection: boolean contains(java.lang.Object)>("1");

        if $z5 != 0 goto label3;

        $z8 = 1;

        goto label4;

     label3:
        $z8 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z8);

        $r10 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        $z6 = interfaceinvoke $r10.<java.util.Collection: boolean contains(java.lang.Object)>("1");

        if $z6 != 0 goto label5;

        $z9 = 1;

        goto label6;

     label5:
        $z9 = 0;

     label6:
        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z9);

        return;
    }

    public void testRemoveAll()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.Collection $r2, $r3, $r4, $r6, $r7, $r8, $r12, $r13;
        java.util.ArrayList $r5;
        org.apache.commons.collections4.collection.CompositeCollection $r9, $r10, $r11;
        boolean $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpMutatorTest()>();

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r3 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>("2");

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r5 = new java.util.ArrayList;

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        $r9 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r8 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $r7 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        virtualinvoke $r9.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection,java.util.Collection)>($r8, $r7);

        $r10 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        virtualinvoke $r10.<org.apache.commons.collections4.collection.CompositeCollection: boolean removeAll(java.util.Collection)>($r5);

        $r11 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z4 = virtualinvoke $r11.<org.apache.commons.collections4.collection.CompositeCollection: boolean contains(java.lang.Object)>("1");

        if $z4 != 0 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z7);

        $r12 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $z5 = interfaceinvoke $r12.<java.util.Collection: boolean contains(java.lang.Object)>("1");

        if $z5 != 0 goto label3;

        $z8 = 1;

        goto label4;

     label3:
        $z8 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z8);

        $r13 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        $z6 = interfaceinvoke $r13.<java.util.Collection: boolean contains(java.lang.Object)>("1");

        if $z6 != 0 goto label5;

        $z9 = 1;

        goto label6;

     label5:
        $z9 = 0;

     label6:
        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z9);

        return;
    }

    public void testRemoveComposited()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.Collection $r1, $r2, $r3, $r4, $r5, $r7;
        org.apache.commons.collections4.collection.CompositeCollection $r6, $r8, $r9, $r10;
        boolean $z3;
        int $i0;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: void setUpMutatorTest()>();

        $r1 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r2 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>("2");

        $r3 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>("1");

        $r6 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r5 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        $r4 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection two>;

        virtualinvoke $r6.<org.apache.commons.collections4.collection.CompositeCollection: void addComposited(java.util.Collection,java.util.Collection)>($r5, $r4);

        $r8 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $r7 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection one>;

        virtualinvoke $r8.<org.apache.commons.collections4.collection.CompositeCollection: void removeComposited(java.util.Collection)>($r7);

        $r9 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $z3 = virtualinvoke $r9.<org.apache.commons.collections4.collection.CompositeCollection: boolean contains(java.lang.Object)>("1");

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertTrue(boolean)>($z3);

        $r10 = r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: org.apache.commons.collections4.collection.CompositeCollection c>;

        $i0 = virtualinvoke $r10.<org.apache.commons.collections4.collection.CompositeCollection: int size()>();

        staticinvoke <org.apache.commons.collections4.collection.CompositeCollectionTest: void assertEquals(int,int)>(2, $i0);

        return;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        return "4";
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.collection.CompositeCollectionTest r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.collections4.collection.CompositeCollectionTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.collection.CompositeCollectionTest: java.util.Collection makeObject()>();

        return $r1;
    }
}
