public class org.apache.commons.collections4.map.CaseInsensitiveMap extends org.apache.commons.collections4.map.AbstractHashedMap implements java.io.Serializable, java.lang.Cloneable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.collections4.map.CaseInsensitiveMap r0;

        r0 := @this: org.apache.commons.collections4.map.CaseInsensitiveMap;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractHashedMap: void <init>(int,float,int)>(16, 0.75F, 12);

        return;
    }

    public void <init>(int)
    {
        org.apache.commons.collections4.map.CaseInsensitiveMap r0;
        int i0;

        r0 := @this: org.apache.commons.collections4.map.CaseInsensitiveMap;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractHashedMap: void <init>(int)>(i0);

        return;
    }

    public void <init>(int, float)
    {
        org.apache.commons.collections4.map.CaseInsensitiveMap r0;
        int i0;
        float f0;

        r0 := @this: org.apache.commons.collections4.map.CaseInsensitiveMap;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractHashedMap: void <init>(int,float)>(i0, f0);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.commons.collections4.map.CaseInsensitiveMap r0;
        java.util.Map r1;

        r0 := @this: org.apache.commons.collections4.map.CaseInsensitiveMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractHashedMap: void <init>(java.util.Map)>(r1);

        return;
    }

    protected java.lang.Object convertKey(java.lang.Object)
    {
        org.apache.commons.collections4.map.CaseInsensitiveMap r0;
        java.lang.Object r1, $r3;
        char[] r2;
        java.lang.String $r4, $r5;
        int $i0, i4;
        char $c1, $c2, $c3;

        r0 := @this: org.apache.commons.collections4.map.CaseInsensitiveMap;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label3;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        r2 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        $i0 = lengthof r2;

        i4 = $i0 - 1;

     label1:
        if i4 < 0 goto label2;

        $c1 = r2[i4];

        $c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c2);

        r2[i4] = $c3;

        i4 = i4 + -1;

        goto label1;

     label2:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>(r2);

        return $r5;

     label3:
        $r3 = <org.apache.commons.collections4.map.AbstractHashedMap: java.lang.Object NULL>;

        return $r3;
    }

    public org.apache.commons.collections4.map.CaseInsensitiveMap clone()
    {
        org.apache.commons.collections4.map.CaseInsensitiveMap r0, $r2;
        org.apache.commons.collections4.map.AbstractHashedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.CaseInsensitiveMap;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractHashedMap: org.apache.commons.collections4.map.AbstractHashedMap clone()>();

        $r2 = (org.apache.commons.collections4.map.CaseInsensitiveMap) $r1;

        return $r2;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections4.map.CaseInsensitiveMap r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: org.apache.commons.collections4.map.CaseInsensitiveMap;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.CaseInsensitiveMap: void doWriteObject(java.io.ObjectOutputStream)>(r1);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.map.CaseInsensitiveMap r0;
        java.io.ObjectInputStream r1;

        r0 := @this: org.apache.commons.collections4.map.CaseInsensitiveMap;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.CaseInsensitiveMap: void doReadObject(java.io.ObjectInputStream)>(r1);

        return;
    }

    public volatile org.apache.commons.collections4.map.AbstractHashedMap clone()
    {
        org.apache.commons.collections4.map.CaseInsensitiveMap r0, $r1;

        r0 := @this: org.apache.commons.collections4.map.CaseInsensitiveMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.CaseInsensitiveMap: org.apache.commons.collections4.map.CaseInsensitiveMap clone()>();

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.commons.collections4.map.CaseInsensitiveMap r0, $r1;

        r0 := @this: org.apache.commons.collections4.map.CaseInsensitiveMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.CaseInsensitiveMap: org.apache.commons.collections4.map.CaseInsensitiveMap clone()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.map.CaseInsensitiveMap: long serialVersionUID> = -7074655917369299456L;

        return;
    }
}
