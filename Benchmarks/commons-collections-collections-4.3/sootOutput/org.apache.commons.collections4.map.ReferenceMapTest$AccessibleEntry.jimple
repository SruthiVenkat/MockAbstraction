class org.apache.commons.collections4.map.ReferenceMapTest$AccessibleEntry extends org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry
{
    final org.apache.commons.collections4.map.AbstractReferenceMap parent;
    final java.util.function.Consumer consumer;

    public void <init>(org.apache.commons.collections4.map.AbstractReferenceMap, org.apache.commons.collections4.map.AbstractHashedMap$HashEntry, int, java.lang.Object, java.lang.Object, java.util.function.Consumer)
    {
        org.apache.commons.collections4.map.ReferenceMapTest$AccessibleEntry r0;
        org.apache.commons.collections4.map.AbstractReferenceMap r1;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry r2;
        int i0;
        java.lang.Object r3, r4;
        java.util.function.Consumer r5;

        r0 := @this: org.apache.commons.collections4.map.ReferenceMapTest$AccessibleEntry;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractReferenceMap;

        r2 := @parameter1: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.util.function.Consumer;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry: void <init>(org.apache.commons.collections4.map.AbstractReferenceMap,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,java.lang.Object)>(r1, r2, i0, r3, r4);

        r0.<org.apache.commons.collections4.map.ReferenceMapTest$AccessibleEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent> = r1;

        r0.<org.apache.commons.collections4.map.ReferenceMapTest$AccessibleEntry: java.util.function.Consumer consumer> = r5;

        return;
    }

    protected void onPurge()
    {
        org.apache.commons.collections4.map.ReferenceMapTest$AccessibleEntry r0;
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength $r1;
        org.apache.commons.collections4.map.AbstractReferenceMap $r2;
        boolean $z0;
        java.util.function.Consumer $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.collections4.map.ReferenceMapTest$AccessibleEntry;

        $r2 = r0.<org.apache.commons.collections4.map.ReferenceMapTest$AccessibleEntry: org.apache.commons.collections4.map.AbstractReferenceMap parent>;

        $r1 = <org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength HARD>;

        $z0 = virtualinvoke $r2.<org.apache.commons.collections4.map.AbstractReferenceMap: boolean isValueType(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.commons.collections4.map.ReferenceMapTest$AccessibleEntry: java.util.function.Consumer consumer>;

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.map.ReferenceMapTest$AccessibleEntry: java.lang.Object getValue()>();

        interfaceinvoke $r3.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

     label1:
        return;
    }
}
