public abstract class org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry extends java.lang.Object implements org.apache.commons.collections4.MultiSet$Entry
{

    protected void <init>()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry r0;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry r0;
        java.lang.Object r1, r3, r4;
        org.apache.commons.collections4.MultiSet$Entry r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.commons.collections4.MultiSet$Entry;

        if $z0 == 0 goto label4;

        r2 = (org.apache.commons.collections4.MultiSet$Entry) r1;

        r3 = virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry: java.lang.Object getElement()>();

        r4 = interfaceinvoke r2.<org.apache.commons.collections4.MultiSet$Entry: java.lang.Object getElement()>();

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry: int getCount()>();

        $i1 = interfaceinvoke r2.<org.apache.commons.collections4.MultiSet$Entry: int getCount()>();

        if $i0 != $i1 goto label2;

        if r3 == r4 goto label1;

        if r3 == null goto label2;

        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry r0;
        java.lang.Object r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry: java.lang.Object getElement()>();

        if r1 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

     label2:
        $i0 = virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry: int getCount()>();

        $i1 = $i2 ^ $i0;

        return $i1;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        int $i0;
        java.lang.Integer $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry: java.lang.Object getElement()>();

        $r1[0] = $r2;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry: int getCount()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%d", $r1);

        return $r4;
    }
}
