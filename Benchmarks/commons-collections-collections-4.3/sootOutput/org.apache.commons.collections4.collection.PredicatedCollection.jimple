public class org.apache.commons.collections4.collection.PredicatedCollection extends org.apache.commons.collections4.collection.AbstractCollectionDecorator
{
    private static final long serialVersionUID;
    protected final org.apache.commons.collections4.Predicate predicate;

    public static org.apache.commons.collections4.collection.PredicatedCollection$Builder builder(org.apache.commons.collections4.Predicate)
    {
        org.apache.commons.collections4.Predicate r0;
        org.apache.commons.collections4.collection.PredicatedCollection$Builder $r1;

        r0 := @parameter0: org.apache.commons.collections4.Predicate;

        $r1 = new org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        specialinvoke $r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: void <init>(org.apache.commons.collections4.Predicate)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.collection.PredicatedCollection$Builder notNullBuilder()
    {
        org.apache.commons.collections4.collection.PredicatedCollection$Builder $r0;
        org.apache.commons.collections4.Predicate $r1;

        $r0 = new org.apache.commons.collections4.collection.PredicatedCollection$Builder;

        $r1 = staticinvoke <org.apache.commons.collections4.functors.NotNullPredicate: org.apache.commons.collections4.Predicate notNullPredicate()>();

        specialinvoke $r0.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: void <init>(org.apache.commons.collections4.Predicate)>($r1);

        return $r0;
    }

    public static org.apache.commons.collections4.collection.PredicatedCollection predicatedCollection(java.util.Collection, org.apache.commons.collections4.Predicate)
    {
        java.util.Collection r0;
        org.apache.commons.collections4.Predicate r1;
        org.apache.commons.collections4.collection.PredicatedCollection $r2;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        $r2 = new org.apache.commons.collections4.collection.PredicatedCollection;

        specialinvoke $r2.<org.apache.commons.collections4.collection.PredicatedCollection: void <init>(java.util.Collection,org.apache.commons.collections4.Predicate)>(r0, r1);

        return $r2;
    }

    protected void <init>(java.util.Collection, org.apache.commons.collections4.Predicate)
    {
        org.apache.commons.collections4.collection.PredicatedCollection r0;
        java.util.Collection r1;
        org.apache.commons.collections4.Predicate r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        boolean $z0;
        java.lang.NullPointerException $r5;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: org.apache.commons.collections4.Predicate;

        specialinvoke r0.<org.apache.commons.collections4.collection.AbstractCollectionDecorator: void <init>(java.util.Collection)>(r1);

        if r2 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null.");

        throw $r5;

     label1:
        r0.<org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.Predicate predicate> = r2;

        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollection: void validate(java.lang.Object)>(r4);

        goto label2;

     label3:
        return;
    }

    protected void validate(java.lang.Object)
    {
        org.apache.commons.collections4.collection.PredicatedCollection r0;
        java.lang.Object r1;
        org.apache.commons.collections4.Predicate $r2, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.Predicate predicate>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot add Object \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' - Predicate \'");

        $r8 = r0.<org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.Predicate predicate>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' rejected it");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label1:
        return;
    }

    public boolean add(java.lang.Object)
    {
        org.apache.commons.collections4.collection.PredicatedCollection r0;
        java.lang.Object r1;
        java.util.Collection $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollection: void validate(java.lang.Object)>(r1);

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollection: java.util.Collection decorated()>();

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        org.apache.commons.collections4.collection.PredicatedCollection r0;
        java.util.Collection r1, $r4;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.collection.PredicatedCollection;

        r1 := @parameter0: java.util.Collection;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollection: void validate(java.lang.Object)>(r3);

        goto label1;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollection: java.util.Collection decorated()>();

        $z1 = interfaceinvoke $r4.<java.util.Collection: boolean addAll(java.util.Collection)>(r1);

        return $z1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.collection.PredicatedCollection: long serialVersionUID> = -5259182142076705162L;

        return;
    }
}
