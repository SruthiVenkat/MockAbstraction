public class org.apache.commons.collections4.IterableUtilsTest extends java.lang.Object
{
    private java.lang.Iterable iterableA;
    private java.lang.Iterable iterableB;
    private java.lang.Iterable emptyIterable;
    private static org.apache.commons.collections4.Predicate EQUALS_TWO;
    private static org.apache.commons.collections4.Predicate EVEN;

    public void <init>()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA> = null;

        r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB> = null;

        r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable emptyIterable> = null;

        return;
    }

    public void setUp()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        java.util.ArrayList $r3;
        java.lang.Integer $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.util.LinkedList $r14;
        java.lang.Long $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        java.util.List $r25;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r8);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r11);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r12);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r13);

        r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA> = $r3;

        $r14 = new java.util.LinkedList;

        specialinvoke $r14.<java.util.LinkedList: void <init>()>();

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r15);

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r16);

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r17);

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r18);

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r19);

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r20);

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r21);

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r22);

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r23);

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r24);

        r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB> = $r14;

        $r25 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable emptyIterable> = $r25;

        return;
    }

    public void forEach()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        org.apache.commons.collections4.Closure r3;
        java.util.ArrayList $r6, $r8, $r10;
        java.lang.Integer $r7, $r9;
        boolean $z4, $z6, $z7;
        java.lang.NullPointerException $r11;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear");

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>($r8);

        staticinvoke <org.apache.commons.collections4.IterableUtils: void forEach(java.lang.Iterable,org.apache.commons.collections4.Closure)>($r10, r3);

        $z4 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label1;

        $z6 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z6 == 0 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7);

     label3:
        staticinvoke <org.apache.commons.collections4.IterableUtils: void forEach(java.lang.Iterable,org.apache.commons.collections4.Closure)>($r10, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

     label6:
        staticinvoke <org.apache.commons.collections4.IterableUtils: void forEach(java.lang.Iterable,org.apache.commons.collections4.Closure)>(null, r3);

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>(null);

        staticinvoke <org.apache.commons.collections4.IterableUtils: void forEach(java.lang.Iterable,org.apache.commons.collections4.Closure)>($r10, r3);

        return;

        catch java.lang.NullPointerException from label3 to label4 with label5;
    }

    public void forEachFailure()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        org.apache.commons.collections4.Closure r1;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        r1 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>("x");

        staticinvoke <org.apache.commons.collections4.IterableUtils: void forEach(java.lang.Iterable,org.apache.commons.collections4.Closure)>($r3, r1);

        return;
    }

    public void forEachButLast()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        org.apache.commons.collections4.Closure r3;
        java.util.ArrayList $r6, $r8, $r10;
        java.lang.Integer $r7, $r9;
        java.lang.Object $r11, $r14;
        boolean $z4, $z7, $z8;
        java.lang.NullPointerException $r15;
        java.util.List r16, r17;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear");

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>($r8);

        $r11 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object forEachButLast(java.lang.Iterable,org.apache.commons.collections4.Closure)>($r10, r3);

        r16 = (java.util.List) $r11;

        $z4 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label1;

        $z7 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z7 != 0 goto label1;

        $z8 = 1;

        goto label2;

     label1:
        $z8 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r8, r16);

     label3:
        staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object forEachButLast(java.lang.Iterable,org.apache.commons.collections4.Closure)>($r10, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

     label6:
        staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object forEachButLast(java.lang.Iterable,org.apache.commons.collections4.Closure)>(null, r3);

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>(null);

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>(null);

        $r14 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object forEachButLast(java.lang.Iterable,org.apache.commons.collections4.Closure)>($r10, r3);

        r17 = (java.util.List) $r14;

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>(r17);

        return;

        catch java.lang.NullPointerException from label3 to label4 with label5;
    }

    public void containsWithEquator()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        java.util.ArrayList $r4;
        org.apache.commons.collections4.IterableUtilsTest$3 $r5;
        boolean $z3, $z4, $z5, $z6, $z7;
        java.lang.NullPointerException $r6;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("AC");

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("BB");

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("CA");

        $r5 = new org.apache.commons.collections4.IterableUtilsTest$3;

        specialinvoke $r5.<org.apache.commons.collections4.IterableUtilsTest$3: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0);

        $z3 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>("CC");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3);

        $z4 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object,org.apache.commons.collections4.Equator)>($r4, "AC", $r5);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $z5 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object,org.apache.commons.collections4.Equator)>($r4, "CC", $r5);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        $z6 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object,org.apache.commons.collections4.Equator)>($r4, "CX", $r5);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z6);

        $z7 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object,org.apache.commons.collections4.Equator)>(null, null, $r5);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z7);

     label1:
        staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object,org.apache.commons.collections4.Equator)>($r4, "AC", null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void frequency()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        java.util.List r1, r2;
        java.lang.Integer $r5, $r7, $r9, $r11, $r13, $r15, $r27, $r28, $r29, $r30, $r31, $r39;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i28, $i30, $i32, $i34, $i36, $i38, $i40, $i42, $i44;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15, $l17, $l19, $l21, $l23, $l25, $l27, $l29, $l31, $l33, $l35, $l37, $l39, $l41, $l43, $l45;
        java.lang.Iterable $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24;
        java.lang.Long $r17, $r19, $r21, $r23, $r25, $r33, $r34, $r35, $r36, $r37, $r38;
        java.lang.Number[] $r26, $r32;
        java.util.HashSet $r40;
        org.apache.commons.collections4.bag.HashBag $r41;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $i0 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(null, $r5);

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        $r6 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $i2 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r6, $r7);

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3);

        $r8 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $i4 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r8, $r9);

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l5);

        $r10 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $i6 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r10, $r11);

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l7);

        $r12 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $i8 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r12, $r13);

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l9);

        $r14 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $i10 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r14, $r15);

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l11);

        $r16 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB>;

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        $i12 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r16, $r17);

        $l13 = (long) $i12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l13);

        $r18 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB>;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L);

        $i14 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r18, $r19);

        $l15 = (long) $i14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l15);

        $r20 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB>;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L);

        $i16 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r20, $r21);

        $l17 = (long) $i16;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l17);

        $r22 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB>;

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L);

        $i18 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r22, $r23);

        $l19 = (long) $i18;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l19);

        $r24 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB>;

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L);

        $i20 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r24, $r25);

        $l21 = (long) $i20;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l21);

        $r26 = newarray (java.lang.Number)[5];

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r26[0] = $r27;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r26[1] = $r28;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r26[2] = $r29;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r26[3] = $r30;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r26[4] = $r31;

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r26);

        $r32 = newarray (java.lang.Number)[5];

        $r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        $r32[0] = $r33;

        $r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L);

        $r32[1] = $r34;

        $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L);

        $r32[2] = $r35;

        $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L);

        $r32[3] = $r36;

        $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L);

        $r32[4] = $r37;

        r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r32);

        $r38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L);

        $i22 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r1, $r38);

        $l23 = (long) $i22;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l23);

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $i24 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r2, $r39);

        $l25 = (long) $i24;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l25);

        $r40 = new java.util.HashSet;

        specialinvoke $r40.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r40.<java.util.Set: boolean add(java.lang.Object)>("A");

        interfaceinvoke $r40.<java.util.Set: boolean add(java.lang.Object)>("C");

        interfaceinvoke $r40.<java.util.Set: boolean add(java.lang.Object)>("E");

        interfaceinvoke $r40.<java.util.Set: boolean add(java.lang.Object)>("E");

        $i26 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r40, "A");

        $l27 = (long) $i26;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l27);

        $i28 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r40, "B");

        $l29 = (long) $i28;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l29);

        $i30 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r40, "C");

        $l31 = (long) $i30;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l31);

        $i32 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r40, "D");

        $l33 = (long) $i32;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l33);

        $i34 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r40, "E");

        $l35 = (long) $i34;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l35);

        $r41 = new org.apache.commons.collections4.bag.HashBag;

        specialinvoke $r41.<org.apache.commons.collections4.bag.HashBag: void <init>()>();

        interfaceinvoke $r41.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object,int)>("A", 3);

        interfaceinvoke $r41.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object)>("C");

        interfaceinvoke $r41.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object)>("E");

        interfaceinvoke $r41.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object)>("E");

        $i36 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r41, "A");

        $l37 = (long) $i36;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l37);

        $i38 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r41, "B");

        $l39 = (long) $i38;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l39);

        $i40 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r41, "C");

        $l41 = (long) $i40;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l41);

        $i42 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r41, "D");

        $l43 = (long) $i42;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l43);

        $i44 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r41, "E");

        $l45 = (long) $i44;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l45);

        return;
    }

    public void frequencyOfNull()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        java.util.ArrayList $r2;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $i0 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r2, null);

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("A");

        $i2 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r2, null);

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(null);

        $i4 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r2, null);

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("B");

        $i6 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r2, null);

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l7);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(null);

        $i8 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r2, null);

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l9);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("B");

        $i10 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r2, null);

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l11);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(null);

        $i12 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r2, null);

        $l13 = (long) $i12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l13);

        return;
    }

    public void find()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        java.lang.Integer $r2, $r5, $r6, r14, r16;
        java.lang.Iterable $r3, $r7, $r10;
        java.lang.Object $r4, $r8, $r9, $r11;
        boolean $z0, $z1;
        java.lang.NullPointerException $r12;
        org.apache.commons.collections4.Predicate r13, r15;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        r13 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r2);

        $r3 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $r4 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object find(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r3, r13);

        r14 = (java.lang.Integer) $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $z0 = virtualinvoke r14.<java.lang.Integer: boolean equals(java.lang.Object)>($r5);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(45);

        r15 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r6);

        $r7 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $r8 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object find(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r7, r15);

        r16 = (java.lang.Integer) $r8;

        if r16 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r9 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object find(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, r15);

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r9);

     label3:
        $r10 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $r11 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object find(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r10, null);

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r11);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

     label6:
        return;

        catch java.lang.NullPointerException from label3 to label4 with label5;
    }

    public void indexOf()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        java.lang.Integer $r2, $r4;
        java.lang.Iterable $r3, $r5, $r6;
        long $l0, $l1, $l3;
        int $i2, i5, i6;
        java.lang.NullPointerException $r7;
        org.apache.commons.collections4.Predicate r8, r9;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        r8 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r2);

        $r3 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        i5 = staticinvoke <org.apache.commons.collections4.IterableUtils: int indexOf(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r3, r8);

        $l0 = (long) i5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(45);

        r9 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r4);

        $r5 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        i6 = staticinvoke <org.apache.commons.collections4.IterableUtils: int indexOf(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r5, r9);

        $l1 = (long) i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l1);

        $i2 = staticinvoke <org.apache.commons.collections4.IterableUtils: int indexOf(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, r9);

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l3);

     label1:
        $r6 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        staticinvoke <org.apache.commons.collections4.IterableUtils: int indexOf(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r6, null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void countMatches()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        org.apache.commons.collections4.Predicate $r1, $r3;
        java.lang.Iterable $r2, $r4;
        long $l0, $l1, $l2, $l3;
        java.lang.NullPointerException $r5, $r6;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r2 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB>;

        $r1 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>;

        $l0 = staticinvoke <org.apache.commons.collections4.IterableUtils: long countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, $r1);

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l0);

        $r3 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>;

        $l1 = staticinvoke <org.apache.commons.collections4.IterableUtils: long countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, $r3);

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

     label1:
        $r4 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $l2 = staticinvoke <org.apache.commons.collections4.IterableUtils: long countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r4, null);

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l2);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("predicate must not be null");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        $l3 = staticinvoke <org.apache.commons.collections4.IterableUtils: long countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, null);

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("predicate must not be null");

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

     label7:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label4 to label5 with label6;
    }

    public void matchesAny()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        java.util.ArrayList $r2;
        boolean $z0, $z1, $z2, $z3, $z7, $z9;
        org.apache.commons.collections4.Predicate $r3, $r4, $r8, $r11;
        java.lang.Integer $r5, $r6, $r7, $r9;
        java.lang.Boolean $r10, $r12;
        java.lang.NullPointerException $r13, $r14;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("predicate must not be null");

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

     label4:
        $z1 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("predicate must not be null");

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

     label7:
        $r3 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>;

        $z2 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, $r3);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2);

        $r4 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>;

        $z3 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, $r4);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>;

        $z7 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, $r8);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z7);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r11 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>;

        $z9 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, $r11);

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r12);

        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label4 to label5 with label6;
    }

    public void matchesAll()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Iterable $r2, $r4, $r6, $r7;
        org.apache.commons.collections4.IterableUtilsTest$4 $r3;
        org.apache.commons.collections4.IterableUtilsTest$5 $r5;
        java.lang.NullPointerException $r8, $r9;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

     label1:
        $z0 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("predicate must not be null");

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        $r2 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $z1 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("predicate must not be null");

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

     label7:
        $r3 = new org.apache.commons.collections4.IterableUtilsTest$4;

        specialinvoke $r3.<org.apache.commons.collections4.IterableUtilsTest$4: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0);

        $r4 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $z2 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r4, $r3);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r5 = new org.apache.commons.collections4.IterableUtilsTest$5;

        specialinvoke $r5.<org.apache.commons.collections4.IterableUtilsTest$5: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0);

        $r6 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $z3 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r6, $r5);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3);

        $z4 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, $r5);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $r7 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable emptyIterable>;

        $z5 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r7, $r5);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label4 to label5 with label6;
    }

    public void getFromIterable() throws java.lang.Exception
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        org.apache.commons.collections4.bag.HashBag $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r2 = new org.apache.commons.collections4.bag.HashBag;

        specialinvoke $r2.<org.apache.commons.collections4.bag.HashBag: void <init>()>();

        interfaceinvoke $r2.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object,int)>("element", 1);

        $r3 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object get(java.lang.Iterable,int)>($r2, 0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("element", $r3);

        return;
    }

    public void getFromIterableIndexOutOfBoundsException() throws java.lang.Exception
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        org.apache.commons.collections4.bag.HashBag $r2;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r2 = new org.apache.commons.collections4.bag.HashBag;

        specialinvoke $r2.<org.apache.commons.collections4.bag.HashBag: void <init>()>();

        interfaceinvoke $r2.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object,int)>("element", 1);

        staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object get(java.lang.Iterable,int)>($r2, 1);

        return;
    }

    public void firstFromIterable() throws java.lang.Exception
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        org.apache.commons.collections4.bag.HashBag $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r2 = new org.apache.commons.collections4.bag.HashBag;

        specialinvoke $r2.<org.apache.commons.collections4.bag.HashBag: void <init>()>();

        interfaceinvoke $r2.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object,int)>("element", 1);

        $r3 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object first(java.lang.Iterable)>($r2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("element", $r3);

        return;
    }

    public void firstFromIterableIndexOutOfBoundsException() throws java.lang.Exception
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        org.apache.commons.collections4.bag.HashBag $r2;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r2 = new org.apache.commons.collections4.bag.HashBag;

        specialinvoke $r2.<org.apache.commons.collections4.bag.HashBag: void <init>()>();

        staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object first(java.lang.Iterable)>($r2);

        return;
    }

    public void partition()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        java.util.ArrayList $r4;
        java.lang.Integer $r5, $r6, $r7, $r8, $r12, $r14, $r15, $r16;
        org.apache.commons.collections4.Predicate $r9, $r19, $r27;
        int $i0, $i2, $i4, $i6, $i8;
        long $l1, $l3, $l5, $l7, $l9;
        java.lang.Object $r10, $r11, $r17, $r21, $r23, $r26;
        java.lang.Integer[] $r13;
        java.lang.Object[] $r18;
        java.util.List $r20, $r22, $r24, r30, r33, r34;
        boolean $z4, $z5;
        org.apache.commons.collections4.Predicate[] $r25;
        java.lang.NullPointerException $r29;
        java.util.Collection r31, r32;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>;

        r30 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r4, $r9);

        $i0 = interfaceinvoke r30.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1);

        $r10 = interfaceinvoke r30.<java.util.List: java.lang.Object get(int)>(0);

        r31 = (java.util.Collection) $r10;

        $i2 = interfaceinvoke r31.<java.util.Collection: int size()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3);

        $r11 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object extractSingleton(java.util.Collection)>(r31);

        $r12 = (java.lang.Integer) $r11;

        $i4 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l5);

        $r13 = newarray (java.lang.Integer)[3];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r13[0] = $r14;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r13[1] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r13[2] = $r16;

        $r17 = interfaceinvoke r30.<java.util.List: java.lang.Object get(int)>(1);

        r32 = (java.util.Collection) $r17;

        $r18 = interfaceinvoke r32.<java.util.Collection: java.lang.Object[] toArray()>();

        staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>($r13, $r18);

        $r20 = (java.util.List) null;

        $r19 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>;

        r33 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r20, $r19);

        $i6 = interfaceinvoke r33.<java.util.List: int size()>();

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l7);

        $r21 = interfaceinvoke r33.<java.util.List: java.lang.Object get(int)>(0);

        $r22 = (java.util.List) $r21;

        $z4 = interfaceinvoke $r22.<java.util.List: boolean isEmpty()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $r23 = interfaceinvoke r33.<java.util.List: java.lang.Object get(int)>(1);

        $r24 = (java.util.List) $r23;

        $z5 = interfaceinvoke $r24.<java.util.List: boolean isEmpty()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        $r25 = newarray (org.apache.commons.collections4.Predicate)[0];

        r34 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Predicate[])>($r4, $r25);

        $i8 = interfaceinvoke r34.<java.util.List: int size()>();

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l9);

        $r26 = interfaceinvoke r34.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r26);

     label1:
        $r27 = (org.apache.commons.collections4.Predicate) null;

        staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r4, $r27);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label2:
        goto label4;

     label3:
        $r29 := @caughtexception;

     label4:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void partitionMultiplePredicates()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        java.util.List r2;
        java.util.ArrayList $r5;
        java.lang.Integer $r6, $r7, $r8, $r9, $r16, $r20, $r22, $r23;
        org.apache.commons.collections4.Predicate[] $r10, $r26;
        org.apache.commons.collections4.Predicate $r11, $r12, $r27;
        java.lang.Object $r13, $r15, $r17, $r19, $r24;
        int $i0, $i2, $i4, $i6;
        long $l1, $l3, $l5, $l7;
        java.util.Iterator $r14, $r18;
        java.lang.Integer[] $r21;
        java.lang.Object[] $r25;
        java.lang.NullPointerException $r29;
        java.util.Collection r30, r31, r32;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = newarray (org.apache.commons.collections4.Predicate)[2];

        $r11 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>;

        $r10[0] = $r11;

        $r12 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EVEN>;

        $r10[1] = $r12;

        r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Predicate[])>($r5, $r10);

        $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        r30 = (java.util.Collection) $r13;

        $i0 = interfaceinvoke r30.<java.util.Collection: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1);

        $r14 = interfaceinvoke r30.<java.util.Collection: java.util.Iterator iterator()>();

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.lang.Integer) $r15;

        $i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3);

        $r17 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(1);

        r31 = (java.util.Collection) $r17;

        $i4 = interfaceinvoke r31.<java.util.Collection: int size()>();

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5);

        $r18 = interfaceinvoke r31.<java.util.Collection: java.util.Iterator iterator()>();

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (java.lang.Integer) $r19;

        $i6 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l7);

        $r21 = newarray (java.lang.Integer)[2];

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r21[0] = $r22;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r21[1] = $r23;

        $r24 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(2);

        r32 = (java.util.Collection) $r24;

        $r25 = interfaceinvoke r32.<java.util.Collection: java.lang.Object[] toArray()>();

        staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>($r21, $r25);

     label1:
        $r26 = newarray (org.apache.commons.collections4.Predicate)[2];

        $r27 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>;

        $r26[0] = $r27;

        $r26[1] = null;

        staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Predicate[])>($r5, $r26);

     label2:
        goto label4;

     label3:
        $r29 := @caughtexception;

     label4:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public void testToString()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        java.lang.Iterable $r1, $r4;
        java.util.ArrayList $r2, $r5;
        org.apache.commons.collections4.IterableUtilsTest$6 $r3;
        org.apache.commons.collections4.IterableUtilsTest$7 $r6;
        org.apache.commons.collections4.IterableUtilsTest$8 $r7;
        java.lang.String r8, r9, r10, r11, r12, r13;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r1 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        r8 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable)>($r1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[1, 2, 2, 3, 3, 3, 4, 4, 4, 4]", r8);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r9 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable)>($r2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[]", r9);

        r10 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[]", r10);

        $r4 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        $r3 = new org.apache.commons.collections4.IterableUtilsTest$6;

        specialinvoke $r3.<org.apache.commons.collections4.IterableUtilsTest$6: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0);

        r11 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer)>($r4, $r3);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[2, 4, 4, 6, 6, 6, 8, 8, 8, 8]", r11);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new org.apache.commons.collections4.IterableUtilsTest$7;

        specialinvoke $r6.<org.apache.commons.collections4.IterableUtilsTest$7: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0);

        r12 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer)>($r5, $r6);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[]", r12);

        $r7 = new org.apache.commons.collections4.IterableUtilsTest$8;

        specialinvoke $r7.<org.apache.commons.collections4.IterableUtilsTest$8: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0);

        r13 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer)>(null, $r7);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[]", r13);

        return;
    }

    public void testToStringDelimiter()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        org.apache.commons.collections4.IterableUtilsTest$9 $r2;
        java.lang.Iterable $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.util.ArrayList $r10, $r11;
        java.lang.String r12, r13, r14, r15, r16, r17, r18, r19, r20;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r2 = new org.apache.commons.collections4.IterableUtilsTest$9;

        specialinvoke $r2.<org.apache.commons.collections4.IterableUtilsTest$9: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0);

        $r3 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        r12 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r3, $r2, "", "", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("2446668888", r12);

        $r4 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        r13 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r4, $r2, ",", "", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("2,4,4,6,6,6,8,8,8,8", r13);

        $r5 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        r14 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r5, $r2, "", "[", "]");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[2446668888]", r14);

        $r6 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        r15 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r6, $r2, ",", "[", "]");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[2,4,4,6,6,6,8,8,8,8]", r15);

        $r7 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        r16 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r7, $r2, ",", "[[", "]]");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[[2,4,4,6,6,6,8,8,8,8]]", r16);

        $r8 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        r17 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r8, $r2, ",,", "[", "]");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[2,,4,,4,,6,,6,,6,,8,,8,,8,,8]", r17);

        $r9 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>;

        r18 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r9, $r2, ",,", "((", "))");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("((2,,4,,4,,6,,6,,6,,8,,8,,8,,8))", r18);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r19 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r10, $r2, "", "(", ")");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("()", r19);

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r20 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r11, $r2, "", "", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", r20);

        return;
    }

    public void testToStringWithNullArguments()
    {
        org.apache.commons.collections4.IterableUtilsTest r0;
        java.lang.String r1;
        org.apache.commons.collections4.IterableUtilsTest$10 $r2;
        java.util.ArrayList $r3, $r5, $r8, $r11;
        org.apache.commons.collections4.IterableUtilsTest$11 $r6;
        org.apache.commons.collections4.IterableUtilsTest$12 $r9;
        org.apache.commons.collections4.IterableUtilsTest$13 $r12;
        java.lang.NullPointerException $r14, $r15, $r16, $r17;

        r0 := @this: org.apache.commons.collections4.IterableUtilsTest;

        $r2 = new org.apache.commons.collections4.IterableUtilsTest$10;

        specialinvoke $r2.<org.apache.commons.collections4.IterableUtilsTest$10: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0);

        r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>(null, $r2, "", "(", ")");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("()", r1);

     label01:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r3, null, "", "(", ")");

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label02:
        goto label04;

     label03:
        $r15 := @caughtexception;

     label04:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new org.apache.commons.collections4.IterableUtilsTest$11;

        specialinvoke $r6.<org.apache.commons.collections4.IterableUtilsTest$11: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0);

        staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, null, "(", ")");

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label05:
        goto label07;

     label06:
        $r17 := @caughtexception;

     label07:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = new org.apache.commons.collections4.IterableUtilsTest$12;

        specialinvoke $r9.<org.apache.commons.collections4.IterableUtilsTest$12: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0);

        staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, "", null, ")");

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label08:
        goto label10;

     label09:
        $r14 := @caughtexception;

     label10:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r12 = new org.apache.commons.collections4.IterableUtilsTest$13;

        specialinvoke $r12.<org.apache.commons.collections4.IterableUtilsTest$13: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0);

        staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r11, $r12, "", "(", null);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException");

     label11:
        goto label13;

     label12:
        $r16 := @caughtexception;

     label13:
        return;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NullPointerException from label04 to label05 with label06;
        catch java.lang.NullPointerException from label07 to label08 with label09;
        catch java.lang.NullPointerException from label10 to label11 with label12;
    }

    static void <clinit>()
    {
        org.apache.commons.collections4.IterableUtilsTest$1 $r0;
        org.apache.commons.collections4.IterableUtilsTest$2 $r1;

        $r0 = new org.apache.commons.collections4.IterableUtilsTest$1;

        specialinvoke $r0.<org.apache.commons.collections4.IterableUtilsTest$1: void <init>()>();

        <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO> = $r0;

        $r1 = new org.apache.commons.collections4.IterableUtilsTest$2;

        specialinvoke $r1.<org.apache.commons.collections4.IterableUtilsTest$2: void <init>()>();

        <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EVEN> = $r1;

        return;
    }
}
