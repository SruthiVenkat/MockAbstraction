public class org.apache.commons.collections4.iterators.ArrayIterator2Test extends org.apache.commons.collections4.iterators.AbstractIteratorTest
{
    protected int[] testArray;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.iterators.ArrayIterator2Test r0;
        java.lang.String r1;
        int[] $r2;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayIterator2Test;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.iterators.AbstractIteratorTest: void <init>(java.lang.String)>(r1);

        $r2 = newarray (int)[4];

        $r2[0] = 2;

        $r2[1] = 4;

        $r2[2] = 6;

        $r2[3] = 8;

        r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray> = $r2;

        return;
    }

    public org.apache.commons.collections4.iterators.ArrayIterator makeEmptyIterator()
    {
        org.apache.commons.collections4.iterators.ArrayIterator2Test r0;
        org.apache.commons.collections4.iterators.ArrayIterator $r1;
        int[] $r2;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayIterator2Test;

        $r1 = new org.apache.commons.collections4.iterators.ArrayIterator;

        $r2 = newarray (int)[0];

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ArrayIterator: void <init>(java.lang.Object)>($r2);

        return $r1;
    }

    public org.apache.commons.collections4.iterators.ArrayIterator makeObject()
    {
        org.apache.commons.collections4.iterators.ArrayIterator2Test r0;
        org.apache.commons.collections4.iterators.ArrayIterator $r1;
        int[] $r2;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayIterator2Test;

        $r1 = new org.apache.commons.collections4.iterators.ArrayIterator;

        $r2 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ArrayIterator: void <init>(java.lang.Object)>($r2);

        return $r1;
    }

    public org.apache.commons.collections4.iterators.ArrayIterator makeArrayIterator(java.lang.Object)
    {
        org.apache.commons.collections4.iterators.ArrayIterator2Test r0;
        java.lang.Object r1;
        org.apache.commons.collections4.iterators.ArrayIterator $r2;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayIterator2Test;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.commons.collections4.iterators.ArrayIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.ArrayIterator: void <init>(java.lang.Object)>(r1);

        return $r2;
    }

    public org.apache.commons.collections4.iterators.ArrayIterator makeArrayIterator(java.lang.Object, int)
    {
        org.apache.commons.collections4.iterators.ArrayIterator2Test r0;
        java.lang.Object r1;
        int i0;
        org.apache.commons.collections4.iterators.ArrayIterator $r2;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayIterator2Test;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = new org.apache.commons.collections4.iterators.ArrayIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.ArrayIterator: void <init>(java.lang.Object,int)>(r1, i0);

        return $r2;
    }

    public org.apache.commons.collections4.iterators.ArrayIterator makeArrayIterator(java.lang.Object, int, int)
    {
        org.apache.commons.collections4.iterators.ArrayIterator2Test r0;
        java.lang.Object r1;
        int i0, i1;
        org.apache.commons.collections4.iterators.ArrayIterator $r2;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayIterator2Test;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new org.apache.commons.collections4.iterators.ArrayIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.ArrayIterator: void <init>(java.lang.Object,int,int)>(r1, i0, i1);

        return $r2;
    }

    public boolean supportsRemove()
    {
        org.apache.commons.collections4.iterators.ArrayIterator2Test r0;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayIterator2Test;

        return 0;
    }

    public void testIterator()
    {
        org.apache.commons.collections4.iterators.ArrayIterator2Test r0;
        org.apache.commons.collections4.iterators.ArrayIterator r1;
        int i0, i1, i2;
        java.lang.Integer r2;
        java.lang.Number r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6;
        java.lang.Exception $r7;
        java.lang.Class $r8, $r10;
        java.util.NoSuchElementException $r9;
        int[] r11;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayIterator2Test;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: org.apache.commons.collections4.iterators.ArrayIterator makeObject()>();

        r11 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        i0 = lengthof r11;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        i1 = r11[i2];

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Number) $r6;

        staticinvoke <org.apache.commons.collections4.iterators.ArrayIterator2Test: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Iteration value is correct", r2, r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <org.apache.commons.collections4.iterators.ArrayIterator2Test: void assertTrue(java.lang.String,boolean)>("Iterator should now be empty", $z2);

     label5:
        interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

     label6:
        goto label8;

     label7:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = new java.util.NoSuchElementException;

        specialinvoke $r9.<java.util.NoSuchElementException: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.iterators.ArrayIterator2Test: void assertTrue(java.lang.String,boolean)>("NoSuchElementException must be thrown", $z1);

     label8:
        return;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    public void testIndexedArray()
    {
        org.apache.commons.collections4.iterators.ArrayIterator2Test r0;
        int[] $r1, $r2, $r3, $r4, $r7, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        java.lang.String $r10;
        java.lang.ArrayIndexOutOfBoundsException $r24, $r26, $r28, $r29;
        java.lang.IllegalArgumentException $r25, $r27;
        org.apache.commons.collections4.iterators.ArrayIterator r30, r31;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayIterator2Test;

        $r1 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        r30 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: org.apache.commons.collections4.iterators.ArrayIterator makeArrayIterator(java.lang.Object,int)>($r1, 2);

        i16 = 0;

     label01:
        $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        i16 = i16 + 1;

        interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        goto label01;

     label02:
        $r2 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        $i0 = lengthof $r2;

        $i1 = $i0 - 2;

        staticinvoke <org.apache.commons.collections4.iterators.ArrayIterator2Test: void assertEquals(java.lang.String,int,int)>("the count should be right using ArrayIterator(Object,2) ", i16, $i1);

        $r4 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        $r3 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        $i2 = lengthof $r3;

        $i3 = $i2 - 1;

        r31 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: org.apache.commons.collections4.iterators.ArrayIterator makeArrayIterator(java.lang.Object,int,int)>($r4, 1, $i3);

        i17 = 0;

     label03:
        $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        i17 = i17 + 1;

        interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        goto label03;

     label04:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the count should be right using ArrayIterator(Object,1,");

        $r7 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        $i4 = lengthof $r7;

        $i5 = $i4 - 1;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        $i6 = lengthof $r11;

        $i7 = $i6 - 2;

        staticinvoke <org.apache.commons.collections4.iterators.ArrayIterator2Test: void assertEquals(java.lang.String,int,int)>($r10, i17, $i7);

     label05:
        $r12 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: org.apache.commons.collections4.iterators.ArrayIterator makeArrayIterator(java.lang.Object,int)>($r12, -1);

        staticinvoke <org.apache.commons.collections4.iterators.ArrayIterator2Test: void fail(java.lang.String)>("new ArrayIterator(Object,-1) should throw an ArrayIndexOutOfBoundsException");

     label06:
        goto label08;

     label07:
        $r29 := @caughtexception;

     label08:
        $r14 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        $r13 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        $i8 = lengthof $r13;

        $i9 = $i8 + 1;

        virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: org.apache.commons.collections4.iterators.ArrayIterator makeArrayIterator(java.lang.Object,int)>($r14, $i9);

        staticinvoke <org.apache.commons.collections4.iterators.ArrayIterator2Test: void fail(java.lang.String)>("new ArrayIterator(Object,length+1) should throw an ArrayIndexOutOfBoundsException");

     label09:
        goto label11;

     label10:
        $r28 := @caughtexception;

     label11:
        $r15 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: org.apache.commons.collections4.iterators.ArrayIterator makeArrayIterator(java.lang.Object,int,int)>($r15, 0, -1);

        staticinvoke <org.apache.commons.collections4.iterators.ArrayIterator2Test: void fail(java.lang.String)>("new ArrayIterator(Object,0,-1) should throw an ArrayIndexOutOfBoundsException");

     label12:
        goto label14;

     label13:
        $r24 := @caughtexception;

     label14:
        $r17 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        $r16 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        $i10 = lengthof $r16;

        $i11 = $i10 + 1;

        virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: org.apache.commons.collections4.iterators.ArrayIterator makeArrayIterator(java.lang.Object,int,int)>($r17, 0, $i11);

        staticinvoke <org.apache.commons.collections4.iterators.ArrayIterator2Test: void fail(java.lang.String)>("new ArrayIterator(Object,0,length+1) should throw an ArrayIndexOutOfBoundsException");

     label15:
        goto label17;

     label16:
        $r26 := @caughtexception;

     label17:
        $r18 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: org.apache.commons.collections4.iterators.ArrayIterator makeArrayIterator(java.lang.Object,int,int)>($r18, 1, 1);

     label18:
        goto label20;

     label19:
        $r27 := @caughtexception;

        staticinvoke <org.apache.commons.collections4.iterators.ArrayIterator2Test: void fail(java.lang.String)>("new ArrayIterator(Object,1,1) should NOT throw an IllegalArgumentException");

     label20:
        $r21 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        $r19 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        $i12 = lengthof $r19;

        $i15 = $i12 - 1;

        $r20 = r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: int[] testArray>;

        $i13 = lengthof $r20;

        $i14 = $i13 - 2;

        virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: org.apache.commons.collections4.iterators.ArrayIterator makeArrayIterator(java.lang.Object,int,int)>($r21, $i15, $i14);

        staticinvoke <org.apache.commons.collections4.iterators.ArrayIterator2Test: void fail(java.lang.String)>("new ArrayIterator(Object,length-2,length-1) should throw an IllegalArgumentException");

     label21:
        goto label23;

     label22:
        $r25 := @caughtexception;

     label23:
        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label05 to label06 with label07;
        catch java.lang.ArrayIndexOutOfBoundsException from label08 to label09 with label10;
        catch java.lang.ArrayIndexOutOfBoundsException from label11 to label12 with label13;
        catch java.lang.ArrayIndexOutOfBoundsException from label14 to label15 with label16;
        catch java.lang.IllegalArgumentException from label17 to label18 with label19;
        catch java.lang.IllegalArgumentException from label20 to label21 with label22;
    }

    public volatile java.util.Iterator makeObject()
    {
        org.apache.commons.collections4.iterators.ArrayIterator2Test r0;
        org.apache.commons.collections4.iterators.ArrayIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayIterator2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: org.apache.commons.collections4.iterators.ArrayIterator makeObject()>();

        return $r1;
    }

    public volatile java.util.Iterator makeEmptyIterator()
    {
        org.apache.commons.collections4.iterators.ArrayIterator2Test r0;
        org.apache.commons.collections4.iterators.ArrayIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayIterator2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: org.apache.commons.collections4.iterators.ArrayIterator makeEmptyIterator()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.iterators.ArrayIterator2Test r0;
        org.apache.commons.collections4.iterators.ArrayIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.ArrayIterator2Test;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ArrayIterator2Test: org.apache.commons.collections4.iterators.ArrayIterator makeObject()>();

        return $r1;
    }
}
