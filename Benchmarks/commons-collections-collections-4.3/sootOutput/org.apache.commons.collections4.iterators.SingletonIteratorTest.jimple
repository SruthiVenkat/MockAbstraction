public class org.apache.commons.collections4.iterators.SingletonIteratorTest extends org.apache.commons.collections4.iterators.AbstractIteratorTest
{
    private static final java.lang.Object testValue;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.iterators.SingletonIteratorTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.iterators.SingletonIteratorTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.iterators.AbstractIteratorTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public org.apache.commons.collections4.iterators.SingletonIterator makeEmptyIterator()
    {
        org.apache.commons.collections4.iterators.SingletonIteratorTest r0;
        org.apache.commons.collections4.iterators.SingletonIterator r1;

        r0 := @this: org.apache.commons.collections4.iterators.SingletonIteratorTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.SingletonIteratorTest: org.apache.commons.collections4.iterators.SingletonIterator makeObject()>();

        virtualinvoke r1.<org.apache.commons.collections4.iterators.SingletonIterator: java.lang.Object next()>();

        virtualinvoke r1.<org.apache.commons.collections4.iterators.SingletonIterator: void remove()>();

        virtualinvoke r1.<org.apache.commons.collections4.iterators.SingletonIterator: void reset()>();

        return r1;
    }

    public org.apache.commons.collections4.iterators.SingletonIterator makeObject()
    {
        org.apache.commons.collections4.iterators.SingletonIteratorTest r0;
        org.apache.commons.collections4.iterators.SingletonIterator $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections4.iterators.SingletonIteratorTest;

        $r1 = new org.apache.commons.collections4.iterators.SingletonIterator;

        $r2 = <org.apache.commons.collections4.iterators.SingletonIteratorTest: java.lang.Object testValue>;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.SingletonIterator: void <init>(java.lang.Object)>($r2);

        return $r1;
    }

    public boolean supportsRemove()
    {
        org.apache.commons.collections4.iterators.SingletonIteratorTest r0;

        r0 := @this: org.apache.commons.collections4.iterators.SingletonIteratorTest;

        return 1;
    }

    public boolean supportsEmptyIterator()
    {
        org.apache.commons.collections4.iterators.SingletonIteratorTest r0;

        r0 := @this: org.apache.commons.collections4.iterators.SingletonIteratorTest;

        return 1;
    }

    public void testIterator()
    {
        org.apache.commons.collections4.iterators.SingletonIteratorTest r0;
        org.apache.commons.collections4.iterators.SingletonIterator r1;
        java.lang.Object r2, $r4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Exception $r7;
        java.lang.Class $r8, $r10;
        java.util.NoSuchElementException $r9;

        r0 := @this: org.apache.commons.collections4.iterators.SingletonIteratorTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.SingletonIteratorTest: org.apache.commons.collections4.iterators.SingletonIterator makeObject()>();

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertTrue(java.lang.String,boolean)>("Iterator has a first item", $z0);

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = <org.apache.commons.collections4.iterators.SingletonIteratorTest: java.lang.Object testValue>;

        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Iteration value is correct", $r4, r2);

        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertTrue(java.lang.String,boolean)>("Iterator should now be empty", $z3);

     label3:
        interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = new java.util.NoSuchElementException;

        specialinvoke $r9.<java.util.NoSuchElementException: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertTrue(java.lang.String,boolean)>("NoSuchElementException must be thrown", $z2);

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void testSingletonIteratorRemove()
    {
        org.apache.commons.collections4.iterators.SingletonIteratorTest r0;
        org.apache.commons.collections4.iterators.SingletonIterator $r2;
        boolean $z0, $z1, $z2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections4.iterators.SingletonIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.SingletonIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.SingletonIterator: void <init>(java.lang.Object)>("xyzzy");

        $z0 = interfaceinvoke $r2.<org.apache.commons.collections4.ResettableIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertTrue(boolean)>($z0);

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>("xyzzy", $r3);

        interfaceinvoke $r2.<org.apache.commons.collections4.ResettableIterator: void remove()>();

        interfaceinvoke $r2.<org.apache.commons.collections4.ResettableIterator: void reset()>();

        $z1 = interfaceinvoke $r2.<org.apache.commons.collections4.ResettableIterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertTrue(boolean)>($z2);

        return;
    }

    public void testReset()
    {
        org.apache.commons.collections4.iterators.SingletonIteratorTest r0;
        org.apache.commons.collections4.iterators.SingletonIterator r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.commons.collections4.iterators.SingletonIteratorTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.SingletonIteratorTest: org.apache.commons.collections4.iterators.SingletonIterator makeObject()>();

        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.ResettableIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r2 = <org.apache.commons.collections4.iterators.SingletonIteratorTest: java.lang.Object testValue>;

        $r3 = interfaceinvoke r1.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r3);

        $z1 = interfaceinvoke r1.<org.apache.commons.collections4.ResettableIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertEquals(boolean,boolean)>(0, $z1);

        interfaceinvoke r1.<org.apache.commons.collections4.ResettableIterator: void reset()>();

        $z2 = interfaceinvoke r1.<org.apache.commons.collections4.ResettableIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertEquals(boolean,boolean)>(1, $z2);

        $r4 = <org.apache.commons.collections4.iterators.SingletonIteratorTest: java.lang.Object testValue>;

        $r5 = interfaceinvoke r1.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r5);

        $z3 = interfaceinvoke r1.<org.apache.commons.collections4.ResettableIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertEquals(boolean,boolean)>(0, $z3);

        interfaceinvoke r1.<org.apache.commons.collections4.ResettableIterator: void reset()>();

        interfaceinvoke r1.<org.apache.commons.collections4.ResettableIterator: void reset()>();

        $z4 = interfaceinvoke r1.<org.apache.commons.collections4.ResettableIterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.SingletonIteratorTest: void assertEquals(boolean,boolean)>(1, $z4);

        return;
    }

    public volatile java.util.Iterator makeObject()
    {
        org.apache.commons.collections4.iterators.SingletonIteratorTest r0;
        org.apache.commons.collections4.iterators.SingletonIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.SingletonIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.SingletonIteratorTest: org.apache.commons.collections4.iterators.SingletonIterator makeObject()>();

        return $r1;
    }

    public volatile java.util.Iterator makeEmptyIterator()
    {
        org.apache.commons.collections4.iterators.SingletonIteratorTest r0;
        org.apache.commons.collections4.iterators.SingletonIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.SingletonIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.SingletonIteratorTest: org.apache.commons.collections4.iterators.SingletonIterator makeEmptyIterator()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.iterators.SingletonIteratorTest r0;
        org.apache.commons.collections4.iterators.SingletonIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.SingletonIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.SingletonIteratorTest: org.apache.commons.collections4.iterators.SingletonIterator makeObject()>();

        return $r1;
    }

    static void <clinit>()
    {
        <org.apache.commons.collections4.iterators.SingletonIteratorTest: java.lang.Object testValue> = "foo";

        <org.apache.commons.collections4.iterators.SingletonIteratorTest: java.lang.Object testValue> = "foo";

        return;
    }
}
