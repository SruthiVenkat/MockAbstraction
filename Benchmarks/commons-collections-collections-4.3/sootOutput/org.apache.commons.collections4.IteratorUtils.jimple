public class org.apache.commons.collections4.IteratorUtils extends java.lang.Object
{
    public static final org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR;
    public static final org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR;
    public static final org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR;
    public static final org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR;
    public static final org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR;
    private static final java.lang.String DEFAULT_TOSTRING_PREFIX;
    private static final java.lang.String DEFAULT_TOSTRING_SUFFIX;
    private static final java.lang.String DEFAULT_TOSTRING_DELIMITER;

    private void <init>()
    {
        org.apache.commons.collections4.IteratorUtils r0;

        r0 := @this: org.apache.commons.collections4.IteratorUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.commons.collections4.ResettableIterator emptyIterator()
    {
        org.apache.commons.collections4.ResettableIterator $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.iterators.EmptyIterator: org.apache.commons.collections4.ResettableIterator resettableEmptyIterator()>();

        return $r0;
    }

    public static org.apache.commons.collections4.ResettableListIterator emptyListIterator()
    {
        org.apache.commons.collections4.ResettableListIterator $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.iterators.EmptyListIterator: org.apache.commons.collections4.ResettableListIterator resettableEmptyListIterator()>();

        return $r0;
    }

    public static org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()
    {
        org.apache.commons.collections4.OrderedIterator $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.iterators.EmptyOrderedIterator: org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()>();

        return $r0;
    }

    public static org.apache.commons.collections4.MapIterator emptyMapIterator()
    {
        org.apache.commons.collections4.MapIterator $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.iterators.EmptyMapIterator: org.apache.commons.collections4.MapIterator emptyMapIterator()>();

        return $r0;
    }

    public static org.apache.commons.collections4.OrderedMapIterator emptyOrderedMapIterator()
    {
        org.apache.commons.collections4.OrderedMapIterator $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.iterators.EmptyOrderedMapIterator: org.apache.commons.collections4.OrderedMapIterator emptyOrderedMapIterator()>();

        return $r0;
    }

    public static org.apache.commons.collections4.ResettableIterator singletonIterator(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.collections4.iterators.SingletonIterator $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.apache.commons.collections4.iterators.SingletonIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.SingletonIterator: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public static java.util.ListIterator singletonListIterator(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.collections4.iterators.SingletonListIterator $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.apache.commons.collections4.iterators.SingletonListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.SingletonListIterator: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public static transient org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.apache.commons.collections4.iterators.ObjectArrayIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = new org.apache.commons.collections4.iterators.ObjectArrayIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ObjectArrayIterator: void <init>(java.lang.Object[])>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.collections4.iterators.ArrayIterator $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.apache.commons.collections4.iterators.ArrayIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ArrayIterator: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[], int)
    {
        java.lang.Object[] r0;
        int i0;
        org.apache.commons.collections4.iterators.ObjectArrayIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $r1 = new org.apache.commons.collections4.iterators.ObjectArrayIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ObjectArrayIterator: void <init>(java.lang.Object[],int)>(r0, i0);

        return $r1;
    }

    public static org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object, int)
    {
        java.lang.Object r0;
        int i0;
        org.apache.commons.collections4.iterators.ArrayIterator $r1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r1 = new org.apache.commons.collections4.iterators.ArrayIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ArrayIterator: void <init>(java.lang.Object,int)>(r0, i0);

        return $r1;
    }

    public static org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[], int, int)
    {
        java.lang.Object[] r0;
        int i0, i1;
        org.apache.commons.collections4.iterators.ObjectArrayIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new org.apache.commons.collections4.iterators.ObjectArrayIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ObjectArrayIterator: void <init>(java.lang.Object[],int,int)>(r0, i0, i1);

        return $r1;
    }

    public static org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object, int, int)
    {
        java.lang.Object r0;
        int i0, i1;
        org.apache.commons.collections4.iterators.ArrayIterator $r1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new org.apache.commons.collections4.iterators.ArrayIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ArrayIterator: void <init>(java.lang.Object,int,int)>(r0, i0, i1);

        return $r1;
    }

    public static transient org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.apache.commons.collections4.iterators.ObjectArrayListIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = new org.apache.commons.collections4.iterators.ObjectArrayListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ObjectArrayListIterator: void <init>(java.lang.Object[])>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.collections4.iterators.ArrayListIterator $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.apache.commons.collections4.iterators.ArrayListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ArrayListIterator: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[], int)
    {
        java.lang.Object[] r0;
        int i0;
        org.apache.commons.collections4.iterators.ObjectArrayListIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $r1 = new org.apache.commons.collections4.iterators.ObjectArrayListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ObjectArrayListIterator: void <init>(java.lang.Object[],int)>(r0, i0);

        return $r1;
    }

    public static org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object, int)
    {
        java.lang.Object r0;
        int i0;
        org.apache.commons.collections4.iterators.ArrayListIterator $r1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r1 = new org.apache.commons.collections4.iterators.ArrayListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ArrayListIterator: void <init>(java.lang.Object,int)>(r0, i0);

        return $r1;
    }

    public static org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[], int, int)
    {
        java.lang.Object[] r0;
        int i0, i1;
        org.apache.commons.collections4.iterators.ObjectArrayListIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new org.apache.commons.collections4.iterators.ObjectArrayListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ObjectArrayListIterator: void <init>(java.lang.Object[],int,int)>(r0, i0, i1);

        return $r1;
    }

    public static org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object, int, int)
    {
        java.lang.Object r0;
        int i0, i1;
        org.apache.commons.collections4.iterators.ArrayListIterator $r1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new org.apache.commons.collections4.iterators.ArrayListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ArrayListIterator: void <init>(java.lang.Object,int,int)>(r0, i0, i1);

        return $r1;
    }

    public static org.apache.commons.collections4.iterators.BoundedIterator boundedIterator(java.util.Iterator, long)
    {
        java.util.Iterator r0;
        long l0;
        org.apache.commons.collections4.iterators.BoundedIterator $r1;

        r0 := @parameter0: java.util.Iterator;

        l0 := @parameter1: long;

        $r1 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.iterators.BoundedIterator boundedIterator(java.util.Iterator,long,long)>(r0, 0L, l0);

        return $r1;
    }

    public static org.apache.commons.collections4.iterators.BoundedIterator boundedIterator(java.util.Iterator, long, long)
    {
        java.util.Iterator r0;
        long l0, l1;
        org.apache.commons.collections4.iterators.BoundedIterator $r1;

        r0 := @parameter0: java.util.Iterator;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = new org.apache.commons.collections4.iterators.BoundedIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.BoundedIterator: void <init>(java.util.Iterator,long,long)>(r0, l0, l1);

        return $r1;
    }

    public static java.util.Iterator unmodifiableIterator(java.util.Iterator)
    {
        java.util.Iterator r0, $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <org.apache.commons.collections4.iterators.UnmodifiableIterator: java.util.Iterator unmodifiableIterator(java.util.Iterator)>(r0);

        return $r1;
    }

    public static java.util.ListIterator unmodifiableListIterator(java.util.ListIterator)
    {
        java.util.ListIterator r0, $r1;

        r0 := @parameter0: java.util.ListIterator;

        $r1 = staticinvoke <org.apache.commons.collections4.iterators.UnmodifiableListIterator: java.util.ListIterator umodifiableListIterator(java.util.ListIterator)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.MapIterator unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)
    {
        org.apache.commons.collections4.MapIterator r0, $r1;

        r0 := @parameter0: org.apache.commons.collections4.MapIterator;

        $r1 = staticinvoke <org.apache.commons.collections4.iterators.UnmodifiableMapIterator: org.apache.commons.collections4.MapIterator unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)>(r0);

        return $r1;
    }

    public static java.util.Iterator chainedIterator(java.util.Iterator, java.util.Iterator)
    {
        java.util.Iterator r0, r1;
        org.apache.commons.collections4.iterators.IteratorChain $r2;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Iterator;

        $r2 = new org.apache.commons.collections4.iterators.IteratorChain;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.IteratorChain: void <init>(java.util.Iterator,java.util.Iterator)>(r0, r1);

        return $r2;
    }

    public static transient java.util.Iterator chainedIterator(java.util.Iterator[])
    {
        java.util.Iterator[] r0;
        org.apache.commons.collections4.iterators.IteratorChain $r1;

        r0 := @parameter0: java.util.Iterator[];

        $r1 = new org.apache.commons.collections4.iterators.IteratorChain;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.IteratorChain: void <init>(java.util.Iterator[])>(r0);

        return $r1;
    }

    public static java.util.Iterator chainedIterator(java.util.Collection)
    {
        java.util.Collection r0;
        org.apache.commons.collections4.iterators.IteratorChain $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = new org.apache.commons.collections4.iterators.IteratorChain;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.IteratorChain: void <init>(java.util.Collection)>(r0);

        return $r1;
    }

    public static java.util.Iterator collatedIterator(java.util.Comparator, java.util.Iterator, java.util.Iterator)
    {
        java.util.Comparator r0, $r5;
        java.util.Iterator r1, r2;
        org.apache.commons.collections4.iterators.CollatingIterator $r4;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.util.Iterator;

        r2 := @parameter2: java.util.Iterator;

        if r0 != null goto label1;

        $r5 = <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator NATURAL_COMPARATOR>;

        goto label2;

     label1:
        $r5 = r0;

     label2:
        $r4 = new org.apache.commons.collections4.iterators.CollatingIterator;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator,java.util.Iterator,java.util.Iterator)>($r5, r1, r2);

        return $r4;
    }

    public static transient java.util.Iterator collatedIterator(java.util.Comparator, java.util.Iterator[])
    {
        java.util.Comparator r0, $r4;
        java.util.Iterator[] r1;
        org.apache.commons.collections4.iterators.CollatingIterator $r3;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.util.Iterator[];

        if r0 != null goto label1;

        $r4 = <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator NATURAL_COMPARATOR>;

        goto label2;

     label1:
        $r4 = r0;

     label2:
        $r3 = new org.apache.commons.collections4.iterators.CollatingIterator;

        specialinvoke $r3.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator,java.util.Iterator[])>($r4, r1);

        return $r3;
    }

    public static java.util.Iterator collatedIterator(java.util.Comparator, java.util.Collection)
    {
        java.util.Comparator r0, $r4;
        java.util.Collection r1;
        org.apache.commons.collections4.iterators.CollatingIterator $r3;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.util.Collection;

        if r0 != null goto label1;

        $r4 = <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator NATURAL_COMPARATOR>;

        goto label2;

     label1:
        $r4 = r0;

     label2:
        $r3 = new org.apache.commons.collections4.iterators.CollatingIterator;

        specialinvoke $r3.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator,java.util.Collection)>($r4, r1);

        return $r3;
    }

    public static java.util.Iterator objectGraphIterator(java.lang.Object, org.apache.commons.collections4.Transformer)
    {
        java.lang.Object r0;
        org.apache.commons.collections4.Transformer r1;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        $r2 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.lang.Object,org.apache.commons.collections4.Transformer)>(r0, r1);

        return $r2;
    }

    public static java.util.Iterator transformedIterator(java.util.Iterator, org.apache.commons.collections4.Transformer)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.Transformer r1;
        org.apache.commons.collections4.iterators.TransformIterator $r2;
        java.lang.NullPointerException $r3, $r4;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Transformer must not be null");

        throw $r3;

     label2:
        $r2 = new org.apache.commons.collections4.iterators.TransformIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.TransformIterator: void <init>(java.util.Iterator,org.apache.commons.collections4.Transformer)>(r0, r1);

        return $r2;
    }

    public static java.util.Iterator filteredIterator(java.util.Iterator, org.apache.commons.collections4.Predicate)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.Predicate r1;
        org.apache.commons.collections4.iterators.FilterIterator $r2;
        java.lang.NullPointerException $r3, $r4;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null");

        throw $r3;

     label2:
        $r2 = new org.apache.commons.collections4.iterators.FilterIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterIterator: void <init>(java.util.Iterator,org.apache.commons.collections4.Predicate)>(r0, r1);

        return $r2;
    }

    public static java.util.ListIterator filteredListIterator(java.util.ListIterator, org.apache.commons.collections4.Predicate)
    {
        java.util.ListIterator r0;
        org.apache.commons.collections4.Predicate r1;
        org.apache.commons.collections4.iterators.FilterListIterator $r2;
        java.lang.NullPointerException $r3, $r4;

        r0 := @parameter0: java.util.ListIterator;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("ListIterator must not be null");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null");

        throw $r3;

     label2:
        $r2 = new org.apache.commons.collections4.iterators.FilterListIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>(r0, r1);

        return $r2;
    }

    public static org.apache.commons.collections4.ResettableIterator loopingIterator(java.util.Collection)
    {
        java.util.Collection r0;
        org.apache.commons.collections4.iterators.LoopingIterator $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Collection must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections4.iterators.LoopingIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.LoopingIterator: void <init>(java.util.Collection)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.ResettableListIterator loopingListIterator(java.util.List)
    {
        java.util.List r0;
        org.apache.commons.collections4.iterators.LoopingListIterator $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("List must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections4.iterators.LoopingListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(org.w3c.dom.NodeList)
    {
        org.w3c.dom.NodeList r0;
        org.apache.commons.collections4.iterators.NodeListIterator $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: org.w3c.dom.NodeList;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("NodeList must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections4.iterators.NodeListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.NodeListIterator: void <init>(org.w3c.dom.NodeList)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0;
        org.apache.commons.collections4.iterators.NodeListIterator $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: org.w3c.dom.Node;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Node must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections4.iterators.NodeListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.NodeListIterator: void <init>(org.w3c.dom.Node)>(r0);

        return $r1;
    }

    public static java.util.Iterator peekingIterator(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.iterators.PeekingIterator $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <org.apache.commons.collections4.iterators.PeekingIterator: org.apache.commons.collections4.iterators.PeekingIterator peekingIterator(java.util.Iterator)>(r0);

        return $r1;
    }

    public static java.util.Iterator pushbackIterator(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.iterators.PushbackIterator $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <org.apache.commons.collections4.iterators.PushbackIterator: org.apache.commons.collections4.iterators.PushbackIterator pushbackIterator(java.util.Iterator)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.iterators.SkippingIterator skippingIterator(java.util.Iterator, long)
    {
        java.util.Iterator r0;
        long l0;
        org.apache.commons.collections4.iterators.SkippingIterator $r1;

        r0 := @parameter0: java.util.Iterator;

        l0 := @parameter1: long;

        $r1 = new org.apache.commons.collections4.iterators.SkippingIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.SkippingIterator: void <init>(java.util.Iterator,long)>(r0, l0);

        return $r1;
    }

    public static org.apache.commons.collections4.iterators.ZippingIterator zippingIterator(java.util.Iterator, java.util.Iterator)
    {
        java.util.Iterator r0, r1;
        org.apache.commons.collections4.iterators.ZippingIterator $r2;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Iterator;

        $r2 = new org.apache.commons.collections4.iterators.ZippingIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.ZippingIterator: void <init>(java.util.Iterator,java.util.Iterator)>(r0, r1);

        return $r2;
    }

    public static org.apache.commons.collections4.iterators.ZippingIterator zippingIterator(java.util.Iterator, java.util.Iterator, java.util.Iterator)
    {
        java.util.Iterator r0, r1, r2;
        org.apache.commons.collections4.iterators.ZippingIterator $r3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Iterator;

        r2 := @parameter2: java.util.Iterator;

        $r3 = new org.apache.commons.collections4.iterators.ZippingIterator;

        specialinvoke $r3.<org.apache.commons.collections4.iterators.ZippingIterator: void <init>(java.util.Iterator,java.util.Iterator,java.util.Iterator)>(r0, r1, r2);

        return $r3;
    }

    public static transient org.apache.commons.collections4.iterators.ZippingIterator zippingIterator(java.util.Iterator[])
    {
        java.util.Iterator[] r0;
        org.apache.commons.collections4.iterators.ZippingIterator $r1;

        r0 := @parameter0: java.util.Iterator[];

        $r1 = new org.apache.commons.collections4.iterators.ZippingIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ZippingIterator: void <init>(java.util.Iterator[])>(r0);

        return $r1;
    }

    public static java.util.Iterator asIterator(java.util.Enumeration)
    {
        java.util.Enumeration r0;
        org.apache.commons.collections4.iterators.EnumerationIterator $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.Enumeration;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Enumeration must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections4.iterators.EnumerationIterator;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.EnumerationIterator: void <init>(java.util.Enumeration)>(r0);

        return $r1;
    }

    public static java.util.Iterator asIterator(java.util.Enumeration, java.util.Collection)
    {
        java.util.Enumeration r0;
        java.util.Collection r1;
        org.apache.commons.collections4.iterators.EnumerationIterator $r2;
        java.lang.NullPointerException $r3, $r4;

        r0 := @parameter0: java.util.Enumeration;

        r1 := @parameter1: java.util.Collection;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Enumeration must not be null");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Collection must not be null");

        throw $r3;

     label2:
        $r2 = new org.apache.commons.collections4.iterators.EnumerationIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.EnumerationIterator: void <init>(java.util.Enumeration,java.util.Collection)>(r0, r1);

        return $r2;
    }

    public static java.util.Enumeration asEnumeration(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.iterators.IteratorEnumeration $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.Iterator;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections4.iterators.IteratorEnumeration;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.IteratorEnumeration: void <init>(java.util.Iterator)>(r0);

        return $r1;
    }

    public static java.lang.Iterable asIterable(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.iterators.IteratorIterable $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.Iterator;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections4.iterators.IteratorIterable;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.IteratorIterable: void <init>(java.util.Iterator,boolean)>(r0, 0);

        return $r1;
    }

    public static java.lang.Iterable asMultipleUseIterable(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.iterators.IteratorIterable $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.Iterator;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections4.iterators.IteratorIterable;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.IteratorIterable: void <init>(java.util.Iterator,boolean)>(r0, 1);

        return $r1;
    }

    public static java.util.ListIterator toListIterator(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.iterators.ListIteratorWrapper $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.Iterator;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections4.iterators.ListIteratorWrapper;

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ListIteratorWrapper: void <init>(java.util.Iterator)>(r0);

        return $r1;
    }

    public static java.lang.Object[] toArray(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.util.List r1;
        java.lang.Object[] $r2;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.util.Iterator;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r3;

     label1:
        r1 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.List toList(java.util.Iterator,int)>(r0, 100);

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray()>();

        return $r2;
    }

    public static java.lang.Object[] toArray(java.util.Iterator, java.lang.Class)
    {
        java.util.Iterator r0;
        java.lang.Class r1;
        java.util.List r2;
        java.lang.Object[] r3, $r5, $r6;
        int $i0;
        java.lang.Object $r4;
        java.lang.NullPointerException $r7, $r8;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r8;

     label1:
        if r1 != null goto label2;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("Array class must not be null");

        throw $r7;

     label2:
        r2 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.List toList(java.util.Iterator,int)>(r0, 100);

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, $i0);

        $r5 = (java.lang.Object[]) $r4;

        r3 = (java.lang.Object[]) $r5;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        return $r6;
    }

    public static java.util.List toList(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.util.List $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.List toList(java.util.Iterator,int)>(r0, 10);

        return $r1;
    }

    public static java.util.List toList(java.util.Iterator, int)
    {
        java.util.Iterator r0;
        int i0;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.NullPointerException $r5;

        r0 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r5;

     label1:
        if i0 >= 1 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Estimated size must be greater than 0");

        throw $r4;

     label2:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0);

     label3:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label3;

     label4:
        return $r2;
    }

    public static java.util.Iterator getIterator(java.lang.Object)
    {
        java.lang.Object r0, $r8;
        java.util.Iterator r1, $r19, $r26, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Class $r2, $r3, $r5, $r6;
        java.lang.Class[] $r4;
        java.lang.Object[] $r7, $r23, $r24;
        org.apache.commons.collections4.iterators.ArrayIterator $r9;
        org.apache.commons.collections4.iterators.EnumerationIterator $r10, $r20;
        java.util.Dictionary $r11;
        java.util.Enumeration $r12, $r21;
        org.apache.commons.collections4.iterators.NodeListIterator $r13, $r15;
        org.w3c.dom.Node $r14;
        org.w3c.dom.NodeList $r16;
        java.util.Map $r17;
        java.util.Collection $r18;
        org.apache.commons.collections4.iterators.ObjectArrayIterator $r22;
        java.lang.Iterable $r25;
        org.apache.commons.collections4.ResettableIterator $r28, $r38;
        java.lang.NoSuchMethodException $r29;
        java.lang.RuntimeException $r30;
        java.lang.reflect.InvocationTargetException $r31;
        java.lang.IllegalAccessException $r32;
        java.lang.reflect.Method r33;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label01;

        $r28 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator emptyIterator()>();

        return $r28;

     label01:
        $z0 = r0 instanceof java.util.Iterator;

        if $z0 == 0 goto label02;

        $r27 = (java.util.Iterator) r0;

        return $r27;

     label02:
        $z1 = r0 instanceof java.lang.Iterable;

        if $z1 == 0 goto label03;

        $r25 = (java.lang.Iterable) r0;

        $r26 = interfaceinvoke $r25.<java.lang.Iterable: java.util.Iterator iterator()>();

        return $r26;

     label03:
        $z2 = r0 instanceof java.lang.Object[];

        if $z2 == 0 goto label04;

        $r22 = new org.apache.commons.collections4.iterators.ObjectArrayIterator;

        $r23 = (java.lang.Object[]) r0;

        $r24 = (java.lang.Object[]) $r23;

        specialinvoke $r22.<org.apache.commons.collections4.iterators.ObjectArrayIterator: void <init>(java.lang.Object[])>($r24);

        return $r22;

     label04:
        $z3 = r0 instanceof java.util.Enumeration;

        if $z3 == 0 goto label05;

        $r20 = new org.apache.commons.collections4.iterators.EnumerationIterator;

        $r21 = (java.util.Enumeration) r0;

        specialinvoke $r20.<org.apache.commons.collections4.iterators.EnumerationIterator: void <init>(java.util.Enumeration)>($r21);

        return $r20;

     label05:
        $z4 = r0 instanceof java.util.Map;

        if $z4 == 0 goto label06;

        $r17 = (java.util.Map) r0;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.util.Collection values()>();

        $r19 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();

        return $r19;

     label06:
        $z5 = r0 instanceof org.w3c.dom.NodeList;

        if $z5 == 0 goto label07;

        $r15 = new org.apache.commons.collections4.iterators.NodeListIterator;

        $r16 = (org.w3c.dom.NodeList) r0;

        specialinvoke $r15.<org.apache.commons.collections4.iterators.NodeListIterator: void <init>(org.w3c.dom.NodeList)>($r16);

        return $r15;

     label07:
        $z6 = r0 instanceof org.w3c.dom.Node;

        if $z6 == 0 goto label08;

        $r13 = new org.apache.commons.collections4.iterators.NodeListIterator;

        $r14 = (org.w3c.dom.Node) r0;

        specialinvoke $r13.<org.apache.commons.collections4.iterators.NodeListIterator: void <init>(org.w3c.dom.Node)>($r14);

        return $r13;

     label08:
        $z7 = r0 instanceof java.util.Dictionary;

        if $z7 == 0 goto label09;

        $r10 = new org.apache.commons.collections4.iterators.EnumerationIterator;

        $r11 = (java.util.Dictionary) r0;

        $r12 = virtualinvoke $r11.<java.util.Dictionary: java.util.Enumeration elements()>();

        specialinvoke $r10.<org.apache.commons.collections4.iterators.EnumerationIterator: void <init>(java.util.Enumeration)>($r12);

        return $r10;

     label09:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z8 = virtualinvoke $r2.<java.lang.Class: boolean isArray()>();

        if $z8 == 0 goto label10;

        $r9 = new org.apache.commons.collections4.iterators.ArrayIterator;

        specialinvoke $r9.<org.apache.commons.collections4.iterators.ArrayIterator: void <init>(java.lang.Object)>(r0);

        return $r9;

     label10:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = (java.lang.Class[]) null;

        r33 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("iterator", $r4);

        $r5 = class "Ljava/util/Iterator;";

        $r6 = virtualinvoke r33.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $z9 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r6);

        if $z9 == 0 goto label12;

        $r7 = (java.lang.Object[]) null;

        $r8 = virtualinvoke r33.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r7);

        r1 = (java.util.Iterator) $r8;

        if r1 == null goto label12;

     label11:
        return r1;

     label12:
        goto label17;

     label13:
        $r30 := @caughtexception;

        goto label17;

     label14:
        $r29 := @caughtexception;

        goto label17;

     label15:
        $r32 := @caughtexception;

        goto label17;

     label16:
        $r31 := @caughtexception;

     label17:
        $r38 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator singletonIterator(java.lang.Object)>(r0);

        return $r38;

        catch java.lang.RuntimeException from label10 to label11 with label13;
        catch java.lang.NoSuchMethodException from label10 to label11 with label14;
        catch java.lang.IllegalAccessException from label10 to label11 with label15;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label16;
    }

    public static void forEach(java.util.Iterator, org.apache.commons.collections4.Closure)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.Closure r1;
        java.lang.Object r2;
        boolean $z0;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.commons.collections4.Closure;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Closure must not be null");

        throw $r3;

     label1:
        if r0 == null goto label3;

     label2:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r1.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(r2);

        goto label2;

     label3:
        return;
    }

    public static java.lang.Object forEachButLast(java.util.Iterator, org.apache.commons.collections4.Closure)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.Closure r1;
        java.lang.Object r2;
        boolean $z0, $z1;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.commons.collections4.Closure;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Closure must not be null.");

        throw $r3;

     label1:
        if r0 == null goto label5;

     label2:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        interfaceinvoke r1.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(r2);

        goto label4;

     label3:
        return r2;

     label4:
        goto label2;

     label5:
        return null;
    }

    public static java.lang.Object find(java.util.Iterator, org.apache.commons.collections4.Predicate)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.Predicate r1;
        java.lang.Object r2;
        boolean $z0, $z1;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null");

        throw $r3;

     label1:
        if r0 == null goto label4;

     label2:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

        return r2;

     label3:
        goto label2;

     label4:
        return null;
    }

    public static int indexOf(java.util.Iterator, org.apache.commons.collections4.Predicate)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.Predicate r1;
        java.lang.Object r2;
        boolean $z0, $z1;
        java.lang.NullPointerException $r3;
        int i0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null");

        throw $r3;

     label1:
        if r0 == null goto label4;

        i0 = 0;

     label2:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

        return i0;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return -1;
    }

    public static boolean matchesAny(java.util.Iterator, org.apache.commons.collections4.Predicate)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.Predicate r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        $i0 = staticinvoke <org.apache.commons.collections4.IteratorUtils: int indexOf(java.util.Iterator,org.apache.commons.collections4.Predicate)>(r0, r1);

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean matchesAll(java.util.Iterator, org.apache.commons.collections4.Predicate)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.Predicate r1;
        java.lang.Object r2;
        boolean $z0, $z1;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null");

        throw $r3;

     label1:
        if r0 == null goto label4;

     label2:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r2);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        goto label2;

     label4:
        return 1;
    }

    public static boolean isEmpty(java.util.Iterator)
    {
        java.util.Iterator r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Iterator;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static boolean contains(java.util.Iterator, java.lang.Object)
    {
        java.util.Iterator r0;
        java.lang.Object r1;
        org.apache.commons.collections4.Predicate $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>(r1);

        $z0 = staticinvoke <org.apache.commons.collections4.IteratorUtils: boolean matchesAny(java.util.Iterator,org.apache.commons.collections4.Predicate)>(r0, $r2);

        return $z0;
    }

    public static java.lang.Object get(java.util.Iterator, int)
    {
        java.util.Iterator r0;
        int i0, i1;
        boolean $z0;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        java.lang.Object $r7;

        r0 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        i1 = i0;

        staticinvoke <org.apache.commons.collections4.CollectionUtils: void checkIndexBounds(int)>(i0);

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        i1 = i1 + -1;

        if i1 != -1 goto label2;

        $r7 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        return $r7;

     label2:
        interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        goto label1;

     label3:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entry does not exist: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    public static java.lang.Object first(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.lang.Object $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object get(java.util.Iterator,int)>(r0, 0);

        return $r1;
    }

    public static int size(java.util.Iterator)
    {
        java.util.Iterator r0;
        boolean $z0;
        int i0;

        r0 := @parameter0: java.util.Iterator;

        i0 = 0;

        if r0 == null goto label2;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return i0;
    }

    public static java.lang.String toString(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.Transformer $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer stringValueTransformer()>();

        $r2 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.String toString(java.util.Iterator,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>(r0, $r1, ", ", "[", "]");

        return $r2;
    }

    public static java.lang.String toString(java.util.Iterator, org.apache.commons.collections4.Transformer)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.Transformer r1;
        java.lang.String $r2;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        $r2 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.String toString(java.util.Iterator,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>(r0, r1, ", ", "[", "]");

        return $r2;
    }

    public static java.lang.String toString(java.util.Iterator, org.apache.commons.collections4.Transformer, java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.Transformer r1;
        java.lang.String r2, r3, r4, $r10, $r17;
        java.lang.Object r6, $r9;
        java.lang.StringBuilder $r7;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.NullPointerException $r13, $r14, $r15, $r16;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        if r1 != null goto label1;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("transformer may not be null");

        throw $r16;

     label1:
        if r2 != null goto label2;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("delimiter may not be null");

        throw $r15;

     label2:
        if r3 != null goto label3;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("prefix may not be null");

        throw $r14;

     label3:
        if r4 != null goto label4;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("suffix may not be null");

        throw $r13;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(r3);

        if r0 == null goto label7;

     label5:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        r6 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r9 = interfaceinvoke r1.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r6);

        $r10 = (java.lang.String) $r9;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        goto label5;

     label6:
        $i0 = virtualinvoke $r7.<java.lang.StringBuilder: int length()>();

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label7;

        $i2 = virtualinvoke $r7.<java.lang.StringBuilder: int length()>();

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        $i4 = $i2 - $i3;

        virtualinvoke $r7.<java.lang.StringBuilder: void setLength(int)>($i4);

     label7:
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r17 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    static void <clinit>()
    {
        org.apache.commons.collections4.ResettableIterator $r0;
        org.apache.commons.collections4.ResettableListIterator $r1;
        org.apache.commons.collections4.OrderedIterator $r2;
        org.apache.commons.collections4.MapIterator $r3;
        org.apache.commons.collections4.OrderedMapIterator $r4;

        <org.apache.commons.collections4.IteratorUtils: java.lang.String DEFAULT_TOSTRING_DELIMITER> = ", ";

        <org.apache.commons.collections4.IteratorUtils: java.lang.String DEFAULT_TOSTRING_SUFFIX> = "]";

        <org.apache.commons.collections4.IteratorUtils: java.lang.String DEFAULT_TOSTRING_PREFIX> = "[";

        $r0 = <org.apache.commons.collections4.iterators.EmptyIterator: org.apache.commons.collections4.ResettableIterator RESETTABLE_INSTANCE>;

        <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR> = $r0;

        $r1 = <org.apache.commons.collections4.iterators.EmptyListIterator: org.apache.commons.collections4.ResettableListIterator RESETTABLE_INSTANCE>;

        <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR> = $r1;

        $r2 = <org.apache.commons.collections4.iterators.EmptyOrderedIterator: org.apache.commons.collections4.OrderedIterator INSTANCE>;

        <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR> = $r2;

        $r3 = <org.apache.commons.collections4.iterators.EmptyMapIterator: org.apache.commons.collections4.MapIterator INSTANCE>;

        <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR> = $r3;

        $r4 = <org.apache.commons.collections4.iterators.EmptyOrderedMapIterator: org.apache.commons.collections4.OrderedMapIterator INSTANCE>;

        <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR> = $r4;

        return;
    }
}
