public abstract class org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View extends org.apache.commons.collections4.collection.AbstractCollectionDecorator
{
    private static final long serialVersionUID;
    protected final org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent;

    protected void <init>(java.util.Collection, org.apache.commons.collections4.bidimap.AbstractDualBidiMap)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View r0;
        java.util.Collection r1;
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap r2;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.AbstractDualBidiMap;

        specialinvoke r0.<org.apache.commons.collections4.collection.AbstractCollectionDecorator: void <init>(java.util.Collection)>(r1);

        r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View: org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent> = r2;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View r0;
        java.lang.Object r1;
        java.util.Collection $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View;

        r1 := @parameter0: java.lang.Object;

        if r1 == r0 goto label1;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View: java.util.Collection decorated()>();

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View r0;
        java.util.Collection $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View: java.util.Collection decorated()>();

        $i0 = interfaceinvoke $r1.<java.util.Collection: int hashCode()>();

        return $i0;
    }

    public boolean removeAll(java.util.Collection)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap $r3;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View;

        r1 := @parameter0: java.util.Collection;

        $r3 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View: org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent>;

        $z0 = virtualinvoke $r3.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        z4 = 0;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z3 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View: boolean remove(java.lang.Object)>($r4);

        z4 = z4 | $z3;

        goto label3;

     label4:
        return z4;
    }

    public boolean retainAll(java.util.Collection)
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap $r3, $r5;
        boolean $z0, $z1, $z2, z3, $z4;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View;

        r1 := @parameter0: java.util.Collection;

        $r3 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View: org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent>;

        $z0 = virtualinvoke $r3.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r5 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View: org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent>;

        virtualinvoke $r5.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: void clear()>();

        return 1;

     label2:
        z3 = 0;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z2 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r4);

        if $z2 != 0 goto label3;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        z3 = 1;

        goto label3;

     label4:
        return z3;
    }

    public void clear()
    {
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View r0;
        org.apache.commons.collections4.bidimap.AbstractDualBidiMap $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View;

        $r1 = r0.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View: org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent>;

        virtualinvoke $r1.<org.apache.commons.collections4.bidimap.AbstractDualBidiMap: void clear()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View: long serialVersionUID> = 4621510560119690639L;

        return;
    }
}
