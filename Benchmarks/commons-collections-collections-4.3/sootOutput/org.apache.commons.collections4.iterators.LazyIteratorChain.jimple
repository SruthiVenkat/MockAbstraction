public abstract class org.apache.commons.collections4.iterators.LazyIteratorChain extends java.lang.Object implements java.util.Iterator
{
    private int callCounter;
    private boolean chainExhausted;
    private java.util.Iterator currentIterator;
    private java.util.Iterator lastUsedIterator;

    public void <init>()
    {
        org.apache.commons.collections4.iterators.LazyIteratorChain r0;

        r0 := @this: org.apache.commons.collections4.iterators.LazyIteratorChain;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: int callCounter> = 0;

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: boolean chainExhausted> = 0;

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator currentIterator> = null;

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator lastUsedIterator> = null;

        return;
    }

    protected abstract java.util.Iterator nextIterator(int);

    private void updateCurrentIterator()
    {
        org.apache.commons.collections4.iterators.LazyIteratorChain r0;
        java.util.Iterator r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.iterators.LazyIteratorChain;

        $i0 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: int callCounter>;

        if $i0 != 0 goto label2;

        $i3 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: int callCounter>;

        $i4 = $i3 + 1;

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: int callCounter> = $i4;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator nextIterator(int)>($i4);

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator currentIterator> = $r2;

        $r3 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator currentIterator>;

        if $r3 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.collections4.iterators.EmptyIterator: java.util.Iterator emptyIterator()>();

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator currentIterator> = $r5;

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: boolean chainExhausted> = 1;

     label1:
        $r4 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator currentIterator>;

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator lastUsedIterator> = $r4;

     label2:
        $r6 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator currentIterator>;

        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label5;

        $z0 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: boolean chainExhausted>;

        if $z0 != 0 goto label5;

        $i1 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: int callCounter>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: int callCounter> = $i2;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator nextIterator(int)>($i2);

        if r1 == null goto label3;

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator currentIterator> = r1;

        goto label4;

     label3:
        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: boolean chainExhausted> = 1;

     label4:
        goto label2;

     label5:
        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections4.iterators.LazyIteratorChain r0;
        java.util.Iterator $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.iterators.LazyIteratorChain;

        specialinvoke r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: void updateCurrentIterator()>();

        $r1 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator currentIterator>;

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator lastUsedIterator> = $r1;

        $r2 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator currentIterator>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections4.iterators.LazyIteratorChain r0;
        java.util.Iterator $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections4.iterators.LazyIteratorChain;

        specialinvoke r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: void updateCurrentIterator()>();

        $r1 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator currentIterator>;

        r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator lastUsedIterator> = $r1;

        $r2 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator currentIterator>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        return $r3;
    }

    public void remove()
    {
        org.apache.commons.collections4.iterators.LazyIteratorChain r0;
        java.util.Iterator $r1, $r2;

        r0 := @this: org.apache.commons.collections4.iterators.LazyIteratorChain;

        $r1 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator currentIterator>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: void updateCurrentIterator()>();

     label1:
        $r2 = r0.<org.apache.commons.collections4.iterators.LazyIteratorChain: java.util.Iterator lastUsedIterator>;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        return;
    }
}
