public class org.apache.commons.collections4.MultiSetUtils extends java.lang.Object
{
    public static final org.apache.commons.collections4.MultiSet EMPTY_MULTISET;

    private void <init>()
    {
        org.apache.commons.collections4.MultiSetUtils r0;

        r0 := @this: org.apache.commons.collections4.MultiSetUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.commons.collections4.MultiSet synchronizedMultiSet(org.apache.commons.collections4.MultiSet)
    {
        org.apache.commons.collections4.MultiSet r0;
        org.apache.commons.collections4.multiset.SynchronizedMultiSet $r1;

        r0 := @parameter0: org.apache.commons.collections4.MultiSet;

        $r1 = staticinvoke <org.apache.commons.collections4.multiset.SynchronizedMultiSet: org.apache.commons.collections4.multiset.SynchronizedMultiSet synchronizedMultiSet(org.apache.commons.collections4.MultiSet)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.MultiSet unmodifiableMultiSet(org.apache.commons.collections4.MultiSet)
    {
        org.apache.commons.collections4.MultiSet r0, $r1;

        r0 := @parameter0: org.apache.commons.collections4.MultiSet;

        $r1 = staticinvoke <org.apache.commons.collections4.multiset.UnmodifiableMultiSet: org.apache.commons.collections4.MultiSet unmodifiableMultiSet(org.apache.commons.collections4.MultiSet)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.MultiSet predicatedMultiSet(org.apache.commons.collections4.MultiSet, org.apache.commons.collections4.Predicate)
    {
        org.apache.commons.collections4.MultiSet r0;
        org.apache.commons.collections4.Predicate r1;
        org.apache.commons.collections4.multiset.PredicatedMultiSet $r2;

        r0 := @parameter0: org.apache.commons.collections4.MultiSet;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        $r2 = staticinvoke <org.apache.commons.collections4.multiset.PredicatedMultiSet: org.apache.commons.collections4.multiset.PredicatedMultiSet predicatedMultiSet(org.apache.commons.collections4.MultiSet,org.apache.commons.collections4.Predicate)>(r0, r1);

        return $r2;
    }

    public static org.apache.commons.collections4.MultiSet emptyMultiSet()
    {
        org.apache.commons.collections4.MultiSet $r0;

        $r0 = <org.apache.commons.collections4.MultiSetUtils: org.apache.commons.collections4.MultiSet EMPTY_MULTISET>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.commons.collections4.multiset.HashMultiSet $r0;
        org.apache.commons.collections4.MultiSet $r1;

        $r0 = new org.apache.commons.collections4.multiset.HashMultiSet;

        specialinvoke $r0.<org.apache.commons.collections4.multiset.HashMultiSet: void <init>()>();

        $r1 = staticinvoke <org.apache.commons.collections4.multiset.UnmodifiableMultiSet: org.apache.commons.collections4.MultiSet unmodifiableMultiSet(org.apache.commons.collections4.MultiSet)>($r0);

        <org.apache.commons.collections4.MultiSetUtils: org.apache.commons.collections4.MultiSet EMPTY_MULTISET> = $r1;

        return;
    }
}
