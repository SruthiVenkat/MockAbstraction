public class org.apache.commons.collections4.list.TransformedListTest extends org.apache.commons.collections4.list.AbstractListTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.list.TransformedListTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractListTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public java.util.List makeConfirmedCollection()
    {
        org.apache.commons.collections4.list.TransformedListTest r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;
    }

    public java.util.List makeConfirmedFullCollection()
    {
        org.apache.commons.collections4.list.TransformedListTest r0;
        java.util.ArrayList $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.list.TransformedListTest: java.lang.Object[] getFullElements()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return $r2;
    }

    public java.util.List makeObject()
    {
        org.apache.commons.collections4.list.TransformedListTest r0;
        java.util.ArrayList $r1;
        org.apache.commons.collections4.Transformer $r2;
        org.apache.commons.collections4.list.TransformedList $r3;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer NOOP_TRANSFORMER>;

        $r3 = staticinvoke <org.apache.commons.collections4.list.TransformedList: org.apache.commons.collections4.list.TransformedList transformingList(java.util.List,org.apache.commons.collections4.Transformer)>($r1, $r2);

        return $r3;
    }

    public java.util.List makeFullCollection()
    {
        org.apache.commons.collections4.list.TransformedListTest r0;
        java.util.ArrayList $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;
        org.apache.commons.collections4.Transformer $r5;
        org.apache.commons.collections4.list.TransformedList $r6;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.list.TransformedListTest: java.lang.Object[] getFullElements()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        $r5 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer NOOP_TRANSFORMER>;

        $r6 = staticinvoke <org.apache.commons.collections4.list.TransformedList: org.apache.commons.collections4.list.TransformedList transformingList(java.util.List,org.apache.commons.collections4.Transformer)>($r2, $r5);

        return $r6;
    }

    public void testTransformedList()
    {
        org.apache.commons.collections4.list.TransformedListTest r0;
        org.apache.commons.collections4.list.TransformedList r1;
        java.lang.Object[] r2, $r6;
        java.util.ArrayList $r4, $r19;
        org.apache.commons.collections4.Transformer $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.Object $r7, $r8, $r13, $r16, $r18, $r21, $r23, $r25, $r27, $r29, $r30, $r31, $r34, $r35, $r36, $r39;
        boolean $z0, $z1, $z8, $z9;
        java.lang.String $r9, $r32, $r37;
        java.lang.Integer $r10, $r12, $r15, $r17, $r20, $r22, $r24, $r26, $r28, $r33, $r38;
        java.util.ListIterator r40;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer STRING_TO_INTEGER_TRANSFORMER>;

        r1 = staticinvoke <org.apache.commons.collections4.list.TransformedList: org.apache.commons.collections4.list.TransformedList transformingList(java.util.List,org.apache.commons.collections4.Transformer)>($r4, $r5);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(int,int)>(0, $i0);

        $r6 = newarray (java.lang.Object)[7];

        $r6[0] = "1";

        $r6[1] = "3";

        $r6[2] = "5";

        $r6[3] = "7";

        $r6[4] = "2";

        $r6[5] = "4";

        $r6[6] = "6";

        r2 = (java.lang.Object[]) $r6;

        i7 = 0;

     label1:
        $i1 = lengthof r2;

        if i7 >= $i1 goto label2;

        $r35 = r2[i7];

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r35);

        $i5 = i7 + 1;

        $i6 = interfaceinvoke r1.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(int,int)>($i5, $i6);

        $r36 = r2[i7];

        $r37 = (java.lang.String) $r36;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r37);

        $z8 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r38);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(boolean,boolean)>(1, $z8);

        $r39 = r2[i7];

        $z9 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r39);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(boolean,boolean)>(0, $z9);

        i7 = i7 + 1;

        goto label1;

     label2:
        $r7 = r2[0];

        $z0 = interfaceinvoke r1.<java.util.List: boolean remove(java.lang.Object)>($r7);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(boolean,boolean)>(0, $z0);

        $r8 = r2[0];

        $r9 = (java.lang.String) $r8;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r9);

        $z1 = interfaceinvoke r1.<java.util.List: boolean remove(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(boolean,boolean)>(1, $z1);

        interfaceinvoke r1.<java.util.List: void clear()>();

        i8 = 0;

     label3:
        $i2 = lengthof r2;

        if i8 >= $i2 goto label4;

        $r30 = r2[i8];

        interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>(0, $r30);

        $i3 = i8 + 1;

        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(int,int)>($i3, $i4);

        $r31 = r2[i8];

        $r32 = (java.lang.String) $r31;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r32);

        $r34 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r33, $r34);

        i8 = i8 + 1;

        goto label3;

     label4:
        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, "22");

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(22);

        $r13 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13);

        r40 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator()>();

        interfaceinvoke r40.<java.util.ListIterator: java.lang.Object next()>();

        interfaceinvoke r40.<java.util.ListIterator: void set(java.lang.Object)>("33");

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(33);

        $r16 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16);

        interfaceinvoke r40.<java.util.ListIterator: void add(java.lang.Object)>("44");

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(44);

        $r18 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("1");

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("2");

        interfaceinvoke r1.<java.util.List: void clear()>();

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r19);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r21 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r23 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23);

        interfaceinvoke $r19.<java.util.List: void clear()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("3");

        interfaceinvoke r1.<java.util.List: boolean addAll(int,java.util.Collection)>(1, $r19);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r25 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25);

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r27 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27);

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r29 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(2);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29);

        return;
    }

    public void testTransformedList_decorateTransform()
    {
        org.apache.commons.collections4.list.TransformedListTest r0;
        java.lang.Object r3, $r7, $r8, r14;
        java.util.ArrayList $r4;
        java.lang.Object[] $r5;
        org.apache.commons.collections4.Transformer $r6;
        int $i0, $i1, i2, i3, i4, i5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r9, $r11;
        java.lang.Integer $r10, $r12;
        org.apache.commons.collections4.list.TransformedList r15;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = newarray (java.lang.Object)[7];

        $r5[0] = "1";

        $r5[1] = "3";

        $r5[2] = "5";

        $r5[3] = "7";

        $r5[4] = "2";

        $r5[5] = "4";

        $r5[6] = "6";

        i2 = lengthof $r5;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        r14 = $r5[i3];

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r14);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r6 = <org.apache.commons.collections4.collection.TransformedCollectionTest: org.apache.commons.collections4.Transformer STRING_TO_INTEGER_TRANSFORMER>;

        r15 = staticinvoke <org.apache.commons.collections4.list.TransformedList: org.apache.commons.collections4.list.TransformedList transformedList(java.util.List,org.apache.commons.collections4.Transformer)>($r4, $r6);

        $i0 = lengthof $r5;

        $i1 = interfaceinvoke r15.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(int,int)>($i0, $i1);

        i4 = lengthof $r5;

        i5 = 0;

     label3:
        if i5 >= i4 goto label4;

        r3 = $r5[i5];

        $r11 = (java.lang.String) r3;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r11);

        $z2 = interfaceinvoke r15.<java.util.List: boolean contains(java.lang.Object)>($r12);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(boolean,boolean)>(1, $z2);

        $z3 = interfaceinvoke r15.<java.util.List: boolean contains(java.lang.Object)>(r3);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(boolean,boolean)>(0, $z3);

        i5 = i5 + 1;

        goto label3;

     label4:
        $r7 = $r5[0];

        $z0 = interfaceinvoke r15.<java.util.List: boolean remove(java.lang.Object)>($r7);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(boolean,boolean)>(0, $z0);

        $r8 = $r5[0];

        $r9 = (java.lang.String) $r8;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r9);

        $z1 = interfaceinvoke r15.<java.util.List: boolean remove(java.lang.Object)>($r10);

        staticinvoke <org.apache.commons.collections4.list.TransformedListTest: void assertEquals(boolean,boolean)>(1, $z1);

        return;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.list.TransformedListTest r0;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        return "4";
    }

    public volatile java.util.Collection makeConfirmedFullCollection()
    {
        org.apache.commons.collections4.list.TransformedListTest r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.TransformedListTest: java.util.List makeConfirmedFullCollection()>();

        return $r1;
    }

    public volatile java.util.Collection makeConfirmedCollection()
    {
        org.apache.commons.collections4.list.TransformedListTest r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.TransformedListTest: java.util.List makeConfirmedCollection()>();

        return $r1;
    }

    public volatile java.util.Collection makeFullCollection()
    {
        org.apache.commons.collections4.list.TransformedListTest r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.TransformedListTest: java.util.List makeFullCollection()>();

        return $r1;
    }

    public volatile java.util.Collection makeObject()
    {
        org.apache.commons.collections4.list.TransformedListTest r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.TransformedListTest: java.util.List makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.list.TransformedListTest r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.list.TransformedListTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.TransformedListTest: java.util.List makeObject()>();

        return $r1;
    }
}
