public abstract class org.apache.commons.collections4.trie.AbstractBitwiseTrie extends java.util.AbstractMap implements org.apache.commons.collections4.Trie, java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.apache.commons.collections4.trie.KeyAnalyzer keyAnalyzer;

    protected void <init>(org.apache.commons.collections4.trie.KeyAnalyzer)
    {
        org.apache.commons.collections4.trie.AbstractBitwiseTrie r0;
        org.apache.commons.collections4.trie.KeyAnalyzer r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.apache.commons.collections4.trie.AbstractBitwiseTrie;

        r1 := @parameter0: org.apache.commons.collections4.trie.KeyAnalyzer;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("keyAnalyzer");

        throw $r2;

     label1:
        r0.<org.apache.commons.collections4.trie.AbstractBitwiseTrie: org.apache.commons.collections4.trie.KeyAnalyzer keyAnalyzer> = r1;

        return;
    }

    protected org.apache.commons.collections4.trie.KeyAnalyzer getKeyAnalyzer()
    {
        org.apache.commons.collections4.trie.AbstractBitwiseTrie r0;
        org.apache.commons.collections4.trie.KeyAnalyzer $r1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractBitwiseTrie;

        $r1 = r0.<org.apache.commons.collections4.trie.AbstractBitwiseTrie: org.apache.commons.collections4.trie.KeyAnalyzer keyAnalyzer>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.trie.AbstractBitwiseTrie r0;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r12, $r13;
        int $i0;
        java.util.Set $r8;
        boolean $z0;
        java.lang.String $r10;
        java.lang.Object $r11;

        r0 := @this: org.apache.commons.collections4.trie.AbstractBitwiseTrie;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trie[");

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.trie.AbstractBitwiseTrie: int size()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]={\n");

        $r8 = virtualinvoke r0.<org.apache.commons.collections4.trie.AbstractBitwiseTrie: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r11;

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label1;

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}\n");

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    final java.lang.Object castKey(java.lang.Object)
    {
        org.apache.commons.collections4.trie.AbstractBitwiseTrie r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractBitwiseTrie;

        r1 := @parameter0: java.lang.Object;

        return r1;
    }

    final int lengthInBits(java.lang.Object)
    {
        org.apache.commons.collections4.trie.AbstractBitwiseTrie r0;
        java.lang.Object r1;
        org.apache.commons.collections4.trie.KeyAnalyzer $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.trie.AbstractBitwiseTrie;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.commons.collections4.trie.AbstractBitwiseTrie: org.apache.commons.collections4.trie.KeyAnalyzer keyAnalyzer>;

        $i0 = virtualinvoke $r2.<org.apache.commons.collections4.trie.KeyAnalyzer: int lengthInBits(java.lang.Object)>(r1);

        return $i0;
    }

    final int bitsPerElement()
    {
        org.apache.commons.collections4.trie.AbstractBitwiseTrie r0;
        org.apache.commons.collections4.trie.KeyAnalyzer $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.trie.AbstractBitwiseTrie;

        $r1 = r0.<org.apache.commons.collections4.trie.AbstractBitwiseTrie: org.apache.commons.collections4.trie.KeyAnalyzer keyAnalyzer>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections4.trie.KeyAnalyzer: int bitsPerElement()>();

        return $i0;
    }

    final boolean isBitSet(java.lang.Object, int, int)
    {
        org.apache.commons.collections4.trie.AbstractBitwiseTrie r0;
        java.lang.Object r1;
        int i0, i1;
        org.apache.commons.collections4.trie.KeyAnalyzer $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.trie.AbstractBitwiseTrie;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.commons.collections4.trie.AbstractBitwiseTrie: org.apache.commons.collections4.trie.KeyAnalyzer keyAnalyzer>;

        $z0 = virtualinvoke $r2.<org.apache.commons.collections4.trie.KeyAnalyzer: boolean isBitSet(java.lang.Object,int,int)>(r1, i0, i1);

        return $z0;
    }

    final int bitIndex(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.trie.AbstractBitwiseTrie r0;
        java.lang.Object r1, r2;
        org.apache.commons.collections4.trie.KeyAnalyzer $r3;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections4.trie.AbstractBitwiseTrie;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.commons.collections4.trie.AbstractBitwiseTrie: org.apache.commons.collections4.trie.KeyAnalyzer keyAnalyzer>;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.trie.AbstractBitwiseTrie: int lengthInBits(java.lang.Object)>(r1);

        $i1 = virtualinvoke r0.<org.apache.commons.collections4.trie.AbstractBitwiseTrie: int lengthInBits(java.lang.Object)>(r2);

        $i2 = virtualinvoke $r3.<org.apache.commons.collections4.trie.KeyAnalyzer: int bitIndex(java.lang.Object,int,int,java.lang.Object,int,int)>(r1, 0, $i0, r2, 0, $i1);

        return $i2;
    }

    final boolean compareKeys(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.trie.AbstractBitwiseTrie r0;
        java.lang.Object r1, r2;
        org.apache.commons.collections4.trie.KeyAnalyzer $r3;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.trie.AbstractBitwiseTrie;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 != null goto label3;

        if r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        if r2 != null goto label4;

        return 0;

     label4:
        $r3 = r0.<org.apache.commons.collections4.trie.AbstractBitwiseTrie: org.apache.commons.collections4.trie.KeyAnalyzer keyAnalyzer>;

        $i0 = virtualinvoke $r3.<org.apache.commons.collections4.trie.KeyAnalyzer: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        if $i0 != 0 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;
    }

    static boolean compare(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label3:
        return $z0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.trie.AbstractBitwiseTrie: long serialVersionUID> = 5826987063535505652L;

        return;
    }
}
