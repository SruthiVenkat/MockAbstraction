public abstract class org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest extends org.apache.commons.collections4.functors.AbstractCompositePredicateTest
{

    protected void <init>(java.lang.Object)
    {
        org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: void <init>(java.lang.Object)>(r1);

        return;
    }

    public final void singleElementArrayToGetInstance()
    {
        org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest r0;
        org.apache.commons.collections4.Predicate r1, r2;
        org.apache.commons.collections4.Predicate[] $r3;

        r0 := @this: org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest: org.apache.commons.collections4.Predicate createMockPredicate(java.lang.Boolean)>(null);

        $r3 = newarray (org.apache.commons.collections4.Predicate)[1];

        $r3[0] = r1;

        r2 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(org.apache.commons.collections4.Predicate[])>($r3);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("expected argument to be returned by getInstance()", r1, r2);

        return;
    }

    public final void singletonCollectionToGetInstance()
    {
        org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest r0;
        org.apache.commons.collections4.Predicate r1, r2;
        java.util.Set $r3;

        r0 := @this: org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest: org.apache.commons.collections4.Predicate createMockPredicate(java.lang.Boolean)>(null);

        $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r1);

        r2 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.util.Collection)>($r3);

        staticinvoke <org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("expected singleton collection member to be returned by getInstance()", r1, r2);

        return;
    }

    public final void singleValues()
    {
        org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest r0;
        java.lang.Boolean[] $r1, $r4;
        java.lang.Boolean $r2, $r5;
        org.apache.commons.collections4.Predicate $r3, $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest;

        $r1 = newarray (java.lang.Boolean)[1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.lang.Boolean[])>($r1);

        $z0 = interfaceinvoke $r3.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r4 = newarray (java.lang.Boolean)[1];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r4[0] = $r5;

        $r6 = virtualinvoke r0.<org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.lang.Boolean[])>($r4);

        $z1 = interfaceinvoke $r6.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        return;
    }
}
