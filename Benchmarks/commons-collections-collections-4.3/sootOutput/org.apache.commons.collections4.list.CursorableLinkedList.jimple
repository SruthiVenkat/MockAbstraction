public class org.apache.commons.collections4.list.CursorableLinkedList extends org.apache.commons.collections4.list.AbstractLinkedList implements java.io.Serializable
{
    private static final long serialVersionUID;
    private transient java.util.List cursors;

    public void <init>()
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void <init>()>();

        virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: void init()>();

        return;
    }

    public void <init>(java.util.Collection)
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        java.util.Collection r1;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void <init>(java.util.Collection)>(r1);

        return;
    }

    protected void init()
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void init()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.list.CursorableLinkedList: java.util.List cursors> = $r1;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        java.util.ListIterator $r1;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: java.util.ListIterator listIterator(int)>(0);

        return $r1;
    }

    public java.util.ListIterator listIterator()
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        org.apache.commons.collections4.list.CursorableLinkedList$Cursor $r1;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: org.apache.commons.collections4.list.CursorableLinkedList$Cursor cursor(int)>(0);

        return $r1;
    }

    public java.util.ListIterator listIterator(int)
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        int i0;
        org.apache.commons.collections4.list.CursorableLinkedList$Cursor $r1;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: org.apache.commons.collections4.list.CursorableLinkedList$Cursor cursor(int)>(i0);

        return $r1;
    }

    public org.apache.commons.collections4.list.CursorableLinkedList$Cursor cursor()
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        org.apache.commons.collections4.list.CursorableLinkedList$Cursor $r1;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: org.apache.commons.collections4.list.CursorableLinkedList$Cursor cursor(int)>(0);

        return $r1;
    }

    public org.apache.commons.collections4.list.CursorableLinkedList$Cursor cursor(int)
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        int i0;
        org.apache.commons.collections4.list.CursorableLinkedList$Cursor $r2;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        i0 := @parameter0: int;

        $r2 = new org.apache.commons.collections4.list.CursorableLinkedList$Cursor;

        specialinvoke $r2.<org.apache.commons.collections4.list.CursorableLinkedList$Cursor: void <init>(org.apache.commons.collections4.list.CursorableLinkedList,int)>(r0, i0);

        virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: void registerCursor(org.apache.commons.collections4.list.CursorableLinkedList$Cursor)>($r2);

        return $r2;
    }

    protected void updateNode(org.apache.commons.collections4.list.AbstractLinkedList$Node, java.lang.Object)
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1;
        java.lang.Object r2;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void updateNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,java.lang.Object)>(r1, r2);

        virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: void broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r1);

        return;
    }

    protected void addNode(org.apache.commons.collections4.list.AbstractLinkedList$Node, org.apache.commons.collections4.list.AbstractLinkedList$Node)
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1, r2;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        r2 := @parameter1: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void addNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r1, r2);

        virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: void broadcastNodeInserted(org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r1);

        return;
    }

    protected void removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        specialinvoke r0.<org.apache.commons.collections4.list.AbstractLinkedList: void removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r1);

        virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: void broadcastNodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r1);

        return;
    }

    protected void removeAllNodes()
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        java.util.Iterator r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: int size()>();

        if $i0 <= 0 goto label2;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    protected void registerCursor(org.apache.commons.collections4.list.CursorableLinkedList$Cursor)
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        org.apache.commons.collections4.list.CursorableLinkedList$Cursor r1;
        java.util.Iterator r2;
        java.lang.ref.WeakReference r3, $r5;
        java.util.List $r4, $r6;
        boolean $z0;
        java.lang.Object $r7, $r8;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.CursorableLinkedList$Cursor;

        $r4 = r0.<org.apache.commons.collections4.list.CursorableLinkedList: java.util.List cursors>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.ref.WeakReference) $r7;

        $r8 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r8 != null goto label2;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        $r6 = r0.<org.apache.commons.collections4.list.CursorableLinkedList: java.util.List cursors>;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        return;
    }

    protected void unregisterCursor(org.apache.commons.collections4.list.CursorableLinkedList$Cursor)
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        org.apache.commons.collections4.list.CursorableLinkedList$Cursor r1, r4;
        java.util.Iterator r2;
        java.lang.ref.WeakReference r3;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6, $r7;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.CursorableLinkedList$Cursor;

        $r5 = r0.<org.apache.commons.collections4.list.CursorableLinkedList: java.util.List cursors>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.ref.WeakReference) $r6;

        $r7 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (org.apache.commons.collections4.list.CursorableLinkedList$Cursor) $r7;

        if r4 != null goto label2;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label3;

     label2:
        if r4 != r1 goto label3;

        virtualinvoke r3.<java.lang.ref.WeakReference: void clear()>();

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label4;

     label3:
        goto label1;

     label4:
        return;
    }

    protected void broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node)
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1;
        java.util.Iterator r2;
        java.lang.ref.WeakReference r3;
        org.apache.commons.collections4.list.CursorableLinkedList$Cursor r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6, $r7;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        $r5 = r0.<org.apache.commons.collections4.list.CursorableLinkedList: java.util.List cursors>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.ref.WeakReference) $r6;

        $r7 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (org.apache.commons.collections4.list.CursorableLinkedList$Cursor) $r7;

        if r4 != null goto label2;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label3;

     label2:
        virtualinvoke r4.<org.apache.commons.collections4.list.CursorableLinkedList$Cursor: void nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r1);

     label3:
        goto label1;

     label4:
        return;
    }

    protected void broadcastNodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList$Node)
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1;
        java.util.Iterator r2;
        java.lang.ref.WeakReference r3;
        org.apache.commons.collections4.list.CursorableLinkedList$Cursor r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6, $r7;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        $r5 = r0.<org.apache.commons.collections4.list.CursorableLinkedList: java.util.List cursors>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.ref.WeakReference) $r6;

        $r7 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (org.apache.commons.collections4.list.CursorableLinkedList$Cursor) $r7;

        if r4 != null goto label2;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label3;

     label2:
        virtualinvoke r4.<org.apache.commons.collections4.list.CursorableLinkedList$Cursor: void nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r1);

     label3:
        goto label1;

     label4:
        return;
    }

    protected void broadcastNodeInserted(org.apache.commons.collections4.list.AbstractLinkedList$Node)
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$Node r1;
        java.util.Iterator r2;
        java.lang.ref.WeakReference r3;
        org.apache.commons.collections4.list.CursorableLinkedList$Cursor r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6, $r7;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$Node;

        $r5 = r0.<org.apache.commons.collections4.list.CursorableLinkedList: java.util.List cursors>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.ref.WeakReference) $r6;

        $r7 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (org.apache.commons.collections4.list.CursorableLinkedList$Cursor) $r7;

        if r4 != null goto label2;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label3;

     label2:
        virtualinvoke r4.<org.apache.commons.collections4.list.CursorableLinkedList$Cursor: void nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList$Node)>(r1);

     label3:
        goto label1;

     label4:
        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: void doWriteObject(java.io.ObjectOutputStream)>(r1);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        java.io.ObjectInputStream r1;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: void doReadObject(java.io.ObjectInputStream)>(r1);

        return;
    }

    protected java.util.ListIterator createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList, int)
    {
        org.apache.commons.collections4.list.CursorableLinkedList r0;
        org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList r1;
        int i0;
        org.apache.commons.collections4.list.CursorableLinkedList$SubCursor $r3;

        r0 := @this: org.apache.commons.collections4.list.CursorableLinkedList;

        r1 := @parameter0: org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList;

        i0 := @parameter1: int;

        $r3 = new org.apache.commons.collections4.list.CursorableLinkedList$SubCursor;

        specialinvoke $r3.<org.apache.commons.collections4.list.CursorableLinkedList$SubCursor: void <init>(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)>(r1, i0);

        virtualinvoke r0.<org.apache.commons.collections4.list.CursorableLinkedList: void registerCursor(org.apache.commons.collections4.list.CursorableLinkedList$Cursor)>($r3);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.list.CursorableLinkedList: long serialVersionUID> = 8836393098519411393L;

        return;
    }
}
