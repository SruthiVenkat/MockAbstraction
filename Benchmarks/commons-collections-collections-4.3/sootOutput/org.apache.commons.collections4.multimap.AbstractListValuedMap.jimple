public abstract class org.apache.commons.collections4.multimap.AbstractListValuedMap extends org.apache.commons.collections4.multimap.AbstractMultiValuedMap implements org.apache.commons.collections4.ListValuedMap
{

    protected void <init>()
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap r0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap;

        specialinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: void <init>()>();

        return;
    }

    protected void <init>(java.util.Map)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap r0;
        java.util.Map r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: void <init>(java.util.Map)>(r1);

        return;
    }

    protected java.util.Map getMap()
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: java.util.Map getMap()>();

        return $r1;
    }

    protected abstract java.util.List createCollection();

    public java.util.List get(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap: java.util.List wrappedCollection(java.lang.Object)>(r1);

        return $r2;
    }

    java.util.List wrappedCollection(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap r0;
        java.lang.Object r1;
        org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList $r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList;

        specialinvoke $r2.<org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList: void <init>(org.apache.commons.collections4.multimap.AbstractListValuedMap,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public java.util.List remove(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap r0;
        java.lang.Object r1, $r3;
        java.util.Map $r2;
        java.util.List $r4, $r5;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap: java.util.Map getMap()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (java.util.List) $r3;

        $r5 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List emptyIfNull(java.util.List)>($r4);

        return $r5;
    }

    public volatile java.util.Collection remove(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap: java.util.List remove(java.lang.Object)>(r1);

        return $r2;
    }

    volatile java.util.Collection wrappedCollection(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap: java.util.List wrappedCollection(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.Collection get(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap: java.util.List get(java.lang.Object)>(r1);

        return $r2;
    }

    protected volatile java.util.Collection createCollection()
    {
        org.apache.commons.collections4.multimap.AbstractListValuedMap r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractListValuedMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.multimap.AbstractListValuedMap: java.util.List createCollection()>();

        return $r1;
    }
}
