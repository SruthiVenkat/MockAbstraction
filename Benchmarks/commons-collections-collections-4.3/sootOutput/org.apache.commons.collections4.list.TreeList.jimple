public class org.apache.commons.collections4.list.TreeList extends java.util.AbstractList
{
    private org.apache.commons.collections4.list.TreeList$AVLNode root;
    private int size;

    public void <init>()
    {
        org.apache.commons.collections4.list.TreeList r0;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        return;
    }

    public void <init>(java.util.Collection)
    {
        org.apache.commons.collections4.list.TreeList r0;
        java.util.Collection r1;
        boolean $z0;
        org.apache.commons.collections4.list.TreeList$AVLNode $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        $z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = new org.apache.commons.collections4.list.TreeList$AVLNode;

        specialinvoke $r2.<org.apache.commons.collections4.list.TreeList$AVLNode: void <init>(java.util.Collection,org.apache.commons.collections4.list.TreeList$1)>(r1, null);

        r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root> = $r2;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        r0.<org.apache.commons.collections4.list.TreeList: int size> = $i0;

     label1:
        return;
    }

    public java.lang.Object get(int)
    {
        org.apache.commons.collections4.list.TreeList r0;
        int i0, $i1, $i2;
        org.apache.commons.collections4.list.TreeList$AVLNode $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.commons.collections4.list.TreeList: int size()>();

        $i2 = $i1 - 1;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList: void checkInterval(int,int,int)>(i0, 0, $i2);

        $r1 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode get(int)>(i0);

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object getValue()>();

        return $r3;
    }

    public int size()
    {
        org.apache.commons.collections4.list.TreeList r0;
        int $i0;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        $i0 = r0.<org.apache.commons.collections4.list.TreeList: int size>;

        return $i0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections4.list.TreeList r0;
        java.util.ListIterator $r1;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.TreeList: java.util.ListIterator listIterator(int)>(0);

        return $r1;
    }

    public java.util.ListIterator listIterator()
    {
        org.apache.commons.collections4.list.TreeList r0;
        java.util.ListIterator $r1;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.list.TreeList: java.util.ListIterator listIterator(int)>(0);

        return $r1;
    }

    public java.util.ListIterator listIterator(int)
    {
        org.apache.commons.collections4.list.TreeList r0;
        int i0, $i1;
        org.apache.commons.collections4.list.TreeList$TreeListIterator $r1;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.commons.collections4.list.TreeList: int size()>();

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList: void checkInterval(int,int,int)>(i0, 0, $i1);

        $r1 = new org.apache.commons.collections4.list.TreeList$TreeListIterator;

        specialinvoke $r1.<org.apache.commons.collections4.list.TreeList$TreeListIterator: void <init>(org.apache.commons.collections4.list.TreeList,int)>(r0, i0);

        return $r1;
    }

    public int indexOf(java.lang.Object)
    {
        org.apache.commons.collections4.list.TreeList r0;
        java.lang.Object r1;
        org.apache.commons.collections4.list.TreeList$AVLNode $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        if $r2 != null goto label1;

        return -1;

     label1:
        $r4 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        $r3 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        $i0 = staticinvoke <org.apache.commons.collections4.list.TreeList$AVLNode: int access$100(org.apache.commons.collections4.list.TreeList$AVLNode)>($r3);

        $i1 = virtualinvoke $r4.<org.apache.commons.collections4.list.TreeList$AVLNode: int indexOf(java.lang.Object,int)>(r1, $i0);

        return $i1;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections4.list.TreeList r0;
        java.lang.Object r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.list.TreeList: int indexOf(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object[] toArray()
    {
        org.apache.commons.collections4.list.TreeList r0;
        java.lang.Object[] r1;
        int $i0, $i1;
        org.apache.commons.collections4.list.TreeList$AVLNode $r2, $r3, $r4;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.list.TreeList: int size()>();

        r1 = newarray (java.lang.Object)[$i0];

        $r2 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        $r3 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        $i1 = staticinvoke <org.apache.commons.collections4.list.TreeList$AVLNode: int access$100(org.apache.commons.collections4.list.TreeList$AVLNode)>($r3);

        virtualinvoke $r4.<org.apache.commons.collections4.list.TreeList$AVLNode: void toArray(java.lang.Object[],int)>(r1, $i1);

     label1:
        return r1;
    }

    public void add(int, java.lang.Object)
    {
        org.apache.commons.collections4.list.TreeList r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object r1;
        org.apache.commons.collections4.list.TreeList$AVLNode $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $i1 = r0.<org.apache.commons.collections4.list.TreeList: int modCount>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.collections4.list.TreeList: int modCount> = $i2;

        $i3 = virtualinvoke r0.<org.apache.commons.collections4.list.TreeList: int size()>();

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList: void checkInterval(int,int,int)>(i0, 0, $i3);

        $r2 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        if $r2 != null goto label1;

        $r5 = new org.apache.commons.collections4.list.TreeList$AVLNode;

        specialinvoke $r5.<org.apache.commons.collections4.list.TreeList$AVLNode: void <init>(int,java.lang.Object,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$1)>(i0, r1, null, null, null);

        r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root> = $r5;

        goto label2;

     label1:
        $r3 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        $r4 = virtualinvoke $r3.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode insert(int,java.lang.Object)>(i0, r1);

        r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root> = $r4;

     label2:
        $i4 = r0.<org.apache.commons.collections4.list.TreeList: int size>;

        $i5 = $i4 + 1;

        r0.<org.apache.commons.collections4.list.TreeList: int size> = $i5;

        return;
    }

    public boolean addAll(java.util.Collection)
    {
        org.apache.commons.collections4.list.TreeList r0;
        java.util.Collection r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.commons.collections4.list.TreeList$AVLNode $r3, $r4, $r5, $r8;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        r1 := @parameter0: java.util.Collection;

        $z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<org.apache.commons.collections4.list.TreeList: int modCount>;

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $i2 = $i0 + $i1;

        r0.<org.apache.commons.collections4.list.TreeList: int modCount> = $i2;

        $r3 = new org.apache.commons.collections4.list.TreeList$AVLNode;

        specialinvoke $r3.<org.apache.commons.collections4.list.TreeList$AVLNode: void <init>(java.util.Collection,org.apache.commons.collections4.list.TreeList$1)>(r1, null);

        $r4 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        if $r4 != null goto label2;

        $r8 = $r3;

        goto label3;

     label2:
        $r5 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        $i3 = r0.<org.apache.commons.collections4.list.TreeList: int size>;

        $r8 = staticinvoke <org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode access$300(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode,int)>($r5, $r3, $i3);

     label3:
        r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root> = $r8;

        $i4 = r0.<org.apache.commons.collections4.list.TreeList: int size>;

        $i5 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $i6 = $i4 + $i5;

        r0.<org.apache.commons.collections4.list.TreeList: int size> = $i6;

        return 1;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        org.apache.commons.collections4.list.TreeList r0;
        int i0, $i1, $i2;
        java.lang.Object r1, r3;
        org.apache.commons.collections4.list.TreeList$AVLNode r2, $r4;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $i1 = virtualinvoke r0.<org.apache.commons.collections4.list.TreeList: int size()>();

        $i2 = $i1 - 1;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList: void checkInterval(int,int,int)>(i0, 0, $i2);

        $r4 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        r2 = virtualinvoke $r4.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode get(int)>(i0);

        r3 = staticinvoke <org.apache.commons.collections4.list.TreeList$AVLNode: java.lang.Object access$400(org.apache.commons.collections4.list.TreeList$AVLNode)>(r2);

        virtualinvoke r2.<org.apache.commons.collections4.list.TreeList$AVLNode: void setValue(java.lang.Object)>(r1);

        return r3;
    }

    public java.lang.Object remove(int)
    {
        org.apache.commons.collections4.list.TreeList r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r1;
        org.apache.commons.collections4.list.TreeList$AVLNode $r2, $r3;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.collections4.list.TreeList: int modCount>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.collections4.list.TreeList: int modCount> = $i2;

        $i3 = virtualinvoke r0.<org.apache.commons.collections4.list.TreeList: int size()>();

        $i4 = $i3 - 1;

        specialinvoke r0.<org.apache.commons.collections4.list.TreeList: void checkInterval(int,int,int)>(i0, 0, $i4);

        r1 = virtualinvoke r0.<org.apache.commons.collections4.list.TreeList: java.lang.Object get(int)>(i0);

        $r2 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections4.list.TreeList$AVLNode: org.apache.commons.collections4.list.TreeList$AVLNode remove(int)>(i0);

        r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root> = $r3;

        $i5 = r0.<org.apache.commons.collections4.list.TreeList: int size>;

        $i6 = $i5 - 1;

        r0.<org.apache.commons.collections4.list.TreeList: int size> = $i6;

        return r1;
    }

    public void clear()
    {
        org.apache.commons.collections4.list.TreeList r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        $i0 = r0.<org.apache.commons.collections4.list.TreeList: int modCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections4.list.TreeList: int modCount> = $i1;

        r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root> = null;

        r0.<org.apache.commons.collections4.list.TreeList: int size> = 0;

        return;
    }

    private void checkInterval(int, int, int)
    {
        org.apache.commons.collections4.list.TreeList r0;
        int i0, i1, i2, $i3;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.commons.collections4.list.TreeList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 < i1 goto label1;

        if i0 <= i2 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid index:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size=");

        $i3 = virtualinvoke r0.<org.apache.commons.collections4.list.TreeList: int size()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label2:
        return;
    }

    static int access$500(org.apache.commons.collections4.list.TreeList)
    {
        org.apache.commons.collections4.list.TreeList r0;
        int $i0;

        r0 := @parameter0: org.apache.commons.collections4.list.TreeList;

        $i0 = r0.<org.apache.commons.collections4.list.TreeList: int modCount>;

        return $i0;
    }

    static org.apache.commons.collections4.list.TreeList$AVLNode access$600(org.apache.commons.collections4.list.TreeList)
    {
        org.apache.commons.collections4.list.TreeList r0;
        org.apache.commons.collections4.list.TreeList$AVLNode $r1;

        r0 := @parameter0: org.apache.commons.collections4.list.TreeList;

        $r1 = r0.<org.apache.commons.collections4.list.TreeList: org.apache.commons.collections4.list.TreeList$AVLNode root>;

        return $r1;
    }

    static int access$700(org.apache.commons.collections4.list.TreeList)
    {
        org.apache.commons.collections4.list.TreeList r0;
        int $i0;

        r0 := @parameter0: org.apache.commons.collections4.list.TreeList;

        $i0 = r0.<org.apache.commons.collections4.list.TreeList: int modCount>;

        return $i0;
    }
}
