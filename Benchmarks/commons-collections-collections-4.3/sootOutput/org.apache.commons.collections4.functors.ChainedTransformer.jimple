public class org.apache.commons.collections4.functors.ChainedTransformer extends java.lang.Object implements org.apache.commons.collections4.Transformer, java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.apache.commons.collections4.Transformer[] iTransformers;

    public static transient org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])
    {
        org.apache.commons.collections4.Transformer[] r0;
        int $i0;
        org.apache.commons.collections4.functors.ChainedTransformer $r1;
        org.apache.commons.collections4.Transformer $r2;

        r0 := @parameter0: org.apache.commons.collections4.Transformer[];

        staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: void validate(org.apache.commons.collections4.Transformer[])>(r0);

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.NOPTransformer: org.apache.commons.collections4.Transformer nopTransformer()>();

        return $r2;

     label1:
        $r1 = new org.apache.commons.collections4.functors.ChainedTransformer;

        specialinvoke $r1.<org.apache.commons.collections4.functors.ChainedTransformer: void <init>(org.apache.commons.collections4.Transformer[])>(r0);

        return $r1;
    }

    public static org.apache.commons.collections4.Transformer chainedTransformer(java.util.Collection)
    {
        java.util.Collection r0;
        org.apache.commons.collections4.Transformer[] r1, $r2;
        int $i0, $i1;
        java.lang.Object[] $r3;
        org.apache.commons.collections4.functors.ChainedTransformer $r4;
        org.apache.commons.collections4.Transformer $r5;
        java.lang.NullPointerException $r6;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("Transformer collection must not be null");

        throw $r6;

     label1:
        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

        $r5 = staticinvoke <org.apache.commons.collections4.functors.NOPTransformer: org.apache.commons.collections4.Transformer nopTransformer()>();

        return $r5;

     label2:
        $i1 = interfaceinvoke r0.<java.util.Collection: int size()>();

        $r2 = newarray (org.apache.commons.collections4.Transformer)[$i1];

        $r3 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        r1 = (org.apache.commons.collections4.Transformer[]) $r3;

        staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: void validate(org.apache.commons.collections4.Transformer[])>(r1);

        $r4 = new org.apache.commons.collections4.functors.ChainedTransformer;

        specialinvoke $r4.<org.apache.commons.collections4.functors.ChainedTransformer: void <init>(boolean,org.apache.commons.collections4.Transformer[])>(0, r1);

        return $r4;
    }

    private void <init>(boolean, org.apache.commons.collections4.Transformer[])
    {
        org.apache.commons.collections4.functors.ChainedTransformer r0;
        boolean z0;
        org.apache.commons.collections4.Transformer[] r1, $r3;

        r0 := @this: org.apache.commons.collections4.functors.ChainedTransformer;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.commons.collections4.Transformer[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Transformer[] copy(org.apache.commons.collections4.Transformer[])>(r1);

        goto label2;

     label1:
        $r3 = r1;

     label2:
        r0.<org.apache.commons.collections4.functors.ChainedTransformer: org.apache.commons.collections4.Transformer[] iTransformers> = $r3;

        return;
    }

    public transient void <init>(org.apache.commons.collections4.Transformer[])
    {
        org.apache.commons.collections4.functors.ChainedTransformer r0;
        org.apache.commons.collections4.Transformer[] r1;

        r0 := @this: org.apache.commons.collections4.functors.ChainedTransformer;

        r1 := @parameter0: org.apache.commons.collections4.Transformer[];

        specialinvoke r0.<org.apache.commons.collections4.functors.ChainedTransformer: void <init>(boolean,org.apache.commons.collections4.Transformer[])>(1, r1);

        return;
    }

    public java.lang.Object transform(java.lang.Object)
    {
        org.apache.commons.collections4.functors.ChainedTransformer r0;
        org.apache.commons.collections4.Transformer[] r1;
        int i0, i1;
        org.apache.commons.collections4.Transformer r2;
        java.lang.Object r3;

        r0 := @this: org.apache.commons.collections4.functors.ChainedTransformer;

        r3 := @parameter0: java.lang.Object;

        r1 = r0.<org.apache.commons.collections4.functors.ChainedTransformer: org.apache.commons.collections4.Transformer[] iTransformers>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        r3 = interfaceinvoke r2.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r3;
    }

    public org.apache.commons.collections4.Transformer[] getTransformers()
    {
        org.apache.commons.collections4.functors.ChainedTransformer r0;
        org.apache.commons.collections4.Transformer[] $r1, $r2;

        r0 := @this: org.apache.commons.collections4.functors.ChainedTransformer;

        $r1 = r0.<org.apache.commons.collections4.functors.ChainedTransformer: org.apache.commons.collections4.Transformer[] iTransformers>;

        $r2 = staticinvoke <org.apache.commons.collections4.functors.FunctorUtils: org.apache.commons.collections4.Transformer[] copy(org.apache.commons.collections4.Transformer[])>($r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.functors.ChainedTransformer: long serialVersionUID> = 3514945074733160196L;

        return;
    }
}
