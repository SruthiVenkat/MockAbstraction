public class org.apache.commons.collections4.ArrayStackTest extends org.apache.commons.collections4.AbstractArrayListTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.ArrayStackTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.ArrayStackTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.AbstractArrayListTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.BulkTest: junit.framework.TestSuite makeSuite(java.lang.Class)>(class "Lorg/apache/commons/collections4/ArrayStackTest;");

        return $r0;
    }

    public org.apache.commons.collections4.ArrayStack makeObject()
    {
        org.apache.commons.collections4.ArrayStackTest r0;
        org.apache.commons.collections4.ArrayStack $r1;

        r0 := @this: org.apache.commons.collections4.ArrayStackTest;

        $r1 = new org.apache.commons.collections4.ArrayStack;

        specialinvoke $r1.<org.apache.commons.collections4.ArrayStack: void <init>()>();

        return $r1;
    }

    public void testNewStack()
    {
        org.apache.commons.collections4.ArrayStackTest r0;
        org.apache.commons.collections4.ArrayStack r1;
        boolean $z0;
        int $i0;
        java.util.EmptyStackException $r4, $r5;

        r0 := @this: org.apache.commons.collections4.ArrayStackTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.ArrayStackTest: org.apache.commons.collections4.ArrayStack makeObject()>();

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: boolean empty()>();

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertTrue(java.lang.String,boolean)>("New stack is empty", $z0);

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: int size()>();

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,int,int)>("New stack has size zero", 0, $i0);

     label1:
        virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: java.lang.Object peek()>();

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void fail(java.lang.String)>("peek() should have thrown EmptyStackException");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: java.lang.Object pop()>();

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void fail(java.lang.String)>("pop() should have thrown EmptyStackException");

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

     label7:
        return;

        catch java.util.EmptyStackException from label1 to label2 with label3;
        catch java.util.EmptyStackException from label4 to label5 with label6;
    }

    public void testPushPeekPop()
    {
        org.apache.commons.collections4.ArrayStackTest r0;
        org.apache.commons.collections4.ArrayStack r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r4, $r7, $r9, $r11, $r13;
        java.lang.String $r5, $r8, $r10, $r12, $r14;

        r0 := @this: org.apache.commons.collections4.ArrayStackTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.ArrayStackTest: org.apache.commons.collections4.ArrayStack makeObject()>();

        virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: java.lang.Object push(java.lang.Object)>("First Item");

        $z0 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: boolean empty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertTrue(java.lang.String,boolean)>("Stack is not empty", $z1);

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: int size()>();

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,int,int)>("Stack size is one", 1, $i0);

        $r4 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: java.lang.Object peek()>();

        $r5 = (java.lang.String) $r4;

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Top item is \'First Item\'", "First Item", $r5);

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: int size()>();

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,int,int)>("Stack size is one", 1, $i1);

        virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: java.lang.Object push(java.lang.Object)>("Second Item");

        $i2 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: int size()>();

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,int,int)>("Stack size is two", 2, $i2);

        $r7 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: java.lang.Object peek()>();

        $r8 = (java.lang.String) $r7;

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Top item is \'Second Item\'", "Second Item", $r8);

        $i3 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: int size()>();

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,int,int)>("Stack size is two", 2, $i3);

        $r9 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: java.lang.Object pop()>();

        $r10 = (java.lang.String) $r9;

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Popped item is \'Second Item\'", "Second Item", $r10);

        $r11 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: java.lang.Object peek()>();

        $r12 = (java.lang.String) $r11;

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Top item is \'First Item\'", "First Item", $r12);

        $i4 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: int size()>();

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,int,int)>("Stack size is one", 1, $i4);

        $r13 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: java.lang.Object pop()>();

        $r14 = (java.lang.String) $r13;

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Popped item is \'First Item\'", "First Item", $r14);

        $i5 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: int size()>();

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,int,int)>("Stack size is zero", 0, $i5);

        return;
    }

    public void testSearch()
    {
        org.apache.commons.collections4.ArrayStackTest r0;
        org.apache.commons.collections4.ArrayStack r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections4.ArrayStackTest;

        r1 = virtualinvoke r0.<org.apache.commons.collections4.ArrayStackTest: org.apache.commons.collections4.ArrayStack makeObject()>();

        virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: java.lang.Object push(java.lang.Object)>("First Item");

        virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: java.lang.Object push(java.lang.Object)>("Second Item");

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: int search(java.lang.Object)>("Second Item");

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,int,int)>("Top item is \'Second Item\'", 1, $i0);

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: int search(java.lang.Object)>("First Item");

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,int,int)>("Next Item is \'First Item\'", 2, $i1);

        $i2 = virtualinvoke r1.<org.apache.commons.collections4.ArrayStack: int search(java.lang.Object)>("Missing Item");

        staticinvoke <org.apache.commons.collections4.ArrayStackTest: void assertEquals(java.lang.String,int,int)>("Cannot find \'Missing Item\'", -1, $i2);

        return;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.ArrayStackTest r0;

        r0 := @this: org.apache.commons.collections4.ArrayStackTest;

        return "4";
    }

    public volatile java.util.ArrayList makeObject()
    {
        org.apache.commons.collections4.ArrayStackTest r0;
        org.apache.commons.collections4.ArrayStack $r1;

        r0 := @this: org.apache.commons.collections4.ArrayStackTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.ArrayStackTest: org.apache.commons.collections4.ArrayStack makeObject()>();

        return $r1;
    }

    public volatile java.util.List makeObject()
    {
        org.apache.commons.collections4.ArrayStackTest r0;
        org.apache.commons.collections4.ArrayStack $r1;

        r0 := @this: org.apache.commons.collections4.ArrayStackTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.ArrayStackTest: org.apache.commons.collections4.ArrayStack makeObject()>();

        return $r1;
    }

    public volatile java.util.Collection makeObject()
    {
        org.apache.commons.collections4.ArrayStackTest r0;
        org.apache.commons.collections4.ArrayStack $r1;

        r0 := @this: org.apache.commons.collections4.ArrayStackTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.ArrayStackTest: org.apache.commons.collections4.ArrayStack makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.ArrayStackTest r0;
        org.apache.commons.collections4.ArrayStack $r1;

        r0 := @this: org.apache.commons.collections4.ArrayStackTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.ArrayStackTest: org.apache.commons.collections4.ArrayStack makeObject()>();

        return $r1;
    }
}
