class org.apache.commons.collections4.map.LRUMapTest$8 extends java.lang.Thread
{
    final java.util.Map val$map;
    final int[] val$counter;
    final org.apache.commons.collections4.map.LRUMapTest this$0;

    void <init>(org.apache.commons.collections4.map.LRUMapTest, java.lang.ThreadGroup, java.lang.String, java.util.Map, int[])
    {
        org.apache.commons.collections4.map.LRUMapTest$8 r0;
        org.apache.commons.collections4.map.LRUMapTest r1;
        java.lang.ThreadGroup r2;
        java.lang.String r3;
        java.util.Map r4;
        int[] r5;

        r0 := @this: org.apache.commons.collections4.map.LRUMapTest$8;

        r1 := @parameter0: org.apache.commons.collections4.map.LRUMapTest;

        r2 := @parameter1: java.lang.ThreadGroup;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: int[];

        r0.<org.apache.commons.collections4.map.LRUMapTest$8: org.apache.commons.collections4.map.LRUMapTest this$0> = r1;

        r0.<org.apache.commons.collections4.map.LRUMapTest$8: java.util.Map val$map> = r4;

        r0.<org.apache.commons.collections4.map.LRUMapTest$8: int[] val$counter> = r5;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>(r2, r3);

        return;
    }

    public void run()
    {
        org.apache.commons.collections4.map.LRUMapTest$8 r0;
        java.util.Map $r4, $r5, $r10, $r12;
        java.util.Collection $r6;
        int[] $r7, $r8;
        int $i0, $i1, i2;
        java.lang.Object $r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r11, $r14, $r15, $r16, $r17;
        java.lang.String $r13, $r18;
        java.lang.Throwable $r20, $r21, $r23, $r24;
        java.lang.InterruptedException $r22;
        java.lang.Thread r27;
        java.util.Iterator r31;

        r0 := @this: org.apache.commons.collections4.map.LRUMapTest$8;

        i2 = 0;

     label01:
        entermonitor r0;

     label02:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        virtualinvoke r0.<java.lang.Object: void wait()>();

        exitmonitor r0;

     label03:
        goto label06;

     label04:
        $r21 := @caughtexception;

        exitmonitor r0;

     label05:
        throw $r21;

     label06:
        r27 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

     label07:
        if i2 >= 1000 goto label13;

        $z0 = staticinvoke <org.apache.commons.collections4.map.LRUMapTest$8: boolean interrupted()>();

        if $z0 != 0 goto label13;

        $r10 = r0.<org.apache.commons.collections4.map.LRUMapTest$8: java.util.Map val$map>;

        entermonitor $r10;

     label08:
        $r12 = r0.<org.apache.commons.collections4.map.LRUMapTest$8: java.util.Map val$map>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r27.<java.lang.Thread: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i2 = i2 + 1;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r27);

        exitmonitor $r10;

     label09:
        goto label12;

     label10:
        $r23 := @caughtexception;

        exitmonitor $r10;

     label11:
        throw $r23;

     label12:
        goto label07;

     label13:
        $r4 = r0.<org.apache.commons.collections4.map.LRUMapTest$8: java.util.Map val$map>;

        entermonitor $r4;

     label14:
        $r5 = r0.<org.apache.commons.collections4.map.LRUMapTest$8: java.util.Map val$map>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        r31 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r9 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        if $r9 != r0 goto label15;

        interfaceinvoke r31.<java.util.Iterator: void remove()>();

        goto label15;

     label16:
        exitmonitor $r4;

     label17:
        goto label20;

     label18:
        $r20 := @caughtexception;

        exitmonitor $r4;

     label19:
        throw $r20;

     label20:
        goto label22;

     label21:
        $r22 := @caughtexception;

        staticinvoke <junit.framework.TestCase: void fail(java.lang.String)>("Unexpected InterruptedException");

     label22:
        if i2 <= 0 goto label27;

        $r7 = r0.<org.apache.commons.collections4.map.LRUMapTest$8: int[] val$counter>;

        entermonitor $r7;

     label23:
        $r8 = r0.<org.apache.commons.collections4.map.LRUMapTest$8: int[] val$counter>;

        $i0 = $r8[0];

        $i1 = $i0 + 1;

        $r8[0] = $i1;

        exitmonitor $r7;

     label24:
        goto label27;

     label25:
        $r24 := @caughtexception;

        exitmonitor $r7;

     label26:
        throw $r24;

     label27:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label14 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.InterruptedException from label01 to label20 with label21;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
    }
}
