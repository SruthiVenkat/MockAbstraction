public final class org.apache.commons.collections4.iterators.UnmodifiableListIterator extends java.lang.Object implements java.util.ListIterator, org.apache.commons.collections4.Unmodifiable
{
    private final java.util.ListIterator iterator;

    public static java.util.ListIterator umodifiableListIterator(java.util.ListIterator)
    {
        java.util.ListIterator r0;
        boolean $z0;
        org.apache.commons.collections4.iterators.UnmodifiableListIterator $r2;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.util.ListIterator;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("ListIterator must not be null");

        throw $r3;

     label1:
        $z0 = r0 instanceof org.apache.commons.collections4.Unmodifiable;

        if $z0 == 0 goto label2;

        return r0;

     label2:
        $r2 = new org.apache.commons.collections4.iterators.UnmodifiableListIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.UnmodifiableListIterator: void <init>(java.util.ListIterator)>(r0);

        return $r2;
    }

    private void <init>(java.util.ListIterator)
    {
        org.apache.commons.collections4.iterators.UnmodifiableListIterator r0;
        java.util.ListIterator r1;

        r0 := @this: org.apache.commons.collections4.iterators.UnmodifiableListIterator;

        r1 := @parameter0: java.util.ListIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.UnmodifiableListIterator: java.util.ListIterator iterator> = r1;

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections4.iterators.UnmodifiableListIterator r0;
        java.util.ListIterator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.iterators.UnmodifiableListIterator;

        $r1 = r0.<org.apache.commons.collections4.iterators.UnmodifiableListIterator: java.util.ListIterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.ListIterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections4.iterators.UnmodifiableListIterator r0;
        java.util.ListIterator $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections4.iterators.UnmodifiableListIterator;

        $r1 = r0.<org.apache.commons.collections4.iterators.UnmodifiableListIterator: java.util.ListIterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.ListIterator: java.lang.Object next()>();

        return $r2;
    }

    public int nextIndex()
    {
        org.apache.commons.collections4.iterators.UnmodifiableListIterator r0;
        java.util.ListIterator $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.iterators.UnmodifiableListIterator;

        $r1 = r0.<org.apache.commons.collections4.iterators.UnmodifiableListIterator: java.util.ListIterator iterator>;

        $i0 = interfaceinvoke $r1.<java.util.ListIterator: int nextIndex()>();

        return $i0;
    }

    public boolean hasPrevious()
    {
        org.apache.commons.collections4.iterators.UnmodifiableListIterator r0;
        java.util.ListIterator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.iterators.UnmodifiableListIterator;

        $r1 = r0.<org.apache.commons.collections4.iterators.UnmodifiableListIterator: java.util.ListIterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.ListIterator: boolean hasPrevious()>();

        return $z0;
    }

    public java.lang.Object previous()
    {
        org.apache.commons.collections4.iterators.UnmodifiableListIterator r0;
        java.util.ListIterator $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections4.iterators.UnmodifiableListIterator;

        $r1 = r0.<org.apache.commons.collections4.iterators.UnmodifiableListIterator: java.util.ListIterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.ListIterator: java.lang.Object previous()>();

        return $r2;
    }

    public int previousIndex()
    {
        org.apache.commons.collections4.iterators.UnmodifiableListIterator r0;
        java.util.ListIterator $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.iterators.UnmodifiableListIterator;

        $r1 = r0.<org.apache.commons.collections4.iterators.UnmodifiableListIterator: java.util.ListIterator iterator>;

        $i0 = interfaceinvoke $r1.<java.util.ListIterator: int previousIndex()>();

        return $i0;
    }

    public void remove()
    {
        org.apache.commons.collections4.iterators.UnmodifiableListIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.commons.collections4.iterators.UnmodifiableListIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("remove() is not supported");

        throw $r1;
    }

    public void set(java.lang.Object)
    {
        org.apache.commons.collections4.iterators.UnmodifiableListIterator r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.commons.collections4.iterators.UnmodifiableListIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("set() is not supported");

        throw $r2;
    }

    public void add(java.lang.Object)
    {
        org.apache.commons.collections4.iterators.UnmodifiableListIterator r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.commons.collections4.iterators.UnmodifiableListIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("add() is not supported");

        throw $r2;
    }
}
