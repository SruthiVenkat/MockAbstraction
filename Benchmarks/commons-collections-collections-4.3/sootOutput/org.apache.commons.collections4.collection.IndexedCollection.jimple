public class org.apache.commons.collections4.collection.IndexedCollection extends org.apache.commons.collections4.collection.AbstractCollectionDecorator
{
    private static final long serialVersionUID;
    private final org.apache.commons.collections4.Transformer keyTransformer;
    private final org.apache.commons.collections4.MultiMap index;
    private final boolean uniqueIndex;

    public static org.apache.commons.collections4.collection.IndexedCollection uniqueIndexedCollection(java.util.Collection, org.apache.commons.collections4.Transformer)
    {
        java.util.Collection r0;
        org.apache.commons.collections4.Transformer r1;
        org.apache.commons.collections4.collection.IndexedCollection $r2;
        java.util.HashMap $r3;
        org.apache.commons.collections4.map.MultiValueMap $r4;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        $r2 = new org.apache.commons.collections4.collection.IndexedCollection;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = staticinvoke <org.apache.commons.collections4.map.MultiValueMap: org.apache.commons.collections4.map.MultiValueMap multiValueMap(java.util.Map)>($r3);

        specialinvoke $r2.<org.apache.commons.collections4.collection.IndexedCollection: void <init>(java.util.Collection,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.MultiMap,boolean)>(r0, r1, $r4, 1);

        return $r2;
    }

    public static org.apache.commons.collections4.collection.IndexedCollection nonUniqueIndexedCollection(java.util.Collection, org.apache.commons.collections4.Transformer)
    {
        java.util.Collection r0;
        org.apache.commons.collections4.Transformer r1;
        org.apache.commons.collections4.collection.IndexedCollection $r2;
        java.util.HashMap $r3;
        org.apache.commons.collections4.map.MultiValueMap $r4;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        $r2 = new org.apache.commons.collections4.collection.IndexedCollection;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = staticinvoke <org.apache.commons.collections4.map.MultiValueMap: org.apache.commons.collections4.map.MultiValueMap multiValueMap(java.util.Map)>($r3);

        specialinvoke $r2.<org.apache.commons.collections4.collection.IndexedCollection: void <init>(java.util.Collection,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.MultiMap,boolean)>(r0, r1, $r4, 0);

        return $r2;
    }

    public void <init>(java.util.Collection, org.apache.commons.collections4.Transformer, org.apache.commons.collections4.MultiMap, boolean)
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.util.Collection r1;
        org.apache.commons.collections4.Transformer r2;
        org.apache.commons.collections4.MultiMap r3;
        boolean z0;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: org.apache.commons.collections4.Transformer;

        r3 := @parameter2: org.apache.commons.collections4.MultiMap;

        z0 := @parameter3: boolean;

        specialinvoke r0.<org.apache.commons.collections4.collection.AbstractCollectionDecorator: void <init>(java.util.Collection)>(r1);

        r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.Transformer keyTransformer> = r2;

        r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.MultiMap index> = r3;

        r0.<org.apache.commons.collections4.collection.IndexedCollection: boolean uniqueIndex> = z0;

        virtualinvoke r0.<org.apache.commons.collections4.collection.IndexedCollection: void reindex()>();

        return;
    }

    public boolean add(java.lang.Object)
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        r1 := @parameter0: java.lang.Object;

        z0 = specialinvoke r0.<org.apache.commons.collections4.collection.AbstractCollectionDecorator: boolean add(java.lang.Object)>(r1);

        if z0 == 0 goto label1;

        specialinvoke r0.<org.apache.commons.collections4.collection.IndexedCollection: void addToIndex(java.lang.Object)>(r1);

     label1:
        return z0;
    }

    public boolean addAll(java.util.Collection)
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0, $z1, z2;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        r1 := @parameter0: java.util.Collection;

        z2 = 0;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.collection.IndexedCollection: boolean add(java.lang.Object)>(r3);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    public void clear()
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        org.apache.commons.collections4.MultiMap $r1;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        specialinvoke r0.<org.apache.commons.collections4.collection.AbstractCollectionDecorator: void clear()>();

        $r1 = r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.MultiMap index>;

        interfaceinvoke $r1.<org.apache.commons.collections4.MultiMap: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.lang.Object r1, $r4;
        org.apache.commons.collections4.Transformer $r2;
        org.apache.commons.collections4.MultiMap $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.MultiMap index>;

        $r2 = r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.Transformer keyTransformer>;

        $r4 = interfaceinvoke $r2.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r1);

        $z0 = interfaceinvoke $r3.<org.apache.commons.collections4.MultiMap: boolean containsKey(java.lang.Object)>($r4);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        r1 := @parameter0: java.util.Collection;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.collection.IndexedCollection: boolean contains(java.lang.Object)>(r3);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.lang.Object r1, $r4, $r6;
        java.util.Collection r2;
        org.apache.commons.collections4.MultiMap $r3;
        java.util.Iterator $r5;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.MultiMap index>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.MultiMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.Collection) $r4;

        if r2 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r5 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

     label2:
        return $r6;
    }

    public java.util.Collection values(java.lang.Object)
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.lang.Object r1, $r3;
        org.apache.commons.collections4.MultiMap $r2;
        java.util.Collection $r4;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.MultiMap index>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.MultiMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Collection) $r3;

        return $r4;
    }

    public void reindex()
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.util.Iterator r1;
        java.lang.Object r2;
        org.apache.commons.collections4.MultiMap $r3;
        java.util.Collection $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        $r3 = r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.MultiMap index>;

        interfaceinvoke $r3.<org.apache.commons.collections4.MultiMap: void clear()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.collection.IndexedCollection: java.util.Collection decorated()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        specialinvoke r0.<org.apache.commons.collections4.collection.IndexedCollection: void addToIndex(java.lang.Object)>(r2);

        goto label1;

     label2:
        return;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        r1 := @parameter0: java.lang.Object;

        z0 = specialinvoke r0.<org.apache.commons.collections4.collection.AbstractCollectionDecorator: boolean remove(java.lang.Object)>(r1);

        if z0 == 0 goto label1;

        specialinvoke r0.<org.apache.commons.collections4.collection.IndexedCollection: void removeFromIndex(java.lang.Object)>(r1);

     label1:
        return z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0, $z1, z2;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        r1 := @parameter0: java.util.Collection;

        z2 = 0;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r0.<org.apache.commons.collections4.collection.IndexedCollection: boolean remove(java.lang.Object)>(r3);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    public boolean retainAll(java.util.Collection)
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.util.Collection r1;
        boolean z0;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        r1 := @parameter0: java.util.Collection;

        z0 = specialinvoke r0.<org.apache.commons.collections4.collection.AbstractCollectionDecorator: boolean retainAll(java.util.Collection)>(r1);

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.commons.collections4.collection.IndexedCollection: void reindex()>();

     label1:
        return z0;
    }

    private void addToIndex(java.lang.Object)
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.lang.Object r1, r2;
        org.apache.commons.collections4.Transformer $r3;
        boolean $z0, $z1;
        org.apache.commons.collections4.MultiMap $r4, $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.Transformer keyTransformer>;

        r2 = interfaceinvoke $r3.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r1);

        $z0 = r0.<org.apache.commons.collections4.collection.IndexedCollection: boolean uniqueIndex>;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.MultiMap index>;

        $z1 = interfaceinvoke $r6.<org.apache.commons.collections4.MultiMap: boolean containsKey(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Duplicate key in uniquely indexed collection.");

        throw $r7;

     label1:
        $r4 = r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.MultiMap index>;

        interfaceinvoke $r4.<org.apache.commons.collections4.MultiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        return;
    }

    private void removeFromIndex(java.lang.Object)
    {
        org.apache.commons.collections4.collection.IndexedCollection r0;
        java.lang.Object r1, $r4;
        org.apache.commons.collections4.Transformer $r2;
        org.apache.commons.collections4.MultiMap $r3;

        r0 := @this: org.apache.commons.collections4.collection.IndexedCollection;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.MultiMap index>;

        $r2 = r0.<org.apache.commons.collections4.collection.IndexedCollection: org.apache.commons.collections4.Transformer keyTransformer>;

        $r4 = interfaceinvoke $r2.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r1);

        interfaceinvoke $r3.<org.apache.commons.collections4.MultiMap: java.lang.Object remove(java.lang.Object)>($r4);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.collection.IndexedCollection: long serialVersionUID> = -5512610452568370038L;

        return;
    }
}
