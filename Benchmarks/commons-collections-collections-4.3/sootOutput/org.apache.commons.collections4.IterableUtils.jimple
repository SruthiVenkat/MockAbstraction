public class org.apache.commons.collections4.IterableUtils extends java.lang.Object
{
    static final org.apache.commons.collections4.FluentIterable EMPTY_ITERABLE;

    public void <init>()
    {
        org.apache.commons.collections4.IterableUtils r0;

        r0 := @this: org.apache.commons.collections4.IterableUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Iterable emptyIterable()
    {
        org.apache.commons.collections4.FluentIterable $r0;

        $r0 = <org.apache.commons.collections4.IterableUtils: org.apache.commons.collections4.FluentIterable EMPTY_ITERABLE>;

        return $r0;
    }

    public static java.lang.Iterable chainedIterable(java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Iterable r0, r1, $r3;
        java.lang.Iterable[] $r2;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.Iterable;

        $r2 = newarray (java.lang.Iterable)[2];

        $r2[0] = r0;

        $r2[1] = r1;

        $r3 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable chainedIterable(java.lang.Iterable[])>($r2);

        return $r3;
    }

    public static java.lang.Iterable chainedIterable(java.lang.Iterable, java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Iterable r0, r1, r2, $r4;
        java.lang.Iterable[] $r3;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.Iterable;

        r2 := @parameter2: java.lang.Iterable;

        $r3 = newarray (java.lang.Iterable)[3];

        $r3[0] = r0;

        $r3[1] = r1;

        $r3[2] = r2;

        $r4 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable chainedIterable(java.lang.Iterable[])>($r3);

        return $r4;
    }

    public static java.lang.Iterable chainedIterable(java.lang.Iterable, java.lang.Iterable, java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Iterable r0, r1, r2, r3, $r5;
        java.lang.Iterable[] $r4;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.Iterable;

        r2 := @parameter2: java.lang.Iterable;

        r3 := @parameter3: java.lang.Iterable;

        $r4 = newarray (java.lang.Iterable)[4];

        $r4[0] = r0;

        $r4[1] = r1;

        $r4[2] = r2;

        $r4[3] = r3;

        $r5 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable chainedIterable(java.lang.Iterable[])>($r4);

        return $r5;
    }

    public static transient java.lang.Iterable chainedIterable(java.lang.Iterable[])
    {
        java.lang.Iterable[] r0;
        org.apache.commons.collections4.IterableUtils$2 $r1;

        r0 := @parameter0: java.lang.Iterable[];

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable[])>(r0);

        $r1 = new org.apache.commons.collections4.IterableUtils$2;

        specialinvoke $r1.<org.apache.commons.collections4.IterableUtils$2: void <init>(java.lang.Iterable[])>(r0);

        return $r1;
    }

    public static java.lang.Iterable collatedIterable(java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Iterable r0, r1;
        java.lang.Iterable[] $r2;
        org.apache.commons.collections4.IterableUtils$3 $r3;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.Iterable;

        $r2 = newarray (java.lang.Iterable)[2];

        $r2[0] = r0;

        $r2[1] = r1;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable[])>($r2);

        $r3 = new org.apache.commons.collections4.IterableUtils$3;

        specialinvoke $r3.<org.apache.commons.collections4.IterableUtils$3: void <init>(java.lang.Iterable,java.lang.Iterable)>(r0, r1);

        return $r3;
    }

    public static java.lang.Iterable collatedIterable(java.util.Comparator, java.lang.Iterable, java.lang.Iterable)
    {
        java.util.Comparator r0;
        java.lang.Iterable r1, r2;
        java.lang.Iterable[] $r3;
        org.apache.commons.collections4.IterableUtils$4 $r4;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.lang.Iterable;

        r2 := @parameter2: java.lang.Iterable;

        $r3 = newarray (java.lang.Iterable)[2];

        $r3[0] = r1;

        $r3[1] = r2;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable[])>($r3);

        $r4 = new org.apache.commons.collections4.IterableUtils$4;

        specialinvoke $r4.<org.apache.commons.collections4.IterableUtils$4: void <init>(java.util.Comparator,java.lang.Iterable,java.lang.Iterable)>(r0, r1, r2);

        return $r4;
    }

    public static java.lang.Iterable filteredIterable(java.lang.Iterable, org.apache.commons.collections4.Predicate)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.Predicate r1;
        org.apache.commons.collections4.IterableUtils$5 $r2;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r0);

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null.");

        throw $r3;

     label1:
        $r2 = new org.apache.commons.collections4.IterableUtils$5;

        specialinvoke $r2.<org.apache.commons.collections4.IterableUtils$5: void <init>(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r0, r1);

        return $r2;
    }

    public static java.lang.Iterable boundedIterable(java.lang.Iterable, long)
    {
        java.lang.Iterable r0;
        long l0;
        byte $b1;
        org.apache.commons.collections4.IterableUtils$6 $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: java.lang.Iterable;

        l0 := @parameter1: long;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r0);

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MaxSize parameter must not be negative.");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections4.IterableUtils$6;

        specialinvoke $r1.<org.apache.commons.collections4.IterableUtils$6: void <init>(java.lang.Iterable,long)>(r0, l0);

        return $r1;
    }

    public static java.lang.Iterable loopingIterable(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.IterableUtils$7 $r1;

        r0 := @parameter0: java.lang.Iterable;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r0);

        $r1 = new org.apache.commons.collections4.IterableUtils$7;

        specialinvoke $r1.<org.apache.commons.collections4.IterableUtils$7: void <init>(java.lang.Iterable)>(r0);

        return $r1;
    }

    public static java.lang.Iterable reversedIterable(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.IterableUtils$8 $r1;

        r0 := @parameter0: java.lang.Iterable;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r0);

        $r1 = new org.apache.commons.collections4.IterableUtils$8;

        specialinvoke $r1.<org.apache.commons.collections4.IterableUtils$8: void <init>(java.lang.Iterable)>(r0);

        return $r1;
    }

    public static java.lang.Iterable skippingIterable(java.lang.Iterable, long)
    {
        java.lang.Iterable r0;
        long l0;
        byte $b1;
        org.apache.commons.collections4.IterableUtils$9 $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: java.lang.Iterable;

        l0 := @parameter1: long;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r0);

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ElementsToSkip parameter must not be negative.");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections4.IterableUtils$9;

        specialinvoke $r1.<org.apache.commons.collections4.IterableUtils$9: void <init>(java.lang.Iterable,long)>(r0, l0);

        return $r1;
    }

    public static java.lang.Iterable transformedIterable(java.lang.Iterable, org.apache.commons.collections4.Transformer)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.Transformer r1;
        org.apache.commons.collections4.IterableUtils$10 $r2;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r0);

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Transformer must not be null.");

        throw $r3;

     label1:
        $r2 = new org.apache.commons.collections4.IterableUtils$10;

        specialinvoke $r2.<org.apache.commons.collections4.IterableUtils$10: void <init>(java.lang.Iterable,org.apache.commons.collections4.Transformer)>(r0, r1);

        return $r2;
    }

    public static java.lang.Iterable uniqueIterable(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.IterableUtils$11 $r1;

        r0 := @parameter0: java.lang.Iterable;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r0);

        $r1 = new org.apache.commons.collections4.IterableUtils$11;

        specialinvoke $r1.<org.apache.commons.collections4.IterableUtils$11: void <init>(java.lang.Iterable)>(r0);

        return $r1;
    }

    public static java.lang.Iterable unmodifiableIterable(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        boolean $z0;
        org.apache.commons.collections4.IterableUtils$UnmodifiableIterable $r1;

        r0 := @parameter0: java.lang.Iterable;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r0);

        $z0 = r0 instanceof org.apache.commons.collections4.IterableUtils$UnmodifiableIterable;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = new org.apache.commons.collections4.IterableUtils$UnmodifiableIterable;

        specialinvoke $r1.<org.apache.commons.collections4.IterableUtils$UnmodifiableIterable: void <init>(java.lang.Iterable)>(r0);

        return $r1;
    }

    public static java.lang.Iterable zippingIterable(java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Iterable r0, r1;
        org.apache.commons.collections4.IterableUtils$12 $r2;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.Iterable;

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r0);

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r1);

        $r2 = new org.apache.commons.collections4.IterableUtils$12;

        specialinvoke $r2.<org.apache.commons.collections4.IterableUtils$12: void <init>(java.lang.Iterable,java.lang.Iterable)>(r0, r1);

        return $r2;
    }

    public static transient java.lang.Iterable zippingIterable(java.lang.Iterable, java.lang.Iterable[])
    {
        java.lang.Iterable r0;
        java.lang.Iterable[] r1;
        org.apache.commons.collections4.IterableUtils$13 $r2;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.Iterable[];

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r0);

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable[])>(r1);

        $r2 = new org.apache.commons.collections4.IterableUtils$13;

        specialinvoke $r2.<org.apache.commons.collections4.IterableUtils$13: void <init>(java.lang.Iterable[],java.lang.Iterable)>(r1, r0);

        return $r2;
    }

    public static java.lang.Iterable emptyIfNull(java.lang.Iterable)
    {
        java.lang.Iterable r0, $r1;

        r0 := @parameter0: java.lang.Iterable;

        if r0 != null goto label1;

        $r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable emptyIterable()>();

        goto label2;

     label1:
        $r1 = r0;

     label2:
        return $r1;
    }

    public static void forEach(java.lang.Iterable, org.apache.commons.collections4.Closure)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.Closure r1;
        java.util.Iterator $r2;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Closure;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        staticinvoke <org.apache.commons.collections4.IteratorUtils: void forEach(java.util.Iterator,org.apache.commons.collections4.Closure)>($r2, r1);

        return;
    }

    public static java.lang.Object forEachButLast(java.lang.Iterable, org.apache.commons.collections4.Closure)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.Closure r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Closure;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $r3 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object forEachButLast(java.util.Iterator,org.apache.commons.collections4.Closure)>($r2, r1);

        return $r3;
    }

    public static java.lang.Object find(java.lang.Iterable, org.apache.commons.collections4.Predicate)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.Predicate r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $r3 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object find(java.util.Iterator,org.apache.commons.collections4.Predicate)>($r2, r1);

        return $r3;
    }

    public static int indexOf(java.lang.Iterable, org.apache.commons.collections4.Predicate)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.Predicate r1;
        java.util.Iterator $r2;
        int $i0;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $i0 = staticinvoke <org.apache.commons.collections4.IteratorUtils: int indexOf(java.util.Iterator,org.apache.commons.collections4.Predicate)>($r2, r1);

        return $i0;
    }

    public static boolean matchesAll(java.lang.Iterable, org.apache.commons.collections4.Predicate)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.Predicate r1;
        java.util.Iterator $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $z0 = staticinvoke <org.apache.commons.collections4.IteratorUtils: boolean matchesAll(java.util.Iterator,org.apache.commons.collections4.Predicate)>($r2, r1);

        return $z0;
    }

    public static boolean matchesAny(java.lang.Iterable, org.apache.commons.collections4.Predicate)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.Predicate r1;
        java.util.Iterator $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $z0 = staticinvoke <org.apache.commons.collections4.IteratorUtils: boolean matchesAny(java.util.Iterator,org.apache.commons.collections4.Predicate)>($r2, r1);

        return $z0;
    }

    public static long countMatches(java.lang.Iterable, org.apache.commons.collections4.Predicate)
    {
        java.lang.Iterable r0, $r2, $r3;
        org.apache.commons.collections4.Predicate r1;
        int $i0;
        long $l1;
        java.lang.NullPointerException $r4;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null.");

        throw $r4;

     label1:
        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable emptyIfNull(java.lang.Iterable)>(r0);

        $r3 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable filteredIterable(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, r1);

        $i0 = staticinvoke <org.apache.commons.collections4.IterableUtils: int size(java.lang.Iterable)>($r3);

        $l1 = (long) $i0;

        return $l1;
    }

    public static boolean isEmpty(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r1;
        java.util.Collection $r2;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Collection) r0;

        $z2 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        return $z2;

     label1:
        $r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $z1 = staticinvoke <org.apache.commons.collections4.IteratorUtils: boolean isEmpty(java.util.Iterator)>($r1);

        return $z1;
    }

    public static boolean contains(java.lang.Iterable, java.lang.Object)
    {
        java.lang.Iterable r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r2;
        java.util.Collection $r3;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r3 = (java.util.Collection) r0;

        $z2 = interfaceinvoke $r3.<java.util.Collection: boolean contains(java.lang.Object)>(r1);

        return $z2;

     label1:
        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $z1 = staticinvoke <org.apache.commons.collections4.IteratorUtils: boolean contains(java.util.Iterator,java.lang.Object)>($r2, r1);

        return $z1;
    }

    public static boolean contains(java.lang.Iterable, java.lang.Object, org.apache.commons.collections4.Equator)
    {
        java.lang.Iterable r0;
        java.lang.Object r1;
        org.apache.commons.collections4.Equator r2;
        org.apache.commons.collections4.Predicate $r3;
        boolean $z0;
        java.lang.NullPointerException $r4;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.apache.commons.collections4.Equator;

        if r2 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Equator must not be null.");

        throw $r4;

     label1:
        $r3 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object,org.apache.commons.collections4.Equator)>(r1, r2);

        $z0 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r0, $r3);

        return $z0;
    }

    public static int frequency(java.lang.Iterable, java.lang.Object)
    {
        java.lang.Iterable r0, $r2, $r4;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        org.apache.commons.collections4.Predicate $r3;
        int $i0, $i1;
        org.apache.commons.collections4.Bag $r5;
        java.util.Set $r6;
        byte $b2;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.util.Set;

        if $z0 == 0 goto label3;

        $r6 = (java.util.Set) r0;

        $z2 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        return $b2;

     label3:
        $z1 = r0 instanceof org.apache.commons.collections4.Bag;

        if $z1 == 0 goto label4;

        $r5 = (org.apache.commons.collections4.Bag) r0;

        $i1 = interfaceinvoke $r5.<org.apache.commons.collections4.Bag: int getCount(java.lang.Object)>(r1);

        return $i1;

     label4:
        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable emptyIfNull(java.lang.Iterable)>(r0);

        $r3 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>(r1);

        $r4 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable filteredIterable(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, $r3);

        $i0 = staticinvoke <org.apache.commons.collections4.IterableUtils: int size(java.lang.Iterable)>($r4);

        return $i0;
    }

    public static java.lang.Object get(java.lang.Iterable, int)
    {
        java.lang.Iterable r0;
        int i0;
        boolean $z0;
        java.util.Iterator $r1;
        java.lang.Object $r2, $r4;
        java.util.List $r3;

        r0 := @parameter0: java.lang.Iterable;

        i0 := @parameter1: int;

        staticinvoke <org.apache.commons.collections4.CollectionUtils: void checkIndexBounds(int)>(i0);

        $z0 = r0 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r3 = (java.util.List) r0;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        return $r4;

     label1:
        $r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $r2 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object get(java.util.Iterator,int)>($r1, i0);

        return $r2;
    }

    public static java.lang.Object first(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.lang.Object $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object get(java.lang.Iterable,int)>(r0, 0);

        return $r1;
    }

    public static int size(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        boolean $z0;
        java.util.Iterator $r1;
        int $i0, $i1;
        java.util.Collection $r2;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Collection) r0;

        $i1 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        return $i1;

     label1:
        $r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $i0 = staticinvoke <org.apache.commons.collections4.IteratorUtils: int size(java.util.Iterator)>($r1);

        return $i0;
    }

    public static java.util.List partition(java.lang.Iterable, org.apache.commons.collections4.Predicate)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.Predicate r1;
        org.apache.commons.collections4.Factory r2;
        org.apache.commons.collections4.Predicate[] $r4;
        java.util.List $r5;
        java.lang.NullPointerException $r6;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Predicate;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null.");

        throw $r6;

     label1:
        r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory instantiateFactory(java.lang.Class)>(class "Ljava/util/ArrayList;");

        $r4 = newarray (org.apache.commons.collections4.Predicate)[1];

        $r4[0] = r1;

        $r5 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Factory,org.apache.commons.collections4.Predicate[])>(r0, r2, $r4);

        return $r5;
    }

    public static transient java.util.List partition(java.lang.Iterable, org.apache.commons.collections4.Predicate[])
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.Predicate[] r1;
        org.apache.commons.collections4.Factory r2;
        java.util.List $r3;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Predicate[];

        r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory instantiateFactory(java.lang.Class)>(class "Ljava/util/ArrayList;");

        $r3 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Factory,org.apache.commons.collections4.Predicate[])>(r0, r2, r1);

        return $r3;
    }

    public static transient java.util.List partition(java.lang.Iterable, org.apache.commons.collections4.Factory, org.apache.commons.collections4.Predicate[])
    {
        java.lang.Iterable r0, r16;
        org.apache.commons.collections4.Factory r1;
        org.apache.commons.collections4.Predicate[] r2;
        java.lang.Object r3, $r5, $r8, $r10, $r11;
        int $i0, i1, i2, i3, i4, i5, i6;
        java.util.ArrayList $r4;
        boolean $z0, $z2, z6;
        java.util.Collection $r6, $r9, r19;
        org.apache.commons.collections4.Predicate $r7, r18;
        java.util.List $r12, $r15;
        java.lang.NullPointerException $r13, $r14;
        java.util.Iterator r21;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Factory;

        r2 := @parameter2: org.apache.commons.collections4.Predicate[];

        if r0 != null goto label01;

        r16 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Iterable emptyIterable()>();

        $r15 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Factory,org.apache.commons.collections4.Predicate[])>(r16, r1, r2);

        return $r15;

     label01:
        if r2 != null goto label02;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicates must not be null.");

        throw $r14;

     label02:
        i1 = lengthof r2;

        i2 = 0;

     label03:
        if i2 >= i1 goto label05;

        r18 = r2[i2];

        if r18 != null goto label04;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null.");

        throw $r13;

     label04:
        i2 = i2 + 1;

        goto label03;

     label05:
        $i0 = lengthof r2;

        if $i0 >= 1 goto label06;

        $r11 = interfaceinvoke r1.<org.apache.commons.collections4.Factory: java.lang.Object create()>();

        r19 = (java.util.Collection) $r11;

        staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r19, r0);

        $r12 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r19);

        return $r12;

     label06:
        i3 = lengthof r2;

        i4 = i3 + 1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i4);

        i5 = 0;

     label07:
        if i5 >= i4 goto label08;

        $r10 = interfaceinvoke r1.<org.apache.commons.collections4.Factory: java.lang.Object create()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r10);

        i5 = i5 + 1;

        goto label07;

     label08:
        r21 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        r3 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        z6 = 0;

        i6 = 0;

     label10:
        if i6 >= i3 goto label12;

        $r7 = r2[i6];

        $z2 = interfaceinvoke $r7.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r3);

        if $z2 == 0 goto label11;

        $r8 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i6);

        $r9 = (java.util.Collection) $r8;

        interfaceinvoke $r9.<java.util.Collection: boolean add(java.lang.Object)>(r3);

        z6 = 1;

        goto label12;

     label11:
        i6 = i6 + 1;

        goto label10;

     label12:
        if z6 != 0 goto label13;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i3);

        $r6 = (java.util.Collection) $r5;

        interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>(r3);

     label13:
        goto label09;

     label14:
        return $r4;
    }

    public static java.util.List toList(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.Iterator $r1;
        java.util.List $r2;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $r2 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.List toList(java.util.Iterator)>($r1);

        return $r2;
    }

    public static java.lang.String toString(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.Iterator $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $r2 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.String toString(java.util.Iterator)>($r1);

        return $r2;
    }

    public static java.lang.String toString(java.lang.Iterable, org.apache.commons.collections4.Transformer)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.Transformer r1;
        java.util.Iterator $r2;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Transformer must not be null.");

        throw $r4;

     label1:
        $r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $r3 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.String toString(java.util.Iterator,org.apache.commons.collections4.Transformer)>($r2, r1);

        return $r3;
    }

    public static java.lang.String toString(java.lang.Iterable, org.apache.commons.collections4.Transformer, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Iterable r0;
        org.apache.commons.collections4.Transformer r1;
        java.lang.String r2, r3, r4, $r6;
        java.util.Iterator $r5;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.commons.collections4.Transformer;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        $r5 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        $r6 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.String toString(java.util.Iterator,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r5, r1, r2, r3, r4);

        return $r6;
    }

    static void checkNotNull(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.lang.NullPointerException $r1;

        r0 := @parameter0: java.lang.Iterable;

        if r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterable must not be null.");

        throw $r1;

     label1:
        return;
    }

    static transient void checkNotNull(java.lang.Iterable[])
    {
        java.lang.Iterable[] r0;
        int i0, i1;
        java.lang.Iterable r2;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.lang.Iterable[];

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterables must not be null.");

        throw $r3;

     label1:
        i0 = lengthof r0;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r2 = r0[i1];

        staticinvoke <org.apache.commons.collections4.IterableUtils: void checkNotNull(java.lang.Iterable)>(r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private static java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.Iterator $r1;

        r0 := @parameter0: java.lang.Iterable;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r1 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator emptyIterator()>();

     label2:
        return $r1;
    }

    static java.util.Iterator access$000(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.Iterator $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.commons.collections4.IterableUtils$1 $r0;

        $r0 = new org.apache.commons.collections4.IterableUtils$1;

        specialinvoke $r0.<org.apache.commons.collections4.IterableUtils$1: void <init>()>();

        <org.apache.commons.collections4.IterableUtils: org.apache.commons.collections4.FluentIterable EMPTY_ITERABLE> = $r0;

        return;
    }
}
