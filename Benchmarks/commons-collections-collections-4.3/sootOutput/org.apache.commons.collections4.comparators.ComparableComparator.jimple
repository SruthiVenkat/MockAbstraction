public class org.apache.commons.collections4.comparators.ComparableComparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final org.apache.commons.collections4.comparators.ComparableComparator INSTANCE;

    public static org.apache.commons.collections4.comparators.ComparableComparator comparableComparator()
    {
        org.apache.commons.collections4.comparators.ComparableComparator $r0;

        $r0 = <org.apache.commons.collections4.comparators.ComparableComparator: org.apache.commons.collections4.comparators.ComparableComparator INSTANCE>;

        return $r0;
    }

    public void <init>()
    {
        org.apache.commons.collections4.comparators.ComparableComparator r0;

        r0 := @this: org.apache.commons.collections4.comparators.ComparableComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Comparable, java.lang.Comparable)
    {
        org.apache.commons.collections4.comparators.ComparableComparator r0;
        java.lang.Comparable r1, r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.comparators.ComparableComparator;

        r1 := @parameter0: java.lang.Comparable;

        r2 := @parameter1: java.lang.Comparable;

        $i0 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);

        return $i0;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.comparators.ComparableComparator r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections4.comparators.ComparableComparator;

        $r1 = "ComparableComparator";

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.comparators.ComparableComparator r0;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.comparators.ComparableComparator;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        if null == r1 goto label2;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.comparators.ComparableComparator r0;
        java.lang.Object r1, r2;
        java.lang.Comparable $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.collections4.comparators.ComparableComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Comparable) r1;

        $r3 = (java.lang.Comparable) r2;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.comparators.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>($r4, $r3);

        return $i0;
    }

    static void <clinit>()
    {
        org.apache.commons.collections4.comparators.ComparableComparator $r0;

        <org.apache.commons.collections4.comparators.ComparableComparator: long serialVersionUID> = -291439688585137865L;

        $r0 = new org.apache.commons.collections4.comparators.ComparableComparator;

        specialinvoke $r0.<org.apache.commons.collections4.comparators.ComparableComparator: void <init>()>();

        <org.apache.commons.collections4.comparators.ComparableComparator: org.apache.commons.collections4.comparators.ComparableComparator INSTANCE> = $r0;

        return;
    }
}
