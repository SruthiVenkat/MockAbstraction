class org.apache.commons.collections4.bidimap.TreeBidiMap$Node extends java.lang.Object implements java.util.Map$Entry, org.apache.commons.collections4.KeyValue
{
    private final java.lang.Comparable key;
    private final java.lang.Comparable value;
    private final org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] leftNode;
    private final org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rightNode;
    private final org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] parentNode;
    private final boolean[] blackColor;
    private int hashcodeValue;
    private boolean calculatedHashCode;

    void <init>(java.lang.Comparable, java.lang.Comparable)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        java.lang.Comparable r1, r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r3, $r4, $r5;
        boolean[] $r6;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: java.lang.Comparable;

        r2 := @parameter1: java.lang.Comparable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable key> = r1;

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable value> = r2;

        $r3 = newarray (org.apache.commons.collections4.bidimap.TreeBidiMap$Node)[2];

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] leftNode> = $r3;

        $r4 = newarray (org.apache.commons.collections4.bidimap.TreeBidiMap$Node)[2];

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rightNode> = $r4;

        $r5 = newarray (org.apache.commons.collections4.bidimap.TreeBidiMap$Node)[2];

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] parentNode> = $r5;

        $r6 = newarray (boolean)[2];

        $r6[0] = 1;

        $r6[1] = 1;

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor> = $r6;

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean calculatedHashCode> = 0;

        return;
    }

    private java.lang.Object getData(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        int[] $r2;
        int $i0, $i1;
        java.lang.Comparable $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = <org.apache.commons.collections4.bidimap.TreeBidiMap$1: int[] $SwitchMap$org$apache$commons$collections4$bidimap$TreeBidiMap$DataElement>;

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $i1 = $r2[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r4 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getKey()>();

        return $r4;

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getValue()>();

        return $r3;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;
    }

    private void setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r3;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r3 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] leftNode>;

        $i0 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r3[$i0] = r1;

        return;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] leftNode>;

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r3 = $r2[$i0];

        return $r3;
    }

    private void setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r3;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r3 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rightNode>;

        $i0 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r3[$i0] = r1;

        return;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rightNode>;

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r3 = $r2[$i0];

        return $r3;
    }

    private void setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r3;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r3 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] parentNode>;

        $i0 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r3[$i0] = r1;

        return;
    }

    private org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, $r3;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] parentNode>;

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r3 = $r2[$i0];

        return $r3;
    }

    private void swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        boolean[] $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r3 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor>;

        $i0 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $z0 = $r3[$i0];

        $r4 = r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor>;

        $i1 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $z1 = $r4[$i1];

        $z2 = $z0 ^ $z1;

        $r3[$i0] = $z2;

        $r5 = r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor>;

        $i2 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $z3 = $r5[$i2];

        $r6 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor>;

        $i3 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $z4 = $r6[$i3];

        $z5 = $z3 ^ $z4;

        $r5[$i2] = $z5;

        $r7 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor>;

        $i4 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $z6 = $r7[$i4];

        $r8 = r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor>;

        $i5 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $z7 = $r8[$i5];

        $z8 = $z6 ^ $z7;

        $r7[$i4] = $z8;

        return;
    }

    private boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        boolean[] $r2;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor>;

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $z0 = $r2[$i0];

        return $z0;
    }

    private boolean isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        boolean[] $r2;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor>;

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $z0 = $r2[$i0];

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        boolean[] $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor>;

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r2[$i0] = 1;

        return;
    }

    private void setRed(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        boolean[] $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor>;

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r2[$i0] = 0;

        return;
    }

    private void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;
        boolean[] $r3, $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r3 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor>;

        $i0 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r4 = r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean[] blackColor>;

        $i1 = virtualinvoke r2.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $z0 = $r4[$i1];

        $r3[$i0] = $z0;

        return;
    }

    private boolean isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, $r3, $r5, $r7;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r2, $r4, $r6;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] parentNode>;

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r3 = $r2[$i0];

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] parentNode>;

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r5 = $r4[$i1];

        $r6 = $r5.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] leftNode>;

        $i2 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r7 = $r6[$i2];

        if $r7 != r0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, $r3, $r5, $r7;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] $r2, $r4, $r6;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] parentNode>;

        $i0 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r3 = $r2[$i0];

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] parentNode>;

        $i1 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r5 = $r4[$i1];

        $r6 = $r5.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rightNode>;

        $i2 = virtualinvoke r1.<org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement: int ordinal()>();

        $r7 = $r6[$i2];

        if $r7 != r0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Comparable getKey()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        java.lang.Comparable $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        $r1 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable key>;

        return $r1;
    }

    public java.lang.Comparable getValue()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        java.lang.Comparable $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        $r1 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable value>;

        return $r1;
    }

    public java.lang.Comparable setValue(java.lang.Comparable) throws java.lang.UnsupportedOperationException
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        java.lang.Comparable r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: java.lang.Comparable;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Map.Entry.setValue is not supported");

        throw $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        java.lang.Object r1, $r4, $r6;
        java.util.Map$Entry r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Comparable $r3, $r5;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.util.Map$Entry) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getKey()>();

        $r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

        $r5 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getValue()>();

        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public int hashCode()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.lang.Comparable $r1, $r2;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        $z0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean calculatedHashCode>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getKey()>();

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getValue()>();

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i3 = $i1 ^ $i2;

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: int hashcodeValue> = $i3;

        r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean calculatedHashCode> = 1;

     label1:
        $i0 = r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: int hashcodeValue>;

        return $i0;
    }

    public volatile java.lang.Object setValue(java.lang.Object)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        java.lang.Object r1;
        java.lang.Comparable $r2, $r3;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Comparable) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable setValue(java.lang.Comparable)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getValue()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        java.lang.Comparable $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getValue()>();

        return $r1;
    }

    public volatile java.lang.Object getKey()
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        java.lang.Comparable $r1;

        r0 := @this: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Comparable getKey()>();

        return $r1;
    }

    static org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, $r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        return $r2;
    }

    static void access$100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        return;
    }

    static void access$200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        return;
    }

    static org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, $r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        return $r2;
    }

    static void access$400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        return;
    }

    static java.lang.Object access$500(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        java.lang.Object $r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: java.lang.Object getData(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        return $r2;
    }

    static org.apache.commons.collections4.bidimap.TreeBidiMap$Node access$600(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, $r2;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $r2 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        return $r2;
    }

    static void access$700(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        return;
    }

    static void access$800(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        return;
    }

    static boolean access$900(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        boolean $z0;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $z0 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        return $z0;
    }

    static boolean access$1000(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        boolean $z0;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $z0 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        return $z0;
    }

    static void access$1100(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void setRed(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        return;
    }

    static boolean access$1200(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        boolean $z0;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $z0 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        return $z0;
    }

    static boolean access$1300(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r1;
        boolean $z0;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        $z0 = specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: boolean isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1);

        return $z0;
    }

    static void access$1400(org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$Node, org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)
    {
        org.apache.commons.collections4.bidimap.TreeBidiMap$Node r0, r1;
        org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement r2;

        r0 := @parameter0: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r1 := @parameter1: org.apache.commons.collections4.bidimap.TreeBidiMap$Node;

        r2 := @parameter2: org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement;

        specialinvoke r0.<org.apache.commons.collections4.bidimap.TreeBidiMap$Node: void swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)>(r1, r2);

        return;
    }
}
