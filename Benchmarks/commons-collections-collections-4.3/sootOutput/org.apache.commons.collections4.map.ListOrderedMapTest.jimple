public class org.apache.commons.collections4.map.ListOrderedMapTest extends org.apache.commons.collections4.map.AbstractOrderedMapTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractOrderedMapTest: void <init>(java.lang.String)>(r1);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r0;

        $r0 = staticinvoke <org.apache.commons.collections4.BulkTest: junit.framework.TestSuite makeSuite(java.lang.Class)>(class "Lorg/apache/commons/collections4/map/ListOrderedMapTest;");

        return $r0;
    }

    public org.apache.commons.collections4.map.ListOrderedMap makeObject()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        java.util.HashMap $r1;
        org.apache.commons.collections4.map.ListOrderedMap $r2;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.collections4.map.ListOrderedMap: org.apache.commons.collections4.map.ListOrderedMap listOrderedMap(java.util.Map)>($r1);

        return $r2;
    }

    public org.apache.commons.collections4.map.ListOrderedMap makeFullMap()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.OrderedMap $r1;
        org.apache.commons.collections4.map.ListOrderedMap $r2;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractOrderedMapTest: org.apache.commons.collections4.OrderedMap makeFullMap()>();

        $r2 = (org.apache.commons.collections4.map.ListOrderedMap) $r1;

        return $r2;
    }

    public void testGetByIndex()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.OrderedMapIterator r1;
        int $i0, i1;
        java.lang.Object $r6, $r7;
        java.lang.IndexOutOfBoundsException $r8, $r9, $r10, $r11;
        org.apache.commons.collections4.map.ListOrderedMap r12, r15;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        r12 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label01:
        virtualinvoke r12.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>(0);

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

     label04:
        virtualinvoke r12.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>(-1);

     label05:
        goto label07;

     label06:
        $r8 := @caughtexception;

     label07:
        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetFull()>();

        r15 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label08:
        virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>(-1);

     label09:
        goto label11;

     label10:
        $r11 := @caughtexception;

     label11:
        $i0 = virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>($i0);

     label12:
        goto label14;

     label13:
        $r10 := @caughtexception;

     label14:
        i1 = 0;

        r1 = virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

     label15:
        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r6 = interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        $r7 = virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>(i1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r6, $r7);

        i1 = i1 + 1;

        goto label15;

     label16:
        return;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label03;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.IndexOutOfBoundsException from label08 to label09 with label10;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label13;
    }

    public void testGetValueByIndex()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.OrderedMapIterator r1;
        int $i0, i1;
        java.lang.Object $r7, $r8;
        java.lang.IndexOutOfBoundsException $r9, $r10, $r11, $r12;
        org.apache.commons.collections4.map.ListOrderedMap r13, r16;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        r13 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label01:
        virtualinvoke r13.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

     label02:
        goto label04;

     label03:
        $r10 := @caughtexception;

     label04:
        virtualinvoke r13.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(-1);

     label05:
        goto label07;

     label06:
        $r11 := @caughtexception;

     label07:
        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetFull()>();

        r16 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label08:
        virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(-1);

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

     label11:
        $i0 = virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>($i0);

     label12:
        goto label14;

     label13:
        $r12 := @caughtexception;

     label14:
        i1 = 0;

        r1 = virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

     label15:
        $z0 = interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        $r7 = interfaceinvoke r1.<org.apache.commons.collections4.MapIterator: java.lang.Object getValue()>();

        $r8 = virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(i1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertSame(java.lang.Object,java.lang.Object)>($r7, $r8);

        i1 = i1 + 1;

        goto label15;

     label16:
        return;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label03;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.IndexOutOfBoundsException from label08 to label09 with label10;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label13;
    }

    public void testIndexOf()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        java.lang.Object[] $r2;
        int $i0, $i1, $i2, i3;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        org.apache.commons.collections4.map.ListOrderedMap r6, r7;
        org.apache.commons.collections4.OrderedMapIterator r8;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        r6 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: java.lang.Object[] getOtherKeys()>();

        $i0 = virtualinvoke r6.<org.apache.commons.collections4.map.ListOrderedMap: int indexOf(java.lang.Object)>($r2);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(-1, $i0);

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetFull()>();

        r7 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r8 = virtualinvoke r7.<org.apache.commons.collections4.map.ListOrderedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

     label1:
        $z0 = interfaceinvoke r8.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r8.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        i3 = 0;

     label3:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i3 >= $i1 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        $i2 = virtualinvoke r7.<org.apache.commons.collections4.map.ListOrderedMap: int indexOf(java.lang.Object)>($r4);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(i3, $i2);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public void testSetValueByIndex()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        java.lang.Object r1, $r7, $r8;
        java.lang.Integer r2;
        int $i0, i1, $i2;
        java.lang.IndexOutOfBoundsException $r9, $r10, $r11, $r12;
        org.apache.commons.collections4.map.ListOrderedMap r13, r16;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        r13 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label01:
        virtualinvoke r13.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object setValue(int,java.lang.Object)>(0, "");

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

     label04:
        virtualinvoke r13.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object setValue(int,java.lang.Object)>(-1, "");

     label05:
        goto label07;

     label06:
        $r10 := @caughtexception;

     label07:
        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetFull()>();

        r16 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label08:
        virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object setValue(int,java.lang.Object)>(-1, "");

     label09:
        goto label11;

     label10:
        $r12 := @caughtexception;

     label11:
        $i0 = virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object setValue(int,java.lang.Object)>($i0, "");

     label12:
        goto label14;

     label13:
        $r11 := @caughtexception;

     label14:
        i1 = 0;

     label15:
        $i2 = virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        if i1 >= $i2 goto label16;

        r1 = virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(i1);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7 = virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object setValue(int,java.lang.Object)>(i1, r2);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r7);

        $r8 = virtualinvoke r16.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(i1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r8);

        i1 = i1 + 1;

        goto label15;

     label16:
        return;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label03;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.IndexOutOfBoundsException from label08 to label09 with label10;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label13;
    }

    public void testRemoveByIndex()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        java.lang.Object r1, r2, $r8, $r10;
        int $i0, $i1, i2;
        java.util.ArrayList $r7;
        boolean $z0, $z2;
        java.lang.IndexOutOfBoundsException $r11, $r12, $r13, $r14;
        org.apache.commons.collections4.map.ListOrderedMap r15, r18;
        org.apache.commons.collections4.OrderedMapIterator r22;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        r15 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label01:
        virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object remove(int)>(0);

     label02:
        goto label04;

     label03:
        $r12 := @caughtexception;

     label04:
        virtualinvoke r15.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object remove(int)>(-1);

     label05:
        goto label07;

     label06:
        $r14 := @caughtexception;

     label07:
        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetFull()>();

        r18 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label08:
        virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object remove(int)>(-1);

     label09:
        goto label11;

     label10:
        $r13 := @caughtexception;

     label11:
        $i0 = virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object remove(int)>($i0);

     label12:
        goto label14;

     label13:
        $r11 := @caughtexception;

     label14:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r22 = virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

     label15:
        $z2 = interfaceinvoke r22.<org.apache.commons.collections4.MapIterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        $r10 = interfaceinvoke r22.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label15;

     label16:
        i2 = 0;

     label17:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i2 >= $i1 goto label18;

        r1 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object remove(int)>(i2);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r8);

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i2);

        $z0 = virtualinvoke r18.<org.apache.commons.collections4.map.ListOrderedMap: boolean containsKey(java.lang.Object)>(r1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(boolean,boolean)>(0, $z0);

        i2 = i2 + 1;

        goto label17;

     label18:
        return;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label03;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.IndexOutOfBoundsException from label08 to label09 with label10;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label13;
    }

    public void testPut_intObjectObject()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        java.lang.Integer r1, r2, r3, r77;
        java.lang.Object $r7, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r22, $r29, $r30, $r37, $r38, $r39, $r40, $r47, $r48, $r49, $r56, $r57, $r58, $r65, $r66, $r67, $r68, $r69;
        org.apache.commons.collections4.map.ListOrderedMap $r20, r72, r75, r78, r79, r80, r81, r82;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i17;
        java.util.Map $r27, $r35, $r45, $r54, $r63;
        java.util.List $r28, $r36, $r46, $r55, $r64;
        java.lang.IndexOutOfBoundsException $r70, $r71;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        r72 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label1:
        virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(int,java.lang.Object,java.lang.Object)>(1, "testInsert1", "testInsert1v");

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void fail(java.lang.String)>("should not be able to insert at pos 1 in empty Map");

     label2:
        goto label4;

     label3:
        $r71 := @caughtexception;

     label4:
        virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(int,java.lang.Object,java.lang.Object)>(-1, "testInsert-1", "testInsert-1v");

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void fail(java.lang.String)>("should not be able to insert at pos -1 in empty Map");

     label5:
        goto label7;

     label6:
        $r70 := @caughtexception;

     label7:
        virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(int,java.lang.Object,java.lang.Object)>(0, "testInsert1", "testInsert1v");

        $r7 = virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("testInsert1v", $r7);

        virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("testInsertPut", "testInsertPutv");

        $r9 = virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("testInsert1v", $r9);

        $r10 = virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("testInsertPutv", $r10);

        virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(int,java.lang.Object,java.lang.Object)>(0, "testInsert0", "testInsert0v");

        $r12 = virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("testInsert0v", $r12);

        $r13 = virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("testInsert1v", $r13);

        $r14 = virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(2);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("testInsertPutv", $r14);

        virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(int,java.lang.Object,java.lang.Object)>(3, "testInsert3", "testInsert3v");

        $r16 = virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("testInsert0v", $r16);

        $r17 = virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("testInsert1v", $r17);

        $r18 = virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(2);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("testInsertPutv", $r18);

        $r19 = virtualinvoke r72.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(3);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("testInsert3v", $r19);

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetFull()>();

        r75 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        $r20 = new org.apache.commons.collections4.map.ListOrderedMap;

        specialinvoke $r20.<org.apache.commons.collections4.map.ListOrderedMap: void <init>()>();

        virtualinvoke $r20.<org.apache.commons.collections4.map.ListOrderedMap: void putAll(java.util.Map)>(r75);

        virtualinvoke $r20.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(int,java.lang.Object,java.lang.Object)>(0, "testInsert0", "testInsert0v");

        $r22 = virtualinvoke $r20.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("testInsert0v", $r22);

        i16 = 0;

     label8:
        $i17 = virtualinvoke r75.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        if i16 >= $i17 goto label9;

        $i15 = i16 + 1;

        $r68 = virtualinvoke $r20.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>($i15);

        $r69 = virtualinvoke r75.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(i16);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r68, $r69);

        i16 = i16 + 1;

        goto label8;

     label9:
        r77 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        r78 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        virtualinvoke r78.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r77, "1");

        virtualinvoke r78.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, "2");

        virtualinvoke r78.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, "3");

        virtualinvoke r78.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(int,java.lang.Object,java.lang.Object)>(0, r77, "One");

        $i0 = virtualinvoke r78.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i0);

        $r27 = r78.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map map>;

        $i1 = interfaceinvoke $r27.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i1);

        $r28 = virtualinvoke r78.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List keyList()>();

        $i2 = interfaceinvoke $r28.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i2);

        $r29 = virtualinvoke r78.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("One", $r29);

        $r30 = virtualinvoke r78.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertSame(java.lang.Object,java.lang.Object)>(r77, $r30);

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        r79 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        virtualinvoke r79.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r77, "1");

        virtualinvoke r79.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, "2");

        virtualinvoke r79.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, "3");

        virtualinvoke r79.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(int,java.lang.Object,java.lang.Object)>(0, r1, "One");

        $i3 = virtualinvoke r79.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i3);

        $r35 = r79.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map map>;

        $i4 = interfaceinvoke $r35.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i4);

        $r36 = virtualinvoke r79.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List keyList()>();

        $i5 = interfaceinvoke $r36.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i5);

        $r37 = virtualinvoke r79.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("One", $r37);

        $r38 = virtualinvoke r79.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("2", $r38);

        $r39 = virtualinvoke r79.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(2);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("3", $r39);

        $r40 = virtualinvoke r79.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>(0);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r40);

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        r80 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        virtualinvoke r80.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r77, "1");

        virtualinvoke r80.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, "2");

        virtualinvoke r80.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, "3");

        virtualinvoke r80.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(int,java.lang.Object,java.lang.Object)>(1, r1, "One");

        $i6 = virtualinvoke r80.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i6);

        $r45 = r80.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map map>;

        $i7 = interfaceinvoke $r45.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i7);

        $r46 = virtualinvoke r80.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List keyList()>();

        $i8 = interfaceinvoke $r46.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i8);

        $r47 = virtualinvoke r80.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("One", $r47);

        $r48 = virtualinvoke r80.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("2", $r48);

        $r49 = virtualinvoke r80.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(2);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("3", $r49);

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        r81 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        virtualinvoke r81.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r77, "1");

        virtualinvoke r81.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, "2");

        virtualinvoke r81.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, "3");

        virtualinvoke r81.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(int,java.lang.Object,java.lang.Object)>(2, r1, "One");

        $i9 = virtualinvoke r81.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i9);

        $r54 = r81.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map map>;

        $i10 = interfaceinvoke $r54.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i10);

        $r55 = virtualinvoke r81.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List keyList()>();

        $i11 = interfaceinvoke $r55.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i11);

        $r56 = virtualinvoke r81.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("2", $r56);

        $r57 = virtualinvoke r81.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("One", $r57);

        $r58 = virtualinvoke r81.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(2);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("3", $r58);

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        r82 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        virtualinvoke r82.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r77, "1");

        virtualinvoke r82.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, "2");

        virtualinvoke r82.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, "3");

        virtualinvoke r82.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(int,java.lang.Object,java.lang.Object)>(3, r1, "One");

        $i12 = virtualinvoke r82.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i12);

        $r63 = r82.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map map>;

        $i13 = interfaceinvoke $r63.<java.util.Map: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i13);

        $r64 = virtualinvoke r82.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List keyList()>();

        $i14 = interfaceinvoke $r64.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(int,int)>(3, $i14);

        $r65 = virtualinvoke r82.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("2", $r65);

        $r66 = virtualinvoke r82.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("3", $r66);

        $r67 = virtualinvoke r82.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(2);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>("One", $r67);

        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
        catch java.lang.IndexOutOfBoundsException from label4 to label5 with label6;
    }

    public void testPutAllWithIndex()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap r1, $r13;
        java.util.Map $r3;
        java.lang.Object $r7, $r9, $r11, $r16, $r18, $r20, $r22, $r24;
        java.lang.String $r8, $r10, $r12, $r17, $r19, $r21, $r23, $r25;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        $r3 = r0.<org.apache.commons.collections4.map.ListOrderedMapTest: java.util.Map map>;

        r1 = (org.apache.commons.collections4.map.ListOrderedMap) $r3;

        virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("testInsert0", "testInsert0v");

        virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("testInsert1", "testInsert1v");

        virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("testInsert2", "testInsert2v");

        $r7 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

        $r8 = (java.lang.String) $r7;

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.String,java.lang.String)>("testInsert0v", $r8);

        $r9 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(1);

        $r10 = (java.lang.String) $r9;

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.String,java.lang.String)>("testInsert1v", $r10);

        $r11 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(2);

        $r12 = (java.lang.String) $r11;

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.String,java.lang.String)>("testInsert2v", $r12);

        $r13 = new org.apache.commons.collections4.map.ListOrderedMap;

        specialinvoke $r13.<org.apache.commons.collections4.map.ListOrderedMap: void <init>()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NewInsert0", "NewInsert0v");

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NewInsert1", "NewInsert1v");

        virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: void putAll(int,java.util.Map)>(1, $r13);

        $r16 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(0);

        $r17 = (java.lang.String) $r16;

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.String,java.lang.String)>("testInsert0v", $r17);

        $r18 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(1);

        $r19 = (java.lang.String) $r18;

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.String,java.lang.String)>("NewInsert0v", $r19);

        $r20 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(2);

        $r21 = (java.lang.String) $r20;

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.String,java.lang.String)>("NewInsert1v", $r21);

        $r22 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(3);

        $r23 = (java.lang.String) $r22;

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.String,java.lang.String)>("testInsert1v", $r23);

        $r24 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(4);

        $r25 = (java.lang.String) $r24;

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.String,java.lang.String)>("testInsert2v", $r25);

        return;
    }

    public void testPutAllWithIndexBug441()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap r1;
        java.util.TreeMap $r2;
        java.lang.Integer $r3, $r5, $r8;
        java.lang.Object $r4;
        java.lang.Boolean $r6, $r9;
        int i1, i2, i3;
        java.util.List r12;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetEmpty()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        i1 = 0;

     label1:
        if i1 >= 5 goto label2;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r9 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        i2 = 0;

     label3:
        if i2 >= 5 goto label4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r6 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        i2 = i2 + 1;

        goto label3;

     label4:
        virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: void putAll(int,java.util.Map)>(3, $r2);

        r12 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List asList()>();

        i3 = 0;

     label5:
        if i3 >= 5 goto label6;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r4 = interfaceinvoke r12.<java.util.List: java.lang.Object get(int)>(i3);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4);

        i3 = i3 + 1;

        goto label5;

     label6:
        return;
    }

    public void testValueList_getByIndex()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap r1;
        java.lang.Object r2, $r4;
        int $i0, i1;
        java.util.List $r3;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetFull()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        if i1 >= $i0 goto label2;

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(i1);

        $r3 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List valueList()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void testValueList_setByIndex()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap r1;
        java.lang.Integer r2;
        java.lang.Object r3, $r5, $r6, $r8;
        int $i0, i1;
        java.util.List $r4, $r7;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetFull()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        if i1 >= $i0 goto label2;

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r3 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(i1);

        $r4 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List valueList()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, r2);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r3, $r5);

        $r6 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(i1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r6);

        $r7 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List valueList()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void testValueList_removeByIndex()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap r1;
        java.lang.Object r2, $r4;
        int $i0;
        java.util.List $r3;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: void resetFull()>();

        r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

     label1:
        $i0 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        if $i0 <= 1 goto label2;

        r2 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object getValue(int)>(1);

        $r3 = virtualinvoke r1.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List valueList()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(1);

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r4);

        goto label1;

     label2:
        return;
    }

    public void testCOLLECTIONS_474_nullValues()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        java.lang.Object $r5, $r6;
        java.util.HashMap $r7;
        int $i0, $i1;
        org.apache.commons.collections4.map.ListOrderedMap $r10;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, null);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, null);

        $i0 = virtualinvoke $r7.<java.util.HashMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.String,int,int)>("Should have two elements", 2, $i0);

        $r10 = new org.apache.commons.collections4.map.ListOrderedMap;

        specialinvoke $r10.<org.apache.commons.collections4.map.ListOrderedMap: void <init>()>();

        virtualinvoke $r10.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, null);

        virtualinvoke $r10.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, null);

        $i1 = virtualinvoke $r10.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.String,int,int)>("Should have two elements", 2, $i1);

        virtualinvoke $r10.<org.apache.commons.collections4.map.ListOrderedMap: void putAll(int,java.util.Map)>(2, $r7);

        return;
    }

    public void testCOLLECTIONS_474_nonNullValues()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        java.lang.Object $r5, $r6;
        java.util.HashMap $r7;
        int $i0, $i1;
        org.apache.commons.collections4.map.ListOrderedMap $r10;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "1");

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "2");

        $i0 = virtualinvoke $r7.<java.util.HashMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.String,int,int)>("Should have two elements", 2, $i0);

        $r10 = new org.apache.commons.collections4.map.ListOrderedMap;

        specialinvoke $r10.<org.apache.commons.collections4.map.ListOrderedMap: void <init>()>();

        virtualinvoke $r10.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "3");

        virtualinvoke $r10.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "4");

        $i1 = virtualinvoke $r10.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        staticinvoke <org.apache.commons.collections4.map.ListOrderedMapTest: void assertEquals(java.lang.String,int,int)>("Should have two elements", 2, $i1);

        virtualinvoke $r10.<org.apache.commons.collections4.map.ListOrderedMap: void putAll(int,java.util.Map)>(2, $r7);

        return;
    }

    public org.apache.commons.collections4.BulkTest bulkTestKeyListView()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = new org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView;

        specialinvoke $r1.<org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView: void <init>(org.apache.commons.collections4.map.ListOrderedMapTest)>(r0);

        return $r1;
    }

    public org.apache.commons.collections4.BulkTest bulkTestValueListView()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = new org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView;

        specialinvoke $r1.<org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView: void <init>(org.apache.commons.collections4.map.ListOrderedMapTest)>(r0);

        return $r1;
    }

    public java.lang.String getCompatibilityVersion()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        return "4";
    }

    public org.apache.commons.collections4.map.ListOrderedMap getMap()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.OrderedMap $r1;
        org.apache.commons.collections4.map.ListOrderedMap $r2;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = specialinvoke r0.<org.apache.commons.collections4.map.AbstractOrderedMapTest: org.apache.commons.collections4.OrderedMap getMap()>();

        $r2 = (org.apache.commons.collections4.map.ListOrderedMap) $r1;

        return $r2;
    }

    public volatile org.apache.commons.collections4.OrderedMap getMap()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.OrderedMap makeFullMap()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap makeFullMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.OrderedMap makeObject()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap makeObject()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.IterableMap getMap()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.IterableMap makeFullMap()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap makeFullMap()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.IterableMap makeObject()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap makeObject()>();

        return $r1;
    }

    public volatile java.util.Map getMap()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap getMap()>();

        return $r1;
    }

    public volatile java.util.Map makeFullMap()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap makeFullMap()>();

        return $r1;
    }

    public volatile java.util.Map makeObject()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap makeObject()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.map.ListOrderedMapTest r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMapTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMapTest: org.apache.commons.collections4.map.ListOrderedMap makeObject()>();

        return $r1;
    }
}
