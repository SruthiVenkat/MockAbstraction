class org.apache.commons.collections4.CollectionUtils$CardinalityHelper extends java.lang.Object
{
    final java.util.Map cardinalityA;
    final java.util.Map cardinalityB;

    public void <init>(java.lang.Iterable, java.lang.Iterable)
    {
        org.apache.commons.collections4.CollectionUtils$CardinalityHelper r0;
        java.lang.Iterable r1, r2;
        java.util.Map $r3, $r4;

        r0 := @this: org.apache.commons.collections4.CollectionUtils$CardinalityHelper;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: java.lang.Iterable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r1);

        r0.<org.apache.commons.collections4.CollectionUtils$CardinalityHelper: java.util.Map cardinalityA> = $r3;

        $r4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r2);

        r0.<org.apache.commons.collections4.CollectionUtils$CardinalityHelper: java.util.Map cardinalityB> = $r4;

        return;
    }

    public final int max(java.lang.Object)
    {
        org.apache.commons.collections4.CollectionUtils$CardinalityHelper r0;
        java.lang.Object r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections4.CollectionUtils$CardinalityHelper;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtils$CardinalityHelper: int freqA(java.lang.Object)>(r1);

        $i1 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtils$CardinalityHelper: int freqB(java.lang.Object)>(r1);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i2;
    }

    public final int min(java.lang.Object)
    {
        org.apache.commons.collections4.CollectionUtils$CardinalityHelper r0;
        java.lang.Object r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections4.CollectionUtils$CardinalityHelper;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtils$CardinalityHelper: int freqA(java.lang.Object)>(r1);

        $i1 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtils$CardinalityHelper: int freqB(java.lang.Object)>(r1);

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        return $i2;
    }

    public int freqA(java.lang.Object)
    {
        org.apache.commons.collections4.CollectionUtils$CardinalityHelper r0;
        java.lang.Object r1;
        java.util.Map $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.CollectionUtils$CardinalityHelper;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.CollectionUtils$CardinalityHelper: java.util.Map cardinalityA>;

        $i0 = specialinvoke r0.<org.apache.commons.collections4.CollectionUtils$CardinalityHelper: int getFreq(java.lang.Object,java.util.Map)>(r1, $r2);

        return $i0;
    }

    public int freqB(java.lang.Object)
    {
        org.apache.commons.collections4.CollectionUtils$CardinalityHelper r0;
        java.lang.Object r1;
        java.util.Map $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.CollectionUtils$CardinalityHelper;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.CollectionUtils$CardinalityHelper: java.util.Map cardinalityB>;

        $i0 = specialinvoke r0.<org.apache.commons.collections4.CollectionUtils$CardinalityHelper: int getFreq(java.lang.Object,java.util.Map)>(r1, $r2);

        return $i0;
    }

    private int getFreq(java.lang.Object, java.util.Map)
    {
        org.apache.commons.collections4.CollectionUtils$CardinalityHelper r0;
        java.lang.Object r1, $r4;
        java.util.Map r2;
        java.lang.Integer r3;
        int $i0;

        r0 := @this: org.apache.commons.collections4.CollectionUtils$CardinalityHelper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        $r4 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.lang.Integer) $r4;

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        return 0;
    }
}
