public class org.apache.commons.collections4.iterators.PeekingIterator extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator iterator;
    private boolean exhausted;
    private boolean slotFilled;
    private java.lang.Object slot;

    public static org.apache.commons.collections4.iterators.PeekingIterator peekingIterator(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.iterators.PeekingIterator r1, $r2;
        boolean $z0;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.util.Iterator;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r3;

     label1:
        $z0 = r0 instanceof org.apache.commons.collections4.iterators.PeekingIterator;

        if $z0 == 0 goto label2;

        r1 = (org.apache.commons.collections4.iterators.PeekingIterator) r0;

        return r1;

     label2:
        $r2 = new org.apache.commons.collections4.iterators.PeekingIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.PeekingIterator: void <init>(java.util.Iterator)>(r0);

        return $r2;
    }

    public void <init>(java.util.Iterator)
    {
        org.apache.commons.collections4.iterators.PeekingIterator r0;
        java.util.Iterator r1;

        r0 := @this: org.apache.commons.collections4.iterators.PeekingIterator;

        r1 := @parameter0: java.util.Iterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean exhausted> = 0;

        r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean slotFilled> = 0;

        r0.<org.apache.commons.collections4.iterators.PeekingIterator: java.util.Iterator iterator> = r1;

        return;
    }

    private void fill()
    {
        org.apache.commons.collections4.iterators.PeekingIterator r0;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections4.iterators.PeekingIterator;

        $z0 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean exhausted>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean slotFilled>;

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $r1 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: java.util.Iterator iterator>;

        $z2 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r2 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: java.util.Iterator iterator>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r0.<org.apache.commons.collections4.iterators.PeekingIterator: java.lang.Object slot> = $r3;

        r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean slotFilled> = 1;

        goto label4;

     label3:
        r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean exhausted> = 1;

        r0.<org.apache.commons.collections4.iterators.PeekingIterator: java.lang.Object slot> = null;

        r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean slotFilled> = 0;

     label4:
        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections4.iterators.PeekingIterator r0;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.PeekingIterator;

        $z0 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean exhausted>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean slotFilled>;

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $r1 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: java.util.Iterator iterator>;

        $z2 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

     label3:
        return $z2;
    }

    public java.lang.Object peek()
    {
        org.apache.commons.collections4.iterators.PeekingIterator r0;
        boolean $z0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections4.iterators.PeekingIterator;

        specialinvoke r0.<org.apache.commons.collections4.iterators.PeekingIterator: void fill()>();

        $z0 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean exhausted>;

        if $z0 == 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: java.lang.Object slot>;

     label2:
        return $r1;
    }

    public java.lang.Object element()
    {
        org.apache.commons.collections4.iterators.PeekingIterator r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;

        r0 := @this: org.apache.commons.collections4.iterators.PeekingIterator;

        specialinvoke r0.<org.apache.commons.collections4.iterators.PeekingIterator: void fill()>();

        $z0 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean exhausted>;

        if $z0 == 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: java.lang.Object slot>;

        return $r1;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections4.iterators.PeekingIterator r0;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        java.util.NoSuchElementException $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.collections4.iterators.PeekingIterator;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        $z1 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean slotFilled>;

        if $z1 == 0 goto label2;

        $r4 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: java.lang.Object slot>;

        goto label3;

     label2:
        $r2 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: java.util.Iterator iterator>;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

     label3:
        r0.<org.apache.commons.collections4.iterators.PeekingIterator: java.lang.Object slot> = null;

        r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean slotFilled> = 0;

        return $r4;
    }

    public void remove()
    {
        org.apache.commons.collections4.iterators.PeekingIterator r0;
        boolean $z0;
        java.util.Iterator $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.apache.commons.collections4.iterators.PeekingIterator;

        $z0 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: boolean slotFilled>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("peek() or element() called before remove()");

        throw $r2;

     label1:
        $r1 = r0.<org.apache.commons.collections4.iterators.PeekingIterator: java.util.Iterator iterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }
}
