public class org.apache.commons.collections4.sequence.SequencesComparator extends java.lang.Object
{
    private final java.util.List sequence1;
    private final java.util.List sequence2;
    private final org.apache.commons.collections4.Equator equator;
    private final int[] vDown;
    private final int[] vUp;

    public void <init>(java.util.List, java.util.List)
    {
        org.apache.commons.collections4.sequence.SequencesComparator r0;
        java.util.List r1, r2;
        org.apache.commons.collections4.functors.DefaultEquator $r3;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparator;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        $r3 = staticinvoke <org.apache.commons.collections4.functors.DefaultEquator: org.apache.commons.collections4.functors.DefaultEquator defaultEquator()>();

        specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparator: void <init>(java.util.List,java.util.List,org.apache.commons.collections4.Equator)>(r1, r2, $r3);

        return;
    }

    public void <init>(java.util.List, java.util.List, org.apache.commons.collections4.Equator)
    {
        org.apache.commons.collections4.sequence.SequencesComparator r0;
        java.util.List r1, r2;
        org.apache.commons.collections4.Equator r3;
        int i0, $i1, $i2, $i3;
        int[] $r4, $r5;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparator;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: org.apache.commons.collections4.Equator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence1> = r1;

        r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence2> = r2;

        r0.<org.apache.commons.collections4.sequence.SequencesComparator: org.apache.commons.collections4.Equator equator> = r3;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $i3 = $i1 + $i2;

        i0 = $i3 + 2;

        $r4 = newarray (int)[i0];

        r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vDown> = $r4;

        $r5 = newarray (int)[i0];

        r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp> = $r5;

        return;
    }

    public org.apache.commons.collections4.sequence.EditScript getScript()
    {
        org.apache.commons.collections4.sequence.SequencesComparator r0;
        org.apache.commons.collections4.sequence.EditScript $r2;
        java.util.List $r3, $r4;
        int $i0, $i1;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparator;

        $r2 = new org.apache.commons.collections4.sequence.EditScript;

        specialinvoke $r2.<org.apache.commons.collections4.sequence.EditScript: void <init>()>();

        $r3 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence1>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence2>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparator: void buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)>(0, $i0, 0, $i1, $r2);

        return $r2;
    }

    private org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int, int, int, int)
    {
        org.apache.commons.collections4.sequence.SequencesComparator r0;
        int i0, i1, i2, i3, $i4, $i5, i6;
        java.util.List $r1, $r4;
        org.apache.commons.collections4.Equator $r2;
        java.lang.Object $r3, $r5;
        boolean $z0;
        org.apache.commons.collections4.sequence.SequencesComparator$Snake $r6;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i6 = i0;

     label1:
        $i4 = i6 - i1;

        if $i4 >= i3 goto label2;

        if i6 >= i2 goto label2;

        $r2 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: org.apache.commons.collections4.Equator equator>;

        $r1 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence1>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i6);

        $r4 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence2>;

        $i5 = i6 - i1;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i5);

        $z0 = interfaceinvoke $r2.<org.apache.commons.collections4.Equator: boolean equate(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z0 == 0 goto label2;

        i6 = i6 + 1;

        goto label1;

     label2:
        $r6 = new org.apache.commons.collections4.sequence.SequencesComparator$Snake;

        specialinvoke $r6.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: void <init>(int,int,int)>(i0, i6, i1);

        return $r6;
    }

    private org.apache.commons.collections4.sequence.SequencesComparator$Snake getMiddleSnake(int, int, int, int)
    {
        org.apache.commons.collections4.sequence.SequencesComparator r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, i54, i55, i56, i57, $i58, $i59, i60, $i61, i62, i63, $i64, i65, $i66, $i67, i68, $i69;
        int[] $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        java.lang.RuntimeException $r3;
        org.apache.commons.collections4.sequence.SequencesComparator$Snake $r9, $r25;
        java.util.List $r10, $r13, $r26, $r29;
        org.apache.commons.collections4.Equator $r11, $r27;
        java.lang.Object $r12, $r14, $r28, $r30;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 = i1 - i0;

        i5 = i3 - i2;

        if i4 == 0 goto label01;

        if i5 != 0 goto label02;

     label01:
        return null;

     label02:
        i6 = i4 - i5;

        i7 = i5 + i4;

        $i9 = i7 % 2;

        if $i9 != 0 goto label03;

        $i53 = i7;

        goto label04;

     label03:
        $i53 = i7 + 1;

     label04:
        i8 = $i53 / 2;

        $r1 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vDown>;

        $i10 = 1 + i8;

        $r1[$i10] = i0;

        $r2 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $i12 = 1 + i8;

        $i11 = i1 + 1;

        $r2[$i12] = $i11;

        i54 = 0;

     label05:
        if i54 > i8 goto label22;

        i55 = neg i54;

     label06:
        if i55 > i54 goto label13;

        i56 = i55 + i8;

        $i34 = neg i54;

        if i55 == $i34 goto label07;

        if i55 == i54 goto label08;

        $r34 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vDown>;

        $i49 = i56 - 1;

        $i52 = $r34[$i49];

        $r35 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vDown>;

        $i50 = i56 + 1;

        $i51 = $r35[$i50];

        if $i52 >= $i51 goto label08;

     label07:
        $r21 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vDown>;

        $r20 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vDown>;

        $i35 = i56 + 1;

        $i36 = $r20[$i35];

        $r21[i56] = $i36;

        goto label09;

     label08:
        $r33 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vDown>;

        $r32 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vDown>;

        $i46 = i56 - 1;

        $i47 = $r32[$i46];

        $i48 = $i47 + 1;

        $r33[i56] = $i48;

     label09:
        $r36 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vDown>;

        i57 = $r36[i56];

        $i58 = i57 - i0;

        $i59 = $i58 + i2;

        i60 = $i59 - i55;

     label10:
        if i57 >= i1 goto label11;

        if i60 >= i3 goto label11;

        $r27 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: org.apache.commons.collections4.Equator equator>;

        $r26 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence1>;

        $r28 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>(i57);

        $r29 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence2>;

        $r30 = interfaceinvoke $r29.<java.util.List: java.lang.Object get(int)>(i60);

        $z1 = interfaceinvoke $r27.<org.apache.commons.collections4.Equator: boolean equate(java.lang.Object,java.lang.Object)>($r28, $r30);

        if $z1 == 0 goto label11;

        $r31 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vDown>;

        i57 = i57 + 1;

        $r31[i56] = i57;

        i60 = i60 + 1;

        goto label10;

     label11:
        $i61 = i6 % 2;

        if $i61 == 0 goto label12;

        $i37 = i6 - i54;

        if $i37 > i55 goto label12;

        $i38 = i6 + i54;

        if i55 > $i38 goto label12;

        $r22 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $i39 = i56 - i6;

        $i41 = $r22[$i39];

        $r23 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vDown>;

        $i40 = $r23[i56];

        if $i41 > $i40 goto label12;

        $r24 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $i42 = i56 - i6;

        $i45 = $r24[$i42];

        $i43 = i55 + i0;

        $i44 = $i43 - i2;

        $r25 = specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparator: org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int,int,int,int)>($i45, $i44, i1, i3);

        return $r25;

     label12:
        i55 = i55 + 2;

        goto label06;

     label13:
        i62 = i6 - i54;

     label14:
        $i13 = i6 + i54;

        if i62 > $i13 goto label21;

        $i14 = i62 + i8;

        i63 = $i14 - i6;

        $i15 = i6 - i54;

        if i62 == $i15 goto label15;

        $i27 = i6 + i54;

        if i62 == $i27 goto label16;

        $r18 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $i30 = i63 + 1;

        $i33 = $r18[$i30];

        $r19 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $i31 = i63 - 1;

        $i32 = $r19[$i31];

        if $i33 > $i32 goto label16;

     label15:
        $r5 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $r4 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $i16 = i63 + 1;

        $i17 = $r4[$i16];

        $i18 = $i17 - 1;

        $r5[i63] = $i18;

        goto label17;

     label16:
        $r17 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $r16 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $i28 = i63 - 1;

        $i29 = $r16[$i28];

        $r17[i63] = $i29;

     label17:
        $r37 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $i64 = $r37[i63];

        i65 = $i64 - 1;

        $i66 = i65 - i0;

        $i67 = $i66 + i2;

        i68 = $i67 - i62;

     label18:
        if i65 < i0 goto label19;

        if i68 < i2 goto label19;

        $r11 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: org.apache.commons.collections4.Equator equator>;

        $r10 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence1>;

        $r12 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i65);

        $r13 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence2>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i68);

        $z0 = interfaceinvoke $r11.<org.apache.commons.collections4.Equator: boolean equate(java.lang.Object,java.lang.Object)>($r12, $r14);

        if $z0 == 0 goto label19;

        $r15 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $i26 = i65;

        i65 = i65 + -1;

        $r15[i63] = $i26;

        i68 = i68 + -1;

        goto label18;

     label19:
        $i69 = i6 % 2;

        if $i69 != 0 goto label20;

        $i19 = neg i54;

        if $i19 > i62 goto label20;

        if i62 > i54 goto label20;

        $r6 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $i22 = $r6[i63];

        $r7 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vDown>;

        $i20 = i63 + i6;

        $i21 = $r7[$i20];

        if $i22 > $i21 goto label20;

        $r8 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: int[] vUp>;

        $i25 = $r8[i63];

        $i23 = i62 + i0;

        $i24 = $i23 - i2;

        $r9 = specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparator: org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int,int,int,int)>($i25, $i24, i1, i3);

        return $r9;

     label20:
        i62 = i62 + 2;

        goto label14;

     label21:
        i54 = i54 + 1;

        goto label05;

     label22:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal Error");

        throw $r3;
    }

    private void buildScript(int, int, int, int, org.apache.commons.collections4.sequence.EditScript)
    {
        org.apache.commons.collections4.sequence.SequencesComparator r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, $i20, $i21, i22, $i23;
        org.apache.commons.collections4.sequence.EditScript r1;
        org.apache.commons.collections4.sequence.SequencesComparator$Snake r2;
        org.apache.commons.collections4.sequence.InsertCommand $r3;
        java.util.List $r4, $r7, $r9, $r12, $r15, $r18;
        java.lang.Object $r5, $r8, $r11, $r13, $r16, $r19;
        org.apache.commons.collections4.sequence.DeleteCommand $r6;
        org.apache.commons.collections4.Equator $r10;
        boolean $z0;
        org.apache.commons.collections4.sequence.KeepCommand $r14, $r17;

        r0 := @this: org.apache.commons.collections4.sequence.SequencesComparator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: org.apache.commons.collections4.sequence.EditScript;

        r2 = specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparator: org.apache.commons.collections4.sequence.SequencesComparator$Snake getMiddleSnake(int,int,int,int)>(i0, i1, i2, i3);

        if r2 == null goto label02;

        $i4 = virtualinvoke r2.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: int getStart()>();

        if $i4 != i1 goto label01;

        $i16 = virtualinvoke r2.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: int getDiag()>();

        $i17 = i1 - i3;

        if $i16 == $i17 goto label02;

     label01:
        $i5 = virtualinvoke r2.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: int getEnd()>();

        if $i5 != i0 goto label08;

        $i14 = virtualinvoke r2.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: int getDiag()>();

        $i15 = i0 - i2;

        if $i14 != $i15 goto label08;

     label02:
        i18 = i0;

        i19 = i2;

     label03:
        if i18 < i1 goto label04;

        if i19 >= i3 goto label07;

     label04:
        if i18 >= i1 goto label05;

        if i19 >= i3 goto label05;

        $r10 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: org.apache.commons.collections4.Equator equator>;

        $r9 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence1>;

        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i18);

        $r12 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence2>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i19);

        $z0 = interfaceinvoke $r10.<org.apache.commons.collections4.Equator: boolean equate(java.lang.Object,java.lang.Object)>($r11, $r13);

        if $z0 == 0 goto label05;

        $r14 = new org.apache.commons.collections4.sequence.KeepCommand;

        $r15 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence1>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i18);

        specialinvoke $r14.<org.apache.commons.collections4.sequence.KeepCommand: void <init>(java.lang.Object)>($r16);

        virtualinvoke r1.<org.apache.commons.collections4.sequence.EditScript: void append(org.apache.commons.collections4.sequence.KeepCommand)>($r14);

        i18 = i18 + 1;

        i19 = i19 + 1;

        goto label03;

     label05:
        $i20 = i1 - i0;

        $i21 = i3 - i2;

        if $i20 <= $i21 goto label06;

        $r6 = new org.apache.commons.collections4.sequence.DeleteCommand;

        $r7 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence1>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i18);

        specialinvoke $r6.<org.apache.commons.collections4.sequence.DeleteCommand: void <init>(java.lang.Object)>($r8);

        virtualinvoke r1.<org.apache.commons.collections4.sequence.EditScript: void append(org.apache.commons.collections4.sequence.DeleteCommand)>($r6);

        i18 = i18 + 1;

        goto label03;

     label06:
        $r3 = new org.apache.commons.collections4.sequence.InsertCommand;

        $r4 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence2>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i19);

        specialinvoke $r3.<org.apache.commons.collections4.sequence.InsertCommand: void <init>(java.lang.Object)>($r5);

        virtualinvoke r1.<org.apache.commons.collections4.sequence.EditScript: void append(org.apache.commons.collections4.sequence.InsertCommand)>($r3);

        i19 = i19 + 1;

        goto label03;

     label07:
        goto label11;

     label08:
        $i6 = virtualinvoke r2.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: int getStart()>();

        $i7 = virtualinvoke r2.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: int getStart()>();

        $i8 = virtualinvoke r2.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: int getDiag()>();

        $i9 = $i7 - $i8;

        specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparator: void buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)>(i0, $i6, i2, $i9, r1);

        i22 = virtualinvoke r2.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: int getStart()>();

     label09:
        $i23 = virtualinvoke r2.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: int getEnd()>();

        if i22 >= $i23 goto label10;

        $r17 = new org.apache.commons.collections4.sequence.KeepCommand;

        $r18 = r0.<org.apache.commons.collections4.sequence.SequencesComparator: java.util.List sequence1>;

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i22);

        specialinvoke $r17.<org.apache.commons.collections4.sequence.KeepCommand: void <init>(java.lang.Object)>($r19);

        virtualinvoke r1.<org.apache.commons.collections4.sequence.EditScript: void append(org.apache.commons.collections4.sequence.KeepCommand)>($r17);

        i22 = i22 + 1;

        goto label09;

     label10:
        $i10 = virtualinvoke r2.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: int getEnd()>();

        $i11 = virtualinvoke r2.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: int getEnd()>();

        $i12 = virtualinvoke r2.<org.apache.commons.collections4.sequence.SequencesComparator$Snake: int getDiag()>();

        $i13 = $i11 - $i12;

        specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparator: void buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)>($i10, i1, $i13, i3, r1);

     label11:
        return;
    }
}
