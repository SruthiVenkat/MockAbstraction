class org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory extends java.lang.Object implements org.apache.commons.collections4.Factory, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.Class clazz;

    public void <init>(java.lang.Class)
    {
        org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory r0;
        java.lang.Class r1;

        r0 := @this: org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory: java.lang.Class clazz> = r1;

        return;
    }

    public java.util.Collection create()
    {
        org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory r0;
        java.lang.Class[] $r2;
        java.lang.Class $r3, $r12;
        java.lang.reflect.Constructor $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        java.util.Collection $r7;
        java.lang.Exception $r8;
        org.apache.commons.collections4.FunctorException $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r14;

        r0 := @this: org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory;

     label1:
        $r3 = r0.<org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory: java.lang.Class clazz>;

        $r2 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

        $r7 = (java.util.Collection) $r6;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.apache.commons.collections4.FunctorException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot instantiate class: ");

        $r12 = r0.<org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory: java.lang.Class clazz>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.commons.collections4.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r8);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory r0;
        java.io.ObjectInputStream r1;
        java.lang.Class $r2, $r3, $r4;
        boolean $z0;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = r0.<org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory: java.lang.Class clazz>;

        if $r2 == null goto label1;

        $r4 = class "Ljava/util/Collection;";

        $r3 = r0.<org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory: java.lang.Class clazz>;

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;

     label1:
        return;
    }

    public volatile java.lang.Object create()
    {
        org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory: java.util.Collection create()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory: long serialVersionUID> = 2986114157496788874L;

        return;
    }
}
