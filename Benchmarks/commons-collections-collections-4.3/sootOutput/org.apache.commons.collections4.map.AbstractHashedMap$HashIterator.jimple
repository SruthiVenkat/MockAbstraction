public abstract class org.apache.commons.collections4.map.AbstractHashedMap$HashIterator extends java.lang.Object
{
    private final org.apache.commons.collections4.map.AbstractHashedMap parent;
    private int hashIndex;
    private org.apache.commons.collections4.map.AbstractHashedMap$HashEntry last;
    private org.apache.commons.collections4.map.AbstractHashedMap$HashEntry next;
    private int expectedModCount;

    protected void <init>(org.apache.commons.collections4.map.AbstractHashedMap)
    {
        org.apache.commons.collections4.map.AbstractHashedMap$HashIterator r0;
        org.apache.commons.collections4.map.AbstractHashedMap r1;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry[] r2;
        int $i0, i1;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry r3;

        r0 := @this: org.apache.commons.collections4.map.AbstractHashedMap$HashIterator;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractHashedMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap parent> = r1;

        r2 = r1.<org.apache.commons.collections4.map.AbstractHashedMap: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry[] data>;

        i1 = lengthof r2;

        r3 = null;

     label1:
        if i1 <= 0 goto label2;

        if r3 != null goto label2;

        i1 = i1 + -1;

        r3 = r2[i1];

        goto label1;

     label2:
        r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry next> = r3;

        r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: int hashIndex> = i1;

        $i0 = r1.<org.apache.commons.collections4.map.AbstractHashedMap: int modCount>;

        r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: int expectedModCount> = $i0;

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections4.map.AbstractHashedMap$HashIterator r0;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.AbstractHashedMap$HashIterator;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry next>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()
    {
        org.apache.commons.collections4.map.AbstractHashedMap$HashIterator r0;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry r1, r7;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry[] r2;
        org.apache.commons.collections4.map.AbstractHashedMap $r3, $r4;
        int $i0, $i1, i2;
        java.util.NoSuchElementException $r5;
        java.util.ConcurrentModificationException $r6;

        r0 := @this: org.apache.commons.collections4.map.AbstractHashedMap$HashIterator;

        $r3 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap parent>;

        $i1 = $r3.<org.apache.commons.collections4.map.AbstractHashedMap: int modCount>;

        $i0 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: int expectedModCount>;

        if $i1 == $i0 goto label1;

        $r6 = new java.util.ConcurrentModificationException;

        specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r6;

     label1:
        r1 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry next>;

        if r1 != null goto label2;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No next() entry in the iteration");

        throw $r5;

     label2:
        $r4 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap parent>;

        r2 = $r4.<org.apache.commons.collections4.map.AbstractHashedMap: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry[] data>;

        i2 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: int hashIndex>;

        r7 = r1.<org.apache.commons.collections4.map.AbstractHashedMap$HashEntry: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry next>;

     label3:
        if r7 != null goto label4;

        if i2 <= 0 goto label4;

        i2 = i2 + -1;

        r7 = r2[i2];

        goto label3;

     label4:
        r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry next> = r7;

        r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: int hashIndex> = i2;

        r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry last> = r1;

        return r1;
    }

    protected org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()
    {
        org.apache.commons.collections4.map.AbstractHashedMap$HashIterator r0;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry $r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractHashedMap$HashIterator;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry last>;

        return $r1;
    }

    public void remove()
    {
        org.apache.commons.collections4.map.AbstractHashedMap$HashIterator r0;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry $r1, $r3;
        org.apache.commons.collections4.map.AbstractHashedMap $r2, $r4, $r7;
        int $i0, $i1, $i2;
        java.lang.Object $r5;
        java.util.ConcurrentModificationException $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: org.apache.commons.collections4.map.AbstractHashedMap$HashIterator;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry last>;

        if $r1 != null goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("remove() can only be called once after next()");

        throw $r9;

     label1:
        $r2 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap parent>;

        $i1 = $r2.<org.apache.commons.collections4.map.AbstractHashedMap: int modCount>;

        $i0 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: int expectedModCount>;

        if $i1 == $i0 goto label2;

        $r8 = new java.util.ConcurrentModificationException;

        specialinvoke $r8.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r8;

     label2:
        $r4 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap parent>;

        $r3 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry last>;

        $r5 = virtualinvoke $r3.<org.apache.commons.collections4.map.AbstractHashedMap$HashEntry: java.lang.Object getKey()>();

        virtualinvoke $r4.<org.apache.commons.collections4.map.AbstractHashedMap: java.lang.Object remove(java.lang.Object)>($r5);

        r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry last> = null;

        $r7 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap parent>;

        $i2 = $r7.<org.apache.commons.collections4.map.AbstractHashedMap: int modCount>;

        r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: int expectedModCount> = $i2;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.map.AbstractHashedMap$HashIterator r0;
        org.apache.commons.collections4.map.AbstractHashedMap$HashEntry $r1, $r4, $r8;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r10, $r11;
        java.lang.Object $r5, $r9;
        java.lang.String $r12;

        r0 := @this: org.apache.commons.collections4.map.AbstractHashedMap$HashIterator;

        $r1 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry last>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Iterator[");

        $r4 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry last>;

        $r5 = virtualinvoke $r4.<org.apache.commons.collections4.map.AbstractHashedMap$HashEntry: java.lang.Object getKey()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r8 = r0.<org.apache.commons.collections4.map.AbstractHashedMap$HashIterator: org.apache.commons.collections4.map.AbstractHashedMap$HashEntry last>;

        $r9 = virtualinvoke $r8.<org.apache.commons.collections4.map.AbstractHashedMap$HashEntry: java.lang.Object getValue()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label1:
        return "Iterator[]";
    }
}
