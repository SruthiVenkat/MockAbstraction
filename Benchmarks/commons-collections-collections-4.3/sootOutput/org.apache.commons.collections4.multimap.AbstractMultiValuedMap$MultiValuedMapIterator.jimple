class org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator extends java.lang.Object implements org.apache.commons.collections4.MapIterator
{
    private final java.util.Iterator it;
    private java.util.Map$Entry current;
    final org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0;

    public void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator r0;
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator;

        r1 := @parameter0: org.apache.commons.collections4.multimap.AbstractMultiValuedMap;

        r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: org.apache.commons.collections4.multimap.AbstractMultiValuedMap this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Map$Entry current> = null;

        $r2 = virtualinvoke r1.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap: java.util.Collection entries()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Iterator it> = $r3;

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Iterator it>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator r0;
        java.util.Iterator $r1;
        java.lang.Object $r2, $r5;
        java.util.Map$Entry $r3, $r4;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Iterator it>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Map$Entry) $r2;

        r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Map$Entry current> = $r3;

        $r4 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Map$Entry current>;

        $r5 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r5;
    }

    public java.lang.Object getKey()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator r0;
        java.util.Map$Entry $r1, $r2;
        java.lang.Object $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Map$Entry current>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Map$Entry current>;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r3;
    }

    public java.lang.Object getValue()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator r0;
        java.util.Map$Entry $r1, $r2;
        java.lang.Object $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Map$Entry current>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Map$Entry current>;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        return $r3;
    }

    public void remove()
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator r0;
        java.util.Iterator $r1;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator;

        $r1 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Iterator it>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator r0;
        java.lang.Object r1, $r4;
        java.util.Map$Entry $r2, $r3;
        java.lang.IllegalStateException $r5;

        r0 := @this: org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Map$Entry current>;

        if $r2 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label1:
        $r3 = r0.<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator: java.util.Map$Entry current>;

        $r4 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(r1);

        return $r4;
    }
}
