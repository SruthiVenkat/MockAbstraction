public class org.apache.commons.collections4.map.ListOrderedMap extends org.apache.commons.collections4.map.AbstractMapDecorator implements org.apache.commons.collections4.OrderedMap, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.util.List insertOrder;

    public static org.apache.commons.collections4.map.ListOrderedMap listOrderedMap(java.util.Map)
    {
        java.util.Map r0;
        org.apache.commons.collections4.map.ListOrderedMap $r1;

        r0 := @parameter0: java.util.Map;

        $r1 = new org.apache.commons.collections4.map.ListOrderedMap;

        specialinvoke $r1.<org.apache.commons.collections4.map.ListOrderedMap: void <init>(java.util.Map)>(r0);

        return $r1;
    }

    public void <init>()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: void <init>(java.util.Map)>($r1);

        return;
    }

    protected void <init>(java.util.Map)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.util.Map r1, $r4;
        java.util.ArrayList $r2;
        java.util.List $r3;
        java.util.Set $r5;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractMapDecorator: void <init>(java.util.Map)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder> = $r2;

        $r3 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map decorated()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.io.ObjectOutputStream r1;
        java.util.Map $r2;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map map>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.io.ObjectInputStream r1;
        java.lang.Object $r2;
        java.util.Map $r3;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.util.Map) $r2;

        r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map map> = $r3;

        return;
    }

    public org.apache.commons.collections4.OrderedMapIterator mapIterator()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $r1 = new org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator;

        specialinvoke $r1.<org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator: void <init>(org.apache.commons.collections4.map.ListOrderedMap)>(r0);

        return $r1;
    }

    public java.lang.Object firstKey()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        int $i0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        if $i0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Map is empty");

        throw $r3;

     label1:
        $r1 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        return $r2;
    }

    public java.lang.Object lastKey()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        int $i0, $i1, $i2;
        java.util.List $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        if $i0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Map is empty");

        throw $r3;

     label1:
        $r1 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $i1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        $i2 = $i1 - 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        return $r2;
    }

    public java.lang.Object nextKey(java.lang.Object)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.lang.Object r1, $r4;
        int i0, $i1, $i2, $i3;
        java.util.List $r2, $r3;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: int size()>();

        $i2 = $i1 - 1;

        if i0 >= $i2 goto label1;

        $r3 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $i3 = i0 + 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i3);

        return $r4;

     label1:
        return null;
    }

    public java.lang.Object previousKey(java.lang.Object)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.lang.Object r1, $r4;
        int i0, $i1;
        java.util.List $r2, $r3;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        if i0 <= 0 goto label1;

        $r3 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $i1 = i0 - 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        return $r4;

     label1:
        return null;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.lang.Object r1, r2, r3, $r8;
        java.util.Map $r4, $r5, $r7;
        boolean $z0;
        java.util.List $r6;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map decorated()>();

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map decorated()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r8;

     label1:
        $r5 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map decorated()>();

        r3 = interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r6 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r3;
    }

    public void putAll(java.util.Map)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        r1 := @parameter0: java.util.Map;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    public void putAll(int, java.util.Map)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.Object r4, $r15, $r16, $r17, $r19;
        boolean z0, $z1;
        java.lang.IndexOutOfBoundsException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11;
        java.util.List $r10, $r13;
        int $i0, $i1, $i2, i3;
        java.lang.String $r12;
        java.util.Set $r14;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        i3 := @parameter0: int;

        r1 := @parameter1: java.util.Map;

        if i3 < 0 goto label1;

        $r13 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $i1 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i3 <= $i1 goto label2;

     label1:
        $r5 = new java.lang.IndexOutOfBoundsException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Size: ");

        $r10 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r12);

        throw $r5;

     label2:
        $r14 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r15;

        r4 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        z0 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: boolean containsKey(java.lang.Object)>(r4);

        $r16 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(int,java.lang.Object,java.lang.Object)>(i3, $r16, $r17);

        if z0 != 0 goto label4;

        i3 = i3 + 1;

        goto label5;

     label4:
        $r19 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $i2 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: int indexOf(java.lang.Object)>($r19);

        i3 = $i2 + 1;

     label5:
        goto label3;

     label6:
        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.lang.Object r1, r5;
        java.util.Map $r2, $r3;
        boolean $z0;
        java.util.List $r4;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        r1 := @parameter0: java.lang.Object;

        r5 = null;

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map decorated()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map decorated()>();

        r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label1:
        return r5;
    }

    public void clear()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.util.Map $r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map decorated()>();

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;
    }

    public java.util.Set keySet()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        org.apache.commons.collections4.map.ListOrderedMap$KeySetView $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $r1 = new org.apache.commons.collections4.map.ListOrderedMap$KeySetView;

        specialinvoke $r1.<org.apache.commons.collections4.map.ListOrderedMap$KeySetView: void <init>(org.apache.commons.collections4.map.ListOrderedMap)>(r0);

        return $r1;
    }

    public java.util.List keyList()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.util.List $r1, $r2;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $r1 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $r2 = staticinvoke <org.apache.commons.collections4.list.UnmodifiableList: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.Collection values()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        org.apache.commons.collections4.map.ListOrderedMap$ValuesView $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $r1 = new org.apache.commons.collections4.map.ListOrderedMap$ValuesView;

        specialinvoke $r1.<org.apache.commons.collections4.map.ListOrderedMap$ValuesView: void <init>(org.apache.commons.collections4.map.ListOrderedMap)>(r0);

        return $r1;
    }

    public java.util.List valueList()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        org.apache.commons.collections4.map.ListOrderedMap$ValuesView $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $r1 = new org.apache.commons.collections4.map.ListOrderedMap$ValuesView;

        specialinvoke $r1.<org.apache.commons.collections4.map.ListOrderedMap$ValuesView: void <init>(org.apache.commons.collections4.map.ListOrderedMap)>(r0);

        return $r1;
    }

    public java.util.Set entrySet()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        org.apache.commons.collections4.map.ListOrderedMap$EntrySetView $r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $r1 = new org.apache.commons.collections4.map.ListOrderedMap$EntrySetView;

        $r2 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        specialinvoke $r1.<org.apache.commons.collections4.map.ListOrderedMap$EntrySetView: void <init>(org.apache.commons.collections4.map.ListOrderedMap,java.util.List)>(r0, $r2);

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.Object r4, r5, $r11, $r18, $r19;
        boolean $z0, $z1, z2;
        java.lang.StringBuilder $r6;
        java.util.Set $r8;
        java.lang.String $r10;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "{}";

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        z2 = 1;

        $r8 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r11;

        r4 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        if z2 == 0 goto label3;

        z2 = 0;

        goto label4;

     label3:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label4:
        if r4 != r0 goto label5;

        $r18 = "(this Map)";

        goto label6;

     label5:
        $r18 = r4;

     label6:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        if r5 != r0 goto label7;

        $r19 = "(this Map)";

        goto label8;

     label7:
        $r19 = r5;

     label8:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        goto label2;

     label9:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.Object get(int)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public java.lang.Object getValue(int)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2, $r3;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(java.lang.Object)>($r2);

        return $r3;
    }

    public int indexOf(java.lang.Object)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.lang.Object r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public java.lang.Object setValue(int, java.lang.Object)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        int i0;
        java.lang.Object r1, r2, $r4;
        java.util.List $r3;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        r2 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        return $r4;
    }

    public java.lang.Object put(int, java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.lang.Object r1, r2, r4;
        java.util.Map r3;
        int i0, $i1, $i2, i3;
        java.lang.IndexOutOfBoundsException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11;
        java.util.List $r10, $r13, $r14, $r16, $r17, $r19;
        java.lang.String $r12;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        i3 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        if i3 < 0 goto label1;

        $r13 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $i2 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i3 <= $i2 goto label2;

     label1:
        $r5 = new java.lang.IndexOutOfBoundsException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Size: ");

        $r10 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r12);

        throw $r5;

     label2:
        r3 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.Map decorated()>();

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r16 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        i0 = interfaceinvoke $r16.<java.util.List: int indexOf(java.lang.Object)>(r1);

        $r17 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        interfaceinvoke $r17.<java.util.List: java.lang.Object remove(int)>(i0);

        if i0 >= i3 goto label3;

        i3 = i3 + -1;

     label3:
        $r19 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        interfaceinvoke $r19.<java.util.List: void add(int,java.lang.Object)>(i3, r1);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return r4;

     label4:
        $r14 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        interfaceinvoke $r14.<java.util.List: void add(int,java.lang.Object)>(i3, r1);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return null;
    }

    public java.lang.Object remove(int)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        int i0;
        java.lang.Object $r1, $r2;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object get(int)>(i0);

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.lang.Object remove(java.lang.Object)>($r1);

        return $r2;
    }

    public java.util.List asList()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List keyList()>();

        return $r1;
    }

    public volatile org.apache.commons.collections4.MapIterator mapIterator()
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        org.apache.commons.collections4.OrderedMapIterator $r1;

        r0 := @this: org.apache.commons.collections4.map.ListOrderedMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.map.ListOrderedMap: org.apache.commons.collections4.OrderedMapIterator mapIterator()>();

        return $r1;
    }

    static java.util.List access$000(org.apache.commons.collections4.map.ListOrderedMap)
    {
        org.apache.commons.collections4.map.ListOrderedMap r0;
        java.util.List $r1;

        r0 := @parameter0: org.apache.commons.collections4.map.ListOrderedMap;

        $r1 = r0.<org.apache.commons.collections4.map.ListOrderedMap: java.util.List insertOrder>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections4.map.ListOrderedMap: long serialVersionUID> = 2728177751851003750L;

        return;
    }
}
