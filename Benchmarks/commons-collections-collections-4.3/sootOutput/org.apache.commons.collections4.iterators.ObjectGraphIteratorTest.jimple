public class org.apache.commons.collections4.iterators.ObjectGraphIteratorTest extends org.apache.commons.collections4.iterators.AbstractIteratorTest
{
    protected java.lang.String[] testArray;
    protected java.util.List list1;
    protected java.util.List list2;
    protected java.util.List list3;
    protected java.util.List iteratorList;

    public void <init>(java.lang.String)
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections4.iterators.AbstractIteratorTest: void <init>(java.lang.String)>(r1);

        $r2 = newarray (java.lang.String)[6];

        $r2[0] = "One";

        $r2[1] = "Two";

        $r2[2] = "Three";

        $r2[3] = "Four";

        $r2[4] = "Five";

        $r2[5] = "Six";

        r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.lang.String[] testArray> = $r2;

        r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1> = null;

        r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list2> = null;

        r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list3> = null;

        r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List iteratorList> = null;

        return;
    }

    public void setUp()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        java.util.ArrayList $r1, $r5, $r7, $r10;
        java.util.List $r2, $r3, $r4, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18;
        java.util.Iterator $r13, $r16, $r19;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1> = $r1;

        $r2 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("One");

        $r3 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>("Two");

        $r4 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("Three");

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list2> = $r5;

        $r6 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list2>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>("Four");

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list3> = $r7;

        $r8 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list3>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>("Five");

        $r9 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list3>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("Six");

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List iteratorList> = $r10;

        $r12 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List iteratorList>;

        $r11 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1>;

        $r13 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r15 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List iteratorList>;

        $r14 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list2>;

        $r16 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r18 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List iteratorList>;

        $r17 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list3>;

        $r19 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        return;
    }

    public org.apache.commons.collections4.iterators.ObjectGraphIterator makeEmptyIterator()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        java.util.ArrayList $r2;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r3;
        java.util.Iterator $r4;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

        specialinvoke $r3.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.util.Iterator)>($r4);

        return $r3;
    }

    public org.apache.commons.collections4.iterators.ObjectGraphIterator makeObject()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r1;
        java.util.List $r2;
        java.util.Iterator $r3;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r1 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        $r2 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List iteratorList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r1.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.util.Iterator)>($r3);

        return $r1;
    }

    public void testIteratorConstructor_null1()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r2;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.util.NoSuchElementException $r5;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.util.Iterator)>(null);

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(0, $z0);

     label1:
        interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

     label7:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label4 to label5 with label6;
    }

    public void testIteratorConstructor_null_next()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r3;
        java.util.NoSuchElementException $r5;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r3 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        specialinvoke $r3.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.util.Iterator)>(null);

     label1:
        interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public void testIteratorConstructor_null_remove()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r3 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        specialinvoke $r3.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.util.Iterator)>(null);

     label1:
        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void testIteratorConstructorIteration_Empty()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        java.util.ArrayList $r3;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.IllegalStateException $r7;
        java.util.NoSuchElementException $r8;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r4.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.util.Iterator)>($r5);

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(0, $z0);

     label1:
        interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

     label7:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label4 to label5 with label6;
    }

    public void testIteratorConstructorIteration_Simple()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        java.util.ArrayList $r3;
        java.util.List $r4, $r6, $r8;
        java.util.Iterator $r5, $r7, $r9, $r11;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r10;
        boolean $z3, $z4;
        java.lang.String[] $r13;
        java.lang.String $r14;
        java.lang.Object $r15;
        java.util.NoSuchElementException $r16;
        int i0;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list2>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list3>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        $r11 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r10.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.util.Iterator)>($r11);

        i0 = 0;

     label1:
        if i0 >= 6 goto label2;

        $z4 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z4);

        $r13 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.lang.String[] testArray>;

        $r14 = $r13[i0];

        $r15 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15);

        i0 = i0 + 1;

        goto label1;

     label2:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(0, $z3);

     label3:
        interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

     label6:
        return;

        catch java.util.NoSuchElementException from label3 to label4 with label5;
    }

    public void testIteratorConstructorIteration_SimpleNoHasNext()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        java.util.ArrayList $r3;
        java.util.List $r4, $r6, $r8;
        java.util.Iterator $r5, $r7, $r9, $r11;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r10;
        java.lang.String[] $r13;
        java.lang.String $r14;
        java.lang.Object $r15;
        java.util.NoSuchElementException $r16;
        int i0;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list2>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list3>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        $r11 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r10.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.util.Iterator)>($r11);

        i0 = 0;

     label1:
        if i0 >= 6 goto label2;

        $r13 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.lang.String[] testArray>;

        $r14 = $r13[i0];

        $r15 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15);

        i0 = i0 + 1;

        goto label1;

     label2:
        interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

     label5:
        return;

        catch java.util.NoSuchElementException from label2 to label3 with label4;
    }

    public void testIteratorConstructorIteration_WithEmptyIterators()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        java.util.ArrayList $r3;
        org.apache.commons.collections4.ResettableIterator $r4, $r7, $r10, $r13;
        java.util.List $r5, $r8, $r11;
        java.util.Iterator $r6, $r9, $r12, $r15;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r14;
        boolean $z7, $z8;
        java.lang.String[] $r17;
        java.lang.String $r18;
        java.lang.Object $r19;
        java.util.NoSuchElementException $r20;
        int i0;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator emptyIterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator emptyIterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list2>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator emptyIterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list3>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator emptyIterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        $r15 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r14.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.util.Iterator)>($r15);

        i0 = 0;

     label1:
        if i0 >= 6 goto label2;

        $z8 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z8);

        $r17 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.lang.String[] testArray>;

        $r18 = $r17[i0];

        $r19 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r19);

        i0 = i0 + 1;

        goto label1;

     label2:
        $z7 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(0, $z7);

     label3:
        interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label4:
        goto label6;

     label5:
        $r20 := @caughtexception;

     label6:
        return;

        catch java.util.NoSuchElementException from label3 to label4 with label5;
    }

    public void testIteratorConstructorRemove()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        java.util.ArrayList $r3;
        java.util.List $r4, $r6, $r8, $r12, $r13, $r14;
        java.util.Iterator $r5, $r7, $r9, $r11;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r10;
        boolean $z3;
        int $i0, $i1, $i2, i3;
        java.lang.String[] $r15;
        java.lang.String $r16;
        java.lang.Object $r17;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list2>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list3>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        $r11 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r10.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.util.Iterator)>($r11);

        i3 = 0;

     label1:
        if i3 >= 6 goto label2;

        $r15 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.lang.String[] testArray>;

        $r16 = $r15[i3];

        $r17 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r17);

        interfaceinvoke $r10.<java.util.Iterator: void remove()>();

        i3 = i3 + 1;

        goto label1;

     label2:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(0, $z3);

        $r12 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1>;

        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(int,int)>(0, $i0);

        $r13 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list2>;

        $i1 = interfaceinvoke $r13.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(int,int)>(0, $i1);

        $r14 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list3>;

        $i2 = interfaceinvoke $r14.<java.util.List: int size()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(int,int)>(0, $i2);

        return;
    }

    public void testIteration_IteratorOfIterators()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        java.util.ArrayList $r3;
        java.util.List $r4, $r6, $r8;
        java.util.Iterator $r5, $r7, $r9, $r11;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r10;
        boolean $z3, $z4;
        java.lang.String[] $r12;
        java.lang.String $r13;
        java.lang.Object $r14;
        int i0;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list2>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list3>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        $r11 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r10.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.lang.Object,org.apache.commons.collections4.Transformer)>($r11, null);

        i0 = 0;

     label1:
        if i0 >= 6 goto label2;

        $z4 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z4);

        $r12 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.lang.String[] testArray>;

        $r13 = $r12[i0];

        $r14 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14);

        i0 = i0 + 1;

        goto label1;

     label2:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(0, $z3);

        return;
    }

    public void testIteration_IteratorOfIteratorsWithEmptyIterators()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        java.util.ArrayList $r3;
        org.apache.commons.collections4.ResettableIterator $r4, $r7, $r10, $r13;
        java.util.List $r5, $r8, $r11;
        java.util.Iterator $r6, $r9, $r12, $r15;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r14;
        boolean $z7, $z8;
        java.lang.String[] $r16;
        java.lang.String $r17;
        java.lang.Object $r18;
        int i0;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator emptyIterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list1>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator emptyIterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list2>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator emptyIterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.util.List list3>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator emptyIterator()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        $r15 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r14.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.lang.Object,org.apache.commons.collections4.Transformer)>($r15, null);

        i0 = 0;

     label1:
        if i0 >= 6 goto label2;

        $z8 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z8);

        $r16 = r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: java.lang.String[] testArray>;

        $r17 = $r16[i0];

        $r18 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

        i0 = i0 + 1;

        goto label1;

     label2:
        $z7 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(0, $z7);

        return;
    }

    public void testIteration_RootNull()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r2;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.util.NoSuchElementException $r5;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r2 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.lang.Object,org.apache.commons.collections4.Transformer)>(null, null);

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(0, $z0);

     label1:
        interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

     label7:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label4 to label5 with label6;
    }

    public void testIteration_RootNoTransformer()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest $r4;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.util.NoSuchElementException $r8;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r4 = new org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest;

        specialinvoke $r4.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: void <init>()>();

        $r5 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        specialinvoke $r5.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.lang.Object,org.apache.commons.collections4.Transformer)>($r4, null);

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>($r4, $r6);

        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(0, $z1);

     label1:
        interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public void testIteration_Transformed1()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf r2;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest $r5;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree $r6;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch $r7;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r8;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder $r9;
        boolean $z0, $z1;
        java.lang.Object $r10;
        java.util.NoSuchElementException $r12;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r5 = new org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest;

        specialinvoke $r5.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: void <init>()>();

        $r6 = virtualinvoke $r5.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree addTree()>();

        $r7 = virtualinvoke $r6.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch addBranch()>();

        r2 = virtualinvoke $r7.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf addLeaf()>();

        $r8 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        $r9 = new org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder;

        specialinvoke $r9.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder: void <init>()>();

        specialinvoke $r8.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.lang.Object,org.apache.commons.collections4.Transformer)>($r5, $r9);

        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r10 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>(r2, $r10);

        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(0, $z1);

     label1:
        interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public void testIteration_Transformed2()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch r2, r3, r4, r5;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf r6, r7, r8, r9, r10;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest $r13;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree $r17, $r18, $r19, $r20, $r22;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r23;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r25, $r26, $r27, $r28, $r29;
        java.util.NoSuchElementException $r31;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r13 = new org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest;

        specialinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: void <init>()>();

        virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree addTree()>();

        virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree addTree()>();

        virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree addTree()>();

        $r17 = virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree getTree(int)>(0);

        r2 = virtualinvoke $r17.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch addBranch()>();

        $r18 = virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree getTree(int)>(0);

        r3 = virtualinvoke $r18.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch addBranch()>();

        $r19 = virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree getTree(int)>(2);

        r4 = virtualinvoke $r19.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch addBranch()>();

        $r20 = virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree getTree(int)>(2);

        virtualinvoke $r20.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch addBranch()>();

        $r22 = virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree getTree(int)>(2);

        r5 = virtualinvoke $r22.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch addBranch()>();

        r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf addLeaf()>();

        r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf addLeaf()>();

        r8 = virtualinvoke r3.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf addLeaf()>();

        r9 = virtualinvoke r4.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf addLeaf()>();

        r10 = virtualinvoke r5.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf addLeaf()>();

        $r23 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        $r24 = new org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder;

        specialinvoke $r24.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder: void <init>()>();

        specialinvoke $r23.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.lang.Object,org.apache.commons.collections4.Transformer)>($r13, $r24);

        $z0 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r25 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>(r6, $r25);

        $z1 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r26 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>(r7, $r26);

        $z2 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z2);

        $r27 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>(r8, $r27);

        $z3 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z3);

        $r28 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>(r9, $r28);

        $z4 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z4);

        $r29 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>(r10, $r29);

        $z5 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(0, $z5);

     label1:
        interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r31 := @caughtexception;

     label4:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public void testIteration_Transformed3()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch r2, r3, r4, r5;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf r6, r7, r8, r9, r10;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest $r13;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree $r17, $r18, $r19, $r20, $r21;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r23;
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r25, $r26, $r27, $r28, $r29;
        java.util.NoSuchElementException $r31;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r13 = new org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest;

        specialinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: void <init>()>();

        virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree addTree()>();

        virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree addTree()>();

        virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree addTree()>();

        $r17 = virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree getTree(int)>(1);

        r2 = virtualinvoke $r17.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch addBranch()>();

        $r18 = virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree getTree(int)>(1);

        r3 = virtualinvoke $r18.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch addBranch()>();

        $r19 = virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree getTree(int)>(2);

        r4 = virtualinvoke $r19.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch addBranch()>();

        $r20 = virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree getTree(int)>(2);

        r5 = virtualinvoke $r20.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch addBranch()>();

        $r21 = virtualinvoke $r13.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree getTree(int)>(2);

        virtualinvoke $r21.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch addBranch()>();

        r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf addLeaf()>();

        r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf addLeaf()>();

        r8 = virtualinvoke r3.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf addLeaf()>();

        r9 = virtualinvoke r4.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf addLeaf()>();

        r10 = virtualinvoke r5.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf addLeaf()>();

        $r23 = new org.apache.commons.collections4.iterators.ObjectGraphIterator;

        $r24 = new org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder;

        specialinvoke $r24.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder: void <init>()>();

        specialinvoke $r23.<org.apache.commons.collections4.iterators.ObjectGraphIterator: void <init>(java.lang.Object,org.apache.commons.collections4.Transformer)>($r13, $r24);

        $z0 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r25 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>(r6, $r25);

        $z1 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z1);

        $r26 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>(r7, $r26);

        $z2 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z2);

        $r27 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>(r8, $r27);

        $z3 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z3);

        $r28 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>(r9, $r28);

        $z4 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(1, $z4);

        $r29 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertSame(java.lang.Object,java.lang.Object)>(r10, $r29);

        $z5 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void assertEquals(boolean,boolean)>(0, $z5);

     label1:
        interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: void fail()>();

     label2:
        goto label4;

     label3:
        $r31 := @caughtexception;

     label4:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public volatile java.util.Iterator makeObject()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: org.apache.commons.collections4.iterators.ObjectGraphIterator makeObject()>();

        return $r1;
    }

    public volatile java.util.Iterator makeEmptyIterator()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: org.apache.commons.collections4.iterators.ObjectGraphIterator makeEmptyIterator()>();

        return $r1;
    }

    public volatile java.lang.Object makeObject()
    {
        org.apache.commons.collections4.iterators.ObjectGraphIteratorTest r0;
        org.apache.commons.collections4.iterators.ObjectGraphIterator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.ObjectGraphIteratorTest;

        $r1 = virtualinvoke r0.<org.apache.commons.collections4.iterators.ObjectGraphIteratorTest: org.apache.commons.collections4.iterators.ObjectGraphIterator makeObject()>();

        return $r1;
    }
}
