public class org.apache.commons.collections4.iterators.PushbackIterator extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator iterator;
    private final java.util.Deque items;

    public static org.apache.commons.collections4.iterators.PushbackIterator pushbackIterator(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.commons.collections4.iterators.PushbackIterator r1, $r2;
        boolean $z0;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.util.Iterator;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r3;

     label1:
        $z0 = r0 instanceof org.apache.commons.collections4.iterators.PushbackIterator;

        if $z0 == 0 goto label2;

        r1 = (org.apache.commons.collections4.iterators.PushbackIterator) r0;

        return r1;

     label2:
        $r2 = new org.apache.commons.collections4.iterators.PushbackIterator;

        specialinvoke $r2.<org.apache.commons.collections4.iterators.PushbackIterator: void <init>(java.util.Iterator)>(r0);

        return $r2;
    }

    public void <init>(java.util.Iterator)
    {
        org.apache.commons.collections4.iterators.PushbackIterator r0;
        java.util.Iterator r1;
        java.util.ArrayDeque $r2;

        r0 := @this: org.apache.commons.collections4.iterators.PushbackIterator;

        r1 := @parameter0: java.util.Iterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayDeque;

        specialinvoke $r2.<java.util.ArrayDeque: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.PushbackIterator: java.util.Deque items> = $r2;

        r0.<org.apache.commons.collections4.iterators.PushbackIterator: java.util.Iterator iterator> = r1;

        return;
    }

    public void pushback(java.lang.Object)
    {
        org.apache.commons.collections4.iterators.PushbackIterator r0;
        java.lang.Object r1;
        java.util.Deque $r2;

        r0 := @this: org.apache.commons.collections4.iterators.PushbackIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections4.iterators.PushbackIterator: java.util.Deque items>;

        interfaceinvoke $r2.<java.util.Deque: void push(java.lang.Object)>(r1);

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections4.iterators.PushbackIterator r0;
        java.util.Deque $r1;
        boolean $z0, $z1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.commons.collections4.iterators.PushbackIterator;

        $r1 = r0.<org.apache.commons.collections4.iterators.PushbackIterator: java.util.Deque items>;

        $z0 = interfaceinvoke $r1.<java.util.Deque: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.collections4.iterators.PushbackIterator: java.util.Iterator iterator>;

        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

     label2:
        return $z1;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections4.iterators.PushbackIterator r0;
        java.util.Deque $r1, $r3;
        boolean $z0;
        java.util.Iterator $r2;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.collections4.iterators.PushbackIterator;

        $r1 = r0.<org.apache.commons.collections4.iterators.PushbackIterator: java.util.Deque items>;

        $z0 = interfaceinvoke $r1.<java.util.Deque: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.commons.collections4.iterators.PushbackIterator: java.util.Deque items>;

        $r4 = interfaceinvoke $r3.<java.util.Deque: java.lang.Object pop()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.collections4.iterators.PushbackIterator: java.util.Iterator iterator>;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

     label2:
        return $r4;
    }

    public void remove()
    {
        org.apache.commons.collections4.iterators.PushbackIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.commons.collections4.iterators.PushbackIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
}
