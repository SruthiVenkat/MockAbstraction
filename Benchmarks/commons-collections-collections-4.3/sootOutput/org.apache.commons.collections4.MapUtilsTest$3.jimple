class org.apache.commons.collections4.MapUtilsTest$3 extends java.util.ListResourceBundle
{
    final java.util.Map val$in;
    final org.apache.commons.collections4.MapUtilsTest this$0;

    void <init>(org.apache.commons.collections4.MapUtilsTest, java.util.Map)
    {
        org.apache.commons.collections4.MapUtilsTest$3 r0;
        org.apache.commons.collections4.MapUtilsTest r1;
        java.util.Map r2;

        r0 := @this: org.apache.commons.collections4.MapUtilsTest$3;

        r1 := @parameter0: org.apache.commons.collections4.MapUtilsTest;

        r2 := @parameter1: java.util.Map;

        r0.<org.apache.commons.collections4.MapUtilsTest$3: org.apache.commons.collections4.MapUtilsTest this$0> = r1;

        r0.<org.apache.commons.collections4.MapUtilsTest$3: java.util.Map val$in> = r2;

        specialinvoke r0.<java.util.ListResourceBundle: void <init>()>();

        return;
    }

    public java.lang.Object[][] getContents()
    {
        org.apache.commons.collections4.MapUtilsTest$3 r0;
        java.lang.Object[][] r1;
        java.util.Iterator r2;
        java.lang.Object r3, r4;
        java.util.Map $r5, $r6, $r8;
        int $i0, i1;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object[] $r9, $r10;

        r0 := @this: org.apache.commons.collections4.MapUtilsTest$3;

        $r5 = r0.<org.apache.commons.collections4.MapUtilsTest$3: java.util.Map val$in>;

        $i0 = interfaceinvoke $r5.<java.util.Map: int size()>();

        r1 = newmultiarray (java.lang.Object)[$i0][2];

        $r6 = r0.<org.apache.commons.collections4.MapUtilsTest$3: java.util.Map val$in>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        i1 = 0;

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = r0.<org.apache.commons.collections4.MapUtilsTest$3: java.util.Map val$in>;

        r4 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r9 = r1[i1];

        $r9[0] = r3;

        $r10 = r1[i1];

        $r10[1] = r4;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }
}
