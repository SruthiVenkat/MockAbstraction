class org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet extends org.apache.commons.collections4.map.AbstractHashedMap$EntrySet
{

    protected void <init>(org.apache.commons.collections4.map.AbstractHashedMap)
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet r0;
        org.apache.commons.collections4.map.AbstractHashedMap r1;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet;

        r1 := @parameter0: org.apache.commons.collections4.map.AbstractHashedMap;

        specialinvoke r0.<org.apache.commons.collections4.map.AbstractHashedMap$EntrySet: void <init>(org.apache.commons.collections4.map.AbstractHashedMap)>(r1);

        return;
    }

    public java.lang.Object[] toArray()
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet r0;
        int $i0;
        java.lang.Object[] $r1, $r2;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet: int size()>();

        $r1 = newarray (java.lang.Object)[$i0];

        $r2 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet r0;
        java.lang.Object[] r1, $r6;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.util.ArrayList $r5;
        int $i0;
        boolean $z0;
        java.lang.Object $r7;
        org.apache.commons.collections4.keyvalue.DefaultMapEntry $r8;

        r0 := @this: org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet;

        r1 := @parameter0: java.lang.Object[];

        $r5 = new java.util.ArrayList;

        $i0 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        r3 = virtualinvoke r0.<org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r7;

        $r8 = new org.apache.commons.collections4.keyvalue.DefaultMapEntry;

        specialinvoke $r8.<org.apache.commons.collections4.keyvalue.DefaultMapEntry: void <init>(java.util.Map$Entry)>(r4);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return $r6;
    }
}
