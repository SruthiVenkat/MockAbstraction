public class org.apache.commons.collections4.iterators.CollatingIterator extends java.lang.Object implements java.util.Iterator
{
    private java.util.Comparator comparator;
    private java.util.List iterators;
    private java.util.List values;
    private java.util.BitSet valueSet;
    private int lastReturned;

    public void <init>()
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator,int)>(null, 2);

        return;
    }

    public void <init>(java.util.Comparator)
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.Comparator r1;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator,int)>(r1, 2);

        return;
    }

    public void <init>(java.util.Comparator, int)
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.Comparator r1;
        int i0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        r1 := @parameter0: java.util.Comparator;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.Comparator comparator> = null;

        r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List iterators> = null;

        r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List values> = null;

        r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.BitSet valueSet> = null;

        r0.<org.apache.commons.collections4.iterators.CollatingIterator: int lastReturned> = -1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List iterators> = $r2;

        virtualinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void setComparator(java.util.Comparator)>(r1);

        return;
    }

    public void <init>(java.util.Comparator, java.util.Iterator, java.util.Iterator)
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.Comparator r1;
        java.util.Iterator r2, r3;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: java.util.Iterator;

        r3 := @parameter2: java.util.Iterator;

        specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator,int)>(r1, 2);

        virtualinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>(r2);

        virtualinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>(r3);

        return;
    }

    public void <init>(java.util.Comparator, java.util.Iterator[])
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.Comparator r1;
        java.util.Iterator[] r2;
        int i0, $i1, i2;
        java.util.Iterator r4;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: java.util.Iterator[];

        $i1 = lengthof r2;

        specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator,int)>(r1, $i1);

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r4 = r2[i2];

        virtualinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>(r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(java.util.Comparator, java.util.Collection)
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.Comparator r1;
        java.util.Collection r2;
        java.util.Iterator r3, r4;
        int $i0;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: java.util.Collection;

        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

        specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void <init>(java.util.Comparator,int)>(r1, $i0);

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Iterator) $r5;

        virtualinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void addIterator(java.util.Iterator)>(r4);

        goto label1;

     label2:
        return;
    }

    public void addIterator(java.util.Iterator)
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.Iterator r1;
        java.util.List $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        r1 := @parameter0: java.util.Iterator;

        specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void checkNotStarted()>();

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List iterators>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void setIterator(int, java.util.Iterator)
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        int i0;
        java.util.Iterator r1;
        java.util.List $r2;
        java.lang.NullPointerException $r4;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Iterator;

        specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void checkNotStarted()>();

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List iterators>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return;
    }

    public java.util.List getIterators()
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.List $r1, $r2;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        $r1 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List iterators>;

        $r2 = staticinvoke <org.apache.commons.collections4.list.UnmodifiableList: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.Comparator getComparator()
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.Comparator $r1;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        $r1 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.Comparator comparator>;

        return $r1;
    }

    public void setComparator(java.util.Comparator)
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.Comparator r1;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void checkNotStarted()>();

        r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.Comparator comparator> = r1;

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.BitSet $r1;
        boolean $z0, $z1, $z2;
        java.util.List $r2;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void start()>();

        $r1 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.BitSet valueSet>;

        $z0 = specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: boolean anyValueSet(java.util.BitSet)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List iterators>;

        $z1 = specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: boolean anyHasNext(java.util.List)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.lang.Object next() throws java.util.NoSuchElementException
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;
        java.util.List $r2;
        java.util.NoSuchElementException $r3, $r4;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        $z0 = virtualinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label1:
        i0 = specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: int least()>();

        if i0 != -1 goto label2;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label2:
        $r2 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List values>;

        r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: void clear(int)>(i0);

        r0.<org.apache.commons.collections4.iterators.CollatingIterator: int lastReturned> = i0;

        return r1;
    }

    public void remove()
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        int $i0, $i1;
        java.util.List $r1;
        java.lang.Object $r2;
        java.util.Iterator $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        $i0 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: int lastReturned>;

        if $i0 != -1 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No value can be removed at present");

        throw $r4;

     label1:
        $r1 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List iterators>;

        $i1 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: int lastReturned>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (java.util.Iterator) $r2;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        return;
    }

    public int getIteratorIndex()
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        $i0 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: int lastReturned>;

        if $i0 != -1 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No value has been returned yet");

        throw $r1;

     label1:
        $i1 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: int lastReturned>;

        return $i1;
    }

    private void start()
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.List $r1, $r3, $r5, $r6, $r7;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2, i3;
        java.util.BitSet $r4, $r8;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        $r1 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List values>;

        if $r1 != null goto label2;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List iterators>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List values> = $r2;

        $r4 = new java.util.BitSet;

        $r5 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List iterators>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.BitSet: void <init>(int)>($i1);

        r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.BitSet valueSet> = $r4;

        i3 = 0;

     label1:
        $r6 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List iterators>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i3 >= $i2 goto label2;

        $r7 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List values>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(null);

        $r8 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.BitSet valueSet>;

        virtualinvoke $r8.<java.util.BitSet: void clear(int)>(i3);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private boolean set(int)
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        int i0;
        java.util.Iterator r1;
        java.util.List $r2, $r4, $r7;
        java.lang.Object $r3, $r8;
        boolean $z0;
        java.util.BitSet $r6, $r10;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List iterators>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (java.util.Iterator) $r3;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List values>;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r7.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r8);

        $r10 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.BitSet valueSet>;

        virtualinvoke $r10.<java.util.BitSet: void set(int)>(i0);

        return 1;

     label1:
        $r4 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List values>;

        interfaceinvoke $r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, null);

        $r6 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.BitSet valueSet>;

        virtualinvoke $r6.<java.util.BitSet: void clear(int)>(i0);

        return 0;
    }

    private void clear(int)
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        int i0;
        java.util.List $r1;
        java.util.BitSet $r3;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List values>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, null);

        $r3 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.BitSet valueSet>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(i0);

        return;
    }

    private void checkNotStarted() throws java.lang.IllegalStateException
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.List $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        $r1 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List values>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t do that after next or hasNext has been called.");

        throw $r2;

     label1:
        return;
    }

    private int least()
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.lang.Object r1, r10;
        java.util.List $r2, $r5, $r9;
        int $i0, $i1, i2, i3;
        java.util.BitSet $r3, $r4;
        boolean $z0, $z1;
        java.util.Comparator $r6, $r7;
        java.lang.NullPointerException $r8;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        i2 = -1;

        r10 = null;

        i3 = 0;

     label1:
        $r2 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List values>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i3 >= $i0 goto label6;

        $r3 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.BitSet valueSet>;

        $z0 = virtualinvoke $r3.<java.util.BitSet: boolean get(int)>(i3);

        if $z0 != 0 goto label2;

        specialinvoke r0.<org.apache.commons.collections4.iterators.CollatingIterator: boolean set(int)>(i3);

     label2:
        $r4 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.BitSet valueSet>;

        $z1 = virtualinvoke $r4.<java.util.BitSet: boolean get(int)>(i3);

        if $z1 == 0 goto label5;

        if i2 != -1 goto label3;

        i2 = i3;

        $r9 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List values>;

        r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i3);

        goto label5;

     label3:
        $r5 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.List values>;

        r1 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i3);

        $r6 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.Comparator comparator>;

        if $r6 != null goto label4;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("You must invoke setComparator() to set a comparator first.");

        throw $r8;

     label4:
        $r7 = r0.<org.apache.commons.collections4.iterators.CollatingIterator: java.util.Comparator comparator>;

        $i1 = interfaceinvoke $r7.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r10);

        if $i1 >= 0 goto label5;

        r10 = r1;

        i2 = i3;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        return i2;
    }

    private boolean anyValueSet(java.util.BitSet)
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.BitSet r1;
        int $i0, i1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        r1 := @parameter0: java.util.BitSet;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.util.BitSet: int size()>();

        if i1 >= $i0 goto label3;

        $z0 = virtualinvoke r1.<java.util.BitSet: boolean get(int)>(i1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean anyHasNext(java.util.List)
    {
        org.apache.commons.collections4.iterators.CollatingIterator r0;
        java.util.List r1;
        java.util.Iterator r2, r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.collections4.iterators.CollatingIterator;

        r1 := @parameter0: java.util.List;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Iterator) $r4;

        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }
}
