package io.bootique;

public class RootDriver {
	public static void main(String[] argv) {
		io.bootique.value.Driver class1 = new io.bootique.value.Driver();
		class1.runall();
		io.bootique.config.jackson.merger.Driver class2 = new io.bootique.config.jackson.merger.Driver();
		class2.runall();
		io.bootique.config.jackson.Driver class3 = new io.bootique.config.jackson.Driver();
		class3.runall();
		io.bootique.command.Driver class4 = new io.bootique.command.Driver();
		class4.runall();
		io.bootique.meta.module.Driver class5 = new io.bootique.meta.module.Driver();
		class5.runall();
		io.bootique.names.Driver class6 = new io.bootique.names.Driver();
		class6.runall();
		io.bootique.log.Driver class7 = new io.bootique.log.Driver();
		class7.runall();
		io.bootique.shutdown.Driver class8 = new io.bootique.shutdown.Driver();
		class8.runall();
		io.bootique.it.Driver class9 = new io.bootique.it.Driver();
		class9.runall();
		io.bootique.config.jackson.path.Driver class10 = new io.bootique.config.jackson.path.Driver();
		class10.runall();
		io.bootique.config.jackson.parser.Driver class11 = new io.bootique.config.jackson.parser.Driver();
		class11.runall();
		io.bootique.run.Driver class12 = new io.bootique.run.Driver();
		class12.runall();
		io.bootique.help.Driver class13 = new io.bootique.help.Driver();
		class13.runall();
		io.bootique.meta.application.Driver class14 = new io.bootique.meta.application.Driver();
		class14.runall();
		io.bootique.jopt.Driver class15 = new io.bootique.jopt.Driver();
		class15.runall();
		io.bootique.terminal.Driver class16 = new io.bootique.terminal.Driver();
		class16.runall();
		io.bootique.jackson.Driver class17 = new io.bootique.jackson.Driver();
		class17.runall();
		io.bootique.resource.Driver class18 = new io.bootique.resource.Driver();
		class18.runall();
		io.bootique.unit.Driver class19 = new io.bootique.unit.Driver();
		class19.runall();
		io.bootique.help.config.Driver class20 = new io.bootique.help.config.Driver();
		class20.runall();
		io.bootique.meta.config.Driver class21 = new io.bootique.meta.config.Driver();
		class21.runall();
		io.bootique.Bootique_Configuration_VarsIT class22 = new io.bootique.Bootique_Configuration_VarsIT();
		class22.testOverrideValue();
		class22.testOverrideValueArray();
		class22.testDeclareVar_ConfigPathCaseSensitivity();
		class22.testDeclareVar_NameCaseSensitivity();
		io.bootique.BootiqueExceptionsHandlerIT class23 = new io.bootique.BootiqueExceptionsHandlerIT();
		class23.testCli_BadOption();
		class23.testCli_TwoCommands();
		class23.testConfig_FileNotFound();
		class23.testConfig_BadUrl();
		class23.testConfig_BadUrlProtocol();
		class23.testDI_ProviderMethodBqException();
		class23.testDI_ProviderMethodNPException();
		class23.testModules_CircularOverrides();
		class23.testModules_MultipleOverrides();
		class23.testDI_TwoCommandsSameName();
		io.bootique.Bootique_CliOptionsIT class24 = new io.bootique.Bootique_CliOptionsIT();
		class24.testConfigOption();
		class24.testConfigOptions();
		class24.testHelpOption();
		class24.testHelpOption_Short();
		class24.testNoHelpOption();
		class24.testOverlappingOptions();
		class24.testNameConflict_TwoOptions();
		class24.testNameConflict_TwoCommands();
		class24.testOverlappingOptions_Short();
		class24.testCommandWithOptionNameOverlap();
		class24.testCommand_IllegalShort();
		class24.testCommand_ExplicitShort();
		class24.testOverlappingCommands_IllegalShort();
		class24.testIllegalAbbreviation();
		class24.testOverlappingCommands_Short();
		class24.testDefaultCommandOptions();
		class24.testOption_OverrideConfig();
		class24.testOptionPathAbsentInYAML();
		class24.testOptionsCommandAndModuleOverlapping();
		class24.testOptionsOrder_OnCLI();
		class24.testOptionsWithOverlappingPath_OverrideConfig();
		class24.testOptionWithNotMappedConfigPath();
		class24.testOptionConfigFile_OverrideConfig();
		class24.testMultipleOptionsConfigFiles_OverrideInCLIOrder();
		class24.testOptionDefaultValue();
		class24.testMissingOptionDefaultValue();
		class24.testCommandWithOptionWithDefaultValue();
		io.bootique.Bootique_ConfigurationIT class25 = new io.bootique.Bootique_ConfigurationIT();
		class25.testEmptyConfig();
		class25.testConfigBoundToString();
		class25.testCombineConfigAndEmptyConfig();
		class25.testCombineConfigs();
		class25.testCombineConfigs_ReverseOrder();
		class25.testDIConfig();
		class25.testDIConfig_VsCliOrder();
		class25.testDIOnOptionConfig();
		class25.testDIOnOptionConfig_OverrideWithOption();
		class25.testConfigEnvOverrides_Alias();
		io.bootique.BootiqueStaticsTest class26 = new io.bootique.BootiqueStaticsTest();
		class26.testCreateModule();
		io.bootique.RuntimeModuleMergerTest class27 = new io.bootique.RuntimeModuleMergerTest();
		class27.before();
		class27.testGetModules_Empty();
		class27.testGetModules_One();
		class27.testGetModules_Two();
		class27.testGetModules_Three_Dupes();
		class27.testGetModules_Overrides();
		class27.testGetModules_Overrides_Chain();
		class27.testGetModules_OverrideCycle();
		class27.testGetModules_OverrideIndirectCycle();
		class27.testGetModules_OverrideDupe();
		io.bootique.BaseModuleTest class28 = new io.bootique.BaseModuleTest();
		class28.testModule();
		io.bootique.Bootique_DeclareVarsIT class29 = new io.bootique.Bootique_DeclareVarsIT();
		class29.testInHelp();
		class29.testInHelpDescription();
		class29.testInHelpWithMap();
		class29.testInHelpWithList();
		io.bootique.BQCoreModuleExtenderTest class30 = new io.bootique.BQCoreModuleExtenderTest();
		class30.testSetProperties();
		class30.testSetOptions();
		io.bootique.BootiqueUtilsTest class31 = new io.bootique.BootiqueUtilsTest();
		class31.testToArray();
		class31.testMergeArrays();
		class31.moduleProviderDependencies();
		class31.moduleProviderDependenciesTwoLevels();
		class31.moduleProviderDependenciesCircular();
		io.bootique.Bootique_Configuration_PropertiesIT class32 = new io.bootique.Bootique_Configuration_PropertiesIT();
		class32.testOverride();
		class32.testOverrideNested();
		class32.testOverrideValueArray();
		class32.testOverrideValueArray_Empty();
		class32.testOverrideObjectArray();
		class32.testOverrideObjectArray_AddValue();
		io.bootique.BQModuleIdTest class33 = new io.bootique.BQModuleIdTest();
		class33.testStaticClass();
		class33.testClass();
		class33.testMethodRef();
		class33.testLambda();
		class33.testLambdaFactory();
		class33.testMix();
		io.bootique.ConfigModuleTest class34 = new io.bootique.ConfigModuleTest();
		class34.testDefaultConfigPrefix();
		class34.testConfigPrefix();
		class34.testConfigConfig();
		io.bootique.Bootique_ModuleOverridesIT class35 = new io.bootique.Bootique_ModuleOverridesIT();
		class35.testCreateInjector_Overrides();
		class35.testCreateInjector_Overrides_Multi_Level();
		class35.testCreateInjector_OverridesWithProvider();
		class35.testCreateInjector_Override_TwoLevelTree();
		class35.testCreateInjector_Override_ThreeLevelTree();
		class35.testCreateInjector_Overrides_OriginalModuleServices();
		class35.testCreateInjector_Overrides_Multi_Level_OriginalModuleServices();
		io.bootique.BootiqueIT class36 = new io.bootique.BootiqueIT();
		class36.testExec();
		class36.testExec_Failure();
		class36.testExec_Exception();
		class36.testAutoLoadedProviders();
		class36.testCreateInjector();
		class36.testApp_Collection();
		io.bootique.BootiqueTest class37 = new io.bootique.BootiqueTest();
		class37.before();
		class37.testCreateInjector_Modules_Instances();
		class37.testCreateInjector_Modules_Types();
	}
}