package org.apache.commons.collections4.set;

public class Driver {
	public void runall() {
		org.apache.commons.collections4.set.TransformedNavigableSetTest class1 = new org.apache.commons.collections4.set.TransformedNavigableSetTest();
		class1.testTransformedSet();
		class1.testTransformedSet_decorateTransform();
		org.apache.commons.collections4.set.MapBackedSetTest class2 = new org.apache.commons.collections4.set.MapBackedSetTest();
		org.apache.commons.collections4.set.EmptySetMutator class3 = new org.apache.commons.collections4.set.EmptySetMutator();
		org.apache.commons.collections4.set.UnmodifiableSortedSetTest class4 = new org.apache.commons.collections4.set.UnmodifiableSortedSetTest();
		class4.testUnmodifiable();
		class4.testDecorateFactory();
		class4.testComparator();
		org.apache.commons.collections4.set.UnmodifiableSetTest class5 = new org.apache.commons.collections4.set.UnmodifiableSetTest();
		class5.testUnmodifiable();
		class5.testDecorateFactory();
		org.apache.commons.collections4.set.CompositeSetTest class6 = new org.apache.commons.collections4.set.CompositeSetTest();
		class6.testContains();
		class6.testContainsAll();
		class6.testRemoveAll();
		class6.testRemoveUnderlying();
		class6.testRemoveComposited();
		class6.testFailedCollisionResolution();
		class6.testAddComposited();
		class6.testAddCompositedCollision();
		org.apache.commons.collections4.set.MapBackedSet2Test class7 = new org.apache.commons.collections4.set.MapBackedSet2Test();
		class7.testOrdering();
		class7.testCanonicalEmptyCollectionExists();
		class7.testCanonicalFullCollectionExists();
		org.apache.commons.collections4.set.PredicatedNavigableSetTest class8 = new org.apache.commons.collections4.set.PredicatedNavigableSetTest();
		class8.testGetSet();
		class8.testIllegalAdd();
		class8.testIllegalAddAll();
		class8.testComparator();
		org.apache.commons.collections4.set.ListOrderedSetTest class9 = new org.apache.commons.collections4.set.ListOrderedSetTest();
		class9.testOrdering();
		class9.testListAddRemove();
		class9.testListAddIndexed();
		class9.testListAddReplacing();
		class9.testRetainAll();
		class9.testDuplicates();
		class9.testDecorator();
		org.apache.commons.collections4.set.ListOrderedSet2Test class10 = new org.apache.commons.collections4.set.ListOrderedSet2Test();
		class10.testOrdering();
		class10.testListAddRemove();
		class10.testListAddIndexed();
		org.apache.commons.collections4.set.TransformedSetTest class11 = new org.apache.commons.collections4.set.TransformedSetTest();
		class11.testTransformedSet();
		class11.testTransformedSet_decorateTransform();
		org.apache.commons.collections4.set.PredicatedSortedSetTest class12 = new org.apache.commons.collections4.set.PredicatedSortedSetTest();
		class12.testGetSet();
		class12.testIllegalAdd();
		class12.testIllegalAddAll();
		class12.testComparator();
		org.apache.commons.collections4.set.PredicatedSetTest class13 = new org.apache.commons.collections4.set.PredicatedSetTest();
		class13.testGetSet();
		class13.testIllegalAdd();
		class13.testIllegalAddAll();
		org.apache.commons.collections4.set.TransformedSortedSetTest class14 = new org.apache.commons.collections4.set.TransformedSortedSetTest();
		class14.testTransformedSet();
		class14.testTransformedSet_decorateTransform();
		org.apache.commons.collections4.set.UnmodifiableNavigableSetTest class15 = new org.apache.commons.collections4.set.UnmodifiableNavigableSetTest();
		class15.testUnmodifiable();
		class15.testDecorateFactory();
		class15.testComparator();
	}
}