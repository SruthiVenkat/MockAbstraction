public class org.quartz.SchedulerMetaData extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private java.lang.String schedName;
    private java.lang.String schedInst;
    private java.lang.Class schedClass;
    private boolean isRemote;
    private boolean started;
    private boolean isInStandbyMode;
    private boolean shutdown;
    private java.util.Date startTime;
    private int numJobsExec;
    private java.lang.Class jsClass;
    private boolean jsPersistent;
    private boolean jsClustered;
    private java.lang.Class tpClass;
    private int tpSize;
    private java.lang.String version;

    public void <init>(java.lang.String, java.lang.String, java.lang.Class, boolean, boolean, boolean, boolean, java.util.Date, int, java.lang.Class, boolean, boolean, java.lang.Class, int, java.lang.String)
    {
        org.quartz.SchedulerMetaData r0;
        java.lang.String r1, r2, r7;
        java.lang.Class r3, r5, r6;
        boolean z0, z1, z2, z3, z4, z5;
        java.util.Date r4;
        int i0, i1;

        r0 := @this: org.quartz.SchedulerMetaData;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        z3 := @parameter6: boolean;

        r4 := @parameter7: java.util.Date;

        i0 := @parameter8: int;

        r5 := @parameter9: java.lang.Class;

        z4 := @parameter10: boolean;

        z5 := @parameter11: boolean;

        r6 := @parameter12: java.lang.Class;

        i1 := @parameter13: int;

        r7 := @parameter14: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.SchedulerMetaData: java.lang.String schedName> = r1;

        r0.<org.quartz.SchedulerMetaData: java.lang.String schedInst> = r2;

        r0.<org.quartz.SchedulerMetaData: java.lang.Class schedClass> = r3;

        r0.<org.quartz.SchedulerMetaData: boolean isRemote> = z0;

        r0.<org.quartz.SchedulerMetaData: boolean started> = z1;

        r0.<org.quartz.SchedulerMetaData: boolean isInStandbyMode> = z2;

        r0.<org.quartz.SchedulerMetaData: boolean shutdown> = z3;

        r0.<org.quartz.SchedulerMetaData: java.util.Date startTime> = r4;

        r0.<org.quartz.SchedulerMetaData: int numJobsExec> = i0;

        r0.<org.quartz.SchedulerMetaData: java.lang.Class jsClass> = r5;

        r0.<org.quartz.SchedulerMetaData: boolean jsPersistent> = z4;

        r0.<org.quartz.SchedulerMetaData: boolean jsClustered> = z5;

        r0.<org.quartz.SchedulerMetaData: java.lang.Class tpClass> = r6;

        r0.<org.quartz.SchedulerMetaData: int tpSize> = i1;

        r0.<org.quartz.SchedulerMetaData: java.lang.String version> = r7;

        return;
    }

    public java.lang.String getSchedulerName()
    {
        org.quartz.SchedulerMetaData r0;
        java.lang.String $r1;

        r0 := @this: org.quartz.SchedulerMetaData;

        $r1 = r0.<org.quartz.SchedulerMetaData: java.lang.String schedName>;

        return $r1;
    }

    public java.lang.String getSchedulerInstanceId()
    {
        org.quartz.SchedulerMetaData r0;
        java.lang.String $r1;

        r0 := @this: org.quartz.SchedulerMetaData;

        $r1 = r0.<org.quartz.SchedulerMetaData: java.lang.String schedInst>;

        return $r1;
    }

    public java.lang.Class getSchedulerClass()
    {
        org.quartz.SchedulerMetaData r0;
        java.lang.Class $r1;

        r0 := @this: org.quartz.SchedulerMetaData;

        $r1 = r0.<org.quartz.SchedulerMetaData: java.lang.Class schedClass>;

        return $r1;
    }

    public java.util.Date getRunningSince()
    {
        org.quartz.SchedulerMetaData r0;
        java.util.Date $r1;

        r0 := @this: org.quartz.SchedulerMetaData;

        $r1 = r0.<org.quartz.SchedulerMetaData: java.util.Date startTime>;

        return $r1;
    }

    public int getNumberOfJobsExecuted()
    {
        org.quartz.SchedulerMetaData r0;
        int $i0;

        r0 := @this: org.quartz.SchedulerMetaData;

        $i0 = r0.<org.quartz.SchedulerMetaData: int numJobsExec>;

        return $i0;
    }

    public boolean isSchedulerRemote()
    {
        org.quartz.SchedulerMetaData r0;
        boolean $z0;

        r0 := @this: org.quartz.SchedulerMetaData;

        $z0 = r0.<org.quartz.SchedulerMetaData: boolean isRemote>;

        return $z0;
    }

    public boolean isStarted()
    {
        org.quartz.SchedulerMetaData r0;
        boolean $z0;

        r0 := @this: org.quartz.SchedulerMetaData;

        $z0 = r0.<org.quartz.SchedulerMetaData: boolean started>;

        return $z0;
    }

    public boolean isInStandbyMode()
    {
        org.quartz.SchedulerMetaData r0;
        boolean $z0;

        r0 := @this: org.quartz.SchedulerMetaData;

        $z0 = r0.<org.quartz.SchedulerMetaData: boolean isInStandbyMode>;

        return $z0;
    }

    public boolean isShutdown()
    {
        org.quartz.SchedulerMetaData r0;
        boolean $z0;

        r0 := @this: org.quartz.SchedulerMetaData;

        $z0 = r0.<org.quartz.SchedulerMetaData: boolean shutdown>;

        return $z0;
    }

    public java.lang.Class getJobStoreClass()
    {
        org.quartz.SchedulerMetaData r0;
        java.lang.Class $r1;

        r0 := @this: org.quartz.SchedulerMetaData;

        $r1 = r0.<org.quartz.SchedulerMetaData: java.lang.Class jsClass>;

        return $r1;
    }

    public boolean isJobStoreSupportsPersistence()
    {
        org.quartz.SchedulerMetaData r0;
        boolean $z0;

        r0 := @this: org.quartz.SchedulerMetaData;

        $z0 = r0.<org.quartz.SchedulerMetaData: boolean jsPersistent>;

        return $z0;
    }

    public boolean isJobStoreClustered()
    {
        org.quartz.SchedulerMetaData r0;
        boolean $z0;

        r0 := @this: org.quartz.SchedulerMetaData;

        $z0 = r0.<org.quartz.SchedulerMetaData: boolean jsClustered>;

        return $z0;
    }

    public java.lang.Class getThreadPoolClass()
    {
        org.quartz.SchedulerMetaData r0;
        java.lang.Class $r1;

        r0 := @this: org.quartz.SchedulerMetaData;

        $r1 = r0.<org.quartz.SchedulerMetaData: java.lang.Class tpClass>;

        return $r1;
    }

    public int getThreadPoolSize()
    {
        org.quartz.SchedulerMetaData r0;
        int $i0;

        r0 := @this: org.quartz.SchedulerMetaData;

        $i0 = r0.<org.quartz.SchedulerMetaData: int tpSize>;

        return $i0;
    }

    public java.lang.String getVersion()
    {
        org.quartz.SchedulerMetaData r0;
        java.lang.String $r1;

        r0 := @this: org.quartz.SchedulerMetaData;

        $r1 = r0.<org.quartz.SchedulerMetaData: java.lang.String version>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.quartz.SchedulerMetaData r0;
        java.lang.String $r2;
        org.quartz.SchedulerException $r3;

        r0 := @this: org.quartz.SchedulerMetaData;

     label1:
        $r2 = virtualinvoke r0.<org.quartz.SchedulerMetaData: java.lang.String getSummary()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return "SchedulerMetaData: undeterminable.";

        catch org.quartz.SchedulerException from label1 to label2 with label3;
    }

    public java.lang.String getSummary() throws org.quartz.SchedulerException
    {
        org.quartz.SchedulerMetaData r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6, $r9, $r14, $r36, $r49, $r51;
        java.lang.Class $r13, $r48, $r50;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Date $r39, $r45;
        int $i0, $i1;

        r0 := @this: org.quartz.SchedulerMetaData;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Quartz Scheduler (v");

        $r3 = virtualinvoke r0.<org.quartz.SchedulerMetaData: java.lang.String getVersion()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") \'");

        $r6 = virtualinvoke r0.<org.quartz.SchedulerMetaData: java.lang.String getSchedulerName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' with instanceId \'");

        $r9 = virtualinvoke r0.<org.quartz.SchedulerMetaData: java.lang.String getSchedulerInstanceId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Scheduler class: \'");

        $r13 = virtualinvoke r0.<org.quartz.SchedulerMetaData: java.lang.Class getSchedulerClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $z0 = virtualinvoke r0.<org.quartz.SchedulerMetaData: boolean isSchedulerRemote()>();

        if $z0 == 0 goto label01;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - access via RMI.");

        goto label02;

     label01:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - running locally.");

     label02:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $z1 = virtualinvoke r0.<org.quartz.SchedulerMetaData: boolean isShutdown()>();

        if $z1 != 0 goto label06;

        $r39 = virtualinvoke r0.<org.quartz.SchedulerMetaData: java.util.Date getRunningSince()>();

        if $r39 == null goto label03;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Running since: ");

        $r45 = virtualinvoke r0.<org.quartz.SchedulerMetaData: java.util.Date getRunningSince()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        goto label04;

     label03:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  NOT STARTED.");

     label04:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $z3 = virtualinvoke r0.<org.quartz.SchedulerMetaData: boolean isInStandbyMode()>();

        if $z3 == 0 goto label05;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Currently in standby mode.");

        goto label07;

     label05:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Not currently in standby mode.");

        goto label07;

     label06:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Scheduler has been SHUTDOWN.");

     label07:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Number of jobs executed: ");

        $i0 = virtualinvoke r0.<org.quartz.SchedulerMetaData: int getNumberOfJobsExecuted()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Using thread pool \'");

        $r48 = virtualinvoke r0.<org.quartz.SchedulerMetaData: java.lang.Class getThreadPoolClass()>();

        $r49 = virtualinvoke $r48.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' - with ");

        $i1 = virtualinvoke r0.<org.quartz.SchedulerMetaData: int getThreadPoolSize()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threads.");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Using job-store \'");

        $r50 = virtualinvoke r0.<org.quartz.SchedulerMetaData: java.lang.Class getJobStoreClass()>();

        $r51 = virtualinvoke $r50.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' - which ");

        $z4 = virtualinvoke r0.<org.quartz.SchedulerMetaData: boolean isJobStoreSupportsPersistence()>();

        if $z4 == 0 goto label08;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("supports persistence.");

        goto label09;

     label08:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not support persistence.");

     label09:
        $z2 = virtualinvoke r0.<org.quartz.SchedulerMetaData: boolean isJobStoreClustered()>();

        if $z2 == 0 goto label10;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and is clustered.");

        goto label11;

     label10:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and is not clustered.");

     label11:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r36 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r36;
    }

    public static void <clinit>()
    {
        <org.quartz.SchedulerMetaData: long serialVersionUID> = 4203690002633917647L;

        return;
    }
}
