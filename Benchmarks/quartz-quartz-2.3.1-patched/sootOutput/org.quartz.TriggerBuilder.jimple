public class org.quartz.TriggerBuilder extends java.lang.Object
{
    private org.quartz.TriggerKey key;
    private java.lang.String description;
    private java.util.Date startTime;
    private java.util.Date endTime;
    private int priority;
    private java.lang.String calendarName;
    private org.quartz.JobKey jobKey;
    private org.quartz.JobDataMap jobDataMap;
    private org.quartz.ScheduleBuilder scheduleBuilder;

    private void <init>()
    {
        org.quartz.TriggerBuilder r0;
        java.util.Date $r1;
        org.quartz.JobDataMap $r2;

        r0 := @this: org.quartz.TriggerBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        r0.<org.quartz.TriggerBuilder: java.util.Date startTime> = $r1;

        r0.<org.quartz.TriggerBuilder: int priority> = 5;

        $r2 = new org.quartz.JobDataMap;

        specialinvoke $r2.<org.quartz.JobDataMap: void <init>()>();

        r0.<org.quartz.TriggerBuilder: org.quartz.JobDataMap jobDataMap> = $r2;

        r0.<org.quartz.TriggerBuilder: org.quartz.ScheduleBuilder scheduleBuilder> = null;

        return;
    }

    public static org.quartz.TriggerBuilder newTrigger()
    {
        org.quartz.TriggerBuilder $r0;

        $r0 = new org.quartz.TriggerBuilder;

        specialinvoke $r0.<org.quartz.TriggerBuilder: void <init>()>();

        return $r0;
    }

    public org.quartz.Trigger build()
    {
        org.quartz.TriggerBuilder r0;
        org.quartz.spi.MutableTrigger r1;
        org.quartz.ScheduleBuilder $r2, $r3;
        java.lang.String $r4, $r5, $r15;
        java.util.Date $r6, $r7;
        org.quartz.TriggerKey $r8, $r9, $r14;
        org.quartz.JobKey $r10, $r13;
        int $i0;
        org.quartz.JobDataMap $r11, $r12;
        boolean $z0;
        org.quartz.SimpleScheduleBuilder $r16;

        r0 := @this: org.quartz.TriggerBuilder;

        $r2 = r0.<org.quartz.TriggerBuilder: org.quartz.ScheduleBuilder scheduleBuilder>;

        if $r2 != null goto label1;

        $r16 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>();

        r0.<org.quartz.TriggerBuilder: org.quartz.ScheduleBuilder scheduleBuilder> = $r16;

     label1:
        $r3 = r0.<org.quartz.TriggerBuilder: org.quartz.ScheduleBuilder scheduleBuilder>;

        r1 = virtualinvoke $r3.<org.quartz.ScheduleBuilder: org.quartz.spi.MutableTrigger build()>();

        $r4 = r0.<org.quartz.TriggerBuilder: java.lang.String calendarName>;

        interfaceinvoke r1.<org.quartz.spi.MutableTrigger: void setCalendarName(java.lang.String)>($r4);

        $r5 = r0.<org.quartz.TriggerBuilder: java.lang.String description>;

        interfaceinvoke r1.<org.quartz.spi.MutableTrigger: void setDescription(java.lang.String)>($r5);

        $r6 = r0.<org.quartz.TriggerBuilder: java.util.Date startTime>;

        interfaceinvoke r1.<org.quartz.spi.MutableTrigger: void setStartTime(java.util.Date)>($r6);

        $r7 = r0.<org.quartz.TriggerBuilder: java.util.Date endTime>;

        interfaceinvoke r1.<org.quartz.spi.MutableTrigger: void setEndTime(java.util.Date)>($r7);

        $r8 = r0.<org.quartz.TriggerBuilder: org.quartz.TriggerKey key>;

        if $r8 != null goto label2;

        $r14 = new org.quartz.TriggerKey;

        $r15 = staticinvoke <org.quartz.utils.Key: java.lang.String createUniqueName(java.lang.String)>(null);

        specialinvoke $r14.<org.quartz.TriggerKey: void <init>(java.lang.String,java.lang.String)>($r15, null);

        r0.<org.quartz.TriggerBuilder: org.quartz.TriggerKey key> = $r14;

     label2:
        $r9 = r0.<org.quartz.TriggerBuilder: org.quartz.TriggerKey key>;

        interfaceinvoke r1.<org.quartz.spi.MutableTrigger: void setKey(org.quartz.TriggerKey)>($r9);

        $r10 = r0.<org.quartz.TriggerBuilder: org.quartz.JobKey jobKey>;

        if $r10 == null goto label3;

        $r13 = r0.<org.quartz.TriggerBuilder: org.quartz.JobKey jobKey>;

        interfaceinvoke r1.<org.quartz.spi.MutableTrigger: void setJobKey(org.quartz.JobKey)>($r13);

     label3:
        $i0 = r0.<org.quartz.TriggerBuilder: int priority>;

        interfaceinvoke r1.<org.quartz.spi.MutableTrigger: void setPriority(int)>($i0);

        $r11 = r0.<org.quartz.TriggerBuilder: org.quartz.JobDataMap jobDataMap>;

        $z0 = virtualinvoke $r11.<org.quartz.JobDataMap: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r12 = r0.<org.quartz.TriggerBuilder: org.quartz.JobDataMap jobDataMap>;

        interfaceinvoke r1.<org.quartz.spi.MutableTrigger: void setJobDataMap(org.quartz.JobDataMap)>($r12);

     label4:
        return r1;
    }

    public org.quartz.TriggerBuilder withIdentity(java.lang.String)
    {
        org.quartz.TriggerBuilder r0;
        java.lang.String r1;
        org.quartz.TriggerKey $r2;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.quartz.TriggerKey;

        specialinvoke $r2.<org.quartz.TriggerKey: void <init>(java.lang.String,java.lang.String)>(r1, null);

        r0.<org.quartz.TriggerBuilder: org.quartz.TriggerKey key> = $r2;

        return r0;
    }

    public org.quartz.TriggerBuilder withIdentity(java.lang.String, java.lang.String)
    {
        org.quartz.TriggerBuilder r0;
        java.lang.String r1, r2;
        org.quartz.TriggerKey $r3;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new org.quartz.TriggerKey;

        specialinvoke $r3.<org.quartz.TriggerKey: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r0.<org.quartz.TriggerBuilder: org.quartz.TriggerKey key> = $r3;

        return r0;
    }

    public org.quartz.TriggerBuilder withIdentity(org.quartz.TriggerKey)
    {
        org.quartz.TriggerBuilder r0;
        org.quartz.TriggerKey r1;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: org.quartz.TriggerKey;

        r0.<org.quartz.TriggerBuilder: org.quartz.TriggerKey key> = r1;

        return r0;
    }

    public org.quartz.TriggerBuilder withDescription(java.lang.String)
    {
        org.quartz.TriggerBuilder r0;
        java.lang.String r1;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.quartz.TriggerBuilder: java.lang.String description> = r1;

        return r0;
    }

    public org.quartz.TriggerBuilder withPriority(int)
    {
        org.quartz.TriggerBuilder r0;
        int i0;

        r0 := @this: org.quartz.TriggerBuilder;

        i0 := @parameter0: int;

        r0.<org.quartz.TriggerBuilder: int priority> = i0;

        return r0;
    }

    public org.quartz.TriggerBuilder modifiedByCalendar(java.lang.String)
    {
        org.quartz.TriggerBuilder r0;
        java.lang.String r1;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.quartz.TriggerBuilder: java.lang.String calendarName> = r1;

        return r0;
    }

    public org.quartz.TriggerBuilder startAt(java.util.Date)
    {
        org.quartz.TriggerBuilder r0;
        java.util.Date r1;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.util.Date;

        r0.<org.quartz.TriggerBuilder: java.util.Date startTime> = r1;

        return r0;
    }

    public org.quartz.TriggerBuilder startNow()
    {
        org.quartz.TriggerBuilder r0;
        java.util.Date $r1;

        r0 := @this: org.quartz.TriggerBuilder;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        r0.<org.quartz.TriggerBuilder: java.util.Date startTime> = $r1;

        return r0;
    }

    public org.quartz.TriggerBuilder endAt(java.util.Date)
    {
        org.quartz.TriggerBuilder r0;
        java.util.Date r1;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.util.Date;

        r0.<org.quartz.TriggerBuilder: java.util.Date endTime> = r1;

        return r0;
    }

    public org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)
    {
        org.quartz.TriggerBuilder r0;
        org.quartz.ScheduleBuilder r1;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: org.quartz.ScheduleBuilder;

        r0.<org.quartz.TriggerBuilder: org.quartz.ScheduleBuilder scheduleBuilder> = r1;

        return r0;
    }

    public org.quartz.TriggerBuilder forJob(org.quartz.JobKey)
    {
        org.quartz.TriggerBuilder r0;
        org.quartz.JobKey r1;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: org.quartz.JobKey;

        r0.<org.quartz.TriggerBuilder: org.quartz.JobKey jobKey> = r1;

        return r0;
    }

    public org.quartz.TriggerBuilder forJob(java.lang.String)
    {
        org.quartz.TriggerBuilder r0;
        java.lang.String r1;
        org.quartz.JobKey $r2;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.quartz.JobKey;

        specialinvoke $r2.<org.quartz.JobKey: void <init>(java.lang.String,java.lang.String)>(r1, null);

        r0.<org.quartz.TriggerBuilder: org.quartz.JobKey jobKey> = $r2;

        return r0;
    }

    public org.quartz.TriggerBuilder forJob(java.lang.String, java.lang.String)
    {
        org.quartz.TriggerBuilder r0;
        java.lang.String r1, r2;
        org.quartz.JobKey $r3;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new org.quartz.JobKey;

        specialinvoke $r3.<org.quartz.JobKey: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r0.<org.quartz.TriggerBuilder: org.quartz.JobKey jobKey> = $r3;

        return r0;
    }

    public org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)
    {
        org.quartz.TriggerBuilder r0;
        org.quartz.JobDetail r1;
        org.quartz.JobKey r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: org.quartz.JobDetail;

        r2 = interfaceinvoke r1.<org.quartz.JobDetail: org.quartz.JobKey getKey()>();

        $r3 = virtualinvoke r2.<org.quartz.JobKey: java.lang.String getName()>();

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The given job has not yet had a name assigned to it.");

        throw $r4;

     label1:
        r0.<org.quartz.TriggerBuilder: org.quartz.JobKey jobKey> = r2;

        return r0;
    }

    public org.quartz.TriggerBuilder usingJobData(java.lang.String, java.lang.String)
    {
        org.quartz.TriggerBuilder r0;
        java.lang.String r1, r2;
        org.quartz.JobDataMap $r3;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.quartz.TriggerBuilder: org.quartz.JobDataMap jobDataMap>;

        virtualinvoke $r3.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>(r1, r2);

        return r0;
    }

    public org.quartz.TriggerBuilder usingJobData(java.lang.String, java.lang.Integer)
    {
        org.quartz.TriggerBuilder r0;
        java.lang.String r1;
        java.lang.Integer r2;
        org.quartz.JobDataMap $r3;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Integer;

        $r3 = r0.<org.quartz.TriggerBuilder: org.quartz.JobDataMap jobDataMap>;

        virtualinvoke $r3.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>(r1, r2);

        return r0;
    }

    public org.quartz.TriggerBuilder usingJobData(java.lang.String, java.lang.Long)
    {
        org.quartz.TriggerBuilder r0;
        java.lang.String r1;
        java.lang.Long r2;
        org.quartz.JobDataMap $r3;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Long;

        $r3 = r0.<org.quartz.TriggerBuilder: org.quartz.JobDataMap jobDataMap>;

        virtualinvoke $r3.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>(r1, r2);

        return r0;
    }

    public org.quartz.TriggerBuilder usingJobData(java.lang.String, java.lang.Float)
    {
        org.quartz.TriggerBuilder r0;
        java.lang.String r1;
        java.lang.Float r2;
        org.quartz.JobDataMap $r3;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Float;

        $r3 = r0.<org.quartz.TriggerBuilder: org.quartz.JobDataMap jobDataMap>;

        virtualinvoke $r3.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>(r1, r2);

        return r0;
    }

    public org.quartz.TriggerBuilder usingJobData(java.lang.String, java.lang.Double)
    {
        org.quartz.TriggerBuilder r0;
        java.lang.String r1;
        java.lang.Double r2;
        org.quartz.JobDataMap $r3;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Double;

        $r3 = r0.<org.quartz.TriggerBuilder: org.quartz.JobDataMap jobDataMap>;

        virtualinvoke $r3.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>(r1, r2);

        return r0;
    }

    public org.quartz.TriggerBuilder usingJobData(java.lang.String, java.lang.Boolean)
    {
        org.quartz.TriggerBuilder r0;
        java.lang.String r1;
        java.lang.Boolean r2;
        org.quartz.JobDataMap $r3;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Boolean;

        $r3 = r0.<org.quartz.TriggerBuilder: org.quartz.JobDataMap jobDataMap>;

        virtualinvoke $r3.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>(r1, r2);

        return r0;
    }

    public org.quartz.TriggerBuilder usingJobData(org.quartz.JobDataMap)
    {
        org.quartz.TriggerBuilder r0;
        org.quartz.JobDataMap r1, $r4, $r7;
        java.util.Iterator r2;
        java.lang.String r3;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6, $r8;

        r0 := @this: org.quartz.TriggerBuilder;

        r1 := @parameter0: org.quartz.JobDataMap;

        $r4 = r0.<org.quartz.TriggerBuilder: org.quartz.JobDataMap jobDataMap>;

        $r5 = virtualinvoke $r4.<org.quartz.JobDataMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r6;

        $r7 = r0.<org.quartz.TriggerBuilder: org.quartz.JobDataMap jobDataMap>;

        $r8 = virtualinvoke $r7.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r3);

        virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>(r3, $r8);

        goto label1;

     label2:
        r0.<org.quartz.TriggerBuilder: org.quartz.JobDataMap jobDataMap> = r1;

        return r0;
    }
}
