public class org.quartz.impl.jdbcjobstore.CUBRIDDelegate extends org.quartz.impl.jdbcjobstore.StdJDBCDelegate
{

    public void <init>()
    {
        org.quartz.impl.jdbcjobstore.CUBRIDDelegate r0;

        r0 := @this: org.quartz.impl.jdbcjobstore.CUBRIDDelegate;

        specialinvoke r0.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void <init>()>();

        return;
    }

    protected java.lang.Object getObjectFromBlob(java.sql.ResultSet, java.lang.String) throws java.lang.ClassNotFoundException, java.io.IOException, java.sql.SQLException
    {
        org.quartz.impl.jdbcjobstore.CUBRIDDelegate r0;
        java.sql.ResultSet r1;
        java.lang.String r2;
        java.sql.Blob r4;
        byte[] r5;
        long $l0;
        int $i1, $i2;
        java.io.ByteArrayInputStream $r8;
        java.io.ObjectInputStream $r9;
        java.lang.Throwable $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.impl.jdbcjobstore.CUBRIDDelegate;

        r1 := @parameter0: java.sql.ResultSet;

        r2 := @parameter1: java.lang.String;

        r11 = null;

        r4 = interfaceinvoke r1.<java.sql.ResultSet: java.sql.Blob getBlob(java.lang.String)>(r2);

        $l0 = interfaceinvoke r4.<java.sql.Blob: long length()>();

        $i1 = (int) $l0;

        r5 = interfaceinvoke r4.<java.sql.Blob: byte[] getBytes(long,int)>(1L, $i1);

        if r5 == null goto label5;

        $i2 = lengthof r5;

        if $i2 == 0 goto label5;

        $r8 = new java.io.ByteArrayInputStream;

        specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>(r5);

        $r9 = new java.io.ObjectInputStream;

        specialinvoke $r9.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r8);

     label1:
        r11 = virtualinvoke $r9.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label2:
        virtualinvoke $r9.<java.io.ObjectInputStream: void close()>();

        goto label5;

     label3:
        $r10 := @caughtexception;

     label4:
        virtualinvoke $r9.<java.io.ObjectInputStream: void close()>();

        throw $r10;

     label5:
        return r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected java.lang.Object getJobDataFromBlob(java.sql.ResultSet, java.lang.String) throws java.lang.ClassNotFoundException, java.io.IOException, java.sql.SQLException
    {
        org.quartz.impl.jdbcjobstore.CUBRIDDelegate r0;
        java.sql.ResultSet r1;
        java.lang.String r2;
        java.sql.Blob r4;
        byte[] r5;
        boolean $z0;
        java.lang.Object $r6;
        long $l0;
        int $i1, $i2;
        java.io.ByteArrayInputStream $r7;

        r0 := @this: org.quartz.impl.jdbcjobstore.CUBRIDDelegate;

        r1 := @parameter0: java.sql.ResultSet;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.quartz.impl.jdbcjobstore.CUBRIDDelegate: boolean canUseProperties()>();

        if $z0 == 0 goto label3;

        r4 = interfaceinvoke r1.<java.sql.ResultSet: java.sql.Blob getBlob(java.lang.String)>(r2);

        $l0 = interfaceinvoke r4.<java.sql.Blob: long length()>();

        $i1 = (int) $l0;

        r5 = interfaceinvoke r4.<java.sql.Blob: byte[] getBytes(long,int)>(1L, $i1);

        if r5 == null goto label1;

        $i2 = lengthof r5;

        if $i2 != 0 goto label2;

     label1:
        return null;

     label2:
        $r7 = new java.io.ByteArrayInputStream;

        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>(r5);

        return $r7;

     label3:
        $r6 = virtualinvoke r0.<org.quartz.impl.jdbcjobstore.CUBRIDDelegate: java.lang.Object getObjectFromBlob(java.sql.ResultSet,java.lang.String)>(r1, r2);

        return $r6;
    }

    protected void setBytes(java.sql.PreparedStatement, int, java.io.ByteArrayOutputStream) throws java.sql.SQLException
    {
        org.quartz.impl.jdbcjobstore.CUBRIDDelegate r0;
        java.sql.PreparedStatement r1;
        int i0;
        java.io.ByteArrayOutputStream r2;
        java.sql.Connection r3, $r7;
        java.lang.reflect.Method r4;
        java.lang.Object[] r5;
        java.sql.Blob r6, r16;
        boolean $z0;
        java.lang.Class[] $r8;
        java.lang.Class $r9;
        java.lang.Object $r10, $r11;
        java.lang.Exception $r12;
        byte[] r13;
        com.mchange.v2.c3p0.C3P0ProxyConnection r14;

        r0 := @this: org.quartz.impl.jdbcjobstore.CUBRIDDelegate;

        r1 := @parameter0: java.sql.PreparedStatement;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.ByteArrayOutputStream;

        if r2 != null goto label1;

        r13 = newarray (byte)[0];

        goto label2;

     label1:
        r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        r3 = interfaceinvoke r1.<java.sql.PreparedStatement: java.sql.Connection getConnection()>();

        $z0 = r3 instanceof com.mchange.v2.c3p0.C3P0ProxyConnection;

        if $z0 == 0 goto label6;

     label3:
        r14 = (com.mchange.v2.c3p0.C3P0ProxyConnection) r3;

        $r9 = class "Ljava/sql/Connection;";

        $r8 = newarray (java.lang.Class)[0];

        r4 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("createBlob", $r8);

        r5 = newarray (java.lang.Object)[0];

        $r10 = <com.mchange.v2.c3p0.C3P0ProxyConnection: java.lang.Object RAW_CONNECTION>;

        $r11 = interfaceinvoke r14.<com.mchange.v2.c3p0.C3P0ProxyConnection: java.lang.Object rawConnectionOperation(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>(r4, $r10, r5);

        r6 = (java.sql.Blob) $r11;

        interfaceinvoke r6.<java.sql.Blob: int setBytes(long,byte[])>(1L, r13);

        interfaceinvoke r1.<java.sql.PreparedStatement: void setBlob(int,java.sql.Blob)>(i0, r6);

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Exception: void printStackTrace()>();

        goto label7;

     label6:
        $r7 = interfaceinvoke r1.<java.sql.PreparedStatement: java.sql.Connection getConnection()>();

        r16 = interfaceinvoke $r7.<java.sql.Connection: java.sql.Blob createBlob()>();

        interfaceinvoke r16.<java.sql.Blob: int setBytes(long,byte[])>(1L, r13);

        interfaceinvoke r1.<java.sql.PreparedStatement: void setBlob(int,java.sql.Blob)>(i0, r16);

     label7:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }
}
