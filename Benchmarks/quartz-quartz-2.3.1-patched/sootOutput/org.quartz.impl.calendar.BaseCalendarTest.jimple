public class org.quartz.impl.calendar.BaseCalendarTest extends junit.framework.TestCase
{

    public void <init>()
    {
        org.quartz.impl.calendar.BaseCalendarTest r0;

        r0 := @this: org.quartz.impl.calendar.BaseCalendarTest;

        specialinvoke r0.<junit.framework.TestCase: void <init>()>();

        return;
    }

    public void testClone()
    {
        org.quartz.impl.calendar.BaseCalendarTest r0;
        org.quartz.impl.calendar.BaseCalendar r2, $r3;
        java.lang.Object $r4;
        java.lang.String $r5, $r6;
        org.quartz.Calendar $r7, $r8;
        java.util.TimeZone $r9, $r10;

        r0 := @this: org.quartz.impl.calendar.BaseCalendarTest;

        $r3 = new org.quartz.impl.calendar.BaseCalendar;

        specialinvoke $r3.<org.quartz.impl.calendar.BaseCalendar: void <init>()>();

        $r4 = virtualinvoke $r3.<org.quartz.impl.calendar.BaseCalendar: java.lang.Object clone()>();

        r2 = (org.quartz.impl.calendar.BaseCalendar) $r4;

        $r5 = virtualinvoke $r3.<org.quartz.impl.calendar.BaseCalendar: java.lang.String getDescription()>();

        $r6 = virtualinvoke r2.<org.quartz.impl.calendar.BaseCalendar: java.lang.String getDescription()>();

        staticinvoke <org.quartz.impl.calendar.BaseCalendarTest: void assertEquals(java.lang.String,java.lang.String)>($r5, $r6);

        $r7 = virtualinvoke $r3.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar getBaseCalendar()>();

        $r8 = virtualinvoke r2.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar getBaseCalendar()>();

        staticinvoke <org.quartz.impl.calendar.BaseCalendarTest: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8);

        $r9 = virtualinvoke $r3.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone getTimeZone()>();

        $r10 = virtualinvoke r2.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone getTimeZone()>();

        staticinvoke <org.quartz.impl.calendar.BaseCalendarTest: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10);

        return;
    }
}
