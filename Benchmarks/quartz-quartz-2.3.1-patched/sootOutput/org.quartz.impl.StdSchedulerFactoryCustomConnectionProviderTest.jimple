public class org.quartz.impl.StdSchedulerFactoryCustomConnectionProviderTest extends java.lang.Object
{

    public void <init>()
    {
        org.quartz.impl.StdSchedulerFactoryCustomConnectionProviderTest r0;

        r0 := @this: org.quartz.impl.StdSchedulerFactoryCustomConnectionProviderTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void loadAndInitializeCustomConnectionProviderTest() throws org.quartz.SchedulerException, java.lang.InterruptedException
    {
        org.quartz.impl.StdSchedulerFactoryCustomConnectionProviderTest r0;
        org.quartz.Scheduler r2;
        org.quartz.impl.StdSchedulerFactory $r4;
        java.util.List $r5, $r7, $r9;
        java.lang.Object $r6, $r8, $r10;
        java.lang.Exception $r11;
        java.lang.Throwable $r12, $r13;
        java.lang.Class $r14;
        java.lang.String $r15;

        r0 := @this: org.quartz.impl.StdSchedulerFactoryCustomConnectionProviderTest;

        $r4 = new org.quartz.impl.StdSchedulerFactory;

        specialinvoke $r4.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/properties/quartzCustomConnectionProvider.properties");

        r2 = virtualinvoke $r4.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>();

     label1:
        interfaceinvoke r2.<org.quartz.Scheduler: void start()>();

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<java.lang.Exception: java.lang.Throwable getCause()>();

        $r13 = virtualinvoke $r12.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("org.quartz.impl.MockSQLException", $r15);

     label4:
        $r5 = <org.quartz.impl.MockConnectionProvider: java.util.List methodsCalled>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("setCustomProperty(customValue)", $r6);

        $r7 = <org.quartz.impl.MockConnectionProvider: java.util.List methodsCalled>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("initialize", $r8);

        $r9 = <org.quartz.impl.MockConnectionProvider: java.util.List methodsCalled>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("getConnection", $r10);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
