public class org.quartz.impl.matchers.EverythingMatcher extends java.lang.Object implements org.quartz.Matcher
{
    private static final long serialVersionUID;

    protected void <init>()
    {
        org.quartz.impl.matchers.EverythingMatcher r0;

        r0 := @this: org.quartz.impl.matchers.EverythingMatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.quartz.impl.matchers.EverythingMatcher allJobs()
    {
        org.quartz.impl.matchers.EverythingMatcher $r0;

        $r0 = new org.quartz.impl.matchers.EverythingMatcher;

        specialinvoke $r0.<org.quartz.impl.matchers.EverythingMatcher: void <init>()>();

        return $r0;
    }

    public static org.quartz.impl.matchers.EverythingMatcher allTriggers()
    {
        org.quartz.impl.matchers.EverythingMatcher $r0;

        $r0 = new org.quartz.impl.matchers.EverythingMatcher;

        specialinvoke $r0.<org.quartz.impl.matchers.EverythingMatcher: void <init>()>();

        return $r0;
    }

    public boolean isMatch(org.quartz.utils.Key)
    {
        org.quartz.impl.matchers.EverythingMatcher r0;
        org.quartz.utils.Key r1;

        r0 := @this: org.quartz.impl.matchers.EverythingMatcher;

        r1 := @parameter0: org.quartz.utils.Key;

        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        org.quartz.impl.matchers.EverythingMatcher r0;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: org.quartz.impl.matchers.EverythingMatcher;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public int hashCode()
    {
        org.quartz.impl.matchers.EverythingMatcher r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: org.quartz.impl.matchers.EverythingMatcher;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public static void <clinit>()
    {
        <org.quartz.impl.matchers.EverythingMatcher: long serialVersionUID> = 202300056681974058L;

        return;
    }
}
