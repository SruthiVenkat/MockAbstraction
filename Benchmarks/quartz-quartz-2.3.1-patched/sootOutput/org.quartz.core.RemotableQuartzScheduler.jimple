public interface  org.quartz.core.RemotableQuartzScheduler extends java.lang.Object implements java.rmi.Remote
{

    public abstract java.lang.String getSchedulerName() throws java.rmi.RemoteException;

    public abstract java.lang.String getSchedulerInstanceId() throws java.rmi.RemoteException;

    public abstract org.quartz.SchedulerContext getSchedulerContext() throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void start() throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void startDelayed(int) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void standby() throws java.rmi.RemoteException;

    public abstract boolean isInStandbyMode() throws java.rmi.RemoteException;

    public abstract void shutdown() throws java.rmi.RemoteException;

    public abstract void shutdown(boolean) throws java.rmi.RemoteException;

    public abstract boolean isShutdown() throws java.rmi.RemoteException;

    public abstract java.util.Date runningSince() throws java.rmi.RemoteException;

    public abstract java.lang.String getVersion() throws java.rmi.RemoteException;

    public abstract int numJobsExecuted() throws java.rmi.RemoteException;

    public abstract java.lang.Class getJobStoreClass() throws java.rmi.RemoteException;

    public abstract boolean supportsPersistence() throws java.rmi.RemoteException;

    public abstract boolean isClustered() throws java.rmi.RemoteException;

    public abstract java.lang.Class getThreadPoolClass() throws java.rmi.RemoteException;

    public abstract int getThreadPoolSize() throws java.rmi.RemoteException;

    public abstract void clear() throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract java.util.List getCurrentlyExecutingJobs() throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract java.util.Date scheduleJob(org.quartz.JobDetail, org.quartz.Trigger) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract java.util.Date scheduleJob(org.quartz.Trigger) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void addJob(org.quartz.JobDetail, boolean) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void addJob(org.quartz.JobDetail, boolean, boolean) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract boolean deleteJob(org.quartz.JobKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract boolean unscheduleJob(org.quartz.TriggerKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract java.util.Date rescheduleJob(org.quartz.TriggerKey, org.quartz.Trigger) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void triggerJob(org.quartz.JobKey, org.quartz.JobDataMap) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void triggerJob(org.quartz.spi.OperableTrigger) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void pauseTrigger(org.quartz.TriggerKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void pauseTriggers(org.quartz.impl.matchers.GroupMatcher) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void pauseJob(org.quartz.JobKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void pauseJobs(org.quartz.impl.matchers.GroupMatcher) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void resumeTrigger(org.quartz.TriggerKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void resumeTriggers(org.quartz.impl.matchers.GroupMatcher) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract java.util.Set getPausedTriggerGroups() throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void resumeJob(org.quartz.JobKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void resumeJobs(org.quartz.impl.matchers.GroupMatcher) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void pauseAll() throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void resumeAll() throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract java.util.List getJobGroupNames() throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract java.util.List getTriggersOfJob(org.quartz.JobKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract java.util.List getTriggerGroupNames() throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract org.quartz.JobDetail getJobDetail(org.quartz.JobKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract org.quartz.Trigger getTrigger(org.quartz.TriggerKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void resetTriggerFromErrorState(org.quartz.TriggerKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void addCalendar(java.lang.String, org.quartz.Calendar, boolean, boolean) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract boolean deleteCalendar(java.lang.String) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract org.quartz.Calendar getCalendar(java.lang.String) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract java.util.List getCalendarNames() throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract boolean interrupt(org.quartz.JobKey) throws org.quartz.UnableToInterruptJobException, java.rmi.RemoteException;

    public abstract boolean interrupt(java.lang.String) throws org.quartz.UnableToInterruptJobException, java.rmi.RemoteException;

    public abstract boolean checkExists(org.quartz.JobKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract boolean checkExists(org.quartz.TriggerKey) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract boolean deleteJobs(java.util.List) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void scheduleJobs(java.util.Map, boolean) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract void scheduleJob(org.quartz.JobDetail, java.util.Set, boolean) throws org.quartz.SchedulerException, java.rmi.RemoteException;

    public abstract boolean unscheduleJobs(java.util.List) throws org.quartz.SchedulerException, java.rmi.RemoteException;
}
