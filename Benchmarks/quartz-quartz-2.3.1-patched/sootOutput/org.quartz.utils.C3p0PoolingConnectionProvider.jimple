public class org.quartz.utils.C3p0PoolingConnectionProvider extends java.lang.Object implements org.quartz.utils.PoolingConnectionProvider
{
    public static final java.lang.String DB_MAX_CACHED_STATEMENTS_PER_CONNECTION;
    public static final java.lang.String DB_IDLE_VALIDATION_SECONDS;
    public static final java.lang.String DB_VALIDATE_ON_CHECKOUT;
    public static final java.lang.String DB_DISCARD_IDLE_CONNECTIONS_SECONDS;
    public static final int DEFAULT_DB_MAX_CACHED_STATEMENTS_PER_CONNECTION;
    private com.mchange.v2.c3p0.ComboPooledDataSource datasource;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String) throws java.sql.SQLException, org.quartz.SchedulerException
    {
        org.quartz.utils.C3p0PoolingConnectionProvider r0;
        java.lang.String r1, r2, r3, r4, r5;
        int i0;

        r0 := @this: org.quartz.utils.C3p0PoolingConnectionProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r5 := @parameter5: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<org.quartz.utils.C3p0PoolingConnectionProvider: void initialize(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,boolean,int,int)>(r1, r2, r3, r4, i0, 120, r5, 0, 50, 0);

        return;
    }

    public void <init>(java.util.Properties) throws org.quartz.SchedulerException, java.sql.SQLException
    {
        org.quartz.utils.C3p0PoolingConnectionProvider r0;
        java.util.Properties r1;
        org.quartz.utils.PropertiesParser $r3;
        java.lang.String $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: org.quartz.utils.C3p0PoolingConnectionProvider;

        r1 := @parameter0: java.util.Properties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new org.quartz.utils.PropertiesParser;

        specialinvoke $r3.<org.quartz.utils.PropertiesParser: void <init>(java.util.Properties)>(r1);

        $r4 = virtualinvoke $r3.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("driver");

        $r5 = virtualinvoke $r3.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("URL");

        $r6 = virtualinvoke $r3.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("user", "");

        $r7 = virtualinvoke $r3.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("password", "");

        $i0 = virtualinvoke $r3.<org.quartz.utils.PropertiesParser: int getIntProperty(java.lang.String,int)>("maxConnections", 10);

        $i1 = virtualinvoke $r3.<org.quartz.utils.PropertiesParser: int getIntProperty(java.lang.String,int)>("maxCachedStatementsPerConnection", 120);

        $r8 = virtualinvoke $r3.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("validationQuery");

        $z0 = virtualinvoke $r3.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String,boolean)>("validateOnCheckout", 0);

        $i2 = virtualinvoke $r3.<org.quartz.utils.PropertiesParser: int getIntProperty(java.lang.String,int)>("idleConnectionValidationSeconds", 50);

        $i3 = virtualinvoke $r3.<org.quartz.utils.PropertiesParser: int getIntProperty(java.lang.String,int)>("maxIdleTime", 0);

        specialinvoke r0.<org.quartz.utils.C3p0PoolingConnectionProvider: void initialize(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,boolean,int,int)>($r4, $r5, $r6, $r7, $i0, $i1, $r8, $z0, $i2, $i3);

        return;
    }

    private void initialize(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.lang.String, boolean, int, int) throws java.sql.SQLException, org.quartz.SchedulerException
    {
        org.quartz.utils.C3p0PoolingConnectionProvider r0;
        java.lang.String r1, r2, r3, r4, r5, $r25, $r31, $r37, $r39;
        int i0, i1, i2, i3;
        boolean z0;
        com.mchange.v2.c3p0.ComboPooledDataSource $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        java.sql.SQLException $r20, $r26, $r32;
        java.lang.StringBuilder $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r30, $r35, $r36, $r38;
        java.beans.PropertyVetoException $r33;
        org.quartz.SchedulerException $r34;

        r0 := @this: org.quartz.utils.C3p0PoolingConnectionProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        r5 := @parameter6: java.lang.String;

        z0 := @parameter7: boolean;

        i2 := @parameter8: int;

        i3 := @parameter9: int;

        if r2 != null goto label01;

        $r32 = new java.sql.SQLException;

        specialinvoke $r32.<java.sql.SQLException: void <init>(java.lang.String)>("DBPool could not be created: DB URL cannot be null");

        throw $r32;

     label01:
        if r1 != null goto label02;

        $r26 = new java.sql.SQLException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DBPool \'");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be created: DB driver class name cannot be null!");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.sql.SQLException: void <init>(java.lang.String)>($r31);

        throw $r26;

     label02:
        if i0 >= 0 goto label03;

        $r20 = new java.sql.SQLException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DBPool \'");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be created: Max connections must be greater than zero!");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.sql.SQLException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label03:
        $r7 = new com.mchange.v2.c3p0.ComboPooledDataSource;

        specialinvoke $r7.<com.mchange.v2.c3p0.ComboPooledDataSource: void <init>()>();

        r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource> = $r7;

     label04:
        $r8 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r8.<com.mchange.v2.c3p0.ComboPooledDataSource: void setDriverClass(java.lang.String)>(r1);

     label05:
        goto label07;

     label06:
        $r33 := @caughtexception;

        $r34 = new org.quartz.SchedulerException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem setting driver class name on datasource: ");

        $r37 = virtualinvoke $r33.<java.beans.PropertyVetoException: java.lang.String getMessage()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r39, $r33);

        throw $r34;

     label07:
        $r9 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r9.<com.mchange.v2.c3p0.ComboPooledDataSource: void setJdbcUrl(java.lang.String)>(r2);

        $r10 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r10.<com.mchange.v2.c3p0.ComboPooledDataSource: void setUser(java.lang.String)>(r3);

        $r11 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r11.<com.mchange.v2.c3p0.ComboPooledDataSource: void setPassword(java.lang.String)>(r4);

        $r12 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r12.<com.mchange.v2.c3p0.ComboPooledDataSource: void setMaxPoolSize(int)>(i0);

        $r13 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r13.<com.mchange.v2.c3p0.ComboPooledDataSource: void setMinPoolSize(int)>(1);

        $r14 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r14.<com.mchange.v2.c3p0.ComboPooledDataSource: void setMaxIdleTime(int)>(i3);

        $r15 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r15.<com.mchange.v2.c3p0.ComboPooledDataSource: void setMaxStatementsPerConnection(int)>(i1);

        if r5 == null goto label10;

        $r16 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r16.<com.mchange.v2.c3p0.ComboPooledDataSource: void setPreferredTestQuery(java.lang.String)>(r5);

        if z0 != 0 goto label08;

        $r19 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r19.<com.mchange.v2.c3p0.ComboPooledDataSource: void setTestConnectionOnCheckin(boolean)>(1);

        goto label09;

     label08:
        $r17 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r17.<com.mchange.v2.c3p0.ComboPooledDataSource: void setTestConnectionOnCheckout(boolean)>(1);

     label09:
        $r18 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r18.<com.mchange.v2.c3p0.ComboPooledDataSource: void setIdleConnectionTestPeriod(int)>(i2);

     label10:
        return;

        catch java.beans.PropertyVetoException from label04 to label05 with label06;
    }

    public com.mchange.v2.c3p0.ComboPooledDataSource getDataSource()
    {
        org.quartz.utils.C3p0PoolingConnectionProvider r0;
        com.mchange.v2.c3p0.ComboPooledDataSource $r1;

        r0 := @this: org.quartz.utils.C3p0PoolingConnectionProvider;

        $r1 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        return $r1;
    }

    public java.sql.Connection getConnection() throws java.sql.SQLException
    {
        org.quartz.utils.C3p0PoolingConnectionProvider r0;
        com.mchange.v2.c3p0.ComboPooledDataSource $r1;
        java.sql.Connection $r2;

        r0 := @this: org.quartz.utils.C3p0PoolingConnectionProvider;

        $r1 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        $r2 = virtualinvoke $r1.<com.mchange.v2.c3p0.ComboPooledDataSource: java.sql.Connection getConnection()>();

        return $r2;
    }

    public void shutdown() throws java.sql.SQLException
    {
        org.quartz.utils.C3p0PoolingConnectionProvider r0;
        com.mchange.v2.c3p0.ComboPooledDataSource $r1;

        r0 := @this: org.quartz.utils.C3p0PoolingConnectionProvider;

        $r1 = r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource datasource>;

        virtualinvoke $r1.<com.mchange.v2.c3p0.ComboPooledDataSource: void close()>();

        return;
    }

    public void initialize() throws java.sql.SQLException
    {
        org.quartz.utils.C3p0PoolingConnectionProvider r0;

        r0 := @this: org.quartz.utils.C3p0PoolingConnectionProvider;

        return;
    }

    public volatile javax.sql.DataSource getDataSource()
    {
        org.quartz.utils.C3p0PoolingConnectionProvider r0;
        com.mchange.v2.c3p0.ComboPooledDataSource $r1;

        r0 := @this: org.quartz.utils.C3p0PoolingConnectionProvider;

        $r1 = virtualinvoke r0.<org.quartz.utils.C3p0PoolingConnectionProvider: com.mchange.v2.c3p0.ComboPooledDataSource getDataSource()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.quartz.utils.C3p0PoolingConnectionProvider: int DEFAULT_DB_MAX_CACHED_STATEMENTS_PER_CONNECTION> = 120;

        <org.quartz.utils.C3p0PoolingConnectionProvider: java.lang.String DB_DISCARD_IDLE_CONNECTIONS_SECONDS> = "maxIdleTime";

        <org.quartz.utils.C3p0PoolingConnectionProvider: java.lang.String DB_VALIDATE_ON_CHECKOUT> = "validateOnCheckout";

        <org.quartz.utils.C3p0PoolingConnectionProvider: java.lang.String DB_IDLE_VALIDATION_SECONDS> = "idleConnectionValidationSeconds";

        <org.quartz.utils.C3p0PoolingConnectionProvider: java.lang.String DB_MAX_CACHED_STATEMENTS_PER_CONNECTION> = "maxCachedStatementsPerConnection";

        return;
    }
}
