public class org.quartz.core.ListenerManagerImpl extends java.lang.Object implements org.quartz.ListenerManager
{
    private java.util.Map globalJobListeners;
    private java.util.Map globalTriggerListeners;
    private java.util.Map globalJobListenersMatchers;
    private java.util.Map globalTriggerListenersMatchers;
    private java.util.ArrayList schedulerListeners;

    public void <init>()
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.util.LinkedHashMap $r1, $r2, $r3, $r4;
        java.util.ArrayList $r5;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int)>(10);

        r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int)>(10);

        r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners> = $r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>(int)>(10);

        r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListenersMatchers> = $r3;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>(int)>(10);

        r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListenersMatchers> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(10);

        r0.<org.quartz.core.ListenerManagerImpl: java.util.ArrayList schedulerListeners> = $r5;

        return;
    }

    public transient void addJobListener(org.quartz.JobListener, org.quartz.Matcher[])
    {
        org.quartz.core.ListenerManagerImpl r0;
        org.quartz.JobListener r1;
        org.quartz.Matcher[] r2;
        java.util.List $r3;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: org.quartz.JobListener;

        r2 := @parameter1: org.quartz.Matcher[];

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        virtualinvoke r0.<org.quartz.core.ListenerManagerImpl: void addJobListener(org.quartz.JobListener,java.util.List)>(r1, $r3);

        return;
    }

    public void addJobListener(org.quartz.JobListener, java.util.List)
    {
        org.quartz.core.ListenerManagerImpl r0;
        org.quartz.JobListener r1;
        java.util.List r2;
        java.lang.String $r6, $r8, $r11, $r18;
        java.lang.IllegalArgumentException $r7;
        int $i0, $i1;
        java.util.Map $r9, $r10, $r17;
        java.util.LinkedList $r13;
        org.quartz.impl.matchers.EverythingMatcher $r14;
        java.lang.Throwable $r16;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: org.quartz.JobListener;

        r2 := @parameter1: java.util.List;

        $r6 = interfaceinvoke r1.<org.quartz.JobListener: java.lang.String getName()>();

        if $r6 == null goto label1;

        $r8 = interfaceinvoke r1.<org.quartz.JobListener: java.lang.String getName()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("JobListener name cannot be empty.");

        throw $r7;

     label2:
        $r9 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        entermonitor $r9;

     label3:
        $r10 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        $r11 = interfaceinvoke r1.<org.quartz.JobListener: java.lang.String getName()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r1);

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        if r2 == null goto label4;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 <= 0 goto label4;

        virtualinvoke $r13.<java.util.LinkedList: boolean addAll(java.util.Collection)>(r2);

        goto label5;

     label4:
        $r14 = staticinvoke <org.quartz.impl.matchers.EverythingMatcher: org.quartz.impl.matchers.EverythingMatcher allJobs()>();

        virtualinvoke $r13.<java.util.LinkedList: boolean add(java.lang.Object)>($r14);

     label5:
        $r17 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListenersMatchers>;

        $r18 = interfaceinvoke r1.<org.quartz.JobListener: java.lang.String getName()>();

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r13);

        exitmonitor $r9;

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;

        exitmonitor $r9;

     label8:
        throw $r16;

     label9:
        return;

        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void addJobListener(org.quartz.JobListener)
    {
        org.quartz.core.ListenerManagerImpl r0;
        org.quartz.JobListener r1;
        org.quartz.impl.matchers.EverythingMatcher $r2;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: org.quartz.JobListener;

        $r2 = staticinvoke <org.quartz.impl.matchers.EverythingMatcher: org.quartz.impl.matchers.EverythingMatcher allJobs()>();

        virtualinvoke r0.<org.quartz.core.ListenerManagerImpl: void addJobListener(org.quartz.JobListener,org.quartz.Matcher)>(r1, $r2);

        return;
    }

    public void addJobListener(org.quartz.JobListener, org.quartz.Matcher)
    {
        org.quartz.core.ListenerManagerImpl r0;
        org.quartz.JobListener r1;
        org.quartz.Matcher r2;
        java.lang.String $r6, $r8, $r11, $r16;
        java.lang.IllegalArgumentException $r7;
        int $i0;
        java.util.Map $r9, $r10, $r15;
        java.util.LinkedList $r13;
        org.quartz.impl.matchers.EverythingMatcher $r14;
        java.lang.Throwable $r18;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: org.quartz.JobListener;

        r2 := @parameter1: org.quartz.Matcher;

        $r6 = interfaceinvoke r1.<org.quartz.JobListener: java.lang.String getName()>();

        if $r6 == null goto label1;

        $r8 = interfaceinvoke r1.<org.quartz.JobListener: java.lang.String getName()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("JobListener name cannot be empty.");

        throw $r7;

     label2:
        $r9 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        entermonitor $r9;

     label3:
        $r10 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        $r11 = interfaceinvoke r1.<org.quartz.JobListener: java.lang.String getName()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r1);

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        if r2 == null goto label4;

        virtualinvoke $r13.<java.util.LinkedList: boolean add(java.lang.Object)>(r2);

        goto label5;

     label4:
        $r14 = staticinvoke <org.quartz.impl.matchers.EverythingMatcher: org.quartz.impl.matchers.EverythingMatcher allJobs()>();

        virtualinvoke $r13.<java.util.LinkedList: boolean add(java.lang.Object)>($r14);

     label5:
        $r15 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListenersMatchers>;

        $r16 = interfaceinvoke r1.<org.quartz.JobListener: java.lang.String getName()>();

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r13);

        exitmonitor $r9;

     label6:
        goto label9;

     label7:
        $r18 := @caughtexception;

        exitmonitor $r9;

     label8:
        throw $r18;

     label9:
        return;

        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean addJobListenerMatcher(java.lang.String, org.quartz.Matcher)
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.lang.String r1;
        org.quartz.Matcher r2;
        java.util.List r4;
        java.util.Map $r6, $r7;
        java.lang.Object $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.Throwable $r10;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.quartz.Matcher;

        if r2 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null value not acceptable.");

        throw $r9;

     label1:
        $r6 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        entermonitor $r6;

     label2:
        $r7 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListenersMatchers>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r8;

        if r4 != null goto label4;

        exitmonitor $r6;

     label3:
        return 0;

     label4:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        exitmonitor $r6;

     label5:
        return 1;

     label6:
        $r10 := @caughtexception;

        exitmonitor $r6;

     label7:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean removeJobListenerMatcher(java.lang.String, org.quartz.Matcher)
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.lang.String r1;
        org.quartz.Matcher r2;
        java.util.List r4;
        java.util.Map $r6, $r7;
        java.lang.Object $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r9;
        java.lang.Throwable $r10;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.quartz.Matcher;

        if r2 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null value not acceptable.");

        throw $r9;

     label1:
        $r6 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        entermonitor $r6;

     label2:
        $r7 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListenersMatchers>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r8;

        if r4 != null goto label4;

        exitmonitor $r6;

     label3:
        return 0;

     label4:
        $z0 = interfaceinvoke r4.<java.util.List: boolean remove(java.lang.Object)>(r2);

        exitmonitor $r6;

     label5:
        return $z0;

     label6:
        $r10 := @caughtexception;

        exitmonitor $r6;

     label7:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.util.List getJobListenerMatchers(java.lang.String)
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.lang.String r1;
        java.util.List r3, $r8;
        java.util.Map $r5, $r6;
        java.lang.Object $r7;
        java.lang.Throwable $r9;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        entermonitor $r5;

     label1:
        $r6 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListenersMatchers>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.List) $r7;

        if r3 != null goto label3;

        exitmonitor $r5;

     label2:
        return null;

     label3:
        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r3);

        exitmonitor $r5;

     label4:
        return $r8;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r5;

     label6:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean setJobListenerMatchers(java.lang.String, java.util.List)
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.lang.String r1;
        java.util.List r2, r4;
        java.util.Map $r6, $r7, $r9;
        java.lang.Object $r8;
        java.lang.IllegalArgumentException $r11;
        java.lang.Throwable $r12;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        if r2 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null value not acceptable.");

        throw $r11;

     label1:
        $r6 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        entermonitor $r6;

     label2:
        $r7 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListenersMatchers>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r8;

        if r4 != null goto label4;

        exitmonitor $r6;

     label3:
        return 0;

     label4:
        $r9 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListenersMatchers>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        exitmonitor $r6;

     label5:
        return 1;

     label6:
        $r12 := @caughtexception;

        exitmonitor $r6;

     label7:
        throw $r12;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean removeJobListener(java.lang.String)
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.lang.String r1;
        java.util.Map $r4, $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7;
        boolean $z0;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        entermonitor $r4;

     label1:
        $r5 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        if $r6 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r4;

     label4:
        return $z0;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r4;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List getJobListeners()
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.util.Map $r3, $r5;
        java.util.LinkedList $r4;
        java.util.Collection $r6;
        java.util.List $r7;
        java.lang.Throwable $r8;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        $r3 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        entermonitor $r3;

     label1:
        $r4 = new java.util.LinkedList;

        $r5 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r4.<java.util.LinkedList: void <init>(java.util.Collection)>($r6);

        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        exitmonitor $r3;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.quartz.JobListener getJobListener(java.lang.String)
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.lang.String r1;
        java.util.Map $r4, $r5;
        java.lang.Object $r6;
        org.quartz.JobListener $r7;
        java.lang.Throwable $r8;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        entermonitor $r4;

     label1:
        $r5 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalJobListeners>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (org.quartz.JobListener) $r6;

        exitmonitor $r4;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r4;

     label4:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public transient void addTriggerListener(org.quartz.TriggerListener, org.quartz.Matcher[])
    {
        org.quartz.core.ListenerManagerImpl r0;
        org.quartz.TriggerListener r1;
        org.quartz.Matcher[] r2;
        java.util.List $r3;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: org.quartz.TriggerListener;

        r2 := @parameter1: org.quartz.Matcher[];

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        virtualinvoke r0.<org.quartz.core.ListenerManagerImpl: void addTriggerListener(org.quartz.TriggerListener,java.util.List)>(r1, $r3);

        return;
    }

    public void addTriggerListener(org.quartz.TriggerListener, java.util.List)
    {
        org.quartz.core.ListenerManagerImpl r0;
        org.quartz.TriggerListener r1;
        java.util.List r2;
        java.lang.String $r6, $r8, $r11, $r18;
        java.lang.IllegalArgumentException $r7;
        int $i0, $i1;
        java.util.Map $r9, $r10, $r17;
        java.util.LinkedList $r13;
        org.quartz.impl.matchers.EverythingMatcher $r14;
        java.lang.Throwable $r16;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: org.quartz.TriggerListener;

        r2 := @parameter1: java.util.List;

        $r6 = interfaceinvoke r1.<org.quartz.TriggerListener: java.lang.String getName()>();

        if $r6 == null goto label1;

        $r8 = interfaceinvoke r1.<org.quartz.TriggerListener: java.lang.String getName()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("TriggerListener name cannot be empty.");

        throw $r7;

     label2:
        $r9 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        entermonitor $r9;

     label3:
        $r10 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        $r11 = interfaceinvoke r1.<org.quartz.TriggerListener: java.lang.String getName()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r1);

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        if r2 == null goto label4;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 <= 0 goto label4;

        virtualinvoke $r13.<java.util.LinkedList: boolean addAll(java.util.Collection)>(r2);

        goto label5;

     label4:
        $r14 = staticinvoke <org.quartz.impl.matchers.EverythingMatcher: org.quartz.impl.matchers.EverythingMatcher allTriggers()>();

        virtualinvoke $r13.<java.util.LinkedList: boolean add(java.lang.Object)>($r14);

     label5:
        $r17 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListenersMatchers>;

        $r18 = interfaceinvoke r1.<org.quartz.TriggerListener: java.lang.String getName()>();

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r13);

        exitmonitor $r9;

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;

        exitmonitor $r9;

     label8:
        throw $r16;

     label9:
        return;

        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void addTriggerListener(org.quartz.TriggerListener)
    {
        org.quartz.core.ListenerManagerImpl r0;
        org.quartz.TriggerListener r1;
        org.quartz.impl.matchers.EverythingMatcher $r2;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: org.quartz.TriggerListener;

        $r2 = staticinvoke <org.quartz.impl.matchers.EverythingMatcher: org.quartz.impl.matchers.EverythingMatcher allTriggers()>();

        virtualinvoke r0.<org.quartz.core.ListenerManagerImpl: void addTriggerListener(org.quartz.TriggerListener,org.quartz.Matcher)>(r1, $r2);

        return;
    }

    public void addTriggerListener(org.quartz.TriggerListener, org.quartz.Matcher)
    {
        org.quartz.core.ListenerManagerImpl r0;
        org.quartz.TriggerListener r1;
        org.quartz.Matcher r2;
        java.lang.String $r6, $r8, $r11, $r15;
        java.lang.IllegalArgumentException $r7, $r17;
        int $i0;
        java.util.Map $r9, $r10, $r14;
        java.util.LinkedList $r13;
        java.lang.Throwable $r18;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: org.quartz.TriggerListener;

        r2 := @parameter1: org.quartz.Matcher;

        if r2 != null goto label1;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null value not acceptable for matcher.");

        throw $r17;

     label1:
        $r6 = interfaceinvoke r1.<org.quartz.TriggerListener: java.lang.String getName()>();

        if $r6 == null goto label2;

        $r8 = interfaceinvoke r1.<org.quartz.TriggerListener: java.lang.String getName()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("TriggerListener name cannot be empty.");

        throw $r7;

     label3:
        $r9 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        entermonitor $r9;

     label4:
        $r10 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        $r11 = interfaceinvoke r1.<org.quartz.TriggerListener: java.lang.String getName()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r1);

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r14 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListenersMatchers>;

        $r15 = interfaceinvoke r1.<org.quartz.TriggerListener: java.lang.String getName()>();

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r13);

        exitmonitor $r9;

     label5:
        goto label8;

     label6:
        $r18 := @caughtexception;

        exitmonitor $r9;

     label7:
        throw $r18;

     label8:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean addTriggerListenerMatcher(java.lang.String, org.quartz.Matcher)
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.lang.String r1;
        org.quartz.Matcher r2;
        java.util.List r4;
        java.util.Map $r6, $r7;
        java.lang.Object $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.Throwable $r10;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.quartz.Matcher;

        if r2 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null value not acceptable.");

        throw $r9;

     label1:
        $r6 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        entermonitor $r6;

     label2:
        $r7 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListenersMatchers>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r8;

        if r4 != null goto label4;

        exitmonitor $r6;

     label3:
        return 0;

     label4:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        exitmonitor $r6;

     label5:
        return 1;

     label6:
        $r10 := @caughtexception;

        exitmonitor $r6;

     label7:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean removeTriggerListenerMatcher(java.lang.String, org.quartz.Matcher)
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.lang.String r1;
        org.quartz.Matcher r2;
        java.util.List r4;
        java.util.Map $r6, $r7;
        java.lang.Object $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r9;
        java.lang.Throwable $r10;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.quartz.Matcher;

        if r2 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null value not acceptable.");

        throw $r9;

     label1:
        $r6 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        entermonitor $r6;

     label2:
        $r7 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListenersMatchers>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r8;

        if r4 != null goto label4;

        exitmonitor $r6;

     label3:
        return 0;

     label4:
        $z0 = interfaceinvoke r4.<java.util.List: boolean remove(java.lang.Object)>(r2);

        exitmonitor $r6;

     label5:
        return $z0;

     label6:
        $r10 := @caughtexception;

        exitmonitor $r6;

     label7:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.util.List getTriggerListenerMatchers(java.lang.String)
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.lang.String r1;
        java.util.List r3, $r8;
        java.util.Map $r5, $r6;
        java.lang.Object $r7;
        java.lang.Throwable $r9;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        entermonitor $r5;

     label1:
        $r6 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListenersMatchers>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.List) $r7;

        if r3 != null goto label3;

        exitmonitor $r5;

     label2:
        return null;

     label3:
        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r3);

        exitmonitor $r5;

     label4:
        return $r8;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r5;

     label6:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean setTriggerListenerMatchers(java.lang.String, java.util.List)
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.lang.String r1;
        java.util.List r2, r4;
        java.util.Map $r6, $r7, $r9;
        java.lang.Object $r8;
        java.lang.IllegalArgumentException $r11;
        java.lang.Throwable $r12;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        if r2 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null value not acceptable.");

        throw $r11;

     label1:
        $r6 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        entermonitor $r6;

     label2:
        $r7 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListenersMatchers>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r8;

        if r4 != null goto label4;

        exitmonitor $r6;

     label3:
        return 0;

     label4:
        $r9 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListenersMatchers>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        exitmonitor $r6;

     label5:
        return 1;

     label6:
        $r12 := @caughtexception;

        exitmonitor $r6;

     label7:
        throw $r12;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean removeTriggerListener(java.lang.String)
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.lang.String r1;
        java.util.Map $r4, $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7;
        boolean $z0;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        entermonitor $r4;

     label1:
        $r5 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        if $r6 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r4;

     label4:
        return $z0;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r4;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List getTriggerListeners()
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.util.Map $r3, $r5;
        java.util.LinkedList $r4;
        java.util.Collection $r6;
        java.util.List $r7;
        java.lang.Throwable $r8;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        $r3 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        entermonitor $r3;

     label1:
        $r4 = new java.util.LinkedList;

        $r5 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r4.<java.util.LinkedList: void <init>(java.util.Collection)>($r6);

        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        exitmonitor $r3;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.quartz.TriggerListener getTriggerListener(java.lang.String)
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.lang.String r1;
        java.util.Map $r4, $r5;
        java.lang.Object $r6;
        org.quartz.TriggerListener $r7;
        java.lang.Throwable $r8;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        entermonitor $r4;

     label1:
        $r5 = r0.<org.quartz.core.ListenerManagerImpl: java.util.Map globalTriggerListeners>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (org.quartz.TriggerListener) $r6;

        exitmonitor $r4;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r4;

     label4:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addSchedulerListener(org.quartz.SchedulerListener)
    {
        org.quartz.core.ListenerManagerImpl r0;
        org.quartz.SchedulerListener r1;
        java.util.ArrayList $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: org.quartz.SchedulerListener;

        $r4 = r0.<org.quartz.core.ListenerManagerImpl: java.util.ArrayList schedulerListeners>;

        entermonitor $r4;

     label1:
        $r5 = r0.<org.quartz.core.ListenerManagerImpl: java.util.ArrayList schedulerListeners>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        exitmonitor $r4;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r4;

     label4:
        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean removeSchedulerListener(org.quartz.SchedulerListener)
    {
        org.quartz.core.ListenerManagerImpl r0;
        org.quartz.SchedulerListener r1;
        java.util.ArrayList $r4, $r5;
        boolean $z0;
        java.lang.Throwable $r6;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        r1 := @parameter0: org.quartz.SchedulerListener;

        $r4 = r0.<org.quartz.core.ListenerManagerImpl: java.util.ArrayList schedulerListeners>;

        entermonitor $r4;

     label1:
        $r5 = r0.<org.quartz.core.ListenerManagerImpl: java.util.ArrayList schedulerListeners>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        exitmonitor $r4;

     label2:
        return $z0;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r4;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getSchedulerListeners()
    {
        org.quartz.core.ListenerManagerImpl r0;
        java.util.ArrayList $r3, $r4, $r5;
        java.util.List $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.quartz.core.ListenerManagerImpl;

        $r3 = r0.<org.quartz.core.ListenerManagerImpl: java.util.ArrayList schedulerListeners>;

        entermonitor $r3;

     label1:
        $r4 = new java.util.ArrayList;

        $r5 = r0.<org.quartz.core.ListenerManagerImpl: java.util.ArrayList schedulerListeners>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        exitmonitor $r3;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
