class org.quartz.core.QTZ385Test$2 extends org.quartz.listeners.JobListenerSupport
{
    final java.util.concurrent.atomic.AtomicBoolean val$recoveredJob;
    final org.quartz.core.QTZ385Test this$0;

    void <init>(org.quartz.core.QTZ385Test, java.util.concurrent.atomic.AtomicBoolean)
    {
        org.quartz.core.QTZ385Test$2 r0;
        org.quartz.core.QTZ385Test r1;
        java.util.concurrent.atomic.AtomicBoolean r2;

        r0 := @this: org.quartz.core.QTZ385Test$2;

        r1 := @parameter0: org.quartz.core.QTZ385Test;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicBoolean;

        r0.<org.quartz.core.QTZ385Test$2: org.quartz.core.QTZ385Test this$0> = r1;

        r0.<org.quartz.core.QTZ385Test$2: java.util.concurrent.atomic.AtomicBoolean val$recoveredJob> = r2;

        specialinvoke r0.<org.quartz.listeners.JobListenerSupport: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        org.quartz.core.QTZ385Test$2 r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.quartz.core.QTZ385Test$2;

        $r1 = class "Lorg/quartz/core/QTZ385Test;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r2;
    }

    public void jobToBeExecuted(org.quartz.JobExecutionContext)
    {
        org.quartz.core.QTZ385Test$2 r0;
        org.quartz.JobExecutionContext r1;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r2;

        r0 := @this: org.quartz.core.QTZ385Test$2;

        r1 := @parameter0: org.quartz.JobExecutionContext;

        $z0 = interfaceinvoke r1.<org.quartz.JobExecutionContext: boolean isRecovering()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.quartz.core.QTZ385Test$2: java.util.concurrent.atomic.AtomicBoolean val$recoveredJob>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label1:
        return;
    }
}
