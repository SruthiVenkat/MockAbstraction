public class org.quartz.integrations.tests.QuartzMemoryTestSupport extends java.lang.Object
{
    protected static final org.slf4j.Logger LOG;
    protected org.quartz.Scheduler scheduler;

    public void <init>()
    {
        org.quartz.integrations.tests.QuartzMemoryTestSupport r0;

        r0 := @this: org.quartz.integrations.tests.QuartzMemoryTestSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void initSchedulerBeforeTest() throws java.lang.Exception
    {
        org.quartz.integrations.tests.QuartzMemoryTestSupport r0;
        java.util.Properties r1;
        org.quartz.impl.StdSchedulerFactory $r3;
        org.quartz.Scheduler $r4;

        r0 := @this: org.quartz.integrations.tests.QuartzMemoryTestSupport;

        r1 = virtualinvoke r0.<org.quartz.integrations.tests.QuartzMemoryTestSupport: java.util.Properties createSchedulerProperties()>();

        $r3 = new org.quartz.impl.StdSchedulerFactory;

        specialinvoke $r3.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1);

        $r4 = interfaceinvoke $r3.<org.quartz.SchedulerFactory: org.quartz.Scheduler getScheduler()>();

        r0.<org.quartz.integrations.tests.QuartzMemoryTestSupport: org.quartz.Scheduler scheduler> = $r4;

        virtualinvoke r0.<org.quartz.integrations.tests.QuartzMemoryTestSupport: void afterSchedulerInit()>();

        return;
    }

    protected void afterSchedulerInit() throws java.lang.Exception
    {
        org.quartz.integrations.tests.QuartzMemoryTestSupport r0;
        org.slf4j.Logger $r1, $r3;
        org.quartz.Scheduler $r2;

        r0 := @this: org.quartz.integrations.tests.QuartzMemoryTestSupport;

        $r1 = <org.quartz.integrations.tests.QuartzMemoryTestSupport: org.slf4j.Logger LOG>;

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Scheduler starting.");

        $r2 = r0.<org.quartz.integrations.tests.QuartzMemoryTestSupport: org.quartz.Scheduler scheduler>;

        interfaceinvoke $r2.<org.quartz.Scheduler: void start()>();

        $r3 = <org.quartz.integrations.tests.QuartzMemoryTestSupport: org.slf4j.Logger LOG>;

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Scheduler started.");

        return;
    }

    protected java.util.Properties createSchedulerProperties()
    {
        org.quartz.integrations.tests.QuartzMemoryTestSupport r0;
        java.util.Properties $r2;

        r0 := @this: org.quartz.integrations.tests.QuartzMemoryTestSupport;

        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>()>();

        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.scheduler.instanceName", "TestScheduler");

        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.scheduler.instanceId", "AUTO");

        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.scheduler.skipUpdateCheck", "true");

        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool");

        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.threadPool.threadCount", "12");

        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.threadPool.threadPriority", "5");

        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.jobStore.misfireThreshold", "10000");

        return $r2;
    }

    public void initSchedulerAfterTest() throws java.lang.Exception
    {
        org.quartz.integrations.tests.QuartzMemoryTestSupport r0;
        org.slf4j.Logger $r1, $r3;
        org.quartz.Scheduler $r2;

        r0 := @this: org.quartz.integrations.tests.QuartzMemoryTestSupport;

        $r1 = <org.quartz.integrations.tests.QuartzMemoryTestSupport: org.slf4j.Logger LOG>;

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Scheduler shutting down.");

        $r2 = r0.<org.quartz.integrations.tests.QuartzMemoryTestSupport: org.quartz.Scheduler scheduler>;

        interfaceinvoke $r2.<org.quartz.Scheduler: void shutdown(boolean)>(1);

        $r3 = <org.quartz.integrations.tests.QuartzMemoryTestSupport: org.slf4j.Logger LOG>;

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Scheduler shutdown complete.");

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/quartz/integrations/tests/QuartzMemoryTestSupport;");

        <org.quartz.integrations.tests.QuartzMemoryTestSupport: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
