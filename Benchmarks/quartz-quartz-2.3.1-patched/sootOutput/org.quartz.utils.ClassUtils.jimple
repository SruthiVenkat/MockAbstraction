public class org.quartz.utils.ClassUtils extends java.lang.Object
{

    public void <init>()
    {
        org.quartz.utils.ClassUtils r0;

        r0 := @this: org.quartz.utils.ClassUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isAnnotationPresent(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, r1, r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        r2 = r0;

     label1:
        if r2 == null goto label4;

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $z1 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresentOnInterfaces(java.lang.Class,java.lang.Class)>(r2, r1);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        r2 = virtualinvoke r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label4:
        return 0;
    }

    private static boolean isAnnotationPresentOnInterfaces(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, r1, r3;
        java.lang.Class[] r2;
        int i0, i1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        r2 = virtualinvoke r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        $z0 = virtualinvoke r3.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $z1 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresentOnInterfaces(java.lang.Class,java.lang.Class)>(r3, r1);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    public static java.lang.'annotation'.Annotation getAnnotation(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, r1, $r5, r8, r11;
        java.lang.'annotation'.Annotation r2, r9;
        java.util.LinkedList $r3;
        boolean $z1, $z2;
        java.lang.Object $r4;
        java.lang.Class[] $r6;
        java.util.List $r7;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        r8 = r0;

     label1:
        if r8 == null goto label3;

        r9 = virtualinvoke r8.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r1);

        if r9 == null goto label2;

        return r9;

     label2:
        r8 = virtualinvoke r8.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label3:
        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        interfaceinvoke $r3.<java.util.Queue: boolean add(java.lang.Object)>(r0);

     label4:
        $z1 = interfaceinvoke $r3.<java.util.Queue: boolean isEmpty()>();

        if $z1 != 0 goto label9;

        $r4 = interfaceinvoke $r3.<java.util.Queue: java.lang.Object remove()>();

        r11 = (java.lang.Class) $r4;

        if r11 == null goto label8;

        $z2 = virtualinvoke r11.<java.lang.Class: boolean isInterface()>();

        if $z2 == 0 goto label6;

        r2 = virtualinvoke r11.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r1);

        if r2 == null goto label5;

        return r2;

     label5:
        goto label7;

     label6:
        $r5 = virtualinvoke r11.<java.lang.Class: java.lang.Class getSuperclass()>();

        interfaceinvoke $r3.<java.util.Queue: boolean add(java.lang.Object)>($r5);

     label7:
        $r6 = virtualinvoke r11.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        interfaceinvoke $r3.<java.util.Queue: boolean addAll(java.util.Collection)>($r7);

     label8:
        goto label4;

     label9:
        return null;
    }
}
