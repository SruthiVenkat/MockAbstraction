class org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext extends java.lang.Object implements javax.transaction.UserTransaction
{
    javax.naming.InitialContext context;
    javax.transaction.UserTransaction userTransaction;

    public void <init>() throws org.quartz.SchedulerException
    {
        org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext r0;
        javax.naming.InitialContext $r1, $r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        javax.transaction.UserTransaction $r5, $r6;
        org.quartz.SchedulerException $r7, $r9, $r11;
        java.lang.Throwable $r8, $r10;

        r0 := @this: org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $r1 = new javax.naming.InitialContext;

        specialinvoke $r1.<javax.naming.InitialContext: void <init>()>();

        r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.naming.InitialContext context> = $r1;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new org.quartz.SchedulerException;

        specialinvoke $r11.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>("UserTransactionHelper failed to create InitialContext to lookup/create UserTransaction.", $r10);

        throw $r11;

     label4:
        $r2 = r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.naming.InitialContext context>;

        $r3 = staticinvoke <org.quartz.ee.jta.UserTransactionHelper: java.lang.String access$000()>();

        $r4 = virtualinvoke $r2.<javax.naming.InitialContext: java.lang.Object lookup(java.lang.String)>($r3);

        $r5 = (javax.transaction.UserTransaction) $r4;

        r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.transaction.UserTransaction userTransaction> = $r5;

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        virtualinvoke r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: void closeContext()>();

        $r9 = new org.quartz.SchedulerException;

        specialinvoke $r9.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>("UserTransactionHelper could not lookup/create UserTransaction.", $r8);

        throw $r9;

     label7:
        $r6 = r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.transaction.UserTransaction userTransaction>;

        if $r6 != null goto label8;

        virtualinvoke r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: void closeContext()>();

        $r7 = new org.quartz.SchedulerException;

        specialinvoke $r7.<org.quartz.SchedulerException: void <init>(java.lang.String)>("UserTransactionHelper could not lookup/create UserTransaction from the InitialContext.");

        throw $r7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void closeContext()
    {
        org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext r0;
        javax.naming.InitialContext $r2, $r3;
        java.lang.Throwable $r4;
        org.slf4j.Logger $r5;

        r0 := @this: org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext;

     label1:
        $r2 = r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.naming.InitialContext context>;

        if $r2 == null goto label2;

        $r3 = r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.naming.InitialContext context>;

        virtualinvoke $r3.<javax.naming.InitialContext: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: org.slf4j.Logger getLog()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to close InitialContext used to get a UserTransaction.", $r4);

     label4:
        r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.naming.InitialContext context> = null;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext r0;
        javax.naming.InitialContext $r2;
        org.slf4j.Logger $r3;
        java.lang.Throwable $r4;

        r0 := @this: org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext;

     label1:
        $r2 = r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.naming.InitialContext context>;

        if $r2 == null goto label2;

        $r3 = staticinvoke <org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: org.slf4j.Logger getLog()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("UserTransaction was never returned to the UserTransactionHelper.");

        virtualinvoke r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: void closeContext()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label4;

     label3:
        $r4 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r4;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static org.slf4j.Logger getLog()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/quartz/ee/jta/UserTransactionHelper$UserTransactionWithContext;");

        return $r0;
    }

    public void begin() throws javax.transaction.NotSupportedException, javax.transaction.SystemException
    {
        org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext r0;
        javax.transaction.UserTransaction $r1;

        r0 := @this: org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext;

        $r1 = r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.transaction.UserTransaction userTransaction>;

        interfaceinvoke $r1.<javax.transaction.UserTransaction: void begin()>();

        return;
    }

    public void commit() throws javax.transaction.RollbackException, javax.transaction.HeuristicMixedException, javax.transaction.HeuristicRollbackException, java.lang.SecurityException, java.lang.IllegalStateException, javax.transaction.SystemException
    {
        org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext r0;
        javax.transaction.UserTransaction $r1;

        r0 := @this: org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext;

        $r1 = r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.transaction.UserTransaction userTransaction>;

        interfaceinvoke $r1.<javax.transaction.UserTransaction: void commit()>();

        return;
    }

    public void rollback() throws java.lang.IllegalStateException, java.lang.SecurityException, javax.transaction.SystemException
    {
        org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext r0;
        javax.transaction.UserTransaction $r1;

        r0 := @this: org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext;

        $r1 = r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.transaction.UserTransaction userTransaction>;

        interfaceinvoke $r1.<javax.transaction.UserTransaction: void rollback()>();

        return;
    }

    public void setRollbackOnly() throws java.lang.IllegalStateException, javax.transaction.SystemException
    {
        org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext r0;
        javax.transaction.UserTransaction $r1;

        r0 := @this: org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext;

        $r1 = r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.transaction.UserTransaction userTransaction>;

        interfaceinvoke $r1.<javax.transaction.UserTransaction: void setRollbackOnly()>();

        return;
    }

    public int getStatus() throws javax.transaction.SystemException
    {
        org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext r0;
        javax.transaction.UserTransaction $r1;
        int $i0;

        r0 := @this: org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext;

        $r1 = r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.transaction.UserTransaction userTransaction>;

        $i0 = interfaceinvoke $r1.<javax.transaction.UserTransaction: int getStatus()>();

        return $i0;
    }

    public void setTransactionTimeout(int) throws javax.transaction.SystemException
    {
        org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext r0;
        int i0;
        javax.transaction.UserTransaction $r1;

        r0 := @this: org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext;

        i0 := @parameter0: int;

        $r1 = r0.<org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext: javax.transaction.UserTransaction userTransaction>;

        interfaceinvoke $r1.<javax.transaction.UserTransaction: void setTransactionTimeout(int)>(i0);

        return;
    }
}
