public class org.quartz.impl.StdScheduler extends java.lang.Object implements org.quartz.Scheduler
{
    private org.quartz.core.QuartzScheduler sched;

    public void <init>(org.quartz.core.QuartzScheduler)
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler r1;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.core.QuartzScheduler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched> = r1;

        return;
    }

    public java.lang.String getSchedulerName()
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;
        java.lang.String $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r2 = virtualinvoke $r1.<org.quartz.core.QuartzScheduler: java.lang.String getSchedulerName()>();

        return $r2;
    }

    public java.lang.String getSchedulerInstanceId()
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;
        java.lang.String $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r2 = virtualinvoke $r1.<org.quartz.core.QuartzScheduler: java.lang.String getSchedulerInstanceId()>();

        return $r2;
    }

    public org.quartz.SchedulerMetaData getMetaData()
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.SchedulerMetaData $r1;
        java.lang.String $r2, $r3, $r16;
        java.lang.Class $r4, $r9, $r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.quartz.core.QuartzScheduler $r5, $r7, $r8, $r10, $r11, $r12, $r14, $r15;
        java.util.Date $r6;
        int $i0, $i1;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = new org.quartz.SchedulerMetaData;

        $r2 = virtualinvoke r0.<org.quartz.impl.StdScheduler: java.lang.String getSchedulerName()>();

        $r3 = virtualinvoke r0.<org.quartz.impl.StdScheduler: java.lang.String getSchedulerInstanceId()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r0.<org.quartz.impl.StdScheduler: boolean isStarted()>();

        $z1 = virtualinvoke r0.<org.quartz.impl.StdScheduler: boolean isInStandbyMode()>();

        $z2 = virtualinvoke r0.<org.quartz.impl.StdScheduler: boolean isShutdown()>();

        $r5 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r6 = virtualinvoke $r5.<org.quartz.core.QuartzScheduler: java.util.Date runningSince()>();

        $r7 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $i0 = virtualinvoke $r7.<org.quartz.core.QuartzScheduler: int numJobsExecuted()>();

        $r8 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r9 = virtualinvoke $r8.<org.quartz.core.QuartzScheduler: java.lang.Class getJobStoreClass()>();

        $r10 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z3 = virtualinvoke $r10.<org.quartz.core.QuartzScheduler: boolean supportsPersistence()>();

        $r11 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z4 = virtualinvoke $r11.<org.quartz.core.QuartzScheduler: boolean isClustered()>();

        $r12 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r13 = virtualinvoke $r12.<org.quartz.core.QuartzScheduler: java.lang.Class getThreadPoolClass()>();

        $r14 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $i1 = virtualinvoke $r14.<org.quartz.core.QuartzScheduler: int getThreadPoolSize()>();

        $r15 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r16 = virtualinvoke $r15.<org.quartz.core.QuartzScheduler: java.lang.String getVersion()>();

        specialinvoke $r1.<org.quartz.SchedulerMetaData: void <init>(java.lang.String,java.lang.String,java.lang.Class,boolean,boolean,boolean,boolean,java.util.Date,int,java.lang.Class,boolean,boolean,java.lang.Class,int,java.lang.String)>($r2, $r3, $r4, 0, $z0, $z1, $z2, $r6, $i0, $r9, $z3, $z4, $r13, $i1, $r16);

        return $r1;
    }

    public org.quartz.SchedulerContext getContext() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;
        org.quartz.SchedulerContext $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r2 = virtualinvoke $r1.<org.quartz.core.QuartzScheduler: org.quartz.SchedulerContext getSchedulerContext()>();

        return $r2;
    }

    public void start() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r1.<org.quartz.core.QuartzScheduler: void start()>();

        return;
    }

    public void startDelayed(int) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        int i0;
        org.quartz.core.QuartzScheduler $r1;

        r0 := @this: org.quartz.impl.StdScheduler;

        i0 := @parameter0: int;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r1.<org.quartz.core.QuartzScheduler: void startDelayed(int)>(i0);

        return;
    }

    public void standby()
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r1.<org.quartz.core.QuartzScheduler: void standby()>();

        return;
    }

    public boolean isStarted()
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;
        java.util.Date $r2;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r2 = virtualinvoke $r1.<org.quartz.core.QuartzScheduler: java.util.Date runningSince()>();

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isInStandbyMode()
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z0 = virtualinvoke $r1.<org.quartz.core.QuartzScheduler: boolean isInStandbyMode()>();

        return $z0;
    }

    public void shutdown()
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r1.<org.quartz.core.QuartzScheduler: void shutdown()>();

        return;
    }

    public void shutdown(boolean)
    {
        org.quartz.impl.StdScheduler r0;
        boolean z0;
        org.quartz.core.QuartzScheduler $r1;

        r0 := @this: org.quartz.impl.StdScheduler;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r1.<org.quartz.core.QuartzScheduler: void shutdown(boolean)>(z0);

        return;
    }

    public boolean isShutdown()
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z0 = virtualinvoke $r1.<org.quartz.core.QuartzScheduler: boolean isShutdown()>();

        return $z0;
    }

    public java.util.List getCurrentlyExecutingJobs()
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;
        java.util.List $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r2 = virtualinvoke $r1.<org.quartz.core.QuartzScheduler: java.util.List getCurrentlyExecutingJobs()>();

        return $r2;
    }

    public void clear() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r1.<org.quartz.core.QuartzScheduler: void clear()>();

        return;
    }

    public java.util.Date scheduleJob(org.quartz.JobDetail, org.quartz.Trigger) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobDetail r1;
        org.quartz.Trigger r2;
        org.quartz.core.QuartzScheduler $r3;
        java.util.Date $r4;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobDetail;

        r2 := @parameter1: org.quartz.Trigger;

        $r3 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r4 = virtualinvoke $r3.<org.quartz.core.QuartzScheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2);

        return $r4;
    }

    public java.util.Date scheduleJob(org.quartz.Trigger) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.Trigger r1;
        org.quartz.core.QuartzScheduler $r2;
        java.util.Date $r3;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.Trigger;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r3 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: java.util.Date scheduleJob(org.quartz.Trigger)>(r1);

        return $r3;
    }

    public void addJob(org.quartz.JobDetail, boolean) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobDetail r1;
        boolean z0;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobDetail;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void addJob(org.quartz.JobDetail,boolean)>(r1, z0);

        return;
    }

    public void addJob(org.quartz.JobDetail, boolean, boolean) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobDetail r1;
        boolean z0, z1;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobDetail;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void addJob(org.quartz.JobDetail,boolean,boolean)>(r1, z0, z1);

        return;
    }

    public boolean deleteJobs(java.util.List) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        java.util.List r1;
        org.quartz.core.QuartzScheduler $r2;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z0 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: boolean deleteJobs(java.util.List)>(r1);

        return $z0;
    }

    public void scheduleJobs(java.util.Map, boolean) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        java.util.Map r1;
        boolean z0;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void scheduleJobs(java.util.Map,boolean)>(r1, z0);

        return;
    }

    public void scheduleJob(org.quartz.JobDetail, java.util.Set, boolean) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobDetail r1;
        java.util.Set r2;
        boolean z0;
        org.quartz.core.QuartzScheduler $r3;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobDetail;

        r2 := @parameter1: java.util.Set;

        z0 := @parameter2: boolean;

        $r3 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r3.<org.quartz.core.QuartzScheduler: void scheduleJob(org.quartz.JobDetail,java.util.Set,boolean)>(r1, r2, z0);

        return;
    }

    public boolean unscheduleJobs(java.util.List) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        java.util.List r1;
        org.quartz.core.QuartzScheduler $r2;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z0 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: boolean unscheduleJobs(java.util.List)>(r1);

        return $z0;
    }

    public boolean deleteJob(org.quartz.JobKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobKey r1;
        org.quartz.core.QuartzScheduler $r2;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z0 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: boolean deleteJob(org.quartz.JobKey)>(r1);

        return $z0;
    }

    public boolean unscheduleJob(org.quartz.TriggerKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.TriggerKey r1;
        org.quartz.core.QuartzScheduler $r2;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.TriggerKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z0 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: boolean unscheduleJob(org.quartz.TriggerKey)>(r1);

        return $z0;
    }

    public java.util.Date rescheduleJob(org.quartz.TriggerKey, org.quartz.Trigger) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.TriggerKey r1;
        org.quartz.Trigger r2;
        org.quartz.core.QuartzScheduler $r3;
        java.util.Date $r4;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.TriggerKey;

        r2 := @parameter1: org.quartz.Trigger;

        $r3 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r4 = virtualinvoke $r3.<org.quartz.core.QuartzScheduler: java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)>(r1, r2);

        return $r4;
    }

    public void triggerJob(org.quartz.JobKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobKey r1;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobKey;

        virtualinvoke r0.<org.quartz.impl.StdScheduler: void triggerJob(org.quartz.JobKey,org.quartz.JobDataMap)>(r1, null);

        return;
    }

    public void triggerJob(org.quartz.JobKey, org.quartz.JobDataMap) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobKey r1;
        org.quartz.JobDataMap r2;
        org.quartz.core.QuartzScheduler $r3;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobKey;

        r2 := @parameter1: org.quartz.JobDataMap;

        $r3 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r3.<org.quartz.core.QuartzScheduler: void triggerJob(org.quartz.JobKey,org.quartz.JobDataMap)>(r1, r2);

        return;
    }

    public void pauseTrigger(org.quartz.TriggerKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.TriggerKey r1;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.TriggerKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void pauseTrigger(org.quartz.TriggerKey)>(r1);

        return;
    }

    public void pauseTriggers(org.quartz.impl.matchers.GroupMatcher) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.impl.matchers.GroupMatcher r1;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.impl.matchers.GroupMatcher;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>(r1);

        return;
    }

    public void pauseJob(org.quartz.JobKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobKey r1;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void pauseJob(org.quartz.JobKey)>(r1);

        return;
    }

    public java.util.Set getPausedTriggerGroups() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;
        java.util.Set $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r2 = virtualinvoke $r1.<org.quartz.core.QuartzScheduler: java.util.Set getPausedTriggerGroups()>();

        return $r2;
    }

    public void pauseJobs(org.quartz.impl.matchers.GroupMatcher) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.impl.matchers.GroupMatcher r1;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.impl.matchers.GroupMatcher;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>(r1);

        return;
    }

    public void resumeTrigger(org.quartz.TriggerKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.TriggerKey r1;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.TriggerKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void resumeTrigger(org.quartz.TriggerKey)>(r1);

        return;
    }

    public void resumeTriggers(org.quartz.impl.matchers.GroupMatcher) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.impl.matchers.GroupMatcher r1;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.impl.matchers.GroupMatcher;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>(r1);

        return;
    }

    public void resumeJob(org.quartz.JobKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobKey r1;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void resumeJob(org.quartz.JobKey)>(r1);

        return;
    }

    public void resumeJobs(org.quartz.impl.matchers.GroupMatcher) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.impl.matchers.GroupMatcher r1;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.impl.matchers.GroupMatcher;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>(r1);

        return;
    }

    public void pauseAll() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r1.<org.quartz.core.QuartzScheduler: void pauseAll()>();

        return;
    }

    public void resumeAll() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r1.<org.quartz.core.QuartzScheduler: void resumeAll()>();

        return;
    }

    public java.util.List getJobGroupNames() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;
        java.util.List $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r2 = virtualinvoke $r1.<org.quartz.core.QuartzScheduler: java.util.List getJobGroupNames()>();

        return $r2;
    }

    public java.util.List getTriggersOfJob(org.quartz.JobKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobKey r1;
        org.quartz.core.QuartzScheduler $r2;
        java.util.List $r3;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r3 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: java.util.List getTriggersOfJob(org.quartz.JobKey)>(r1);

        return $r3;
    }

    public java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.impl.matchers.GroupMatcher r1;
        org.quartz.core.QuartzScheduler $r2;
        java.util.Set $r3;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.impl.matchers.GroupMatcher;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r3 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>(r1);

        return $r3;
    }

    public java.util.List getTriggerGroupNames() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;
        java.util.List $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r2 = virtualinvoke $r1.<org.quartz.core.QuartzScheduler: java.util.List getTriggerGroupNames()>();

        return $r2;
    }

    public java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.impl.matchers.GroupMatcher r1;
        org.quartz.core.QuartzScheduler $r2;
        java.util.Set $r3;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.impl.matchers.GroupMatcher;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r3 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>(r1);

        return $r3;
    }

    public org.quartz.JobDetail getJobDetail(org.quartz.JobKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobKey r1;
        org.quartz.core.QuartzScheduler $r2;
        org.quartz.JobDetail $r3;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r3 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>(r1);

        return $r3;
    }

    public org.quartz.Trigger getTrigger(org.quartz.TriggerKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.TriggerKey r1;
        org.quartz.core.QuartzScheduler $r2;
        org.quartz.Trigger $r3;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.TriggerKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r3 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>(r1);

        return $r3;
    }

    public org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.TriggerKey r1;
        org.quartz.core.QuartzScheduler $r2;
        org.quartz.Trigger$TriggerState $r3;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.TriggerKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r3 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1);

        return $r3;
    }

    public void resetTriggerFromErrorState(org.quartz.TriggerKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.TriggerKey r1;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.TriggerKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void resetTriggerFromErrorState(org.quartz.TriggerKey)>(r1);

        return;
    }

    public void addCalendar(java.lang.String, org.quartz.Calendar, boolean, boolean) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        java.lang.String r1;
        org.quartz.Calendar r2;
        boolean z0, z1;
        org.quartz.core.QuartzScheduler $r3;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.quartz.Calendar;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r3.<org.quartz.core.QuartzScheduler: void addCalendar(java.lang.String,org.quartz.Calendar,boolean,boolean)>(r1, r2, z0, z1);

        return;
    }

    public boolean deleteCalendar(java.lang.String) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        java.lang.String r1;
        org.quartz.core.QuartzScheduler $r2;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z0 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: boolean deleteCalendar(java.lang.String)>(r1);

        return $z0;
    }

    public org.quartz.Calendar getCalendar(java.lang.String) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        java.lang.String r1;
        org.quartz.core.QuartzScheduler $r2;
        org.quartz.Calendar $r3;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r3 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: org.quartz.Calendar getCalendar(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.List getCalendarNames() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;
        java.util.List $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r2 = virtualinvoke $r1.<org.quartz.core.QuartzScheduler: java.util.List getCalendarNames()>();

        return $r2;
    }

    public boolean checkExists(org.quartz.JobKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobKey r1;
        org.quartz.core.QuartzScheduler $r2;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z0 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: boolean checkExists(org.quartz.JobKey)>(r1);

        return $z0;
    }

    public boolean checkExists(org.quartz.TriggerKey) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.TriggerKey r1;
        org.quartz.core.QuartzScheduler $r2;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.TriggerKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z0 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: boolean checkExists(org.quartz.TriggerKey)>(r1);

        return $z0;
    }

    public void setJobFactory(org.quartz.spi.JobFactory) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.spi.JobFactory r1;
        org.quartz.core.QuartzScheduler $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.spi.JobFactory;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        virtualinvoke $r2.<org.quartz.core.QuartzScheduler: void setJobFactory(org.quartz.spi.JobFactory)>(r1);

        return;
    }

    public org.quartz.ListenerManager getListenerManager() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.core.QuartzScheduler $r1;
        org.quartz.ListenerManager $r2;

        r0 := @this: org.quartz.impl.StdScheduler;

        $r1 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $r2 = virtualinvoke $r1.<org.quartz.core.QuartzScheduler: org.quartz.ListenerManager getListenerManager()>();

        return $r2;
    }

    public boolean interrupt(org.quartz.JobKey) throws org.quartz.UnableToInterruptJobException
    {
        org.quartz.impl.StdScheduler r0;
        org.quartz.JobKey r1;
        org.quartz.core.QuartzScheduler $r2;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: org.quartz.JobKey;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z0 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: boolean interrupt(org.quartz.JobKey)>(r1);

        return $z0;
    }

    public boolean interrupt(java.lang.String) throws org.quartz.UnableToInterruptJobException
    {
        org.quartz.impl.StdScheduler r0;
        java.lang.String r1;
        org.quartz.core.QuartzScheduler $r2;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdScheduler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.quartz.impl.StdScheduler: org.quartz.core.QuartzScheduler sched>;

        $z0 = virtualinvoke $r2.<org.quartz.core.QuartzScheduler: boolean interrupt(java.lang.String)>(r1);

        return $z0;
    }
}
