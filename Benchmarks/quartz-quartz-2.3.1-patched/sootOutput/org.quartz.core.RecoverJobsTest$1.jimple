class org.quartz.core.RecoverJobsTest$1 extends org.quartz.listeners.JobListenerSupport
{
    final java.util.concurrent.atomic.AtomicBoolean val$isJobRecovered;
    final org.quartz.core.RecoverJobsTest this$0;

    void <init>(org.quartz.core.RecoverJobsTest, java.util.concurrent.atomic.AtomicBoolean)
    {
        org.quartz.core.RecoverJobsTest$1 r0;
        org.quartz.core.RecoverJobsTest r1;
        java.util.concurrent.atomic.AtomicBoolean r2;

        r0 := @this: org.quartz.core.RecoverJobsTest$1;

        r1 := @parameter0: org.quartz.core.RecoverJobsTest;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicBoolean;

        r0.<org.quartz.core.RecoverJobsTest$1: org.quartz.core.RecoverJobsTest this$0> = r1;

        r0.<org.quartz.core.RecoverJobsTest$1: java.util.concurrent.atomic.AtomicBoolean val$isJobRecovered> = r2;

        specialinvoke r0.<org.quartz.listeners.JobListenerSupport: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        org.quartz.core.RecoverJobsTest$1 r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.quartz.core.RecoverJobsTest$1;

        $r1 = class "Lorg/quartz/core/RecoverJobsTest;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r2;
    }

    public void jobToBeExecuted(org.quartz.JobExecutionContext)
    {
        org.quartz.core.RecoverJobsTest$1 r0;
        org.quartz.JobExecutionContext r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;

        r0 := @this: org.quartz.core.RecoverJobsTest$1;

        r1 := @parameter0: org.quartz.JobExecutionContext;

        $r2 = r0.<org.quartz.core.RecoverJobsTest$1: java.util.concurrent.atomic.AtomicBoolean val$isJobRecovered>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }
}
