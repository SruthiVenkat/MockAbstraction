public class org.quartz.impl.matchers.NameMatcher extends org.quartz.impl.matchers.StringMatcher
{
    private static final long serialVersionUID;

    protected void <init>(java.lang.String, org.quartz.impl.matchers.StringMatcher$StringOperatorName)
    {
        org.quartz.impl.matchers.NameMatcher r0;
        java.lang.String r1;
        org.quartz.impl.matchers.StringMatcher$StringOperatorName r2;

        r0 := @this: org.quartz.impl.matchers.NameMatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.quartz.impl.matchers.StringMatcher$StringOperatorName;

        specialinvoke r0.<org.quartz.impl.matchers.StringMatcher: void <init>(java.lang.String,org.quartz.impl.matchers.StringMatcher$StringOperatorName)>(r1, r2);

        return;
    }

    public static org.quartz.impl.matchers.NameMatcher nameEquals(java.lang.String)
    {
        java.lang.String r0;
        org.quartz.impl.matchers.NameMatcher $r1;
        org.quartz.impl.matchers.StringMatcher$StringOperatorName $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.quartz.impl.matchers.NameMatcher;

        $r2 = <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName EQUALS>;

        specialinvoke $r1.<org.quartz.impl.matchers.NameMatcher: void <init>(java.lang.String,org.quartz.impl.matchers.StringMatcher$StringOperatorName)>(r0, $r2);

        return $r1;
    }

    public static org.quartz.impl.matchers.NameMatcher jobNameEquals(java.lang.String)
    {
        java.lang.String r0;
        org.quartz.impl.matchers.NameMatcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.quartz.impl.matchers.NameMatcher: org.quartz.impl.matchers.NameMatcher nameEquals(java.lang.String)>(r0);

        return $r1;
    }

    public static org.quartz.impl.matchers.NameMatcher triggerNameEquals(java.lang.String)
    {
        java.lang.String r0;
        org.quartz.impl.matchers.NameMatcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.quartz.impl.matchers.NameMatcher: org.quartz.impl.matchers.NameMatcher nameEquals(java.lang.String)>(r0);

        return $r1;
    }

    public static org.quartz.impl.matchers.NameMatcher nameStartsWith(java.lang.String)
    {
        java.lang.String r0;
        org.quartz.impl.matchers.NameMatcher $r1;
        org.quartz.impl.matchers.StringMatcher$StringOperatorName $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.quartz.impl.matchers.NameMatcher;

        $r2 = <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName STARTS_WITH>;

        specialinvoke $r1.<org.quartz.impl.matchers.NameMatcher: void <init>(java.lang.String,org.quartz.impl.matchers.StringMatcher$StringOperatorName)>(r0, $r2);

        return $r1;
    }

    public static org.quartz.impl.matchers.NameMatcher jobNameStartsWith(java.lang.String)
    {
        java.lang.String r0;
        org.quartz.impl.matchers.NameMatcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.quartz.impl.matchers.NameMatcher: org.quartz.impl.matchers.NameMatcher nameStartsWith(java.lang.String)>(r0);

        return $r1;
    }

    public static org.quartz.impl.matchers.NameMatcher triggerNameStartsWith(java.lang.String)
    {
        java.lang.String r0;
        org.quartz.impl.matchers.NameMatcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.quartz.impl.matchers.NameMatcher: org.quartz.impl.matchers.NameMatcher nameStartsWith(java.lang.String)>(r0);

        return $r1;
    }

    public static org.quartz.impl.matchers.NameMatcher nameEndsWith(java.lang.String)
    {
        java.lang.String r0;
        org.quartz.impl.matchers.NameMatcher $r1;
        org.quartz.impl.matchers.StringMatcher$StringOperatorName $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.quartz.impl.matchers.NameMatcher;

        $r2 = <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName ENDS_WITH>;

        specialinvoke $r1.<org.quartz.impl.matchers.NameMatcher: void <init>(java.lang.String,org.quartz.impl.matchers.StringMatcher$StringOperatorName)>(r0, $r2);

        return $r1;
    }

    public static org.quartz.impl.matchers.NameMatcher jobNameEndsWith(java.lang.String)
    {
        java.lang.String r0;
        org.quartz.impl.matchers.NameMatcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.quartz.impl.matchers.NameMatcher: org.quartz.impl.matchers.NameMatcher nameEndsWith(java.lang.String)>(r0);

        return $r1;
    }

    public static org.quartz.impl.matchers.NameMatcher triggerNameEndsWith(java.lang.String)
    {
        java.lang.String r0;
        org.quartz.impl.matchers.NameMatcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.quartz.impl.matchers.NameMatcher: org.quartz.impl.matchers.NameMatcher nameEndsWith(java.lang.String)>(r0);

        return $r1;
    }

    public static org.quartz.impl.matchers.NameMatcher nameContains(java.lang.String)
    {
        java.lang.String r0;
        org.quartz.impl.matchers.NameMatcher $r1;
        org.quartz.impl.matchers.StringMatcher$StringOperatorName $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.quartz.impl.matchers.NameMatcher;

        $r2 = <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName CONTAINS>;

        specialinvoke $r1.<org.quartz.impl.matchers.NameMatcher: void <init>(java.lang.String,org.quartz.impl.matchers.StringMatcher$StringOperatorName)>(r0, $r2);

        return $r1;
    }

    public static org.quartz.impl.matchers.NameMatcher jobNameContains(java.lang.String)
    {
        java.lang.String r0;
        org.quartz.impl.matchers.NameMatcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.quartz.impl.matchers.NameMatcher: org.quartz.impl.matchers.NameMatcher nameContains(java.lang.String)>(r0);

        return $r1;
    }

    public static org.quartz.impl.matchers.NameMatcher triggerNameContains(java.lang.String)
    {
        java.lang.String r0;
        org.quartz.impl.matchers.NameMatcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.quartz.impl.matchers.NameMatcher: org.quartz.impl.matchers.NameMatcher nameContains(java.lang.String)>(r0);

        return $r1;
    }

    protected java.lang.String getValue(org.quartz.utils.Key)
    {
        org.quartz.impl.matchers.NameMatcher r0;
        org.quartz.utils.Key r1;
        java.lang.String $r2;

        r0 := @this: org.quartz.impl.matchers.NameMatcher;

        r1 := @parameter0: org.quartz.utils.Key;

        $r2 = virtualinvoke r1.<org.quartz.utils.Key: java.lang.String getName()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.quartz.impl.matchers.NameMatcher: long serialVersionUID> = -33104959459613480L;

        return;
    }
}
