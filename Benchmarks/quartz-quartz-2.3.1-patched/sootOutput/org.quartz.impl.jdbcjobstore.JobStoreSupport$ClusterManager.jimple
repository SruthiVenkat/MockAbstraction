class org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager extends java.lang.Thread
{
    private volatile boolean shutdown;
    private int numFails;
    final org.quartz.impl.jdbcjobstore.JobStoreSupport this$0;

    void <init>(org.quartz.impl.jdbcjobstore.JobStoreSupport)
    {
        org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager r0;
        org.quartz.impl.jdbcjobstore.JobStoreSupport r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9;
        java.lang.String $r4, $r7, $r10;
        boolean $z0;

        r0 := @this: org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager;

        r1 := @parameter0: org.quartz.impl.jdbcjobstore.JobStoreSupport;

        r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: boolean shutdown> = 0;

        r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: int numFails> = 0;

        virtualinvoke r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: void setPriority(int)>(7);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("QuartzScheduler_");

        $r4 = r1.<org.quartz.impl.jdbcjobstore.JobStoreSupport: java.lang.String instanceName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r7 = r1.<org.quartz.impl.jdbcjobstore.JobStoreSupport: java.lang.String instanceId>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ClusterManager");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: void setName(java.lang.String)>($r10);

        $z0 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.JobStoreSupport: boolean getMakeThreadsDaemons()>();

        virtualinvoke r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: void setDaemon(boolean)>($z0);

        return;
    }

    public void initialize()
    {
        org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager r0;
        org.quartz.spi.ThreadExecutor r1;
        org.quartz.impl.jdbcjobstore.JobStoreSupport $r2;

        r0 := @this: org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager;

        specialinvoke r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: boolean manage()>();

        $r2 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0>;

        r1 = virtualinvoke $r2.<org.quartz.impl.jdbcjobstore.JobStoreSupport: org.quartz.spi.ThreadExecutor getThreadExecutor()>();

        interfaceinvoke r1.<org.quartz.spi.ThreadExecutor: void execute(java.lang.Thread)>(r0);

        return;
    }

    public void shutdown()
    {
        org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager r0;

        r0 := @this: org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager;

        r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: boolean shutdown> = 1;

        virtualinvoke r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: void interrupt()>();

        return;
    }

    private boolean manage()
    {
        org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager r0;
        org.quartz.impl.jdbcjobstore.JobStoreSupport $r2, $r3, $r6;
        org.slf4j.Logger $r4, $r7;
        java.lang.Exception $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;
        boolean z0;

        r0 := @this: org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager;

        z0 = 0;

     label1:
        $r2 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0>;

        z0 = virtualinvoke $r2.<org.quartz.impl.jdbcjobstore.JobStoreSupport: boolean doCheckin()>();

        r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: int numFails> = 0;

        $r3 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0>;

        $r4 = virtualinvoke $r3.<org.quartz.impl.jdbcjobstore.JobStoreSupport: org.slf4j.Logger getLog()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>("ClusterManager: Check-in complete.");

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        $i0 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: int numFails>;

        $i1 = $i0 % 4;

        if $i1 != 0 goto label4;

        $r6 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0>;

        $r7 = virtualinvoke $r6.<org.quartz.impl.jdbcjobstore.JobStoreSupport: org.slf4j.Logger getLog()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClusterManager: Error managing cluster: ");

        $r10 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r12, $r5);

     label4:
        $i2 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: int numFails>;

        $i3 = $i2 + 1;

        r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: int numFails> = $i3;

     label5:
        return z0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void run()
    {
        org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager r0;
        long l0, $l1, $l2, $l5, l6, l7;
        boolean $z0, $z1, $z2, $z3;
        org.quartz.impl.jdbcjobstore.JobStoreSupport $r2, $r3, $r4, $r5;
        byte $b3;
        int $i4;
        java.lang.Exception $r6;

        r0 := @this: org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager;

     label1:
        $z2 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: boolean shutdown>;

        if $z2 != 0 goto label7;

        $z0 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: boolean shutdown>;

        if $z0 != 0 goto label6;

        $r3 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0>;

        l6 = virtualinvoke $r3.<org.quartz.impl.jdbcjobstore.JobStoreSupport: long getClusterCheckinInterval()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0>;

        $l2 = $r4.<org.quartz.impl.jdbcjobstore.JobStoreSupport: long lastCheckin>;

        l0 = $l1 - $l2;

        l7 = l6 - l0;

        $b3 = l7 cmp 0L;

        if $b3 > 0 goto label2;

        l7 = 100L;

     label2:
        $i4 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: int numFails>;

        if $i4 <= 0 goto label3;

        $r5 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0>;

        $l5 = virtualinvoke $r5.<org.quartz.impl.jdbcjobstore.JobStoreSupport: long getDbRetryInterval()>();

        l7 = staticinvoke <java.lang.Math: long max(long,long)>($l5, l7);

     label3:
        staticinvoke <java.lang.Thread: void sleep(long)>(l7);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

     label6:
        $z3 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: boolean shutdown>;

        if $z3 != 0 goto label1;

        $z1 = specialinvoke r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: boolean manage()>();

        if $z1 == 0 goto label1;

        $r2 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0>;

        virtualinvoke $r2.<org.quartz.impl.jdbcjobstore.JobStoreSupport: void signalSchedulingChangeImmediately(long)>(0L);

        goto label1;

     label7:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }
}
