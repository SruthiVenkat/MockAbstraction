class org.quartz.impl.jdbcjobstore.JobStoreSupport$44 extends java.lang.Object implements org.quartz.impl.jdbcjobstore.JobStoreSupport$TransactionCallback
{
    final java.util.List val$triggers;
    final org.quartz.impl.jdbcjobstore.JobStoreSupport this$0;

    void <init>(org.quartz.impl.jdbcjobstore.JobStoreSupport, java.util.List)
    {
        org.quartz.impl.jdbcjobstore.JobStoreSupport$44 r0;
        org.quartz.impl.jdbcjobstore.JobStoreSupport r1;
        java.util.List r2;

        r0 := @this: org.quartz.impl.jdbcjobstore.JobStoreSupport$44;

        r1 := @parameter0: org.quartz.impl.jdbcjobstore.JobStoreSupport;

        r2 := @parameter1: java.util.List;

        r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$44: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0> = r1;

        r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$44: java.util.List val$triggers> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List execute(java.sql.Connection) throws org.quartz.JobPersistenceException
    {
        org.quartz.impl.jdbcjobstore.JobStoreSupport$44 r0;
        java.sql.Connection r1;
        java.util.Iterator r3;
        org.quartz.spi.OperableTrigger r4;
        java.util.ArrayList $r5;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;
        org.quartz.impl.jdbcjobstore.JobStoreSupport $r8;
        org.quartz.spi.TriggerFiredResult $r9, $r11, $r13, r15;
        java.lang.RuntimeException $r10;
        org.quartz.JobPersistenceException $r12;
        org.quartz.spi.TriggerFiredBundle r14;

        r0 := @this: org.quartz.impl.jdbcjobstore.JobStoreSupport$44;

        r1 := @parameter0: java.sql.Connection;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$44: java.util.List val$triggers>;

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.quartz.spi.OperableTrigger) $r7;

     label2:
        $r8 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$44: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0>;

        r14 = virtualinvoke $r8.<org.quartz.impl.jdbcjobstore.JobStoreSupport: org.quartz.spi.TriggerFiredBundle triggerFired(java.sql.Connection,org.quartz.spi.OperableTrigger)>(r1, r4);

        $r9 = new org.quartz.spi.TriggerFiredResult;

        specialinvoke $r9.<org.quartz.spi.TriggerFiredResult: void <init>(org.quartz.spi.TriggerFiredBundle)>(r14);

        r15 = $r9;

     label3:
        goto label6;

     label4:
        $r12 := @caughtexception;

        $r13 = new org.quartz.spi.TriggerFiredResult;

        specialinvoke $r13.<org.quartz.spi.TriggerFiredResult: void <init>(java.lang.Exception)>($r12);

        r15 = $r13;

        goto label6;

     label5:
        $r10 := @caughtexception;

        $r11 = new org.quartz.spi.TriggerFiredResult;

        specialinvoke $r11.<org.quartz.spi.TriggerFiredResult: void <init>(java.lang.Exception)>($r10);

        r15 = $r11;

     label6:
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r15);

        goto label1;

     label7:
        return $r5;

        catch org.quartz.JobPersistenceException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label5;
    }

    public volatile java.lang.Object execute(java.sql.Connection) throws org.quartz.JobPersistenceException
    {
        org.quartz.impl.jdbcjobstore.JobStoreSupport$44 r0;
        java.sql.Connection r1;
        java.util.List $r2;

        r0 := @this: org.quartz.impl.jdbcjobstore.JobStoreSupport$44;

        r1 := @parameter0: java.sql.Connection;

        $r2 = virtualinvoke r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$44: java.util.List execute(java.sql.Connection)>(r1);

        return $r2;
    }
}
