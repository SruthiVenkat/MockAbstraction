public class org.quartz.simpl.SimpleJobFactory extends java.lang.Object implements org.quartz.spi.JobFactory
{
    private final org.slf4j.Logger log;

    public void <init>()
    {
        org.quartz.simpl.SimpleJobFactory r0;
        java.lang.Class $r1;
        org.slf4j.Logger $r2;

        r0 := @this: org.quartz.simpl.SimpleJobFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r1);

        r0.<org.quartz.simpl.SimpleJobFactory: org.slf4j.Logger log> = $r2;

        return;
    }

    protected org.slf4j.Logger getLog()
    {
        org.quartz.simpl.SimpleJobFactory r0;
        org.slf4j.Logger $r1;

        r0 := @this: org.quartz.simpl.SimpleJobFactory;

        $r1 = r0.<org.quartz.simpl.SimpleJobFactory: org.slf4j.Logger log>;

        return $r1;
    }

    public org.quartz.Job newJob(org.quartz.spi.TriggerFiredBundle, org.quartz.Scheduler) throws org.quartz.SchedulerException
    {
        org.quartz.simpl.SimpleJobFactory r0;
        org.quartz.spi.TriggerFiredBundle r1;
        org.quartz.Scheduler r2;
        org.quartz.JobDetail r3;
        java.lang.Class r4, $r23;
        org.slf4j.Logger $r7, $r11;
        boolean $z0;
        java.lang.Object $r8;
        org.quartz.Job $r9;
        java.lang.StringBuilder $r10, $r12, $r14, $r15, $r17, $r21, $r22, $r25, $r26;
        org.quartz.JobKey $r13;
        java.lang.String $r16, $r18, $r24, $r27;
        java.lang.Exception $r19;
        org.quartz.SchedulerException $r20;

        r0 := @this: org.quartz.simpl.SimpleJobFactory;

        r1 := @parameter0: org.quartz.spi.TriggerFiredBundle;

        r2 := @parameter1: org.quartz.Scheduler;

        r3 = virtualinvoke r1.<org.quartz.spi.TriggerFiredBundle: org.quartz.JobDetail getJobDetail()>();

        r4 = interfaceinvoke r3.<org.quartz.JobDetail: java.lang.Class getJobClass()>();

     label1:
        $r7 = r0.<org.quartz.simpl.SimpleJobFactory: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r11 = r0.<org.quartz.simpl.SimpleJobFactory: org.slf4j.Logger log>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Producing instance of Job \'");

        $r13 = interfaceinvoke r3.<org.quartz.JobDetail: org.quartz.JobKey getKey()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', class=");

        $r16 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r18);

     label2:
        $r8 = virtualinvoke r4.<java.lang.Class: java.lang.Object newInstance()>();

        $r9 = (org.quartz.Job) $r8;

     label3:
        return $r9;

     label4:
        $r19 := @caughtexception;

        $r20 = new org.quartz.SchedulerException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem instantiating class \'");

        $r23 = interfaceinvoke r3.<org.quartz.JobDetail: java.lang.Class getJobClass()>();

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r27, $r19);

        throw $r20;

        catch java.lang.Exception from label1 to label3 with label4;
    }
}
