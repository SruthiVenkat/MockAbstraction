public abstract class org.quartz.SerializationTestSupport extends junit.framework.TestCase
{

    public void <init>()
    {
        org.quartz.SerializationTestSupport r0;

        r0 := @this: org.quartz.SerializationTestSupport;

        specialinvoke r0.<junit.framework.TestCase: void <init>()>();

        return;
    }

    protected abstract java.lang.Object getTargetObject() throws java.lang.Exception;

    protected abstract java.lang.String[] getVersions();

    protected abstract void verifyMatch(java.lang.Object, java.lang.Object);

    public void testSerialization() throws java.lang.Exception
    {
        org.quartz.SerializationTestSupport r0;
        java.lang.Object r1, $r6;
        java.lang.String r2;
        java.lang.String[] $r3, $r4;
        int $i0, i1;
        java.lang.Class $r5;

        r0 := @this: org.quartz.SerializationTestSupport;

        r1 = virtualinvoke r0.<org.quartz.SerializationTestSupport: java.lang.Object getTargetObject()>();

        i1 = 0;

     label1:
        $r3 = virtualinvoke r0.<org.quartz.SerializationTestSupport: java.lang.String[] getVersions()>();

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label2;

        $r4 = virtualinvoke r0.<org.quartz.SerializationTestSupport: java.lang.String[] getVersions()>();

        r2 = $r4[i1];

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke r0.<org.quartz.SerializationTestSupport: java.lang.Object deserialize(java.lang.String,java.lang.Class)>(r2, $r5);

        virtualinvoke r0.<org.quartz.SerializationTestSupport: void verifyMatch(java.lang.Object,java.lang.Object)>(r1, $r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected java.lang.Object deserialize(java.lang.String, java.lang.Class) throws java.lang.Exception
    {
        org.quartz.SerializationTestSupport r0;
        java.lang.String r1, $r7;
        java.lang.Class r2, $r6;
        java.io.InputStream r3;
        java.lang.Object r5;
        java.io.ObjectInputStream $r8;

        r0 := @this: org.quartz.SerializationTestSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = specialinvoke r0.<org.quartz.SerializationTestSupport: java.lang.String getSerializedFileName(java.lang.String,java.lang.Class)>(r1, r2);

        r3 = virtualinvoke $r6.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r7);

        $r8 = new java.io.ObjectInputStream;

        specialinvoke $r8.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r3);

        r5 = virtualinvoke $r8.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        virtualinvoke $r8.<java.io.ObjectInputStream: void close()>();

        virtualinvoke r3.<java.io.InputStream: void close()>();

        return r5;
    }

    public void writeJobDataFile(java.lang.String) throws java.lang.Exception
    {
        org.quartz.SerializationTestSupport r0;
        java.lang.String r1, $r7;
        java.lang.Object r2;
        java.io.FileOutputStream $r5;
        java.lang.Class $r6;
        java.io.ObjectOutputStream $r8;

        r0 := @this: org.quartz.SerializationTestSupport;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.SerializationTestSupport: java.lang.Object getTargetObject()>();

        $r5 = new java.io.FileOutputStream;

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = specialinvoke r0.<org.quartz.SerializationTestSupport: java.lang.String getSerializedFileName(java.lang.String,java.lang.Class)>(r1, $r6);

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.lang.String)>($r7);

        $r8 = new java.io.ObjectOutputStream;

        specialinvoke $r8.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r5);

        virtualinvoke $r8.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r2);

        virtualinvoke $r8.<java.io.ObjectOutputStream: void flush()>();

        virtualinvoke $r5.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r8.<java.io.ObjectOutputStream: void close()>();

        return;
    }

    private java.lang.String getSerializedFileName(java.lang.String, java.lang.Class)
    {
        org.quartz.SerializationTestSupport r0;
        java.lang.String r1, r3, $r5, $r10;
        java.lang.Class r2;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        int i0, $i1;

        r0 := @this: org.quartz.SerializationTestSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        i0 = virtualinvoke r3.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if i0 >= 0 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = i0 + 1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ser");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }
}
