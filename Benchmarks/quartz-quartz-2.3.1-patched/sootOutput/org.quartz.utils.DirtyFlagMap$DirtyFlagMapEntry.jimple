class org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry extends java.lang.Object implements java.util.Map$Entry
{
    private java.util.Map$Entry entry;
    final org.quartz.utils.DirtyFlagMap this$0;

    public void <init>(org.quartz.utils.DirtyFlagMap, java.util.Map$Entry)
    {
        org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry r0;
        org.quartz.utils.DirtyFlagMap r1;
        java.util.Map$Entry r2;

        r0 := @this: org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry;

        r1 := @parameter0: org.quartz.utils.DirtyFlagMap;

        r2 := @parameter1: java.util.Map$Entry;

        r0.<org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry: org.quartz.utils.DirtyFlagMap this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry: java.util.Map$Entry entry> = r2;

        return;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry r0;
        java.lang.Object r1, $r4;
        org.quartz.utils.DirtyFlagMap $r2;
        java.util.Map$Entry $r3;

        r0 := @this: org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry: org.quartz.utils.DirtyFlagMap this$0>;

        staticinvoke <org.quartz.utils.DirtyFlagMap: boolean access$002(org.quartz.utils.DirtyFlagMap,boolean)>($r2, 1);

        $r3 = r0.<org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry: java.util.Map$Entry entry>;

        $r4 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(r1);

        return $r4;
    }

    public java.lang.Object getKey()
    {
        org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry r0;
        java.util.Map$Entry $r1;
        java.lang.Object $r2;

        r0 := @this: org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry;

        $r1 = r0.<org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry: java.util.Map$Entry entry>;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r2;
    }

    public java.lang.Object getValue()
    {
        org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry r0;
        java.util.Map$Entry $r1;
        java.lang.Object $r2;

        r0 := @this: org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry;

        $r1 = r0.<org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry: java.util.Map$Entry entry>;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry r0;
        java.lang.Object r1;
        java.util.Map$Entry $r2;
        boolean $z0;

        r0 := @this: org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry: java.util.Map$Entry entry>;

        $z0 = interfaceinvoke $r2.<java.util.Map$Entry: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }
}
