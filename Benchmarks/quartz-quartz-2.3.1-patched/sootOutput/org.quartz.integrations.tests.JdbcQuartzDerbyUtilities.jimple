public final class org.quartz.integrations.tests.JdbcQuartzDerbyUtilities extends java.lang.Object
{
    private static final org.slf4j.Logger LOG;
    private static final java.lang.String DATABASE_DRIVER_CLASS;
    public static final java.lang.String DATABASE_CONNECTION_PREFIX;
    private static final java.util.List DATABASE_SETUP_STATEMENTS;
    private static final java.util.List DATABASE_TEARDOWN_STATEMENTS;
    private static final java.lang.String DERBY_DIRECTORY;
    private static final java.util.Properties PROPS;

    public static void createDatabase() throws java.sql.SQLException
    {
        java.sql.Connection r1;
        java.sql.Statement r2;
        java.util.Iterator r3;
        java.lang.String r4, $r7, $r9;
        java.io.File $r6;
        java.util.Properties $r8;
        java.util.List $r10;
        boolean $z0;
        java.lang.Object $r12;
        java.lang.Throwable $r13;

        $r6 = new java.io.File;

        $r7 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.lang.String DERBY_DIRECTORY>;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7);

        staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: void delete(java.io.File)>($r6);

        $r9 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.lang.String DATABASE_CONNECTION_PREFIX>;

        $r8 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.util.Properties PROPS>;

        r1 = staticinvoke <java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.util.Properties)>($r9, $r8);

     label1:
        r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.Statement createStatement()>();

        $r10 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.util.List DATABASE_SETUP_STATEMENTS>;

        r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r12;

        interfaceinvoke r2.<java.sql.Statement: void addBatch(java.lang.String)>(r4);

        goto label2;

     label3:
        interfaceinvoke r2.<java.sql.Statement: int[] executeBatch()>();

     label4:
        interfaceinvoke r1.<java.sql.Connection: void close()>();

        goto label7;

     label5:
        $r13 := @caughtexception;

     label6:
        interfaceinvoke r1.<java.sql.Connection: void close()>();

        throw $r13;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static int triggersInAcquiredState() throws java.sql.SQLException
    {
        java.sql.Connection r0;
        java.sql.Statement r1;
        java.sql.ResultSet r2;
        java.util.Properties $r4;
        java.lang.String $r5;
        boolean $z0;
        java.lang.Throwable $r6;
        int i0;

        i0 = 0;

        $r5 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.lang.String DATABASE_CONNECTION_PREFIX>;

        $r4 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.util.Properties PROPS>;

        r0 = staticinvoke <java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.util.Properties)>($r5, $r4);

     label1:
        r1 = interfaceinvoke r0.<java.sql.Connection: java.sql.Statement createStatement()>();

        r2 = interfaceinvoke r1.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("SELECT count( * ) FROM QRTZ_TRIGGERS WHERE TRIGGER_STATE = \'ACQUIRED\' ");

     label2:
        $z0 = interfaceinvoke r2.<java.sql.ResultSet: boolean next()>();

        if $z0 == 0 goto label3;

        i0 = interfaceinvoke r2.<java.sql.ResultSet: int getInt(int)>(1);

        goto label2;

     label3:
        interfaceinvoke r0.<java.sql.Connection: void close()>();

        goto label6;

     label4:
        $r6 := @caughtexception;

     label5:
        interfaceinvoke r0.<java.sql.Connection: void close()>();

        throw $r6;

     label6:
        return i0;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static java.math.BigDecimal timesTriggered(java.lang.String, java.lang.String) throws java.sql.SQLException
    {
        java.lang.String r0, r1, $r7;
        java.sql.Connection r2;
        java.sql.PreparedStatement r3;
        java.sql.ResultSet r4;
        java.util.Properties $r6;
        java.lang.Throwable $r8;
        java.math.BigDecimal r9, r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r9 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;

        $r7 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.lang.String DATABASE_CONNECTION_PREFIX>;

        $r6 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.util.Properties PROPS>;

        r2 = staticinvoke <java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.util.Properties)>($r7, $r6);

     label1:
        r3 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("SELECT TIMES_TRIGGERED FROM QRTZ_SIMPLE_TRIGGERS WHERE TRIGGER_NAME = ? AND TRIGGER_GROUP = ? ");

        interfaceinvoke r3.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, r0);

        interfaceinvoke r3.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, r1);

        r4 = interfaceinvoke r3.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>();

        interfaceinvoke r4.<java.sql.ResultSet: boolean next()>();

        r10 = interfaceinvoke r4.<java.sql.ResultSet: java.math.BigDecimal getBigDecimal(int)>(1);

     label2:
        interfaceinvoke r2.<java.sql.Connection: void close()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

     label4:
        interfaceinvoke r2.<java.sql.Connection: void close()>();

        throw $r8;

     label5:
        return r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void destroyDatabase() throws java.sql.SQLException
    {
        java.sql.Connection r0;
        java.util.Iterator r1;
        java.lang.String r2, $r5, $r9;
        java.util.Properties $r4;
        java.util.List $r6;
        boolean $z0;
        java.io.File $r8;
        java.lang.Object $r10;
        java.lang.Throwable $r11;
        java.sql.Statement r12;

        $r5 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.lang.String DATABASE_CONNECTION_PREFIX>;

        $r4 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.util.Properties PROPS>;

        r0 = staticinvoke <java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.util.Properties)>($r5, $r4);

     label1:
        r12 = interfaceinvoke r0.<java.sql.Connection: java.sql.Statement createStatement()>();

        $r6 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.util.List DATABASE_TEARDOWN_STATEMENTS>;

        r1 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r10;

        interfaceinvoke r12.<java.sql.Statement: void addBatch(java.lang.String)>(r2);

        goto label2;

     label3:
        interfaceinvoke r12.<java.sql.Statement: int[] executeBatch()>();

     label4:
        interfaceinvoke r0.<java.sql.Connection: void close()>();

        goto label7;

     label5:
        $r11 := @caughtexception;

     label6:
        interfaceinvoke r0.<java.sql.Connection: void close()>();

        throw $r11;

     label7:
        $r8 = new java.io.File;

        $r9 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.lang.String DERBY_DIRECTORY>;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r9);

        staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: void delete(java.io.File)>($r8);

        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void <init>()
    {
        org.quartz.integrations.tests.JdbcQuartzDerbyUtilities r0;

        r0 := @this: org.quartz.integrations.tests.JdbcQuartzDerbyUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void delete(java.io.File)
    {
        java.io.File r0, r2;
        java.io.File[] r1;
        int i0, i1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;
        org.slf4j.Logger $r4;
        java.lang.String $r8;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: void delete(java.io.File)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        $z1 = virtualinvoke r0.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label3;

        $r4 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: org.slf4j.Logger LOG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete file: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" certainly because it does not exist yet");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>($r8);

     label3:
        return;
    }

    static java.util.Properties access$000()
    {
        java.util.Properties $r0;

        $r0 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.util.Properties PROPS>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String r0, $r4, $r6, $r13, $r16, $r19, $r43, $r50, r63, r71, r75, r80, r81, r84;
        org.slf4j.Logger $r2, $r10, $r47;
        java.util.Properties $r3, $r20, $r22;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r31, $r32, $r39, $r40, $r42, $r44, $r45, $r46, $r48, $r49;
        java.lang.Class $r24, $r27, $r35;
        java.util.ArrayList $r26, $r34;
        java.lang.ClassLoader $r28, $r36;
        java.io.BufferedReader $r29, $r37;
        java.io.InputStreamReader $r30, $r38;
        boolean $z0, $z1, $z2, $z4;
        java.io.IOException $r51, $r53;
        java.lang.AssertionError $r52, $r54, $r57, $r59, $r62;
        java.lang.Throwable $r55, $r60;
        java.lang.IllegalAccessException $r56;
        java.lang.ClassNotFoundException $r58;
        java.lang.InstantiationException $r61;
        java.io.InputStream r68, r77;
        java.lang.String[] r74, r83;
        int i0, i1, i2, i3;

        <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.lang.String DATABASE_DRIVER_CLASS> = "org.apache.derby.jdbc.ClientDriver";

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/quartz/integrations/tests/JdbcQuartzDerbyUtilities;");

        <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: org.slf4j.Logger LOG> = $r2;

        $r3 = new java.util.Properties;

        specialinvoke $r3.<java.util.Properties: void <init>()>();

        <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.util.Properties PROPS> = $r3;

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("buildDirectory");

        if $r4 == null goto label01;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("buildDirectory");

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/quartzTestDb");

        r63 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        $r47 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: org.slf4j.Logger LOG>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("running the tests with maven, the db will be stored in ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r47.<org.slf4j.Logger: void info(java.lang.String)>($r50);

        goto label02;

     label01:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quartzTestDb");

        r63 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: org.slf4j.Logger LOG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not using maven, the db will be stored in ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>($r13);

     label02:
        <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.lang.String DERBY_DIRECTORY> = r63;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jdbc:derby://localhost:1527/");

        $r16 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.lang.String DERBY_DIRECTORY>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";create=true");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.lang.String DATABASE_CONNECTION_PREFIX> = $r19;

        $r20 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.util.Properties PROPS>;

        virtualinvoke $r20.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("user", "quartz");

        $r22 = <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.util.Properties PROPS>;

        virtualinvoke $r22.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("password", "quartz");

     label03:
        $r24 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.derby.jdbc.ClientDriver");

        virtualinvoke $r24.<java.lang.Class: java.lang.Object newInstance()>();

     label04:
        goto label08;

     label05:
        $r58 := @caughtexception;

        $r59 = new java.lang.AssertionError;

        specialinvoke $r59.<java.lang.AssertionError: void <init>(java.lang.Object)>($r58);

        throw $r59;

     label06:
        $r61 := @caughtexception;

        $r62 = new java.lang.AssertionError;

        specialinvoke $r62.<java.lang.AssertionError: void <init>(java.lang.Object)>($r61);

        throw $r62;

     label07:
        $r56 := @caughtexception;

        $r57 = new java.lang.AssertionError;

        specialinvoke $r57.<java.lang.AssertionError: void <init>(java.lang.Object)>($r56);

        throw $r57;

     label08:
        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

     label09:
        $r27 = class "Lorg/quartz/integrations/tests/JdbcQuartzDerbyUtilities$DerbyConnectionProvider;";

        $r28 = virtualinvoke $r27.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r68 = virtualinvoke $r28.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("org/quartz/impl/jdbcjobstore/tables_derby.sql");

     label10:
        $r29 = new java.io.BufferedReader;

        $r30 = new java.io.InputStreamReader;

        specialinvoke $r30.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r68, "US-ASCII");

        specialinvoke $r29.<java.io.BufferedReader: void <init>(java.io.Reader)>($r30);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

     label11:
        r71 = virtualinvoke $r29.<java.io.BufferedReader: java.lang.String readLine()>();

        if r71 != null goto label12;

        goto label14;

     label12:
        $z0 = virtualinvoke r71.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        if $z0 != 0 goto label13;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label13:
        goto label11;

     label14:
        r0 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        virtualinvoke r68.<java.io.InputStream: void close()>();

        goto label18;

     label16:
        $r60 := @caughtexception;

     label17:
        virtualinvoke r68.<java.io.InputStream: void close()>();

        throw $r60;

     label18:
        goto label20;

     label19:
        $r51 := @caughtexception;

        $r52 = new java.lang.AssertionError;

        specialinvoke $r52.<java.lang.AssertionError: void <init>(java.lang.Object)>($r51);

        throw $r52;

     label20:
        r74 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i0 = lengthof r74;

        i1 = 0;

     label21:
        if i1 >= i0 goto label23;

        r75 = r74[i1];

        $z4 = virtualinvoke r75.<java.lang.String: boolean matches(java.lang.String)>("\\s*");

        if $z4 != 0 goto label22;

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>(r75);

     label22:
        i1 = i1 + 1;

        goto label21;

     label23:
        <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.util.List DATABASE_SETUP_STATEMENTS> = $r26;

        $r34 = new java.util.ArrayList;

        specialinvoke $r34.<java.util.ArrayList: void <init>()>();

     label24:
        $r35 = class "Lorg/quartz/integrations/tests/JdbcQuartzDerbyUtilities$DerbyConnectionProvider;";

        $r36 = virtualinvoke $r35.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r77 = virtualinvoke $r36.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("tables_derby_drop.sql");

     label25:
        $r37 = new java.io.BufferedReader;

        $r38 = new java.io.InputStreamReader;

        specialinvoke $r38.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r77, "US-ASCII");

        specialinvoke $r37.<java.io.BufferedReader: void <init>(java.io.Reader)>($r38);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

     label26:
        r80 = virtualinvoke $r37.<java.io.BufferedReader: java.lang.String readLine()>();

        if r80 != null goto label27;

        goto label29;

     label27:
        $z1 = virtualinvoke r80.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        if $z1 != 0 goto label28;

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r80);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label28:
        goto label26;

     label29:
        r81 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

     label30:
        virtualinvoke r77.<java.io.InputStream: void close()>();

        goto label33;

     label31:
        $r55 := @caughtexception;

     label32:
        virtualinvoke r77.<java.io.InputStream: void close()>();

        throw $r55;

     label33:
        goto label35;

     label34:
        $r53 := @caughtexception;

        $r54 = new java.lang.AssertionError;

        specialinvoke $r54.<java.lang.AssertionError: void <init>(java.lang.Object)>($r53);

        throw $r54;

     label35:
        r83 = virtualinvoke r81.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i2 = lengthof r83;

        i3 = 0;

     label36:
        if i3 >= i2 goto label38;

        r84 = r83[i3];

        $z2 = virtualinvoke r84.<java.lang.String: boolean matches(java.lang.String)>("\\s*");

        if $z2 != 0 goto label37;

        interfaceinvoke $r34.<java.util.List: boolean add(java.lang.Object)>(r84);

     label37:
        i3 = i3 + 1;

        goto label36;

     label38:
        <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.util.List DATABASE_TEARDOWN_STATEMENTS> = $r34;

        return;

        catch java.lang.ClassNotFoundException from label03 to label04 with label05;
        catch java.lang.InstantiationException from label03 to label04 with label06;
        catch java.lang.IllegalAccessException from label03 to label04 with label07;
        catch java.lang.Throwable from label10 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.io.IOException from label09 to label18 with label19;
        catch java.lang.Throwable from label25 to label30 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
        catch java.io.IOException from label24 to label33 with label34;
    }
}
