public class org.quartz.ee.jta.JTAJobRunShell extends org.quartz.core.JobRunShell
{
    private final java.lang.Integer transactionTimeout;
    private javax.transaction.UserTransaction ut;

    public void <init>(org.quartz.Scheduler, org.quartz.spi.TriggerFiredBundle)
    {
        org.quartz.ee.jta.JTAJobRunShell r0;
        org.quartz.Scheduler r1;
        org.quartz.spi.TriggerFiredBundle r2;

        r0 := @this: org.quartz.ee.jta.JTAJobRunShell;

        r1 := @parameter0: org.quartz.Scheduler;

        r2 := @parameter1: org.quartz.spi.TriggerFiredBundle;

        specialinvoke r0.<org.quartz.core.JobRunShell: void <init>(org.quartz.Scheduler,org.quartz.spi.TriggerFiredBundle)>(r1, r2);

        r0.<org.quartz.ee.jta.JTAJobRunShell: java.lang.Integer transactionTimeout> = null;

        return;
    }

    public void <init>(org.quartz.Scheduler, org.quartz.spi.TriggerFiredBundle, int)
    {
        org.quartz.ee.jta.JTAJobRunShell r0;
        org.quartz.Scheduler r1;
        org.quartz.spi.TriggerFiredBundle r2;
        int i0;
        java.lang.Integer $r3;

        r0 := @this: org.quartz.ee.jta.JTAJobRunShell;

        r1 := @parameter0: org.quartz.Scheduler;

        r2 := @parameter1: org.quartz.spi.TriggerFiredBundle;

        i0 := @parameter2: int;

        specialinvoke r0.<org.quartz.core.JobRunShell: void <init>(org.quartz.Scheduler,org.quartz.spi.TriggerFiredBundle)>(r1, r2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<org.quartz.ee.jta.JTAJobRunShell: java.lang.Integer transactionTimeout> = $r3;

        return;
    }

    protected void begin() throws org.quartz.SchedulerException
    {
        org.quartz.ee.jta.JTAJobRunShell r0;
        org.slf4j.Logger $r2, $r5;
        javax.transaction.UserTransaction $r3, $r6, $r8;
        java.lang.Integer $r4, $r7;
        int $i0;
        java.lang.Throwable $r9;
        java.lang.Exception $r10;
        org.quartz.SchedulerException $r11, $r12;

        r0 := @this: org.quartz.ee.jta.JTAJobRunShell;

        specialinvoke r0.<org.quartz.ee.jta.JTAJobRunShell: void cleanupUserTransaction()>();

     label1:
        $r2 = virtualinvoke r0.<org.quartz.ee.jta.JTAJobRunShell: org.slf4j.Logger getLog()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>("Looking up UserTransaction.");

        $r3 = staticinvoke <org.quartz.ee.jta.UserTransactionHelper: javax.transaction.UserTransaction lookupUserTransaction()>();

        r0.<org.quartz.ee.jta.JTAJobRunShell: javax.transaction.UserTransaction ut> = $r3;

        $r4 = r0.<org.quartz.ee.jta.JTAJobRunShell: java.lang.Integer transactionTimeout>;

        if $r4 == null goto label2;

        $r8 = r0.<org.quartz.ee.jta.JTAJobRunShell: javax.transaction.UserTransaction ut>;

        $r7 = r0.<org.quartz.ee.jta.JTAJobRunShell: java.lang.Integer transactionTimeout>;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r8.<javax.transaction.UserTransaction: void setTransactionTimeout(int)>($i0);

     label2:
        $r5 = virtualinvoke r0.<org.quartz.ee.jta.JTAJobRunShell: org.slf4j.Logger getLog()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>("Beginning UserTransaction.");

        $r6 = r0.<org.quartz.ee.jta.JTAJobRunShell: javax.transaction.UserTransaction ut>;

        interfaceinvoke $r6.<javax.transaction.UserTransaction: void begin()>();

     label3:
        goto label8;

     label4:
        $r12 := @caughtexception;

        throw $r12;

     label5:
        $r10 := @caughtexception;

        $r11 = new org.quartz.SchedulerException;

        specialinvoke $r11.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>("JTAJobRunShell could not start UserTransaction.", $r10);

        throw $r11;

     label6:
        $r9 := @caughtexception;

     label7:
        specialinvoke r0.<org.quartz.ee.jta.JTAJobRunShell: void cleanupUserTransaction()>();

        throw $r9;

     label8:
        return;

        catch org.quartz.SchedulerException from label1 to label3 with label4;
        catch java.lang.Exception from label1 to label3 with label5;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label7 with label6;
    }

    protected void complete(boolean) throws org.quartz.SchedulerException
    {
        org.quartz.ee.jta.JTAJobRunShell r0;
        javax.transaction.UserTransaction $r2, $r3, $r5, $r7;
        int $i0;
        org.slf4j.Logger $r4, $r6, $r8;
        javax.transaction.SystemException $r9;
        org.quartz.SchedulerException $r10, $r13, $r15;
        java.lang.Throwable $r11;
        java.lang.Exception $r12, $r14;
        boolean z0;

        r0 := @this: org.quartz.ee.jta.JTAJobRunShell;

        z0 := @parameter0: boolean;

        $r2 = r0.<org.quartz.ee.jta.JTAJobRunShell: javax.transaction.UserTransaction ut>;

        if $r2 != null goto label01;

        return;

     label01:
        $r3 = r0.<org.quartz.ee.jta.JTAJobRunShell: javax.transaction.UserTransaction ut>;

        $i0 = interfaceinvoke $r3.<javax.transaction.UserTransaction: int getStatus()>();

        if $i0 != 1 goto label02;

        $r8 = virtualinvoke r0.<org.quartz.ee.jta.JTAJobRunShell: org.slf4j.Logger getLog()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String)>("UserTransaction marked for rollback only.");

        z0 = 0;

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

        $r10 = new org.quartz.SchedulerException;

        specialinvoke $r10.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>("JTAJobRunShell could not read UserTransaction status.", $r9);

        throw $r10;

     label04:
        if z0 == 0 goto label08;

     label05:
        $r6 = virtualinvoke r0.<org.quartz.ee.jta.JTAJobRunShell: org.slf4j.Logger getLog()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String)>("Committing UserTransaction.");

        $r7 = r0.<org.quartz.ee.jta.JTAJobRunShell: javax.transaction.UserTransaction ut>;

        interfaceinvoke $r7.<javax.transaction.UserTransaction: void commit()>();

     label06:
        goto label11;

     label07:
        $r14 := @caughtexception;

        $r15 = new org.quartz.SchedulerException;

        specialinvoke $r15.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>("JTAJobRunShell could not commit UserTransaction.", $r14);

        throw $r15;

     label08:
        $r4 = virtualinvoke r0.<org.quartz.ee.jta.JTAJobRunShell: org.slf4j.Logger getLog()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>("Rolling-back UserTransaction.");

        $r5 = r0.<org.quartz.ee.jta.JTAJobRunShell: javax.transaction.UserTransaction ut>;

        interfaceinvoke $r5.<javax.transaction.UserTransaction: void rollback()>();

     label09:
        goto label11;

     label10:
        $r12 := @caughtexception;

        $r13 = new org.quartz.SchedulerException;

        specialinvoke $r13.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>("JTAJobRunShell could not rollback UserTransaction.", $r12);

        throw $r13;

     label11:
        specialinvoke r0.<org.quartz.ee.jta.JTAJobRunShell: void cleanupUserTransaction()>();

        goto label13;

     label12:
        $r11 := @caughtexception;

        specialinvoke r0.<org.quartz.ee.jta.JTAJobRunShell: void cleanupUserTransaction()>();

        throw $r11;

     label13:
        return;

        catch javax.transaction.SystemException from label01 to label02 with label03;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label11 with label12;
    }

    public void passivate()
    {
        org.quartz.ee.jta.JTAJobRunShell r0;

        r0 := @this: org.quartz.ee.jta.JTAJobRunShell;

        specialinvoke r0.<org.quartz.ee.jta.JTAJobRunShell: void cleanupUserTransaction()>();

        specialinvoke r0.<org.quartz.core.JobRunShell: void passivate()>();

        return;
    }

    private void cleanupUserTransaction()
    {
        org.quartz.ee.jta.JTAJobRunShell r0;
        javax.transaction.UserTransaction $r1, $r2;

        r0 := @this: org.quartz.ee.jta.JTAJobRunShell;

        $r1 = r0.<org.quartz.ee.jta.JTAJobRunShell: javax.transaction.UserTransaction ut>;

        if $r1 == null goto label1;

        $r2 = r0.<org.quartz.ee.jta.JTAJobRunShell: javax.transaction.UserTransaction ut>;

        staticinvoke <org.quartz.ee.jta.UserTransactionHelper: void returnUserTransaction(javax.transaction.UserTransaction)>($r2);

        r0.<org.quartz.ee.jta.JTAJobRunShell: javax.transaction.UserTransaction ut> = null;

     label1:
        return;
    }
}
