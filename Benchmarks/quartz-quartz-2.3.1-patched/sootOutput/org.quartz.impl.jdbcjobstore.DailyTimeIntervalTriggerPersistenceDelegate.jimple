public class org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate extends org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport
{

    public void <init>()
    {
        org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate r0;

        r0 := @this: org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate;

        specialinvoke r0.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport: void <init>()>();

        return;
    }

    public boolean canHandleTriggerType(org.quartz.spi.OperableTrigger)
    {
        org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate r0;
        org.quartz.spi.OperableTrigger r1;
        boolean $z0, $z1, $z2;
        org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl $r2;

        r0 := @this: org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate;

        r1 := @parameter0: org.quartz.spi.OperableTrigger;

        $z0 = r1 instanceof org.quartz.DailyTimeIntervalTrigger;

        if $z0 == 0 goto label1;

        $r2 = (org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl) r1;

        $z1 = virtualinvoke $r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: boolean hasAdditionalProperties()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.String getHandledTriggerTypeDiscriminator()
    {
        org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate r0;

        r0 := @this: org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate;

        return "DAILY_I";
    }

    protected org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties getTriggerProperties(org.quartz.spi.OperableTrigger)
    {
        org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate r0;
        org.quartz.spi.OperableTrigger r1;
        org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl r2;
        java.util.Set r4;
        java.lang.String r5, $r11, $r15;
        org.quartz.TimeOfDay r7, r8;
        org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties $r9;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9;
        org.quartz.DateBuilder$IntervalUnit $r10;
        java.lang.StringBuilder $r12, $r16, $r18, $r21, $r23, $r25;
        long $l3;

        r0 := @this: org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate;

        r1 := @parameter0: org.quartz.spi.OperableTrigger;

        r2 = (org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl) r1;

        $r9 = new org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties;

        specialinvoke $r9.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void <init>()>();

        $i0 = virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: int getRepeatInterval()>();

        virtualinvoke $r9.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void setInt1(int)>($i0);

        $r10 = virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>();

        $r11 = virtualinvoke $r10.<org.quartz.DateBuilder$IntervalUnit: java.lang.String name()>();

        virtualinvoke $r9.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void setString1(java.lang.String)>($r11);

        $i1 = virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: int getTimesTriggered()>();

        virtualinvoke $r9.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void setInt2(int)>($i1);

        r4 = virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Set getDaysOfWeek()>();

        r5 = specialinvoke r0.<org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate: java.lang.String join(java.util.Set,java.lang.String)>(r4, ",");

        virtualinvoke $r9.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void setString2(java.lang.String)>(r5);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        r7 = virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.TimeOfDay getStartTimeOfDay()>();

        if r7 == null goto label1;

        $i7 = virtualinvoke r7.<org.quartz.TimeOfDay: int getHour()>();

        $r21 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i8 = virtualinvoke r7.<org.quartz.TimeOfDay: int getMinute()>();

        $r23 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i9 = virtualinvoke r7.<org.quartz.TimeOfDay: int getSecond()>();

        $r25 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        goto label2;

     label1:
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",,,");

     label2:
        r8 = virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.TimeOfDay getEndTimeOfDay()>();

        if r8 == null goto label3;

        $i4 = virtualinvoke r8.<org.quartz.TimeOfDay: int getHour()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i5 = virtualinvoke r8.<org.quartz.TimeOfDay: int getMinute()>();

        $r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i6 = virtualinvoke r8.<org.quartz.TimeOfDay: int getSecond()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        goto label4;

     label3:
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",,,");

     label4:
        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void setString3(java.lang.String)>($r15);

        $i2 = virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: int getRepeatCount()>();

        $l3 = (long) $i2;

        virtualinvoke $r9.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void setLong1(long)>($l3);

        return $r9;
    }

    private java.lang.String join(java.util.Set, java.lang.String)
    {
        org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate r0;
        java.util.Set r1;
        java.lang.String r2, $r8;
        java.util.Iterator r4;
        java.lang.StringBuilder $r5, $r9;
        int $i0;
        java.lang.Object $r6, $r10;
        boolean $z0;

        r0 := @this: org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        if r1 == null goto label1;

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        if $i0 > 0 goto label2;

     label1:
        return "";

     label2:
        r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

     label3:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        goto label3;

     label4:
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    protected org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle getTriggerPropertyBundle(org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties)
    {
        org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate r0;
        org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties r1;
        int i0, i1, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14, i15;
        java.lang.String r2, r3, r4, $r21, $r22, $r23, $r25, $r26, $r27, r35;
        org.quartz.DateBuilder$IntervalUnit r5;
        org.quartz.DailyTimeIntervalScheduleBuilder r6, $r7, $r8;
        long $l2;
        java.util.Set $r9;
        org.quartz.TimeOfDay $r11, $r13, $r24, $r28, r37, r38;
        java.lang.String[] $r15, r33, r36;
        java.lang.Object[] $r16;
        java.lang.Integer $r17, $r31;
        org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle $r18;
        java.util.HashSet $r29;

        r0 := @this: org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate;

        r1 := @parameter0: org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties;

        $l2 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: long getLong1()>();

        i0 = (int) $l2;

        i1 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: int getInt1()>();

        r2 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: java.lang.String getString1()>();

        r3 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: java.lang.String getString2()>();

        r4 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: java.lang.String getString3()>();

        r5 = staticinvoke <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit valueOf(java.lang.String)>(r2);

        $r7 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>();

        $r8 = virtualinvoke $r7.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withInterval(int,org.quartz.DateBuilder$IntervalUnit)>(i1, r5);

        r6 = virtualinvoke $r8.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withRepeatCount(int)>(i0);

        if r3 == null goto label04;

        $r29 = new java.util.HashSet;

        specialinvoke $r29.<java.util.HashSet: void <init>()>();

        r33 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i5 = lengthof r33;

        if $i5 <= 0 goto label03;

        i7 = lengthof r33;

        i8 = 0;

     label01:
        if i8 >= i7 goto label02;

        r35 = r33[i8];

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r35);

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        interfaceinvoke $r29.<java.util.Set: boolean add(java.lang.Object)>($r31);

        i8 = i8 + 1;

        goto label01;

     label02:
        virtualinvoke r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder onDaysOfTheWeek(java.util.Set)>($r29);

     label03:
        goto label05;

     label04:
        $r9 = <org.quartz.DailyTimeIntervalScheduleBuilder: java.util.Set ALL_DAYS_OF_THE_WEEK>;

        virtualinvoke r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder onDaysOfTheWeek(java.util.Set)>($r9);

     label05:
        if r4 == null goto label10;

        r36 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i3 = lengthof r36;

        if $i3 < 3 goto label06;

        $r25 = r36[0];

        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

        $r26 = r36[1];

        i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        $r27 = r36[2];

        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);

        $r28 = new org.quartz.TimeOfDay;

        specialinvoke $r28.<org.quartz.TimeOfDay: void <init>(int,int,int)>(i9, i10, i11);

        r37 = $r28;

        goto label07;

     label06:
        r37 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourMinuteAndSecondOfDay(int,int,int)>(0, 0, 0);

     label07:
        virtualinvoke r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>(r37);

        $i4 = lengthof r36;

        if $i4 < 6 goto label08;

        $r21 = r36[3];

        i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21);

        $r22 = r36[4];

        i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22);

        $r23 = r36[5];

        i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23);

        $r24 = new org.quartz.TimeOfDay;

        specialinvoke $r24.<org.quartz.TimeOfDay: void <init>(int,int,int)>(i12, i13, i14);

        r38 = $r24;

        goto label09;

     label08:
        r38 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourMinuteAndSecondOfDay(int,int,int)>(23, 59, 59);

     label09:
        virtualinvoke r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAt(org.quartz.TimeOfDay)>(r38);

        goto label11;

     label10:
        $r11 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourMinuteAndSecondOfDay(int,int,int)>(0, 0, 0);

        virtualinvoke r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r11);

        $r13 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourMinuteAndSecondOfDay(int,int,int)>(23, 59, 59);

        virtualinvoke r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAt(org.quartz.TimeOfDay)>($r13);

     label11:
        i15 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: int getInt2()>();

        $r15 = newarray (java.lang.String)[1];

        $r15[0] = "timesTriggered";

        $r16 = newarray (java.lang.Object)[1];

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i15);

        $r16[0] = $r17;

        $r18 = new org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle;

        specialinvoke $r18.<org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle: void <init>(org.quartz.ScheduleBuilder,java.lang.String[],java.lang.Object[])>(r6, $r15, $r16);

        return $r18;
    }
}
