public class org.quartz.impl.QuartzServer extends org.quartz.listeners.SchedulerListenerSupport
{
    private org.quartz.Scheduler sched;

    void <init>()
    {
        org.quartz.impl.QuartzServer r0;

        r0 := @this: org.quartz.impl.QuartzServer;

        specialinvoke r0.<org.quartz.listeners.SchedulerListenerSupport: void <init>()>();

        r0.<org.quartz.impl.QuartzServer: org.quartz.Scheduler sched> = null;

        return;
    }

    public void serve(org.quartz.SchedulerFactory, boolean) throws java.lang.Exception
    {
        org.quartz.impl.QuartzServer r0;
        org.quartz.SchedulerFactory r1;
        boolean z0, $z1;
        org.quartz.Scheduler $r2, $r3, $r16;
        java.io.PrintStream $r4, $r5, $r6, $r7, $r8, $r12, $r15;
        java.io.BufferedReader $r9;
        java.io.InputStreamReader $r10;
        java.io.InputStream $r11;
        java.lang.String $r13, $r14;
        java.lang.Exception $r17;

        r0 := @this: org.quartz.impl.QuartzServer;

        r1 := @parameter0: org.quartz.SchedulerFactory;

        z0 := @parameter1: boolean;

        $r2 = interfaceinvoke r1.<org.quartz.SchedulerFactory: org.quartz.Scheduler getScheduler()>();

        r0.<org.quartz.impl.QuartzServer: org.quartz.Scheduler sched> = $r2;

        $r3 = r0.<org.quartz.impl.QuartzServer: org.quartz.Scheduler sched>;

        interfaceinvoke $r3.<org.quartz.Scheduler: void start()>();

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(3000L);

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

     label4:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("\n*** The scheduler successfully started.");

        if z0 == 0 goto label7;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("\n");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("The scheduler will now run until you type \"exit\"");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("   If it was configured to export itself via RMI,");

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("   then other process may now use it.");

        $r9 = new java.io.BufferedReader;

        $r10 = new java.io.InputStreamReader;

        $r11 = <java.lang.System: java.io.InputStream in>;

        specialinvoke $r10.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r11);

        specialinvoke $r9.<java.io.BufferedReader: void <init>(java.io.Reader)>($r10);

     label5:
        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>("Type \'exit\' to shutdown the server: ");

        $r13 = "exit";

        $r14 = virtualinvoke $r9.<java.io.BufferedReader: java.lang.String readLine()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label5;

        goto label6;

     label6:
        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("\n...Shutting down server...");

        $r16 = r0.<org.quartz.impl.QuartzServer: org.quartz.Scheduler sched>;

        interfaceinvoke $r16.<org.quartz.Scheduler: void shutdown(boolean)>(1);

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void schedulerError(java.lang.String, org.quartz.SchedulerException)
    {
        org.quartz.impl.QuartzServer r0;
        java.lang.String r1, $r7;
        org.quartz.SchedulerException r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.io.PrintStream $r4;

        r0 := @this: org.quartz.impl.QuartzServer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.quartz.SchedulerException;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

        virtualinvoke r2.<org.quartz.SchedulerException: void printStackTrace()>();

        return;
    }

    public void schedulerShutdown()
    {
        org.quartz.impl.QuartzServer r0;
        java.io.PrintStream $r1;

        r0 := @this: org.quartz.impl.QuartzServer;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("\n*** The scheduler is now shutdown.");

        r0.<org.quartz.impl.QuartzServer: org.quartz.Scheduler sched> = null;

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;
        java.lang.SecurityManager $r1;
        org.quartz.impl.QuartzServer $r2;
        int $i0, $i1;
        java.io.PrintStream $r3;
        java.lang.String $r4;
        boolean $z0;
        org.quartz.impl.StdSchedulerFactory $r5, $r6;
        java.rmi.RMISecurityManager $r7;
        java.lang.Exception $r8;

        r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r1 != null goto label1;

        $r7 = new java.rmi.RMISecurityManager;

        specialinvoke $r7.<java.rmi.RMISecurityManager: void <init>()>();

        staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>($r7);

     label1:
        $r2 = new org.quartz.impl.QuartzServer;

        specialinvoke $r2.<org.quartz.impl.QuartzServer: void <init>()>();

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r6 = new org.quartz.impl.StdSchedulerFactory;

        specialinvoke $r6.<org.quartz.impl.StdSchedulerFactory: void <init>()>();

        virtualinvoke $r2.<org.quartz.impl.QuartzServer: void serve(org.quartz.SchedulerFactory,boolean)>($r6, 0);

        goto label4;

     label2:
        $i1 = lengthof r0;

        if $i1 != 1 goto label3;

        $r4 = r0[0];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("console");

        if $z0 == 0 goto label3;

        $r5 = new org.quartz.impl.StdSchedulerFactory;

        specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>()>();

        virtualinvoke $r2.<org.quartz.impl.QuartzServer: void serve(org.quartz.SchedulerFactory,boolean)>($r5, 1);

        goto label4;

     label3:
        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("\nUsage: QuartzServer [console]");

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }
}
