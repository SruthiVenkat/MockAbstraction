public class org.quartz.core.jmx.JobDetailSupport extends java.lang.Object
{
    private static final java.lang.String COMPOSITE_TYPE_NAME;
    private static final java.lang.String COMPOSITE_TYPE_DESCRIPTION;
    private static final java.lang.String[] ITEM_NAMES;
    private static final java.lang.String[] ITEM_DESCRIPTIONS;
    private static final javax.management.openmbean.OpenType[] ITEM_TYPES;
    private static final javax.management.openmbean.CompositeType COMPOSITE_TYPE;
    private static final java.lang.String TABULAR_TYPE_NAME;
    private static final java.lang.String TABULAR_TYPE_DESCRIPTION;
    private static final java.lang.String[] INDEX_NAMES;
    private static final javax.management.openmbean.TabularType TABULAR_TYPE;

    public void <init>()
    {
        org.quartz.core.jmx.JobDetailSupport r0;

        r0 := @this: org.quartz.core.jmx.JobDetailSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.quartz.JobDetail newJobDetail(javax.management.openmbean.CompositeData) throws java.lang.ClassNotFoundException
    {
        javax.management.openmbean.CompositeData r0;
        java.lang.Class r2;
        org.quartz.impl.JobDetailImpl $r4;
        java.lang.String[] $r5, $r9, $r13, $r17, $r21, $r26, $r30;
        java.lang.String $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r27, $r31;
        java.lang.Object $r7, $r11, $r15, $r19, $r23, $r28, $r32;
        javax.management.openmbean.TabularData $r24;
        org.quartz.JobDataMap $r25;
        java.lang.Boolean $r29, $r33;
        boolean $z0, $z1;
        int i1, i2, i3, i4, i5, i6;

        r0 := @parameter0: javax.management.openmbean.CompositeData;

        $r4 = new org.quartz.impl.JobDetailImpl;

        specialinvoke $r4.<org.quartz.impl.JobDetailImpl: void <init>()>();

        $r5 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        i1 = 0 + 1;

        $r6 = $r5[0];

        $r7 = interfaceinvoke r0.<javax.management.openmbean.CompositeData: java.lang.Object get(java.lang.String)>($r6);

        $r8 = (java.lang.String) $r7;

        virtualinvoke $r4.<org.quartz.impl.JobDetailImpl: void setName(java.lang.String)>($r8);

        $r9 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        i2 = i1 + 1;

        $r10 = $r9[i1];

        $r11 = interfaceinvoke r0.<javax.management.openmbean.CompositeData: java.lang.Object get(java.lang.String)>($r10);

        $r12 = (java.lang.String) $r11;

        virtualinvoke $r4.<org.quartz.impl.JobDetailImpl: void setGroup(java.lang.String)>($r12);

        $r13 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        i3 = i2 + 1;

        $r14 = $r13[i2];

        $r15 = interfaceinvoke r0.<javax.management.openmbean.CompositeData: java.lang.Object get(java.lang.String)>($r14);

        $r16 = (java.lang.String) $r15;

        virtualinvoke $r4.<org.quartz.impl.JobDetailImpl: void setDescription(java.lang.String)>($r16);

        $r17 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        i4 = i3 + 1;

        $r18 = $r17[i3];

        $r19 = interfaceinvoke r0.<javax.management.openmbean.CompositeData: java.lang.Object get(java.lang.String)>($r18);

        $r20 = (java.lang.String) $r19;

        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r20);

        virtualinvoke $r4.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(r2);

        $r21 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        i5 = i4 + 1;

        $r22 = $r21[i4];

        $r23 = interfaceinvoke r0.<javax.management.openmbean.CompositeData: java.lang.Object get(java.lang.String)>($r22);

        $r24 = (javax.management.openmbean.TabularData) $r23;

        $r25 = staticinvoke <org.quartz.core.jmx.JobDataMapSupport: org.quartz.JobDataMap newJobDataMap(javax.management.openmbean.TabularData)>($r24);

        virtualinvoke $r4.<org.quartz.impl.JobDetailImpl: void setJobDataMap(org.quartz.JobDataMap)>($r25);

        $r26 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        i6 = i5 + 1;

        $r27 = $r26[i5];

        $r28 = interfaceinvoke r0.<javax.management.openmbean.CompositeData: java.lang.Object get(java.lang.String)>($r27);

        $r29 = (java.lang.Boolean) $r28;

        $z0 = virtualinvoke $r29.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r4.<org.quartz.impl.JobDetailImpl: void setDurability(boolean)>($z0);

        $r30 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        $r31 = $r30[i6];

        $r32 = interfaceinvoke r0.<javax.management.openmbean.CompositeData: java.lang.Object get(java.lang.String)>($r31);

        $r33 = (java.lang.Boolean) $r32;

        $z1 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r4.<org.quartz.impl.JobDetailImpl: void setRequestsRecovery(boolean)>($z1);

        return $r4;
    }

    public static org.quartz.JobDetail newJobDetail(java.util.Map) throws java.lang.ClassNotFoundException
    {
        java.util.Map r0, r4;
        java.lang.Class r2;
        org.quartz.impl.JobDetailImpl $r5;
        java.lang.String[] $r6, $r10, $r14, $r18, $r22, $r24, $r26, $r28, $r32, $r36;
        java.lang.String $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r33, $r37;
        java.lang.Object $r8, $r12, $r16, $r20, $r30, $r34, $r38;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Boolean $r31, $r35;
        org.quartz.JobDataMap $r39;
        int i1, i2, i3, i4, i5, i6;

        r0 := @parameter0: java.util.Map;

        $r5 = new org.quartz.impl.JobDetailImpl;

        specialinvoke $r5.<org.quartz.impl.JobDetailImpl: void <init>()>();

        $r6 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        i1 = 0 + 1;

        $r7 = $r6[0];

        $r8 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r9 = (java.lang.String) $r8;

        virtualinvoke $r5.<org.quartz.impl.JobDetailImpl: void setName(java.lang.String)>($r9);

        $r10 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        i2 = i1 + 1;

        $r11 = $r10[i1];

        $r12 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r13 = (java.lang.String) $r12;

        virtualinvoke $r5.<org.quartz.impl.JobDetailImpl: void setGroup(java.lang.String)>($r13);

        $r14 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        i3 = i2 + 1;

        $r15 = $r14[i2];

        $r16 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);

        $r17 = (java.lang.String) $r16;

        virtualinvoke $r5.<org.quartz.impl.JobDetailImpl: void setDescription(java.lang.String)>($r17);

        $r18 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        i4 = i3 + 1;

        $r19 = $r18[i3];

        $r20 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        $r21 = (java.lang.String) $r20;

        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r21);

        virtualinvoke $r5.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(r2);

        $r22 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        $r23 = $r22[i4];

        $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r23);

        if $z0 == 0 goto label1;

        $r36 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        $r37 = $r36[i4];

        $r38 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r37);

        r4 = (java.util.Map) $r38;

        $r39 = staticinvoke <org.quartz.core.jmx.JobDataMapSupport: org.quartz.JobDataMap newJobDataMap(java.util.Map)>(r4);

        virtualinvoke $r5.<org.quartz.impl.JobDetailImpl: void setJobDataMap(org.quartz.JobDataMap)>($r39);

     label1:
        i5 = i4 + 1;

        $r24 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        $r25 = $r24[i5];

        $z1 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r25);

        if $z1 == 0 goto label2;

        $r32 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        $r33 = $r32[i5];

        $r34 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r33);

        $r35 = (java.lang.Boolean) $r34;

        $z4 = virtualinvoke $r35.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r5.<org.quartz.impl.JobDetailImpl: void setDurability(boolean)>($z4);

     label2:
        i6 = i5 + 1;

        $r26 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        $r27 = $r26[i6];

        $z2 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r27);

        if $z2 == 0 goto label3;

        $r28 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        $r29 = $r28[i6];

        $r30 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r29);

        $r31 = (java.lang.Boolean) $r30;

        $z3 = virtualinvoke $r31.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r5.<org.quartz.impl.JobDetailImpl: void setRequestsRecovery(boolean)>($z3);

     label3:
        return $r5;
    }

    public static javax.management.openmbean.CompositeData toCompositeData(org.quartz.JobDetail)
    {
        org.quartz.JobDetail r0;
        javax.management.openmbean.CompositeDataSupport $r2;
        java.lang.Object[] $r3;
        javax.management.openmbean.CompositeType $r4;
        java.lang.String[] $r5;
        org.quartz.JobKey $r6, $r8;
        java.lang.String $r7, $r9, $r10, $r12;
        java.lang.Class $r11;
        org.quartz.JobDataMap $r13;
        javax.management.openmbean.TabularData $r14;
        boolean $z0, $z1;
        java.lang.Boolean $r15, $r16;
        javax.management.openmbean.OpenDataException $r17;
        java.lang.RuntimeException $r18;

        r0 := @parameter0: org.quartz.JobDetail;

     label1:
        $r2 = new javax.management.openmbean.CompositeDataSupport;

        $r4 = <org.quartz.core.jmx.JobDetailSupport: javax.management.openmbean.CompositeType COMPOSITE_TYPE>;

        $r5 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        $r3 = newarray (java.lang.Object)[7];

        $r6 = interfaceinvoke r0.<org.quartz.JobDetail: org.quartz.JobKey getKey()>();

        $r7 = virtualinvoke $r6.<org.quartz.JobKey: java.lang.String getName()>();

        $r3[0] = $r7;

        $r8 = interfaceinvoke r0.<org.quartz.JobDetail: org.quartz.JobKey getKey()>();

        $r9 = virtualinvoke $r8.<org.quartz.JobKey: java.lang.String getGroup()>();

        $r3[1] = $r9;

        $r10 = interfaceinvoke r0.<org.quartz.JobDetail: java.lang.String getDescription()>();

        $r3[2] = $r10;

        $r11 = interfaceinvoke r0.<org.quartz.JobDetail: java.lang.Class getJobClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r3[3] = $r12;

        $r13 = interfaceinvoke r0.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>();

        $r14 = staticinvoke <org.quartz.core.jmx.JobDataMapSupport: javax.management.openmbean.TabularData toTabularData(org.quartz.JobDataMap)>($r13);

        $r3[4] = $r14;

        $z0 = interfaceinvoke r0.<org.quartz.JobDetail: boolean isDurable()>();

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3[5] = $r15;

        $z1 = interfaceinvoke r0.<org.quartz.JobDetail: boolean requestsRecovery()>();

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r3[6] = $r16;

        specialinvoke $r2.<javax.management.openmbean.CompositeDataSupport: void <init>(javax.management.openmbean.CompositeType,java.lang.String[],java.lang.Object[])>($r4, $r5, $r3);

     label2:
        return $r2;

     label3:
        $r17 := @caughtexception;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r17);

        throw $r18;

        catch javax.management.openmbean.OpenDataException from label1 to label2 with label3;
    }

    public static javax.management.openmbean.TabularData toTabularData(org.quartz.JobDetail[])
    {
        org.quartz.JobDetail[] r0;
        int i0, $i1, i2;
        org.quartz.JobDetail r4;
        javax.management.openmbean.TabularDataSupport $r5;
        javax.management.openmbean.TabularType $r6;
        java.util.ArrayList $r7;
        javax.management.openmbean.CompositeData[] $r8, $r10;
        java.lang.Object[] $r9;
        javax.management.openmbean.CompositeData $r11;

        r0 := @parameter0: org.quartz.JobDetail[];

        $r5 = new javax.management.openmbean.TabularDataSupport;

        $r6 = <org.quartz.core.jmx.JobDetailSupport: javax.management.openmbean.TabularType TABULAR_TYPE>;

        specialinvoke $r5.<javax.management.openmbean.TabularDataSupport: void <init>(javax.management.openmbean.TabularType)>($r6);

        if r0 == null goto label3;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r4 = r0[i2];

        $r11 = staticinvoke <org.quartz.core.jmx.JobDetailSupport: javax.management.openmbean.CompositeData toCompositeData(org.quartz.JobDetail)>(r4);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        i2 = i2 + 1;

        goto label1;

     label2:
        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r8 = newarray (javax.management.openmbean.CompositeData)[$i1];

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (javax.management.openmbean.CompositeData[]) $r9;

        interfaceinvoke $r5.<javax.management.openmbean.TabularData: void putAll(javax.management.openmbean.CompositeData[])>($r10);

     label3:
        return $r5;
    }

    static void <clinit>()
    {
        java.lang.String[] $r1, $r2, $r11, $r14, $r15, $r17;
        javax.management.openmbean.OpenType[] $r3, $r13;
        javax.management.openmbean.SimpleType $r4, $r5, $r6, $r7, $r9, $r10;
        javax.management.openmbean.TabularType $r8, $r16;
        javax.management.openmbean.CompositeType $r12, $r18;
        javax.management.openmbean.OpenDataException $r19;
        java.lang.RuntimeException $r20;

        <org.quartz.core.jmx.JobDetailSupport: java.lang.String TABULAR_TYPE_DESCRIPTION> = "JobDetail collection";

        <org.quartz.core.jmx.JobDetailSupport: java.lang.String TABULAR_TYPE_NAME> = "JobDetail collection";

        <org.quartz.core.jmx.JobDetailSupport: java.lang.String COMPOSITE_TYPE_DESCRIPTION> = "Job Execution Details";

        <org.quartz.core.jmx.JobDetailSupport: java.lang.String COMPOSITE_TYPE_NAME> = "JobDetail";

        $r1 = newarray (java.lang.String)[7];

        $r1[0] = "name";

        $r1[1] = "group";

        $r1[2] = "description";

        $r1[3] = "jobClass";

        $r1[4] = "jobDataMap";

        $r1[5] = "durability";

        $r1[6] = "shouldRecover";

        <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES> = $r1;

        $r2 = newarray (java.lang.String)[7];

        $r2[0] = "name";

        $r2[1] = "group";

        $r2[2] = "description";

        $r2[3] = "jobClass";

        $r2[4] = "jobDataMap";

        $r2[5] = "durability";

        $r2[6] = "shouldRecover";

        <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_DESCRIPTIONS> = $r2;

        $r3 = newarray (javax.management.openmbean.OpenType)[7];

        $r4 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType STRING>;

        $r3[0] = $r4;

        $r5 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType STRING>;

        $r3[1] = $r5;

        $r6 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType STRING>;

        $r3[2] = $r6;

        $r7 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType STRING>;

        $r3[3] = $r7;

        $r8 = <org.quartz.core.jmx.JobDataMapSupport: javax.management.openmbean.TabularType TABULAR_TYPE>;

        $r3[4] = $r8;

        $r9 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType BOOLEAN>;

        $r3[5] = $r9;

        $r10 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType BOOLEAN>;

        $r3[6] = $r10;

        <org.quartz.core.jmx.JobDetailSupport: javax.management.openmbean.OpenType[] ITEM_TYPES> = $r3;

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = "name";

        $r11[1] = "group";

        <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] INDEX_NAMES> = $r11;

     label1:
        $r12 = new javax.management.openmbean.CompositeType;

        $r15 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_NAMES>;

        $r14 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] ITEM_DESCRIPTIONS>;

        $r13 = <org.quartz.core.jmx.JobDetailSupport: javax.management.openmbean.OpenType[] ITEM_TYPES>;

        specialinvoke $r12.<javax.management.openmbean.CompositeType: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],javax.management.openmbean.OpenType[])>("JobDetail", "Job Execution Details", $r15, $r14, $r13);

        <org.quartz.core.jmx.JobDetailSupport: javax.management.openmbean.CompositeType COMPOSITE_TYPE> = $r12;

        $r16 = new javax.management.openmbean.TabularType;

        $r18 = <org.quartz.core.jmx.JobDetailSupport: javax.management.openmbean.CompositeType COMPOSITE_TYPE>;

        $r17 = <org.quartz.core.jmx.JobDetailSupport: java.lang.String[] INDEX_NAMES>;

        specialinvoke $r16.<javax.management.openmbean.TabularType: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.CompositeType,java.lang.String[])>("JobDetail collection", "JobDetail collection", $r18, $r17);

        <org.quartz.core.jmx.JobDetailSupport: javax.management.openmbean.TabularType TABULAR_TYPE> = $r16;

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r19);

        throw $r20;

     label4:
        return;

        catch javax.management.openmbean.OpenDataException from label1 to label2 with label3;
    }
}
