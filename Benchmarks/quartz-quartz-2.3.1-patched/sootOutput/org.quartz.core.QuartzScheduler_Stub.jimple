public final class org.quartz.core.QuartzScheduler_Stub extends java.rmi.server.RemoteStub implements org.quartz.core.RemotableQuartzScheduler
{
    private static final long serialVersionUID;
    private static java.lang.reflect.Method $method_addCalendar_0;
    private static java.lang.reflect.Method $method_addJob_1;
    private static java.lang.reflect.Method $method_addJob_2;
    private static java.lang.reflect.Method $method_checkExists_3;
    private static java.lang.reflect.Method $method_checkExists_4;
    private static java.lang.reflect.Method $method_clear_5;
    private static java.lang.reflect.Method $method_deleteCalendar_6;
    private static java.lang.reflect.Method $method_deleteJob_7;
    private static java.lang.reflect.Method $method_deleteJobs_8;
    private static java.lang.reflect.Method $method_getCalendar_9;
    private static java.lang.reflect.Method $method_getCalendarNames_10;
    private static java.lang.reflect.Method $method_getCurrentlyExecutingJobs_11;
    private static java.lang.reflect.Method $method_getJobDetail_12;
    private static java.lang.reflect.Method $method_getJobGroupNames_13;
    private static java.lang.reflect.Method $method_getJobKeys_14;
    private static java.lang.reflect.Method $method_getJobStoreClass_15;
    private static java.lang.reflect.Method $method_getPausedTriggerGroups_16;
    private static java.lang.reflect.Method $method_getSchedulerContext_17;
    private static java.lang.reflect.Method $method_getSchedulerInstanceId_18;
    private static java.lang.reflect.Method $method_getSchedulerName_19;
    private static java.lang.reflect.Method $method_getThreadPoolClass_20;
    private static java.lang.reflect.Method $method_getThreadPoolSize_21;
    private static java.lang.reflect.Method $method_getTrigger_22;
    private static java.lang.reflect.Method $method_getTriggerGroupNames_23;
    private static java.lang.reflect.Method $method_getTriggerKeys_24;
    private static java.lang.reflect.Method $method_getTriggerState_25;
    private static java.lang.reflect.Method $method_getTriggersOfJob_26;
    private static java.lang.reflect.Method $method_getVersion_27;
    private static java.lang.reflect.Method $method_interrupt_28;
    private static java.lang.reflect.Method $method_interrupt_29;
    private static java.lang.reflect.Method $method_isClustered_30;
    private static java.lang.reflect.Method $method_isInStandbyMode_31;
    private static java.lang.reflect.Method $method_isShutdown_32;
    private static java.lang.reflect.Method $method_numJobsExecuted_33;
    private static java.lang.reflect.Method $method_pauseAll_34;
    private static java.lang.reflect.Method $method_pauseJob_35;
    private static java.lang.reflect.Method $method_pauseJobs_36;
    private static java.lang.reflect.Method $method_pauseTrigger_37;
    private static java.lang.reflect.Method $method_pauseTriggers_38;
    private static java.lang.reflect.Method $method_rescheduleJob_39;
    private static java.lang.reflect.Method $method_resetTriggerFromErrorState_40;
    private static java.lang.reflect.Method $method_resumeAll_41;
    private static java.lang.reflect.Method $method_resumeJob_42;
    private static java.lang.reflect.Method $method_resumeJobs_43;
    private static java.lang.reflect.Method $method_resumeTrigger_44;
    private static java.lang.reflect.Method $method_resumeTriggers_45;
    private static java.lang.reflect.Method $method_runningSince_46;
    private static java.lang.reflect.Method $method_scheduleJob_47;
    private static java.lang.reflect.Method $method_scheduleJob_48;
    private static java.lang.reflect.Method $method_scheduleJob_49;
    private static java.lang.reflect.Method $method_scheduleJobs_50;
    private static java.lang.reflect.Method $method_shutdown_51;
    private static java.lang.reflect.Method $method_shutdown_52;
    private static java.lang.reflect.Method $method_standby_53;
    private static java.lang.reflect.Method $method_start_54;
    private static java.lang.reflect.Method $method_startDelayed_55;
    private static java.lang.reflect.Method $method_supportsPersistence_56;
    private static java.lang.reflect.Method $method_triggerJob_57;
    private static java.lang.reflect.Method $method_triggerJob_58;
    private static java.lang.reflect.Method $method_unscheduleJob_59;
    private static java.lang.reflect.Method $method_unscheduleJobs_60;
    static java.lang.Class class$org$quartz$core$RemotableQuartzScheduler;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$quartz$Calendar;
    static java.lang.Class class$org$quartz$JobDetail;
    static java.lang.Class class$org$quartz$JobKey;
    static java.lang.Class class$org$quartz$TriggerKey;
    static java.lang.Class class$java$util$List;
    static java.lang.Class class$org$quartz$impl$matchers$GroupMatcher;
    static java.lang.Class class$org$quartz$Trigger;
    static java.lang.Class class$java$util$Set;
    static java.lang.Class class$java$util$Map;
    static java.lang.Class class$org$quartz$JobDataMap;
    static java.lang.Class class$org$quartz$spi$OperableTrigger;

    static void <clinit>()
    {
        java.lang.Class $r0, $r1, $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r15, $r18, $r19, $r22, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r45, $r48, $r49, $r50, $r51, $r54, $r55, $r56, $r59, $r62, $r65, $r68, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r80, $r81, $r82, $r83, $r84, $r87, $r88, $r89, $r90, $r91, $r94, $r96, $r98, $r101, $r104, $r106, $r108, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r154, $r157, $r158, $r159, $r160, $r161, $r163, $r165, $r168, $r169, $r171, $r173, $r176, $r177, $r178, $r180, $r182, $r185, $r187, $r189, $r192, $r194, $r195, $r197, $r200, $r202, $r204, $r207, $r209, $r211, $r214, $r216, $r218, $r221, $r223, $r224, $r225, $r227, $r230, $r232, $r233, $r235, $r238, $r240, $r241, $r242, $r243, $r244, $r245, $r246, $r247, $r249, $r252, $r254, $r255, $r257, $r260, $r262, $r264, $r267, $r269, $r271, $r274, $r276, $r277, $r279, $r282, $r284, $r286, $r289, $r291, $r292, $r293, $r294, $r295, $r296, $r298, $r301, $r303, $r305, $r308, $r310, $r312, $r315, $r317, $r319, $r322, $r324, $r326, $r329, $r330, $r331, $r333, $r335, $r338, $r340, $r341, $r343, $r346, $r348, $r350, $r353, $r355, $r357, $r360, $r362, $r364, $r367, $r369, $r370, $r372, $r375, $r376, $r377, $r378, $r380, $r382, $r385, $r386, $r387, $r389, $r391, $r394, $r396, $r398, $r401, $r402, $r404, $r405, $r406, $r407, $r408, $r409, $r410, $r412, $r415, $r416, $r417, $r419, $r421, $r424, $r426, $r428, $r431, $r433, $r435, $r438;
        java.lang.Class[] $r6, $r13, $r16, $r20, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r46, $r52, $r57, $r60, $r63, $r66, $r69, $r78, $r85, $r92, $r95, $r99, $r102, $r105, $r109, $r156, $r167, $r175, $r184, $r191, $r199, $r206, $r213, $r220, $r229, $r237, $r251, $r259, $r266, $r273, $r281, $r288, $r300, $r307, $r314, $r321, $r328, $r337, $r345, $r352, $r359, $r366, $r374, $r384, $r393, $r400, $r414, $r423, $r430, $r437;
        java.lang.reflect.Method $r7, $r14, $r17, $r21, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r47, $r53, $r58, $r61, $r64, $r67, $r70, $r79, $r86, $r93, $r97, $r100, $r103, $r107, $r110, $r162, $r170, $r179, $r186, $r193, $r201, $r208, $r215, $r222, $r231, $r239, $r253, $r261, $r268, $r275, $r283, $r290, $r302, $r309, $r316, $r323, $r332, $r339, $r347, $r354, $r361, $r368, $r379, $r388, $r395, $r403, $r418, $r425, $r432, $r439;
        java.lang.NoSuchMethodException $r151;
        java.lang.NoSuchMethodError $r152;

        <org.quartz.core.QuartzScheduler_Stub: long serialVersionUID> = 2L;

     label001:
        $r0 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r0 == null goto label002;

        $r150 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r154 = $r150;

        goto label003;

     label002:
        $r154 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r154;

     label003:
        $r156 = newarray (java.lang.Class)[4];

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$lang$String>;

        if $r1 == null goto label004;

        $r157 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$lang$String>;

        goto label005;

     label004:
        $r157 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$lang$String> = $r157;

     label005:
        $r156[0] = $r157;

        $r158 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$Calendar>;

        if $r158 == null goto label006;

        $r159 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$Calendar>;

        goto label007;

     label006:
        $r159 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.Calendar");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$Calendar> = $r159;

     label007:
        $r156[1] = $r159;

        $r160 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r156[2] = $r160;

        $r161 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r156[3] = $r161;

        $r162 = virtualinvoke $r154.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addCalendar", $r156);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_addCalendar_0> = $r162;

        $r163 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r163 == null goto label008;

        $r149 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r165 = $r149;

        goto label009;

     label008:
        $r165 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r165;

     label009:
        $r167 = newarray (java.lang.Class)[2];

        $r2 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDetail>;

        if $r2 == null goto label010;

        $r168 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDetail>;

        goto label011;

     label010:
        $r168 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobDetail");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDetail> = $r168;

     label011:
        $r167[0] = $r168;

        $r169 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r167[1] = $r169;

        $r170 = virtualinvoke $r165.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addJob", $r167);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_addJob_1> = $r170;

        $r171 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r171 == null goto label012;

        $r148 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r173 = $r148;

        goto label013;

     label012:
        $r173 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r173;

     label013:
        $r175 = newarray (java.lang.Class)[3];

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDetail>;

        if $r3 == null goto label014;

        $r176 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDetail>;

        goto label015;

     label014:
        $r176 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobDetail");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDetail> = $r176;

     label015:
        $r175[0] = $r176;

        $r177 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r175[1] = $r177;

        $r178 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r175[2] = $r178;

        $r179 = virtualinvoke $r173.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addJob", $r175);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_addJob_2> = $r179;

        $r180 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r180 == null goto label016;

        $r147 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r182 = $r147;

        goto label017;

     label016:
        $r182 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r182;

     label017:
        $r184 = newarray (java.lang.Class)[1];

        $r4 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        if $r4 == null goto label018;

        $r185 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        goto label019;

     label018:
        $r185 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey> = $r185;

     label019:
        $r184[0] = $r185;

        $r186 = virtualinvoke $r182.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("checkExists", $r184);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_checkExists_3> = $r186;

        $r187 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r187 == null goto label020;

        $r146 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r189 = $r146;

        goto label021;

     label020:
        $r189 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r189;

     label021:
        $r191 = newarray (java.lang.Class)[1];

        $r5 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        if $r5 == null goto label022;

        $r192 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        goto label023;

     label022:
        $r192 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.TriggerKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey> = $r192;

     label023:
        $r191[0] = $r192;

        $r193 = virtualinvoke $r189.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("checkExists", $r191);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_checkExists_4> = $r193;

        $r194 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r194 == null goto label024;

        $r195 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label025;

     label024:
        $r195 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r195;

     label025:
        $r6 = newarray (java.lang.Class)[0];

        $r7 = virtualinvoke $r195.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("clear", $r6);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_clear_5> = $r7;

        $r8 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r8 == null goto label026;

        $r145 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r197 = $r145;

        goto label027;

     label026:
        $r197 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r197;

     label027:
        $r199 = newarray (java.lang.Class)[1];

        $r9 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$lang$String>;

        if $r9 == null goto label028;

        $r200 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$lang$String>;

        goto label029;

     label028:
        $r200 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$lang$String> = $r200;

     label029:
        $r199[0] = $r200;

        $r201 = virtualinvoke $r197.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("deleteCalendar", $r199);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_deleteCalendar_6> = $r201;

        $r202 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r202 == null goto label030;

        $r144 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r204 = $r144;

        goto label031;

     label030:
        $r204 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r204;

     label031:
        $r206 = newarray (java.lang.Class)[1];

        $r10 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        if $r10 == null goto label032;

        $r207 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        goto label033;

     label032:
        $r207 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey> = $r207;

     label033:
        $r206[0] = $r207;

        $r208 = virtualinvoke $r204.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("deleteJob", $r206);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_deleteJob_7> = $r208;

        $r209 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r209 == null goto label034;

        $r143 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r211 = $r143;

        goto label035;

     label034:
        $r211 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r211;

     label035:
        $r213 = newarray (java.lang.Class)[1];

        $r11 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$util$List>;

        if $r11 == null goto label036;

        $r214 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$util$List>;

        goto label037;

     label036:
        $r214 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$util$List> = $r214;

     label037:
        $r213[0] = $r214;

        $r215 = virtualinvoke $r211.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("deleteJobs", $r213);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_deleteJobs_8> = $r215;

        $r216 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r216 == null goto label038;

        $r142 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r218 = $r142;

        goto label039;

     label038:
        $r218 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r218;

     label039:
        $r220 = newarray (java.lang.Class)[1];

        $r12 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$lang$String>;

        if $r12 == null goto label040;

        $r221 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$lang$String>;

        goto label041;

     label040:
        $r221 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$lang$String> = $r221;

     label041:
        $r220[0] = $r221;

        $r222 = virtualinvoke $r218.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getCalendar", $r220);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getCalendar_9> = $r222;

        $r223 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r223 == null goto label042;

        $r224 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label043;

     label042:
        $r224 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r224;

     label043:
        $r13 = newarray (java.lang.Class)[0];

        $r14 = virtualinvoke $r224.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getCalendarNames", $r13);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getCalendarNames_10> = $r14;

        $r15 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r15 == null goto label044;

        $r225 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label045;

     label044:
        $r225 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r225;

     label045:
        $r16 = newarray (java.lang.Class)[0];

        $r17 = virtualinvoke $r225.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getCurrentlyExecutingJobs", $r16);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getCurrentlyExecutingJobs_11> = $r17;

        $r18 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r18 == null goto label046;

        $r141 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r227 = $r141;

        goto label047;

     label046:
        $r227 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r227;

     label047:
        $r229 = newarray (java.lang.Class)[1];

        $r19 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        if $r19 == null goto label048;

        $r230 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        goto label049;

     label048:
        $r230 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey> = $r230;

     label049:
        $r229[0] = $r230;

        $r231 = virtualinvoke $r227.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getJobDetail", $r229);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getJobDetail_12> = $r231;

        $r232 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r232 == null goto label050;

        $r233 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label051;

     label050:
        $r233 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r233;

     label051:
        $r20 = newarray (java.lang.Class)[0];

        $r21 = virtualinvoke $r233.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getJobGroupNames", $r20);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getJobGroupNames_13> = $r21;

        $r22 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r22 == null goto label052;

        $r140 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r235 = $r140;

        goto label053;

     label052:
        $r235 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r235;

     label053:
        $r237 = newarray (java.lang.Class)[1];

        $r23 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher>;

        if $r23 == null goto label054;

        $r238 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher>;

        goto label055;

     label054:
        $r238 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.impl.matchers.GroupMatcher");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher> = $r238;

     label055:
        $r237[0] = $r238;

        $r239 = virtualinvoke $r235.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getJobKeys", $r237);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getJobKeys_14> = $r239;

        $r240 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r240 == null goto label056;

        $r241 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label057;

     label056:
        $r241 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r241;

     label057:
        $r24 = newarray (java.lang.Class)[0];

        $r25 = virtualinvoke $r241.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getJobStoreClass", $r24);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getJobStoreClass_15> = $r25;

        $r26 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r26 == null goto label058;

        $r242 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label059;

     label058:
        $r242 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r242;

     label059:
        $r27 = newarray (java.lang.Class)[0];

        $r28 = virtualinvoke $r242.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getPausedTriggerGroups", $r27);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getPausedTriggerGroups_16> = $r28;

        $r29 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r29 == null goto label060;

        $r243 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label061;

     label060:
        $r243 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r243;

     label061:
        $r30 = newarray (java.lang.Class)[0];

        $r31 = virtualinvoke $r243.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getSchedulerContext", $r30);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getSchedulerContext_17> = $r31;

        $r32 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r32 == null goto label062;

        $r244 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label063;

     label062:
        $r244 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r244;

     label063:
        $r33 = newarray (java.lang.Class)[0];

        $r34 = virtualinvoke $r244.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getSchedulerInstanceId", $r33);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getSchedulerInstanceId_18> = $r34;

        $r35 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r35 == null goto label064;

        $r245 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label065;

     label064:
        $r245 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r245;

     label065:
        $r36 = newarray (java.lang.Class)[0];

        $r37 = virtualinvoke $r245.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getSchedulerName", $r36);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getSchedulerName_19> = $r37;

        $r38 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r38 == null goto label066;

        $r246 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label067;

     label066:
        $r246 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r246;

     label067:
        $r39 = newarray (java.lang.Class)[0];

        $r40 = virtualinvoke $r246.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getThreadPoolClass", $r39);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getThreadPoolClass_20> = $r40;

        $r41 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r41 == null goto label068;

        $r247 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label069;

     label068:
        $r247 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r247;

     label069:
        $r42 = newarray (java.lang.Class)[0];

        $r43 = virtualinvoke $r247.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getThreadPoolSize", $r42);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getThreadPoolSize_21> = $r43;

        $r44 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r44 == null goto label070;

        $r139 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r249 = $r139;

        goto label071;

     label070:
        $r249 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r249;

     label071:
        $r251 = newarray (java.lang.Class)[1];

        $r45 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        if $r45 == null goto label072;

        $r252 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        goto label073;

     label072:
        $r252 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.TriggerKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey> = $r252;

     label073:
        $r251[0] = $r252;

        $r253 = virtualinvoke $r249.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getTrigger", $r251);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getTrigger_22> = $r253;

        $r254 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r254 == null goto label074;

        $r255 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label075;

     label074:
        $r255 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r255;

     label075:
        $r46 = newarray (java.lang.Class)[0];

        $r47 = virtualinvoke $r255.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getTriggerGroupNames", $r46);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getTriggerGroupNames_23> = $r47;

        $r48 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r48 == null goto label076;

        $r138 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r257 = $r138;

        goto label077;

     label076:
        $r257 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r257;

     label077:
        $r259 = newarray (java.lang.Class)[1];

        $r49 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher>;

        if $r49 == null goto label078;

        $r260 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher>;

        goto label079;

     label078:
        $r260 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.impl.matchers.GroupMatcher");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher> = $r260;

     label079:
        $r259[0] = $r260;

        $r261 = virtualinvoke $r257.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getTriggerKeys", $r259);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getTriggerKeys_24> = $r261;

        $r262 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r262 == null goto label080;

        $r137 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r264 = $r137;

        goto label081;

     label080:
        $r264 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r264;

     label081:
        $r266 = newarray (java.lang.Class)[1];

        $r50 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        if $r50 == null goto label082;

        $r267 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        goto label083;

     label082:
        $r267 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.TriggerKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey> = $r267;

     label083:
        $r266[0] = $r267;

        $r268 = virtualinvoke $r264.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getTriggerState", $r266);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getTriggerState_25> = $r268;

        $r269 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r269 == null goto label084;

        $r136 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r271 = $r136;

        goto label085;

     label084:
        $r271 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r271;

     label085:
        $r273 = newarray (java.lang.Class)[1];

        $r51 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        if $r51 == null goto label086;

        $r274 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        goto label087;

     label086:
        $r274 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey> = $r274;

     label087:
        $r273[0] = $r274;

        $r275 = virtualinvoke $r271.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getTriggersOfJob", $r273);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getTriggersOfJob_26> = $r275;

        $r276 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r276 == null goto label088;

        $r277 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label089;

     label088:
        $r277 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r277;

     label089:
        $r52 = newarray (java.lang.Class)[0];

        $r53 = virtualinvoke $r277.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getVersion", $r52);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getVersion_27> = $r53;

        $r54 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r54 == null goto label090;

        $r135 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r279 = $r135;

        goto label091;

     label090:
        $r279 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r279;

     label091:
        $r281 = newarray (java.lang.Class)[1];

        $r55 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$lang$String>;

        if $r55 == null goto label092;

        $r282 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$lang$String>;

        goto label093;

     label092:
        $r282 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$lang$String> = $r282;

     label093:
        $r281[0] = $r282;

        $r283 = virtualinvoke $r279.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("interrupt", $r281);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_interrupt_28> = $r283;

        $r284 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r284 == null goto label094;

        $r134 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r286 = $r134;

        goto label095;

     label094:
        $r286 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r286;

     label095:
        $r288 = newarray (java.lang.Class)[1];

        $r56 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        if $r56 == null goto label096;

        $r289 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        goto label097;

     label096:
        $r289 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey> = $r289;

     label097:
        $r288[0] = $r289;

        $r290 = virtualinvoke $r286.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("interrupt", $r288);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_interrupt_29> = $r290;

        $r291 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r291 == null goto label098;

        $r292 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label099;

     label098:
        $r292 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r292;

     label099:
        $r57 = newarray (java.lang.Class)[0];

        $r58 = virtualinvoke $r292.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isClustered", $r57);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_isClustered_30> = $r58;

        $r59 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r59 == null goto label100;

        $r293 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label101;

     label100:
        $r293 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r293;

     label101:
        $r60 = newarray (java.lang.Class)[0];

        $r61 = virtualinvoke $r293.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isInStandbyMode", $r60);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_isInStandbyMode_31> = $r61;

        $r62 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r62 == null goto label102;

        $r294 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label103;

     label102:
        $r294 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r294;

     label103:
        $r63 = newarray (java.lang.Class)[0];

        $r64 = virtualinvoke $r294.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isShutdown", $r63);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_isShutdown_32> = $r64;

        $r65 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r65 == null goto label104;

        $r295 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label105;

     label104:
        $r295 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r295;

     label105:
        $r66 = newarray (java.lang.Class)[0];

        $r67 = virtualinvoke $r295.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("numJobsExecuted", $r66);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_numJobsExecuted_33> = $r67;

        $r68 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r68 == null goto label106;

        $r296 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label107;

     label106:
        $r296 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r296;

     label107:
        $r69 = newarray (java.lang.Class)[0];

        $r70 = virtualinvoke $r296.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("pauseAll", $r69);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_pauseAll_34> = $r70;

        $r71 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r71 == null goto label108;

        $r133 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r298 = $r133;

        goto label109;

     label108:
        $r298 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r298;

     label109:
        $r300 = newarray (java.lang.Class)[1];

        $r72 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        if $r72 == null goto label110;

        $r301 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        goto label111;

     label110:
        $r301 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey> = $r301;

     label111:
        $r300[0] = $r301;

        $r302 = virtualinvoke $r298.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("pauseJob", $r300);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_pauseJob_35> = $r302;

        $r303 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r303 == null goto label112;

        $r132 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r305 = $r132;

        goto label113;

     label112:
        $r305 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r305;

     label113:
        $r307 = newarray (java.lang.Class)[1];

        $r73 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher>;

        if $r73 == null goto label114;

        $r308 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher>;

        goto label115;

     label114:
        $r308 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.impl.matchers.GroupMatcher");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher> = $r308;

     label115:
        $r307[0] = $r308;

        $r309 = virtualinvoke $r305.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("pauseJobs", $r307);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_pauseJobs_36> = $r309;

        $r310 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r310 == null goto label116;

        $r131 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r312 = $r131;

        goto label117;

     label116:
        $r312 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r312;

     label117:
        $r314 = newarray (java.lang.Class)[1];

        $r74 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        if $r74 == null goto label118;

        $r315 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        goto label119;

     label118:
        $r315 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.TriggerKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey> = $r315;

     label119:
        $r314[0] = $r315;

        $r316 = virtualinvoke $r312.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("pauseTrigger", $r314);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_pauseTrigger_37> = $r316;

        $r317 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r317 == null goto label120;

        $r130 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r319 = $r130;

        goto label121;

     label120:
        $r319 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r319;

     label121:
        $r321 = newarray (java.lang.Class)[1];

        $r75 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher>;

        if $r75 == null goto label122;

        $r322 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher>;

        goto label123;

     label122:
        $r322 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.impl.matchers.GroupMatcher");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher> = $r322;

     label123:
        $r321[0] = $r322;

        $r323 = virtualinvoke $r319.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("pauseTriggers", $r321);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_pauseTriggers_38> = $r323;

        $r324 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r324 == null goto label124;

        $r129 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r326 = $r129;

        goto label125;

     label124:
        $r326 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r326;

     label125:
        $r328 = newarray (java.lang.Class)[2];

        $r76 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        if $r76 == null goto label126;

        $r329 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        goto label127;

     label126:
        $r329 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.TriggerKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey> = $r329;

     label127:
        $r328[0] = $r329;

        $r330 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$Trigger>;

        if $r330 == null goto label128;

        $r331 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$Trigger>;

        goto label129;

     label128:
        $r331 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.Trigger");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$Trigger> = $r331;

     label129:
        $r328[1] = $r331;

        $r332 = virtualinvoke $r326.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("rescheduleJob", $r328);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_rescheduleJob_39> = $r332;

        $r333 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r333 == null goto label130;

        $r128 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r335 = $r128;

        goto label131;

     label130:
        $r335 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r335;

     label131:
        $r337 = newarray (java.lang.Class)[1];

        $r77 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        if $r77 == null goto label132;

        $r338 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        goto label133;

     label132:
        $r338 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.TriggerKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey> = $r338;

     label133:
        $r337[0] = $r338;

        $r339 = virtualinvoke $r335.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("resetTriggerFromErrorState", $r337);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_resetTriggerFromErrorState_40> = $r339;

        $r340 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r340 == null goto label134;

        $r341 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label135;

     label134:
        $r341 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r341;

     label135:
        $r78 = newarray (java.lang.Class)[0];

        $r79 = virtualinvoke $r341.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("resumeAll", $r78);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_resumeAll_41> = $r79;

        $r80 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r80 == null goto label136;

        $r127 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r343 = $r127;

        goto label137;

     label136:
        $r343 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r343;

     label137:
        $r345 = newarray (java.lang.Class)[1];

        $r81 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        if $r81 == null goto label138;

        $r346 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        goto label139;

     label138:
        $r346 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey> = $r346;

     label139:
        $r345[0] = $r346;

        $r347 = virtualinvoke $r343.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("resumeJob", $r345);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_resumeJob_42> = $r347;

        $r348 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r348 == null goto label140;

        $r126 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r350 = $r126;

        goto label141;

     label140:
        $r350 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r350;

     label141:
        $r352 = newarray (java.lang.Class)[1];

        $r82 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher>;

        if $r82 == null goto label142;

        $r353 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher>;

        goto label143;

     label142:
        $r353 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.impl.matchers.GroupMatcher");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher> = $r353;

     label143:
        $r352[0] = $r353;

        $r354 = virtualinvoke $r350.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("resumeJobs", $r352);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_resumeJobs_43> = $r354;

        $r355 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r355 == null goto label144;

        $r125 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r357 = $r125;

        goto label145;

     label144:
        $r357 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r357;

     label145:
        $r359 = newarray (java.lang.Class)[1];

        $r83 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        if $r83 == null goto label146;

        $r360 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        goto label147;

     label146:
        $r360 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.TriggerKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey> = $r360;

     label147:
        $r359[0] = $r360;

        $r361 = virtualinvoke $r357.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("resumeTrigger", $r359);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_resumeTrigger_44> = $r361;

        $r362 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r362 == null goto label148;

        $r124 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r364 = $r124;

        goto label149;

     label148:
        $r364 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r364;

     label149:
        $r366 = newarray (java.lang.Class)[1];

        $r84 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher>;

        if $r84 == null goto label150;

        $r367 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher>;

        goto label151;

     label150:
        $r367 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.impl.matchers.GroupMatcher");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$impl$matchers$GroupMatcher> = $r367;

     label151:
        $r366[0] = $r367;

        $r368 = virtualinvoke $r364.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("resumeTriggers", $r366);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_resumeTriggers_45> = $r368;

        $r369 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r369 == null goto label152;

        $r370 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label153;

     label152:
        $r370 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r370;

     label153:
        $r85 = newarray (java.lang.Class)[0];

        $r86 = virtualinvoke $r370.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("runningSince", $r85);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_runningSince_46> = $r86;

        $r87 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r87 == null goto label154;

        $r123 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r372 = $r123;

        goto label155;

     label154:
        $r372 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r372;

     label155:
        $r374 = newarray (java.lang.Class)[3];

        $r88 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDetail>;

        if $r88 == null goto label156;

        $r375 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDetail>;

        goto label157;

     label156:
        $r375 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobDetail");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDetail> = $r375;

     label157:
        $r374[0] = $r375;

        $r376 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$util$Set>;

        if $r376 == null goto label158;

        $r377 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$util$Set>;

        goto label159;

     label158:
        $r377 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("java.util.Set");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$util$Set> = $r377;

     label159:
        $r374[1] = $r377;

        $r378 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r374[2] = $r378;

        $r379 = virtualinvoke $r372.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("scheduleJob", $r374);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_scheduleJob_47> = $r379;

        $r380 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r380 == null goto label160;

        $r122 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r382 = $r122;

        goto label161;

     label160:
        $r382 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r382;

     label161:
        $r384 = newarray (java.lang.Class)[2];

        $r89 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDetail>;

        if $r89 == null goto label162;

        $r385 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDetail>;

        goto label163;

     label162:
        $r385 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobDetail");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDetail> = $r385;

     label163:
        $r384[0] = $r385;

        $r386 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$Trigger>;

        if $r386 == null goto label164;

        $r387 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$Trigger>;

        goto label165;

     label164:
        $r387 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.Trigger");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$Trigger> = $r387;

     label165:
        $r384[1] = $r387;

        $r388 = virtualinvoke $r382.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("scheduleJob", $r384);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_scheduleJob_48> = $r388;

        $r389 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r389 == null goto label166;

        $r121 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r391 = $r121;

        goto label167;

     label166:
        $r391 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r391;

     label167:
        $r393 = newarray (java.lang.Class)[1];

        $r90 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$Trigger>;

        if $r90 == null goto label168;

        $r394 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$Trigger>;

        goto label169;

     label168:
        $r394 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.Trigger");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$Trigger> = $r394;

     label169:
        $r393[0] = $r394;

        $r395 = virtualinvoke $r391.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("scheduleJob", $r393);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_scheduleJob_49> = $r395;

        $r396 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r396 == null goto label170;

        $r120 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r398 = $r120;

        goto label171;

     label170:
        $r398 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r398;

     label171:
        $r400 = newarray (java.lang.Class)[2];

        $r91 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$util$Map>;

        if $r91 == null goto label172;

        $r401 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$util$Map>;

        goto label173;

     label172:
        $r401 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("java.util.Map");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$util$Map> = $r401;

     label173:
        $r400[0] = $r401;

        $r402 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r400[1] = $r402;

        $r403 = virtualinvoke $r398.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("scheduleJobs", $r400);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_scheduleJobs_50> = $r403;

        $r404 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r404 == null goto label174;

        $r405 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label175;

     label174:
        $r405 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r405;

     label175:
        $r92 = newarray (java.lang.Class)[0];

        $r93 = virtualinvoke $r405.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("shutdown", $r92);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_shutdown_51> = $r93;

        $r94 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r94 == null goto label176;

        $r406 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label177;

     label176:
        $r406 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r406;

     label177:
        $r95 = newarray (java.lang.Class)[1];

        $r96 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r95[0] = $r96;

        $r97 = virtualinvoke $r406.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("shutdown", $r95);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_shutdown_52> = $r97;

        $r98 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r98 == null goto label178;

        $r407 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label179;

     label178:
        $r407 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r407;

     label179:
        $r99 = newarray (java.lang.Class)[0];

        $r100 = virtualinvoke $r407.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("standby", $r99);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_standby_53> = $r100;

        $r101 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r101 == null goto label180;

        $r408 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label181;

     label180:
        $r408 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r408;

     label181:
        $r102 = newarray (java.lang.Class)[0];

        $r103 = virtualinvoke $r408.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("start", $r102);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_start_54> = $r103;

        $r104 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r104 == null goto label182;

        $r409 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label183;

     label182:
        $r409 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r409;

     label183:
        $r105 = newarray (java.lang.Class)[1];

        $r106 = <java.lang.Integer: java.lang.Class TYPE>;

        $r105[0] = $r106;

        $r107 = virtualinvoke $r409.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("startDelayed", $r105);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_startDelayed_55> = $r107;

        $r108 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r108 == null goto label184;

        $r410 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        goto label185;

     label184:
        $r410 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r410;

     label185:
        $r109 = newarray (java.lang.Class)[0];

        $r110 = virtualinvoke $r410.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("supportsPersistence", $r109);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_supportsPersistence_56> = $r110;

        $r111 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r111 == null goto label186;

        $r119 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r412 = $r119;

        goto label187;

     label186:
        $r412 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r412;

     label187:
        $r414 = newarray (java.lang.Class)[2];

        $r112 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        if $r112 == null goto label188;

        $r415 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey>;

        goto label189;

     label188:
        $r415 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobKey> = $r415;

     label189:
        $r414[0] = $r415;

        $r416 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDataMap>;

        if $r416 == null goto label190;

        $r417 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDataMap>;

        goto label191;

     label190:
        $r417 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.JobDataMap");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$JobDataMap> = $r417;

     label191:
        $r414[1] = $r417;

        $r418 = virtualinvoke $r412.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("triggerJob", $r414);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_triggerJob_57> = $r418;

        $r419 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r419 == null goto label192;

        $r118 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r421 = $r118;

        goto label193;

     label192:
        $r421 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r421;

     label193:
        $r423 = newarray (java.lang.Class)[1];

        $r113 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$spi$OperableTrigger>;

        if $r113 == null goto label194;

        $r424 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$spi$OperableTrigger>;

        goto label195;

     label194:
        $r424 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.spi.OperableTrigger");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$spi$OperableTrigger> = $r424;

     label195:
        $r423[0] = $r424;

        $r425 = virtualinvoke $r421.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("triggerJob", $r423);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_triggerJob_58> = $r425;

        $r426 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r426 == null goto label196;

        $r117 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r428 = $r117;

        goto label197;

     label196:
        $r428 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r428;

     label197:
        $r430 = newarray (java.lang.Class)[1];

        $r114 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        if $r114 == null goto label198;

        $r431 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey>;

        goto label199;

     label198:
        $r431 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.TriggerKey");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$TriggerKey> = $r431;

     label199:
        $r430[0] = $r431;

        $r432 = virtualinvoke $r428.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("unscheduleJob", $r430);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_unscheduleJob_59> = $r432;

        $r433 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        if $r433 == null goto label200;

        $r116 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler>;

        $r435 = $r116;

        goto label201;

     label200:
        $r435 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("org.quartz.core.RemotableQuartzScheduler");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$org$quartz$core$RemotableQuartzScheduler> = $r435;

     label201:
        $r437 = newarray (java.lang.Class)[1];

        $r115 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$util$List>;

        if $r115 == null goto label202;

        $r438 = <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$util$List>;

        goto label203;

     label202:
        $r438 = staticinvoke <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.quartz.core.QuartzScheduler_Stub: java.lang.Class class$java$util$List> = $r438;

     label203:
        $r437[0] = $r438;

        $r439 = virtualinvoke $r435.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("unscheduleJobs", $r437);

        <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_unscheduleJobs_60> = $r439;

     label204:
        goto label206;

     label205:
        $r151 := @caughtexception;

        $r152 = new java.lang.NoSuchMethodError;

        specialinvoke $r152.<java.lang.NoSuchMethodError: void <init>(java.lang.String)>("stub class initialization failed");

        throw $r152;

     label206:
        return;

        catch java.lang.NoSuchMethodException from label001 to label204 with label205;
    }

    public void <init>(java.rmi.server.RemoteRef)
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.rmi.server.RemoteRef r1;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: java.rmi.server.RemoteRef;

        specialinvoke r0.<java.rmi.server.RemoteStub: void <init>(java.rmi.server.RemoteRef)>(r1);

        return;
    }

    public void addCalendar(java.lang.String, org.quartz.Calendar, boolean, boolean) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.String r1;
        org.quartz.Calendar r2;
        boolean z0, z1;
        java.lang.Object[] $r3;
        java.lang.reflect.Method $r4;
        java.rmi.server.RemoteRef $r5;
        java.lang.RuntimeException $r8;
        org.quartz.SchedulerException $r9;
        java.lang.Exception $r10;
        java.rmi.UnexpectedException $r11;
        java.rmi.RemoteException $r12;
        java.lang.Boolean $r13, $r14;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.quartz.Calendar;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

     label01:
        $r5 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r4 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_addCalendar_0>;

        $r3 = newarray (java.lang.Object)[4];

        $r3[0] = r1;

        $r3[1] = r2;

        if z0 == 0 goto label02;

        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label03;

     label02:
        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label03:
        $r3[2] = $r13;

        if z1 == 0 goto label04;

        $r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label05;

     label04:
        $r14 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label05:
        $r3[3] = $r14;

        interfaceinvoke $r5.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r4, $r3, 8855052307177792680L);

     label06:
        goto label11;

     label07:
        $r8 := @caughtexception;

        throw $r8;

     label08:
        $r12 := @caughtexception;

        throw $r12;

     label09:
        $r9 := @caughtexception;

        throw $r9;

     label10:
        $r10 := @caughtexception;

        $r11 = new java.rmi.UnexpectedException;

        specialinvoke $r11.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r10);

        throw $r11;

     label11:
        return;

        catch java.lang.RuntimeException from label01 to label06 with label07;
        catch java.rmi.RemoteException from label01 to label06 with label08;
        catch org.quartz.SchedulerException from label01 to label06 with label09;
        catch java.lang.Exception from label01 to label06 with label10;
    }

    public void addJob(org.quartz.JobDetail, boolean) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.JobDetail r1;
        boolean z0;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.rmi.RemoteException $r7;
        java.lang.Exception $r8;
        java.rmi.UnexpectedException $r9;
        java.lang.RuntimeException $r10;
        org.quartz.SchedulerException $r11;
        java.lang.Boolean $r12;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.JobDetail;

        z0 := @parameter1: boolean;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_addJob_1>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r1;

        if z0 == 0 goto label2;

        $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label3;

     label2:
        $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label3:
        $r2[1] = $r12;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -7729650160006632870L);

     label4:
        goto label9;

     label5:
        $r10 := @caughtexception;

        throw $r10;

     label6:
        $r7 := @caughtexception;

        throw $r7;

     label7:
        $r11 := @caughtexception;

        throw $r11;

     label8:
        $r8 := @caughtexception;

        $r9 = new java.rmi.UnexpectedException;

        specialinvoke $r9.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r8);

        throw $r9;

     label9:
        return;

        catch java.lang.RuntimeException from label1 to label4 with label5;
        catch java.rmi.RemoteException from label1 to label4 with label6;
        catch org.quartz.SchedulerException from label1 to label4 with label7;
        catch java.lang.Exception from label1 to label4 with label8;
    }

    public void addJob(org.quartz.JobDetail, boolean, boolean) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.JobDetail r1;
        boolean z0, z1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Exception $r7;
        java.rmi.UnexpectedException $r8;
        org.quartz.SchedulerException $r9;
        java.rmi.RemoteException $r10;
        java.lang.RuntimeException $r11;
        java.lang.Boolean $r12, $r13;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.JobDetail;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

     label01:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_addJob_2>;

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = r1;

        if z0 == 0 goto label02;

        $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label03;

     label02:
        $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label03:
        $r2[1] = $r12;

        if z1 == 0 goto label04;

        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label05;

     label04:
        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label05:
        $r2[2] = $r13;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 1129496936115180762L);

     label06:
        goto label11;

     label07:
        $r11 := @caughtexception;

        throw $r11;

     label08:
        $r10 := @caughtexception;

        throw $r10;

     label09:
        $r9 := @caughtexception;

        throw $r9;

     label10:
        $r7 := @caughtexception;

        $r8 = new java.rmi.UnexpectedException;

        specialinvoke $r8.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r7);

        throw $r8;

     label11:
        return;

        catch java.lang.RuntimeException from label01 to label06 with label07;
        catch java.rmi.RemoteException from label01 to label06 with label08;
        catch org.quartz.SchedulerException from label01 to label06 with label09;
        catch java.lang.Exception from label01 to label06 with label10;
    }

    public boolean checkExists(org.quartz.JobKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.JobKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.lang.RuntimeException $r6;
        org.quartz.SchedulerException $r7;
        java.lang.Exception $r8;
        java.rmi.UnexpectedException $r9;
        java.rmi.RemoteException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.JobKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_checkExists_3>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -5409554300431077992L);

        $r5 = (java.lang.Boolean) r11;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r6 := @caughtexception;

        throw $r6;

     label3:
        $r10 := @caughtexception;

        throw $r10;

     label4:
        $r7 := @caughtexception;

        throw $r7;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.rmi.UnexpectedException;

        specialinvoke $r9.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r8);

        throw $r9;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public boolean checkExists(org.quartz.TriggerKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.TriggerKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;
        java.rmi.RemoteException $r8;
        java.lang.RuntimeException $r9;
        org.quartz.SchedulerException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.TriggerKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_checkExists_4>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 57742068790347073L);

        $r5 = (java.lang.Boolean) r11;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r9 := @caughtexception;

        throw $r9;

     label3:
        $r8 := @caughtexception;

        throw $r8;

     label4:
        $r10 := @caughtexception;

        throw $r10;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.Class $r2;
        java.lang.ClassNotFoundException $r3;
        java.lang.NoClassDefFoundError $r4;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r2;

     label2:
        $r3 := @caughtexception;

        $r4 = new java.lang.NoClassDefFoundError;

        $r5 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    public void clear() throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        org.quartz.SchedulerException $r4;
        java.lang.Exception $r5;
        java.rmi.UnexpectedException $r6;
        java.lang.RuntimeException $r7;
        java.rmi.RemoteException $r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_clear_5>;

        interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, -7475254351993695499L);

     label2:
        goto label7;

     label3:
        $r7 := @caughtexception;

        throw $r7;

     label4:
        $r8 := @caughtexception;

        throw $r8;

     label5:
        $r4 := @caughtexception;

        throw $r4;

     label6:
        $r5 := @caughtexception;

        $r6 = new java.rmi.UnexpectedException;

        specialinvoke $r6.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r5);

        throw $r6;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public boolean deleteCalendar(java.lang.String) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.String r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.lang.RuntimeException $r6;
        org.quartz.SchedulerException $r7;
        java.lang.Exception $r8;
        java.rmi.UnexpectedException $r9;
        java.rmi.RemoteException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_deleteCalendar_6>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 4621799193941576495L);

        $r5 = (java.lang.Boolean) r11;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r6 := @caughtexception;

        throw $r6;

     label3:
        $r10 := @caughtexception;

        throw $r10;

     label4:
        $r7 := @caughtexception;

        throw $r7;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.rmi.UnexpectedException;

        specialinvoke $r9.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r8);

        throw $r9;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public boolean deleteJob(org.quartz.JobKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.JobKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.rmi.RemoteException $r6;
        java.lang.Exception $r7;
        java.rmi.UnexpectedException $r8;
        org.quartz.SchedulerException $r9;
        java.lang.RuntimeException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.JobKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_deleteJob_7>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -3057293324488607018L);

        $r5 = (java.lang.Boolean) r11;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r10 := @caughtexception;

        throw $r10;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r9 := @caughtexception;

        throw $r9;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.rmi.UnexpectedException;

        specialinvoke $r8.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r7);

        throw $r8;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public boolean deleteJobs(java.util.List) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.util.List r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;
        java.rmi.RemoteException $r8;
        java.lang.RuntimeException $r9;
        org.quartz.SchedulerException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: java.util.List;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_deleteJobs_8>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 7613446947728959209L);

        $r5 = (java.lang.Boolean) r11;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r9 := @caughtexception;

        throw $r9;

     label3:
        $r8 := @caughtexception;

        throw $r8;

     label4:
        $r10 := @caughtexception;

        throw $r10;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public org.quartz.Calendar getCalendar(java.lang.String) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.String r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        org.quartz.Calendar $r5;
        java.rmi.RemoteException $r6;
        org.quartz.SchedulerException $r7;
        java.lang.Exception $r8;
        java.rmi.UnexpectedException $r9;
        java.lang.RuntimeException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getCalendar_9>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 7476199188467217146L);

        $r5 = (org.quartz.Calendar) r11;

        return $r5;

     label2:
        $r10 := @caughtexception;

        throw $r10;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r7 := @caughtexception;

        throw $r7;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.rmi.UnexpectedException;

        specialinvoke $r9.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r8);

        throw $r9;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public java.util.List getCalendarNames() throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.util.List $r3;
        org.quartz.SchedulerException $r4;
        java.rmi.RemoteException $r5;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;
        java.lang.RuntimeException $r8;
        java.lang.Object r9;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getCalendarNames_10>;

        r9 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, -4042711865985645589L);

        $r3 = (java.util.List) r9;

        return $r3;

     label2:
        $r8 := @caughtexception;

        throw $r8;

     label3:
        $r5 := @caughtexception;

        throw $r5;

     label4:
        $r4 := @caughtexception;

        throw $r4;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public java.util.List getCurrentlyExecutingJobs() throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.util.List $r3;
        org.quartz.SchedulerException $r4;
        java.rmi.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.lang.Exception $r7;
        java.rmi.UnexpectedException $r8;
        java.lang.Object r9;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getCurrentlyExecutingJobs_11>;

        r9 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, 5767551841304860517L);

        $r3 = (java.util.List) r9;

        return $r3;

     label2:
        $r6 := @caughtexception;

        throw $r6;

     label3:
        $r5 := @caughtexception;

        throw $r5;

     label4:
        $r4 := @caughtexception;

        throw $r4;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.rmi.UnexpectedException;

        specialinvoke $r8.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r7);

        throw $r8;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public org.quartz.JobDetail getJobDetail(org.quartz.JobKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.JobKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        org.quartz.JobDetail $r5;
        java.rmi.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Exception $r8;
        java.rmi.UnexpectedException $r9;
        org.quartz.SchedulerException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.JobKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getJobDetail_12>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -5890147489272798972L);

        $r5 = (org.quartz.JobDetail) r11;

        return $r5;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r10 := @caughtexception;

        throw $r10;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.rmi.UnexpectedException;

        specialinvoke $r9.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r8);

        throw $r9;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public java.util.List getJobGroupNames() throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.util.List $r3;
        java.lang.Exception $r4;
        java.rmi.UnexpectedException $r5;
        java.lang.RuntimeException $r6;
        java.rmi.RemoteException $r7;
        org.quartz.SchedulerException $r8;
        java.lang.Object r9;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getJobGroupNames_13>;

        r9 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, -8455486033245212483L);

        $r3 = (java.util.List) r9;

        return $r3;

     label2:
        $r6 := @caughtexception;

        throw $r6;

     label3:
        $r7 := @caughtexception;

        throw $r7;

     label4:
        $r8 := @caughtexception;

        throw $r8;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.rmi.UnexpectedException;

        specialinvoke $r5.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r4);

        throw $r5;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.impl.matchers.GroupMatcher r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.util.Set $r5;
        java.rmi.RemoteException $r6;
        org.quartz.SchedulerException $r7;
        java.lang.RuntimeException $r8;
        java.lang.Exception $r9;
        java.rmi.UnexpectedException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.impl.matchers.GroupMatcher;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getJobKeys_14>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 5516129892023529995L);

        $r5 = (java.util.Set) r11;

        return $r5;

     label2:
        $r8 := @caughtexception;

        throw $r8;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r7 := @caughtexception;

        throw $r7;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.rmi.UnexpectedException;

        specialinvoke $r10.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r9);

        throw $r10;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public java.lang.Class getJobStoreClass() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.Class $r3;
        java.lang.Exception $r4;
        java.rmi.UnexpectedException $r5;
        java.rmi.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Object r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getJobStoreClass_15>;

        r8 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, 6705397913929502666L);

        $r3 = (java.lang.Class) r8;

        return $r3;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.rmi.UnexpectedException;

        specialinvoke $r5.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r4);

        throw $r5;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public java.util.Set getPausedTriggerGroups() throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.util.Set $r3;
        java.lang.Exception $r4;
        java.rmi.UnexpectedException $r5;
        org.quartz.SchedulerException $r6;
        java.lang.RuntimeException $r7;
        java.rmi.RemoteException $r8;
        java.lang.Object r9;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getPausedTriggerGroups_16>;

        r9 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, -3055688590637594456L);

        $r3 = (java.util.Set) r9;

        return $r3;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r8 := @caughtexception;

        throw $r8;

     label4:
        $r6 := @caughtexception;

        throw $r6;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.rmi.UnexpectedException;

        specialinvoke $r5.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r4);

        throw $r5;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public org.quartz.SchedulerContext getSchedulerContext() throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        org.quartz.SchedulerContext $r3;
        java.lang.Exception $r4;
        java.rmi.UnexpectedException $r5;
        java.rmi.RemoteException $r6;
        java.lang.RuntimeException $r7;
        org.quartz.SchedulerException $r8;
        java.lang.Object r9;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getSchedulerContext_17>;

        r9 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, 2814359591403475563L);

        $r3 = (org.quartz.SchedulerContext) r9;

        return $r3;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r8 := @caughtexception;

        throw $r8;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.rmi.UnexpectedException;

        specialinvoke $r5.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r4);

        throw $r5;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public java.lang.String getSchedulerInstanceId() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.String $r3;
        java.lang.Exception $r4;
        java.rmi.UnexpectedException $r5;
        java.rmi.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Object r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getSchedulerInstanceId_18>;

        r8 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, -2454925768252868567L);

        $r3 = (java.lang.String) r8;

        return $r3;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.rmi.UnexpectedException;

        specialinvoke $r5.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r4);

        throw $r5;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public java.lang.String getSchedulerName() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.String $r3;
        java.rmi.RemoteException $r4;
        java.lang.Exception $r5;
        java.rmi.UnexpectedException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Object r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getSchedulerName_19>;

        r8 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, 1038196595245667445L);

        $r3 = (java.lang.String) r8;

        return $r3;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r4 := @caughtexception;

        throw $r4;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.rmi.UnexpectedException;

        specialinvoke $r6.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r5);

        throw $r6;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public java.lang.Class getThreadPoolClass() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.Class $r3;
        java.lang.Exception $r4;
        java.rmi.UnexpectedException $r5;
        java.rmi.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Object r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getThreadPoolClass_20>;

        r8 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, -706336661940287388L);

        $r3 = (java.lang.Class) r8;

        return $r3;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.rmi.UnexpectedException;

        specialinvoke $r5.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r4);

        throw $r5;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public int getThreadPoolSize() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.Integer $r3;
        int $i0;
        java.rmi.RemoteException $r4;
        java.lang.RuntimeException $r5;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;
        java.lang.Object r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getThreadPoolSize_21>;

        r8 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, 6528392066641712137L);

        $r3 = (java.lang.Integer) r8;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;

     label2:
        $r5 := @caughtexception;

        throw $r5;

     label3:
        $r4 := @caughtexception;

        throw $r4;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public org.quartz.Trigger getTrigger(org.quartz.TriggerKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.TriggerKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        org.quartz.Trigger $r5;
        java.lang.RuntimeException $r6;
        org.quartz.SchedulerException $r7;
        java.rmi.RemoteException $r8;
        java.lang.Exception $r9;
        java.rmi.UnexpectedException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.TriggerKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getTrigger_22>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -8135458059745415503L);

        $r5 = (org.quartz.Trigger) r11;

        return $r5;

     label2:
        $r6 := @caughtexception;

        throw $r6;

     label3:
        $r8 := @caughtexception;

        throw $r8;

     label4:
        $r7 := @caughtexception;

        throw $r7;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.rmi.UnexpectedException;

        specialinvoke $r10.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r9);

        throw $r10;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public java.util.List getTriggerGroupNames() throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.util.List $r3;
        java.lang.Exception $r4;
        java.rmi.UnexpectedException $r5;
        org.quartz.SchedulerException $r6;
        java.lang.RuntimeException $r7;
        java.rmi.RemoteException $r8;
        java.lang.Object r9;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getTriggerGroupNames_23>;

        r9 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, -1425625447055098000L);

        $r3 = (java.util.List) r9;

        return $r3;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r8 := @caughtexception;

        throw $r8;

     label4:
        $r6 := @caughtexception;

        throw $r6;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.rmi.UnexpectedException;

        specialinvoke $r5.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r4);

        throw $r5;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.impl.matchers.GroupMatcher r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.util.Set $r5;
        org.quartz.SchedulerException $r6;
        java.lang.Exception $r7;
        java.rmi.UnexpectedException $r8;
        java.rmi.RemoteException $r9;
        java.lang.RuntimeException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.impl.matchers.GroupMatcher;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getTriggerKeys_24>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -833881061725726505L);

        $r5 = (java.util.Set) r11;

        return $r5;

     label2:
        $r10 := @caughtexception;

        throw $r10;

     label3:
        $r9 := @caughtexception;

        throw $r9;

     label4:
        $r6 := @caughtexception;

        throw $r6;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.rmi.UnexpectedException;

        specialinvoke $r8.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r7);

        throw $r8;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.TriggerKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        org.quartz.Trigger$TriggerState $r5;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;
        org.quartz.SchedulerException $r8;
        java.lang.RuntimeException $r9;
        java.rmi.RemoteException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.TriggerKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getTriggerState_25>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -5299675517853200699L);

        $r5 = (org.quartz.Trigger$TriggerState) r11;

        return $r5;

     label2:
        $r9 := @caughtexception;

        throw $r9;

     label3:
        $r10 := @caughtexception;

        throw $r10;

     label4:
        $r8 := @caughtexception;

        throw $r8;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public java.util.List getTriggersOfJob(org.quartz.JobKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.JobKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.util.List $r5;
        org.quartz.SchedulerException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Exception $r8;
        java.rmi.UnexpectedException $r9;
        java.rmi.RemoteException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.JobKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getTriggersOfJob_26>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 4987568461050139134L);

        $r5 = (java.util.List) r11;

        return $r5;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r10 := @caughtexception;

        throw $r10;

     label4:
        $r6 := @caughtexception;

        throw $r6;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.rmi.UnexpectedException;

        specialinvoke $r9.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r8);

        throw $r9;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public java.lang.String getVersion() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.String $r3;
        java.lang.Exception $r4;
        java.rmi.UnexpectedException $r5;
        java.rmi.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Object r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_getVersion_27>;

        r8 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, -8081107751519807347L);

        $r3 = (java.lang.String) r8;

        return $r3;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.rmi.UnexpectedException;

        specialinvoke $r5.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r4);

        throw $r5;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public boolean interrupt(java.lang.String) throws java.rmi.RemoteException, org.quartz.UnableToInterruptJobException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.String r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        org.quartz.UnableToInterruptJobException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Exception $r8;
        java.rmi.UnexpectedException $r9;
        java.rmi.RemoteException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_interrupt_28>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 256262298724115780L);

        $r5 = (java.lang.Boolean) r11;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r10 := @caughtexception;

        throw $r10;

     label4:
        $r6 := @caughtexception;

        throw $r6;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.rmi.UnexpectedException;

        specialinvoke $r9.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r8);

        throw $r9;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.UnableToInterruptJobException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public boolean interrupt(org.quartz.JobKey) throws java.rmi.RemoteException, org.quartz.UnableToInterruptJobException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.JobKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        org.quartz.UnableToInterruptJobException $r6;
        java.rmi.RemoteException $r7;
        java.lang.RuntimeException $r8;
        java.lang.Exception $r9;
        java.rmi.UnexpectedException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.JobKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_interrupt_29>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -4185636327079289011L);

        $r5 = (java.lang.Boolean) r11;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r8 := @caughtexception;

        throw $r8;

     label3:
        $r7 := @caughtexception;

        throw $r7;

     label4:
        $r6 := @caughtexception;

        throw $r6;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.rmi.UnexpectedException;

        specialinvoke $r10.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r9);

        throw $r10;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.UnableToInterruptJobException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public boolean isClustered() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.Boolean $r3;
        boolean $z0;
        java.rmi.RemoteException $r4;
        java.lang.Exception $r5;
        java.rmi.UnexpectedException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Object r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_isClustered_30>;

        r8 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, 8772462407279794129L);

        $r3 = (java.lang.Boolean) r8;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r4 := @caughtexception;

        throw $r4;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.rmi.UnexpectedException;

        specialinvoke $r6.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r5);

        throw $r6;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public boolean isInStandbyMode() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.Boolean $r3;
        boolean $z0;
        java.lang.RuntimeException $r4;
        java.lang.Exception $r5;
        java.rmi.UnexpectedException $r6;
        java.rmi.RemoteException $r7;
        java.lang.Object r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_isInStandbyMode_31>;

        r8 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, 809977841435240287L);

        $r3 = (java.lang.Boolean) r8;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r4 := @caughtexception;

        throw $r4;

     label3:
        $r7 := @caughtexception;

        throw $r7;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.rmi.UnexpectedException;

        specialinvoke $r6.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r5);

        throw $r6;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public boolean isShutdown() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.Boolean $r3;
        boolean $z0;
        java.lang.Exception $r4;
        java.rmi.UnexpectedException $r5;
        java.rmi.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Object r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_isShutdown_32>;

        r8 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, 6424449119484905518L);

        $r3 = (java.lang.Boolean) r8;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.rmi.UnexpectedException;

        specialinvoke $r5.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r4);

        throw $r5;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public int numJobsExecuted() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.Integer $r3;
        int $i0;
        java.lang.Exception $r4;
        java.rmi.UnexpectedException $r5;
        java.rmi.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Object r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_numJobsExecuted_33>;

        r8 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, 3699847707830503805L);

        $r3 = (java.lang.Integer) r8;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.rmi.UnexpectedException;

        specialinvoke $r5.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r4);

        throw $r5;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public void pauseAll() throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.RuntimeException $r4;
        java.lang.Exception $r5;
        java.rmi.UnexpectedException $r6;
        org.quartz.SchedulerException $r7;
        java.rmi.RemoteException $r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_pauseAll_34>;

        interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, 5457255371237476599L);

     label2:
        goto label7;

     label3:
        $r4 := @caughtexception;

        throw $r4;

     label4:
        $r8 := @caughtexception;

        throw $r8;

     label5:
        $r7 := @caughtexception;

        throw $r7;

     label6:
        $r5 := @caughtexception;

        $r6 = new java.rmi.UnexpectedException;

        specialinvoke $r6.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r5);

        throw $r6;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public void pauseJob(org.quartz.JobKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.JobKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.RuntimeException $r6;
        java.lang.Exception $r7;
        java.rmi.UnexpectedException $r8;
        org.quartz.SchedulerException $r9;
        java.rmi.RemoteException $r10;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.JobKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_pauseJob_35>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 8209397623379863913L);

     label2:
        goto label7;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r10 := @caughtexception;

        throw $r10;

     label5:
        $r9 := @caughtexception;

        throw $r9;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.rmi.UnexpectedException;

        specialinvoke $r8.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r7);

        throw $r8;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public void pauseJobs(org.quartz.impl.matchers.GroupMatcher) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.impl.matchers.GroupMatcher r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.RuntimeException $r6;
        org.quartz.SchedulerException $r7;
        java.rmi.RemoteException $r8;
        java.lang.Exception $r9;
        java.rmi.UnexpectedException $r10;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.impl.matchers.GroupMatcher;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_pauseJobs_36>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 8348393716035813534L);

     label2:
        goto label7;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r8 := @caughtexception;

        throw $r8;

     label5:
        $r7 := @caughtexception;

        throw $r7;

     label6:
        $r9 := @caughtexception;

        $r10 = new java.rmi.UnexpectedException;

        specialinvoke $r10.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r9);

        throw $r10;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public void pauseTrigger(org.quartz.TriggerKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.TriggerKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;
        org.quartz.SchedulerException $r8;
        java.rmi.RemoteException $r9;
        java.lang.RuntimeException $r10;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.TriggerKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_pauseTrigger_37>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -1556555911706012384L);

     label2:
        goto label7;

     label3:
        $r10 := @caughtexception;

        throw $r10;

     label4:
        $r9 := @caughtexception;

        throw $r9;

     label5:
        $r8 := @caughtexception;

        throw $r8;

     label6:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public void pauseTriggers(org.quartz.impl.matchers.GroupMatcher) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.impl.matchers.GroupMatcher r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.RuntimeException $r6;
        org.quartz.SchedulerException $r7;
        java.rmi.RemoteException $r8;
        java.lang.Exception $r9;
        java.rmi.UnexpectedException $r10;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.impl.matchers.GroupMatcher;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_pauseTriggers_38>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -7673129639132463315L);

     label2:
        goto label7;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r8 := @caughtexception;

        throw $r8;

     label5:
        $r7 := @caughtexception;

        throw $r7;

     label6:
        $r9 := @caughtexception;

        $r10 = new java.rmi.UnexpectedException;

        specialinvoke $r10.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r9);

        throw $r10;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public java.util.Date rescheduleJob(org.quartz.TriggerKey, org.quartz.Trigger) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.TriggerKey r1;
        org.quartz.Trigger r2;
        java.lang.Object[] $r3;
        java.lang.reflect.Method $r4;
        java.rmi.server.RemoteRef $r5;
        java.util.Date $r6;
        org.quartz.SchedulerException $r7;
        java.lang.RuntimeException $r8;
        java.lang.Exception $r9;
        java.rmi.UnexpectedException $r10;
        java.rmi.RemoteException $r11;
        java.lang.Object r12;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.TriggerKey;

        r2 := @parameter1: org.quartz.Trigger;

     label1:
        $r5 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r4 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_rescheduleJob_39>;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r1;

        $r3[1] = r2;

        r12 = interfaceinvoke $r5.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r4, $r3, -6542935860087805349L);

        $r6 = (java.util.Date) r12;

        return $r6;

     label2:
        $r8 := @caughtexception;

        throw $r8;

     label3:
        $r11 := @caughtexception;

        throw $r11;

     label4:
        $r7 := @caughtexception;

        throw $r7;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.rmi.UnexpectedException;

        specialinvoke $r10.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r9);

        throw $r10;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public void resetTriggerFromErrorState(org.quartz.TriggerKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.TriggerKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        org.quartz.SchedulerException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Exception $r8;
        java.rmi.UnexpectedException $r9;
        java.rmi.RemoteException $r10;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.TriggerKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_resetTriggerFromErrorState_40>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -8848809227421519492L);

     label2:
        goto label7;

     label3:
        $r7 := @caughtexception;

        throw $r7;

     label4:
        $r10 := @caughtexception;

        throw $r10;

     label5:
        $r6 := @caughtexception;

        throw $r6;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.rmi.UnexpectedException;

        specialinvoke $r9.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r8);

        throw $r9;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public void resumeAll() throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        org.quartz.SchedulerException $r4;
        java.rmi.RemoteException $r5;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;
        java.lang.RuntimeException $r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_resumeAll_41>;

        interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, 6544465639644633234L);

     label2:
        goto label7;

     label3:
        $r8 := @caughtexception;

        throw $r8;

     label4:
        $r5 := @caughtexception;

        throw $r5;

     label5:
        $r4 := @caughtexception;

        throw $r4;

     label6:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public void resumeJob(org.quartz.JobKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.JobKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;
        java.rmi.RemoteException $r8;
        java.lang.RuntimeException $r9;
        org.quartz.SchedulerException $r10;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.JobKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_resumeJob_42>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 85405606979760311L);

     label2:
        goto label7;

     label3:
        $r9 := @caughtexception;

        throw $r9;

     label4:
        $r8 := @caughtexception;

        throw $r8;

     label5:
        $r10 := @caughtexception;

        throw $r10;

     label6:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public void resumeJobs(org.quartz.impl.matchers.GroupMatcher) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.impl.matchers.GroupMatcher r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        org.quartz.SchedulerException $r6;
        java.lang.Exception $r7;
        java.rmi.UnexpectedException $r8;
        java.rmi.RemoteException $r9;
        java.lang.RuntimeException $r10;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.impl.matchers.GroupMatcher;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_resumeJobs_43>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 7080691189565323939L);

     label2:
        goto label7;

     label3:
        $r10 := @caughtexception;

        throw $r10;

     label4:
        $r9 := @caughtexception;

        throw $r9;

     label5:
        $r6 := @caughtexception;

        throw $r6;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.rmi.UnexpectedException;

        specialinvoke $r8.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r7);

        throw $r8;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public void resumeTrigger(org.quartz.TriggerKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.TriggerKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.rmi.RemoteException $r6;
        org.quartz.SchedulerException $r7;
        java.lang.RuntimeException $r8;
        java.lang.Exception $r9;
        java.rmi.UnexpectedException $r10;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.TriggerKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_resumeTrigger_44>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 1103652291697918174L);

     label2:
        goto label7;

     label3:
        $r8 := @caughtexception;

        throw $r8;

     label4:
        $r6 := @caughtexception;

        throw $r6;

     label5:
        $r7 := @caughtexception;

        throw $r7;

     label6:
        $r9 := @caughtexception;

        $r10 = new java.rmi.UnexpectedException;

        specialinvoke $r10.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r9);

        throw $r10;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public void resumeTriggers(org.quartz.impl.matchers.GroupMatcher) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.impl.matchers.GroupMatcher r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        org.quartz.SchedulerException $r6;
        java.lang.Exception $r7;
        java.rmi.UnexpectedException $r8;
        java.lang.RuntimeException $r9;
        java.rmi.RemoteException $r10;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.impl.matchers.GroupMatcher;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_resumeTriggers_45>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 316892067472367515L);

     label2:
        goto label7;

     label3:
        $r9 := @caughtexception;

        throw $r9;

     label4:
        $r10 := @caughtexception;

        throw $r10;

     label5:
        $r6 := @caughtexception;

        throw $r6;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.rmi.UnexpectedException;

        specialinvoke $r8.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r7);

        throw $r8;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public java.util.Date runningSince() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.util.Date $r3;
        java.lang.RuntimeException $r4;
        java.rmi.RemoteException $r5;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;
        java.lang.Object r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_runningSince_46>;

        r8 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, -1739625058868381113L);

        $r3 = (java.util.Date) r8;

        return $r3;

     label2:
        $r4 := @caughtexception;

        throw $r4;

     label3:
        $r5 := @caughtexception;

        throw $r5;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public void scheduleJob(org.quartz.JobDetail, java.util.Set, boolean) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.JobDetail r1;
        java.util.Set r2;
        boolean z0;
        java.lang.Object[] $r3;
        java.lang.reflect.Method $r4;
        java.rmi.server.RemoteRef $r5;
        java.rmi.RemoteException $r8;
        java.lang.Exception $r9;
        java.rmi.UnexpectedException $r10;
        org.quartz.SchedulerException $r11;
        java.lang.RuntimeException $r12;
        java.lang.Boolean $r13;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.JobDetail;

        r2 := @parameter1: java.util.Set;

        z0 := @parameter2: boolean;

     label1:
        $r5 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r4 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_scheduleJob_47>;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = r1;

        $r3[1] = r2;

        if z0 == 0 goto label2;

        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label3;

     label2:
        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label3:
        $r3[2] = $r13;

        interfaceinvoke $r5.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r4, $r3, -2860300690822357486L);

     label4:
        goto label9;

     label5:
        $r12 := @caughtexception;

        throw $r12;

     label6:
        $r8 := @caughtexception;

        throw $r8;

     label7:
        $r11 := @caughtexception;

        throw $r11;

     label8:
        $r9 := @caughtexception;

        $r10 = new java.rmi.UnexpectedException;

        specialinvoke $r10.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r9);

        throw $r10;

     label9:
        return;

        catch java.lang.RuntimeException from label1 to label4 with label5;
        catch java.rmi.RemoteException from label1 to label4 with label6;
        catch org.quartz.SchedulerException from label1 to label4 with label7;
        catch java.lang.Exception from label1 to label4 with label8;
    }

    public java.util.Date scheduleJob(org.quartz.JobDetail, org.quartz.Trigger) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.JobDetail r1;
        org.quartz.Trigger r2;
        java.lang.Object[] $r3;
        java.lang.reflect.Method $r4;
        java.rmi.server.RemoteRef $r5;
        java.util.Date $r6;
        java.lang.RuntimeException $r7;
        org.quartz.SchedulerException $r8;
        java.rmi.RemoteException $r9;
        java.lang.Exception $r10;
        java.rmi.UnexpectedException $r11;
        java.lang.Object r12;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.JobDetail;

        r2 := @parameter1: org.quartz.Trigger;

     label1:
        $r5 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r4 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_scheduleJob_48>;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r1;

        $r3[1] = r2;

        r12 = interfaceinvoke $r5.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r4, $r3, 4944457543332629245L);

        $r6 = (java.util.Date) r12;

        return $r6;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r9 := @caughtexception;

        throw $r9;

     label4:
        $r8 := @caughtexception;

        throw $r8;

     label5:
        $r10 := @caughtexception;

        $r11 = new java.rmi.UnexpectedException;

        specialinvoke $r11.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r10);

        throw $r11;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public java.util.Date scheduleJob(org.quartz.Trigger) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.Trigger r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.util.Date $r5;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;
        java.rmi.RemoteException $r8;
        java.lang.RuntimeException $r9;
        org.quartz.SchedulerException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.Trigger;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_scheduleJob_49>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -6865148385642356285L);

        $r5 = (java.util.Date) r11;

        return $r5;

     label2:
        $r9 := @caughtexception;

        throw $r9;

     label3:
        $r8 := @caughtexception;

        throw $r8;

     label4:
        $r10 := @caughtexception;

        throw $r10;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public void scheduleJobs(java.util.Map, boolean) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.util.Map r1;
        boolean z0;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Exception $r7;
        java.rmi.UnexpectedException $r8;
        org.quartz.SchedulerException $r9;
        java.rmi.RemoteException $r10;
        java.lang.RuntimeException $r11;
        java.lang.Boolean $r12;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_scheduleJobs_50>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r1;

        if z0 == 0 goto label2;

        $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label3;

     label2:
        $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label3:
        $r2[1] = $r12;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 2404438458719160003L);

     label4:
        goto label9;

     label5:
        $r11 := @caughtexception;

        throw $r11;

     label6:
        $r10 := @caughtexception;

        throw $r10;

     label7:
        $r9 := @caughtexception;

        throw $r9;

     label8:
        $r7 := @caughtexception;

        $r8 = new java.rmi.UnexpectedException;

        specialinvoke $r8.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r7);

        throw $r8;

     label9:
        return;

        catch java.lang.RuntimeException from label1 to label4 with label5;
        catch java.rmi.RemoteException from label1 to label4 with label6;
        catch org.quartz.SchedulerException from label1 to label4 with label7;
        catch java.lang.Exception from label1 to label4 with label8;
    }

    public void shutdown() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.Exception $r4;
        java.rmi.UnexpectedException $r5;
        java.rmi.RemoteException $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_shutdown_51>;

        interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, -7207851917985848402L);

     label2:
        goto label6;

     label3:
        $r7 := @caughtexception;

        throw $r7;

     label4:
        $r6 := @caughtexception;

        throw $r6;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.rmi.UnexpectedException;

        specialinvoke $r5.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r4);

        throw $r5;

     label6:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public void shutdown(boolean) throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        boolean z0;
        java.lang.Object[] $r1;
        java.lang.reflect.Method $r2;
        java.rmi.server.RemoteRef $r3;
        java.rmi.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Exception $r8;
        java.rmi.UnexpectedException $r9;
        java.lang.Boolean $r10;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        z0 := @parameter0: boolean;

     label1:
        $r3 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r2 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_shutdown_52>;

        $r1 = newarray (java.lang.Object)[1];

        if z0 == 0 goto label2;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label3;

     label2:
        $r10 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label3:
        $r1[0] = $r10;

        interfaceinvoke $r3.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r2, $r1, -7158426071079062438L);

     label4:
        goto label8;

     label5:
        $r7 := @caughtexception;

        throw $r7;

     label6:
        $r6 := @caughtexception;

        throw $r6;

     label7:
        $r8 := @caughtexception;

        $r9 = new java.rmi.UnexpectedException;

        specialinvoke $r9.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r8);

        throw $r9;

     label8:
        return;

        catch java.lang.RuntimeException from label1 to label4 with label5;
        catch java.rmi.RemoteException from label1 to label4 with label6;
        catch java.lang.Exception from label1 to label4 with label7;
    }

    public void standby() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.RuntimeException $r4;
        java.rmi.RemoteException $r5;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_standby_53>;

        interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, 7161048918451732526L);

     label2:
        goto label6;

     label3:
        $r4 := @caughtexception;

        throw $r4;

     label4:
        $r5 := @caughtexception;

        throw $r5;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

     label6:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public void start() throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.RuntimeException $r4;
        org.quartz.SchedulerException $r5;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;
        java.rmi.RemoteException $r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_start_54>;

        interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, -8025343665958530775L);

     label2:
        goto label7;

     label3:
        $r4 := @caughtexception;

        throw $r4;

     label4:
        $r8 := @caughtexception;

        throw $r8;

     label5:
        $r5 := @caughtexception;

        throw $r5;

     label6:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public void startDelayed(int) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.rmi.server.RemoteRef $r3;
        java.lang.reflect.Method $r4;
        org.quartz.SchedulerException $r6;
        java.lang.Exception $r7;
        java.rmi.UnexpectedException $r8;
        java.rmi.RemoteException $r9;
        java.lang.RuntimeException $r10;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        i0 := @parameter0: int;

     label1:
        $r3 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r4 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_startDelayed_55>;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i0);

        $r1[0] = $r2;

        interfaceinvoke $r3.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r4, $r1, -1476976461109028800L);

     label2:
        goto label7;

     label3:
        $r10 := @caughtexception;

        throw $r10;

     label4:
        $r9 := @caughtexception;

        throw $r9;

     label5:
        $r6 := @caughtexception;

        throw $r6;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.rmi.UnexpectedException;

        specialinvoke $r8.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r7);

        throw $r8;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public boolean supportsPersistence() throws java.rmi.RemoteException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.lang.reflect.Method $r1;
        java.rmi.server.RemoteRef $r2;
        java.lang.Boolean $r3;
        boolean $z0;
        java.lang.Exception $r4;
        java.rmi.UnexpectedException $r5;
        java.rmi.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Object r8;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

     label1:
        $r2 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r1 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_supportsPersistence_56>;

        r8 = interfaceinvoke $r2.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r1, null, -5767630451452602400L);

        $r3 = (java.lang.Boolean) r8;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r7 := @caughtexception;

        throw $r7;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.rmi.UnexpectedException;

        specialinvoke $r5.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r4);

        throw $r5;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public void triggerJob(org.quartz.JobKey, org.quartz.JobDataMap) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.JobKey r1;
        org.quartz.JobDataMap r2;
        java.lang.Object[] $r3;
        java.lang.reflect.Method $r4;
        java.rmi.server.RemoteRef $r5;
        java.rmi.RemoteException $r7;
        org.quartz.SchedulerException $r8;
        java.lang.Exception $r9;
        java.rmi.UnexpectedException $r10;
        java.lang.RuntimeException $r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.JobKey;

        r2 := @parameter1: org.quartz.JobDataMap;

     label1:
        $r5 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r4 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_triggerJob_57>;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r1;

        $r3[1] = r2;

        interfaceinvoke $r5.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r4, $r3, -1585175841511357332L);

     label2:
        goto label7;

     label3:
        $r11 := @caughtexception;

        throw $r11;

     label4:
        $r7 := @caughtexception;

        throw $r7;

     label5:
        $r8 := @caughtexception;

        throw $r8;

     label6:
        $r9 := @caughtexception;

        $r10 = new java.rmi.UnexpectedException;

        specialinvoke $r10.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r9);

        throw $r10;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public void triggerJob(org.quartz.spi.OperableTrigger) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.spi.OperableTrigger r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        org.quartz.SchedulerException $r6;
        java.rmi.RemoteException $r7;
        java.lang.RuntimeException $r8;
        java.lang.Exception $r9;
        java.rmi.UnexpectedException $r10;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.spi.OperableTrigger;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_triggerJob_58>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 5598451830209081494L);

     label2:
        goto label7;

     label3:
        $r8 := @caughtexception;

        throw $r8;

     label4:
        $r7 := @caughtexception;

        throw $r7;

     label5:
        $r6 := @caughtexception;

        throw $r6;

     label6:
        $r9 := @caughtexception;

        $r10 = new java.rmi.UnexpectedException;

        specialinvoke $r10.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r9);

        throw $r10;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
        catch org.quartz.SchedulerException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public boolean unscheduleJob(org.quartz.TriggerKey) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        org.quartz.TriggerKey r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.lang.RuntimeException $r6;
        org.quartz.SchedulerException $r7;
        java.rmi.RemoteException $r8;
        java.lang.Exception $r9;
        java.rmi.UnexpectedException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: org.quartz.TriggerKey;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_unscheduleJob_59>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, -4592142908438852383L);

        $r5 = (java.lang.Boolean) r11;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r6 := @caughtexception;

        throw $r6;

     label3:
        $r8 := @caughtexception;

        throw $r8;

     label4:
        $r7 := @caughtexception;

        throw $r7;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.rmi.UnexpectedException;

        specialinvoke $r10.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r9);

        throw $r10;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public boolean unscheduleJobs(java.util.List) throws java.rmi.RemoteException, org.quartz.SchedulerException
    {
        org.quartz.core.QuartzScheduler_Stub r0;
        java.util.List r1;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.rmi.server.RemoteRef $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.lang.Exception $r6;
        java.rmi.UnexpectedException $r7;
        org.quartz.SchedulerException $r8;
        java.rmi.RemoteException $r9;
        java.lang.RuntimeException $r10;
        java.lang.Object r11;

        r0 := @this: org.quartz.core.QuartzScheduler_Stub;

        r1 := @parameter0: java.util.List;

     label1:
        $r4 = r0.<java.rmi.server.RemoteObject: java.rmi.server.RemoteRef ref>;

        $r3 = <org.quartz.core.QuartzScheduler_Stub: java.lang.reflect.Method $method_unscheduleJobs_60>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r11 = interfaceinvoke $r4.<java.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)>(r0, $r3, $r2, 1385849655203364760L);

        $r5 = (java.lang.Boolean) r11;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r10 := @caughtexception;

        throw $r10;

     label3:
        $r9 := @caughtexception;

        throw $r9;

     label4:
        $r8 := @caughtexception;

        throw $r8;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.rmi.UnexpectedException;

        specialinvoke $r7.<java.rmi.UnexpectedException: void <init>(java.lang.String,java.lang.Exception)>("undeclared checked exception", $r6);

        throw $r7;

        catch java.lang.RuntimeException from label1 to label2 with label2;
        catch java.rmi.RemoteException from label1 to label2 with label3;
        catch org.quartz.SchedulerException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }
}
