public class org.quartz.TriggerComparatorTest extends junit.framework.TestCase
{

    public void <init>()
    {
        org.quartz.TriggerComparatorTest r0;

        r0 := @this: org.quartz.TriggerComparatorTest;

        specialinvoke r0.<junit.framework.TestCase: void <init>()>();

        return;
    }

    public void testTriggerSort()
    {
        org.quartz.TriggerComparatorTest r0;
        org.quartz.Trigger r1, r2, r3, r4, r5, r6;
        org.quartz.TriggerBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        java.util.LinkedList $r20;
        java.lang.Object $r21, $r22, $r23, $r24, $r25, $r26;

        r0 := @this: org.quartz.TriggerComparatorTest;

        $r8 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("a");

        r1 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r10 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r11 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("b");

        r2 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r12 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("c");

        r3 = virtualinvoke $r13.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r14 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r15 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("a", "a");

        r4 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r16 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("a", "b");

        r5 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r18 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r19 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("a", "c");

        r6 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r20 = new java.util.LinkedList;

        specialinvoke $r20.<java.util.LinkedList: void <init>()>();

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r5);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r6);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r4);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r3);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r1);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r2);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r20);

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r21);

        $r22 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(1);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r22);

        $r23 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(2);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r3, $r23);

        $r24 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(3);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r4, $r24);

        $r25 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(4);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r25);

        $r26 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(5);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r6, $r26);

        return;
    }

    public void testTriggerTimeSort()
    {
        org.quartz.TriggerComparatorTest r0;
        org.quartz.Trigger r1, r2, r3, r4, r5, r6, r7, r8, r9;
        org.quartz.TriggerBuilder $r11, $r12, $r15, $r18, $r19, $r22, $r25, $r26, $r29, $r32, $r33, $r36, $r37, $r40, $r41, $r44, $r47, $r48, $r51, $r54, $r55, $r58, $r59, $r62, $r63, $r66, $r69, $r70, $r73;
        org.quartz.DateBuilder$IntervalUnit $r13, $r20, $r27, $r34, $r42, $r49, $r56, $r64, $r71;
        java.util.Date $r14, $r21, $r28, $r35, $r43, $r50, $r57, $r65, $r72;
        org.quartz.spi.OperableTrigger $r16, $r23, $r30, $r38, $r45, $r52, $r60, $r67, $r74;
        java.util.LinkedList $r76;
        java.lang.Object $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85;

        r0 := @this: org.quartz.TriggerComparatorTest;

        $r11 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r12 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("a");

        $r13 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>;

        $r14 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(1, $r13);

        $r15 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r14);

        r1 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r16 = (org.quartz.spi.OperableTrigger) r1;

        interfaceinvoke $r16.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null);

        $r18 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r19 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("b");

        $r20 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>;

        $r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(2, $r20);

        $r22 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r21);

        r2 = virtualinvoke $r22.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r23 = (org.quartz.spi.OperableTrigger) r2;

        interfaceinvoke $r23.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null);

        $r25 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r26 = virtualinvoke $r25.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("c");

        $r27 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>;

        $r28 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(3, $r27);

        $r29 = virtualinvoke $r26.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r28);

        r3 = virtualinvoke $r29.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r30 = (org.quartz.spi.OperableTrigger) r3;

        interfaceinvoke $r30.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null);

        $r32 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r33 = virtualinvoke $r32.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("d");

        $r34 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>;

        $r35 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(5, $r34);

        $r36 = virtualinvoke $r33.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r35);

        $r37 = virtualinvoke $r36.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withPriority(int)>(7);

        r4 = virtualinvoke $r37.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r38 = (org.quartz.spi.OperableTrigger) r4;

        interfaceinvoke $r38.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null);

        $r40 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r41 = virtualinvoke $r40.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("e");

        $r42 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>;

        $r43 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(5, $r42);

        $r44 = virtualinvoke $r41.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r43);

        r5 = virtualinvoke $r44.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r45 = (org.quartz.spi.OperableTrigger) r5;

        interfaceinvoke $r45.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null);

        $r47 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r48 = virtualinvoke $r47.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("g");

        $r49 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>;

        $r50 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(5, $r49);

        $r51 = virtualinvoke $r48.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r50);

        r6 = virtualinvoke $r51.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r52 = (org.quartz.spi.OperableTrigger) r6;

        interfaceinvoke $r52.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null);

        $r54 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r55 = virtualinvoke $r54.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("h");

        $r56 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>;

        $r57 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(5, $r56);

        $r58 = virtualinvoke $r55.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r57);

        $r59 = virtualinvoke $r58.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withPriority(int)>(2);

        r7 = virtualinvoke $r59.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r60 = (org.quartz.spi.OperableTrigger) r7;

        interfaceinvoke $r60.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null);

        $r62 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r63 = virtualinvoke $r62.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("i");

        $r64 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>;

        $r65 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(6, $r64);

        $r66 = virtualinvoke $r63.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r65);

        r8 = virtualinvoke $r66.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r67 = (org.quartz.spi.OperableTrigger) r8;

        interfaceinvoke $r67.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null);

        $r69 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r70 = virtualinvoke $r69.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("j");

        $r71 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>;

        $r72 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(7, $r71);

        $r73 = virtualinvoke $r70.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r72);

        r9 = virtualinvoke $r73.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r74 = (org.quartz.spi.OperableTrigger) r9;

        interfaceinvoke $r74.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null);

        $r76 = new java.util.LinkedList;

        specialinvoke $r76.<java.util.LinkedList: void <init>()>();

        interfaceinvoke $r76.<java.util.List: boolean add(java.lang.Object)>(r5);

        interfaceinvoke $r76.<java.util.List: boolean add(java.lang.Object)>(r9);

        interfaceinvoke $r76.<java.util.List: boolean add(java.lang.Object)>(r6);

        interfaceinvoke $r76.<java.util.List: boolean add(java.lang.Object)>(r8);

        interfaceinvoke $r76.<java.util.List: boolean add(java.lang.Object)>(r4);

        interfaceinvoke $r76.<java.util.List: boolean add(java.lang.Object)>(r3);

        interfaceinvoke $r76.<java.util.List: boolean add(java.lang.Object)>(r1);

        interfaceinvoke $r76.<java.util.List: boolean add(java.lang.Object)>(r7);

        interfaceinvoke $r76.<java.util.List: boolean add(java.lang.Object)>(r2);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r76);

        $r77 = interfaceinvoke $r76.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r77);

        $r78 = interfaceinvoke $r76.<java.util.List: java.lang.Object get(int)>(1);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r78);

        $r79 = interfaceinvoke $r76.<java.util.List: java.lang.Object get(int)>(2);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r3, $r79);

        $r80 = interfaceinvoke $r76.<java.util.List: java.lang.Object get(int)>(3);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r4, $r80);

        $r81 = interfaceinvoke $r76.<java.util.List: java.lang.Object get(int)>(4);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r81);

        $r82 = interfaceinvoke $r76.<java.util.List: java.lang.Object get(int)>(5);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r6, $r82);

        $r83 = interfaceinvoke $r76.<java.util.List: java.lang.Object get(int)>(6);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r7, $r83);

        $r84 = interfaceinvoke $r76.<java.util.List: java.lang.Object get(int)>(7);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r8, $r84);

        $r85 = interfaceinvoke $r76.<java.util.List: java.lang.Object get(int)>(8);

        staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r9, $r85);

        return;
    }
}
