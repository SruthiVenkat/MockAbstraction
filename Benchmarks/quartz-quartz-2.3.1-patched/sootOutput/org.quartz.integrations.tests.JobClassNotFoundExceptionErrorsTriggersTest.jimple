public class org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest extends org.quartz.integrations.tests.QuartzDatabaseTestSupport
{
    private static final java.lang.String BARRIER_KEY;

    public void <init>()
    {
        org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest r0;

        r0 := @this: org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest;

        specialinvoke r0.<org.quartz.integrations.tests.QuartzDatabaseTestSupport: void <init>()>();

        return;
    }

    protected java.util.Properties createSchedulerProperties()
    {
        org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest r0;
        java.util.Properties r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest;

        r1 = specialinvoke r0.<org.quartz.integrations.tests.QuartzDatabaseTestSupport: java.util.Properties createSchedulerProperties()>();

        $r2 = class "Lorg/quartz/integrations/tests/JobClassNotFoundExceptionErrorsTriggersTest$SpecialClassLoadHelper;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.quartz.scheduler.classLoadHelper.class", $r3);

        return r1;
    }

    public void testJobClassNotFoundDoesntBlock() throws java.lang.Exception
    {
        org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest r0;
        org.quartz.JobDetail r2, r3;
        long l0, $l1;
        org.quartz.Trigger r4, r5;
        java.util.concurrent.CyclicBarrier $r7;
        org.quartz.Scheduler $r8, $r30, $r32;
        org.quartz.SchedulerContext $r9;
        org.quartz.JobBuilder $r11, $r12, $r13, $r14;
        org.quartz.TriggerBuilder $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r24;
        java.util.Date $r18, $r23;
        java.util.HashMap $r25;
        java.util.Set $r26, $r28;
        java.util.concurrent.TimeUnit $r31;
        org.quartz.TriggerKey $r33;
        org.quartz.Trigger$TriggerState $r34, $r35;
        org.hamcrest.Matcher $r36;

        r0 := @this: org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest;

        $r7 = new java.util.concurrent.CyclicBarrier;

        specialinvoke $r7.<java.util.concurrent.CyclicBarrier: void <init>(int)>(2);

        $r8 = r0.<org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest: org.quartz.Scheduler scheduler>;

        $r9 = interfaceinvoke $r8.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>();

        virtualinvoke $r9.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>("BARRIER", $r7);

        $r11 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/JobClassNotFoundExceptionErrorsTriggersTest$GoodJob;");

        $r12 = virtualinvoke $r11.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("good");

        r2 = virtualinvoke $r12.<org.quartz.JobBuilder: org.quartz.JobDetail build()>();

        $r13 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/JobClassNotFoundExceptionErrorsTriggersTest$BadJob;");

        $r14 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("bad");

        r3 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobDetail build()>();

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r15 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r16 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("good");

        $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r2);

        $r18 = new java.util.Date;

        $l1 = l0 + 1L;

        specialinvoke $r18.<java.util.Date: void <init>(long)>($l1);

        $r19 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r18);

        r4 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r20 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r21 = virtualinvoke $r20.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("bad");

        $r22 = virtualinvoke $r21.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r3);

        $r23 = new java.util.Date;

        specialinvoke $r23.<java.util.Date: void <init>(long)>(l0);

        $r24 = virtualinvoke $r22.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r23);

        r5 = virtualinvoke $r24.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        $r26 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5);

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r26);

        $r28 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r4);

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r28);

        $r30 = r0.<org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest: org.quartz.Scheduler scheduler>;

        interfaceinvoke $r30.<org.quartz.Scheduler: void scheduleJobs(java.util.Map,boolean)>($r25, 1);

        $r31 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        virtualinvoke $r7.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(20L, $r31);

        $r32 = r0.<org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest: org.quartz.Scheduler scheduler>;

        $r33 = interfaceinvoke r5.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>();

        $r34 = interfaceinvoke $r32.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r33);

        $r35 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState ERROR>;

        $r36 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r35);

        staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r34, $r36);

        return;
    }

    public static void <clinit>()
    {
        <org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest: java.lang.String BARRIER_KEY> = "BARRIER";

        return;
    }
}
