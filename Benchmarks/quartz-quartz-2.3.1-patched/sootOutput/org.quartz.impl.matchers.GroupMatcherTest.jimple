public class org.quartz.impl.matchers.GroupMatcherTest extends junit.framework.TestCase
{

    public void <init>()
    {
        org.quartz.impl.matchers.GroupMatcherTest r0;

        r0 := @this: org.quartz.impl.matchers.GroupMatcherTest;

        specialinvoke r0.<junit.framework.TestCase: void <init>()>();

        return;
    }

    public void testAnyGroupMatchers()
    {
        org.quartz.impl.matchers.GroupMatcherTest r0;
        org.quartz.TriggerKey r1;
        org.quartz.JobKey r2;
        org.quartz.impl.matchers.GroupMatcher r3, r4;
        boolean $z0, $z1;

        r0 := @this: org.quartz.impl.matchers.GroupMatcherTest;

        r1 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("booboo", "baz");

        r2 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String,java.lang.String)>("frumpwomp", "bazoo");

        r3 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher anyTriggerGroup()>();

        r4 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher anyJobGroup()>();

        $z0 = virtualinvoke r3.<org.quartz.impl.matchers.GroupMatcher: boolean isMatch(org.quartz.utils.Key)>(r1);

        staticinvoke <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>("Expected match on trigger group", $z0);

        $z1 = virtualinvoke r4.<org.quartz.impl.matchers.GroupMatcher: boolean isMatch(org.quartz.utils.Key)>(r2);

        staticinvoke <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>("Expected match on job group", $z1);

        return;
    }
}
