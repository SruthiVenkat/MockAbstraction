public class org.quartz.simpl.ZeroSizeThreadPool extends java.lang.Object implements org.quartz.spi.ThreadPool
{
    private final org.slf4j.Logger log;

    public void <init>()
    {
        org.quartz.simpl.ZeroSizeThreadPool r0;
        java.lang.Class $r1;
        org.slf4j.Logger $r2;

        r0 := @this: org.quartz.simpl.ZeroSizeThreadPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r1);

        r0.<org.quartz.simpl.ZeroSizeThreadPool: org.slf4j.Logger log> = $r2;

        return;
    }

    public org.slf4j.Logger getLog()
    {
        org.quartz.simpl.ZeroSizeThreadPool r0;
        org.slf4j.Logger $r1;

        r0 := @this: org.quartz.simpl.ZeroSizeThreadPool;

        $r1 = r0.<org.quartz.simpl.ZeroSizeThreadPool: org.slf4j.Logger log>;

        return $r1;
    }

    public int getPoolSize()
    {
        org.quartz.simpl.ZeroSizeThreadPool r0;

        r0 := @this: org.quartz.simpl.ZeroSizeThreadPool;

        return 0;
    }

    public void initialize() throws org.quartz.SchedulerConfigException
    {
        org.quartz.simpl.ZeroSizeThreadPool r0;

        r0 := @this: org.quartz.simpl.ZeroSizeThreadPool;

        return;
    }

    public void shutdown()
    {
        org.quartz.simpl.ZeroSizeThreadPool r0;

        r0 := @this: org.quartz.simpl.ZeroSizeThreadPool;

        virtualinvoke r0.<org.quartz.simpl.ZeroSizeThreadPool: void shutdown(boolean)>(1);

        return;
    }

    public void shutdown(boolean)
    {
        org.quartz.simpl.ZeroSizeThreadPool r0;
        boolean z0;
        org.slf4j.Logger $r1;

        r0 := @this: org.quartz.simpl.ZeroSizeThreadPool;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.quartz.simpl.ZeroSizeThreadPool: org.slf4j.Logger getLog()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>("shutdown complete");

        return;
    }

    public boolean runInThread(java.lang.Runnable)
    {
        org.quartz.simpl.ZeroSizeThreadPool r0;
        java.lang.Runnable r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.quartz.simpl.ZeroSizeThreadPool;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This ThreadPool should not be used on Scheduler instances that are start()ed.");

        throw $r2;
    }

    public int blockForAvailableThreads()
    {
        org.quartz.simpl.ZeroSizeThreadPool r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.quartz.simpl.ZeroSizeThreadPool;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This ThreadPool should not be used on Scheduler instances that are start()ed.");

        throw $r1;
    }

    public void setInstanceId(java.lang.String)
    {
        org.quartz.simpl.ZeroSizeThreadPool r0;
        java.lang.String r1;

        r0 := @this: org.quartz.simpl.ZeroSizeThreadPool;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void setInstanceName(java.lang.String)
    {
        org.quartz.simpl.ZeroSizeThreadPool r0;
        java.lang.String r1;

        r0 := @this: org.quartz.simpl.ZeroSizeThreadPool;

        r1 := @parameter0: java.lang.String;

        return;
    }
}
