public class org.quartz.listeners.BroadcastSchedulerListener extends java.lang.Object implements org.quartz.SchedulerListener
{
    private java.util.List listeners;

    public void <init>()
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.util.LinkedList $r1;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners> = $r1;

        return;
    }

    public void <init>(java.util.List)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.util.List r1, $r2;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.quartz.listeners.BroadcastSchedulerListener: void <init>()>();

        $r2 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public void addListener(org.quartz.SchedulerListener)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        org.quartz.SchedulerListener r1;
        java.util.List $r2;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: org.quartz.SchedulerListener;

        $r2 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public boolean removeListener(org.quartz.SchedulerListener)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        org.quartz.SchedulerListener r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: org.quartz.SchedulerListener;

        $r2 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.List getListeners()
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.util.List $r1, $r2;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        $r1 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void jobAdded(org.quartz.JobDetail)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        org.quartz.JobDetail r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: org.quartz.JobDetail;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void jobAdded(org.quartz.JobDetail)>(r1);

        goto label1;

     label2:
        return;
    }

    public void jobDeleted(org.quartz.JobKey)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        org.quartz.JobKey r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: org.quartz.JobKey;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void jobDeleted(org.quartz.JobKey)>(r1);

        goto label1;

     label2:
        return;
    }

    public void jobScheduled(org.quartz.Trigger)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        org.quartz.Trigger r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: org.quartz.Trigger;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void jobScheduled(org.quartz.Trigger)>(r1);

        goto label1;

     label2:
        return;
    }

    public void jobUnscheduled(org.quartz.TriggerKey)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        org.quartz.TriggerKey r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: org.quartz.TriggerKey;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void jobUnscheduled(org.quartz.TriggerKey)>(r1);

        goto label1;

     label2:
        return;
    }

    public void triggerFinalized(org.quartz.Trigger)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        org.quartz.Trigger r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: org.quartz.Trigger;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void triggerFinalized(org.quartz.Trigger)>(r1);

        goto label1;

     label2:
        return;
    }

    public void triggerPaused(org.quartz.TriggerKey)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        org.quartz.TriggerKey r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: org.quartz.TriggerKey;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void triggerPaused(org.quartz.TriggerKey)>(r1);

        goto label1;

     label2:
        return;
    }

    public void triggersPaused(java.lang.String)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void triggersPaused(java.lang.String)>(r1);

        goto label1;

     label2:
        return;
    }

    public void triggerResumed(org.quartz.TriggerKey)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        org.quartz.TriggerKey r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: org.quartz.TriggerKey;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void triggerResumed(org.quartz.TriggerKey)>(r1);

        goto label1;

     label2:
        return;
    }

    public void triggersResumed(java.lang.String)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void triggersResumed(java.lang.String)>(r1);

        goto label1;

     label2:
        return;
    }

    public void schedulingDataCleared()
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.util.Iterator r1;
        org.quartz.SchedulerListener r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        $r3 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.quartz.SchedulerListener) $r4;

        interfaceinvoke r2.<org.quartz.SchedulerListener: void schedulingDataCleared()>();

        goto label1;

     label2:
        return;
    }

    public void jobPaused(org.quartz.JobKey)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        org.quartz.JobKey r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: org.quartz.JobKey;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void jobPaused(org.quartz.JobKey)>(r1);

        goto label1;

     label2:
        return;
    }

    public void jobsPaused(java.lang.String)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void jobsPaused(java.lang.String)>(r1);

        goto label1;

     label2:
        return;
    }

    public void jobResumed(org.quartz.JobKey)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        org.quartz.JobKey r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: org.quartz.JobKey;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void jobResumed(org.quartz.JobKey)>(r1);

        goto label1;

     label2:
        return;
    }

    public void jobsResumed(java.lang.String)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.quartz.SchedulerListener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.SchedulerListener) $r5;

        interfaceinvoke r3.<org.quartz.SchedulerListener: void jobsResumed(java.lang.String)>(r1);

        goto label1;

     label2:
        return;
    }

    public void schedulerError(java.lang.String, org.quartz.SchedulerException)
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.lang.String r1;
        org.quartz.SchedulerException r2;
        java.util.Iterator r3;
        org.quartz.SchedulerListener r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.quartz.SchedulerException;

        $r5 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.quartz.SchedulerListener) $r6;

        interfaceinvoke r4.<org.quartz.SchedulerListener: void schedulerError(java.lang.String,org.quartz.SchedulerException)>(r1, r2);

        goto label1;

     label2:
        return;
    }

    public void schedulerStarted()
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.util.Iterator r1;
        org.quartz.SchedulerListener r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        $r3 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.quartz.SchedulerListener) $r4;

        interfaceinvoke r2.<org.quartz.SchedulerListener: void schedulerStarted()>();

        goto label1;

     label2:
        return;
    }

    public void schedulerStarting()
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.util.Iterator r1;
        org.quartz.SchedulerListener r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        $r3 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.quartz.SchedulerListener) $r4;

        interfaceinvoke r2.<org.quartz.SchedulerListener: void schedulerStarting()>();

        goto label1;

     label2:
        return;
    }

    public void schedulerInStandbyMode()
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.util.Iterator r1;
        org.quartz.SchedulerListener r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        $r3 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.quartz.SchedulerListener) $r4;

        interfaceinvoke r2.<org.quartz.SchedulerListener: void schedulerInStandbyMode()>();

        goto label1;

     label2:
        return;
    }

    public void schedulerShutdown()
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.util.Iterator r1;
        org.quartz.SchedulerListener r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        $r3 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.quartz.SchedulerListener) $r4;

        interfaceinvoke r2.<org.quartz.SchedulerListener: void schedulerShutdown()>();

        goto label1;

     label2:
        return;
    }

    public void schedulerShuttingdown()
    {
        org.quartz.listeners.BroadcastSchedulerListener r0;
        java.util.Iterator r1;
        org.quartz.SchedulerListener r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.quartz.listeners.BroadcastSchedulerListener;

        $r3 = r0.<org.quartz.listeners.BroadcastSchedulerListener: java.util.List listeners>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.quartz.SchedulerListener) $r4;

        interfaceinvoke r2.<org.quartz.SchedulerListener: void schedulerShuttingdown()>();

        goto label1;

     label2:
        return;
    }
}
