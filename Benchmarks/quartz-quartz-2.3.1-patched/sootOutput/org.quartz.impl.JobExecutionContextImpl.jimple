public class org.quartz.impl.JobExecutionContextImpl extends java.lang.Object implements java.io.Serializable, org.quartz.JobExecutionContext
{
    private static final long serialVersionUID;
    private transient org.quartz.Scheduler scheduler;
    private org.quartz.Trigger trigger;
    private org.quartz.JobDetail jobDetail;
    private org.quartz.JobDataMap jobDataMap;
    private transient org.quartz.Job job;
    private org.quartz.Calendar calendar;
    private boolean recovering;
    private int numRefires;
    private java.util.Date fireTime;
    private java.util.Date scheduledFireTime;
    private java.util.Date prevFireTime;
    private java.util.Date nextFireTime;
    private long jobRunTime;
    private java.lang.Object result;
    private java.util.HashMap data;

    public void <init>(org.quartz.Scheduler, org.quartz.spi.TriggerFiredBundle, org.quartz.Job)
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        org.quartz.Scheduler r1;
        org.quartz.spi.TriggerFiredBundle r2;
        org.quartz.Job r3;
        java.util.HashMap $r4;
        org.quartz.spi.OperableTrigger $r5;
        org.quartz.Calendar $r6;
        org.quartz.JobDetail $r7, $r13;
        boolean $z0;
        java.util.Date $r8, $r9, $r10, $r11;
        org.quartz.JobDataMap $r12, $r14, $r15, $r17, $r18;
        org.quartz.Trigger $r16;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        r1 := @parameter0: org.quartz.Scheduler;

        r2 := @parameter1: org.quartz.spi.TriggerFiredBundle;

        r3 := @parameter2: org.quartz.Job;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.impl.JobExecutionContextImpl: boolean recovering> = 0;

        r0.<org.quartz.impl.JobExecutionContextImpl: int numRefires> = 0;

        r0.<org.quartz.impl.JobExecutionContextImpl: long jobRunTime> = -1L;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.quartz.impl.JobExecutionContextImpl: java.util.HashMap data> = $r4;

        r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.Scheduler scheduler> = r1;

        $r5 = virtualinvoke r2.<org.quartz.spi.TriggerFiredBundle: org.quartz.spi.OperableTrigger getTrigger()>();

        r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.Trigger trigger> = $r5;

        $r6 = virtualinvoke r2.<org.quartz.spi.TriggerFiredBundle: org.quartz.Calendar getCalendar()>();

        r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.Calendar calendar> = $r6;

        $r7 = virtualinvoke r2.<org.quartz.spi.TriggerFiredBundle: org.quartz.JobDetail getJobDetail()>();

        r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.JobDetail jobDetail> = $r7;

        r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.Job job> = r3;

        $z0 = virtualinvoke r2.<org.quartz.spi.TriggerFiredBundle: boolean isRecovering()>();

        r0.<org.quartz.impl.JobExecutionContextImpl: boolean recovering> = $z0;

        $r8 = virtualinvoke r2.<org.quartz.spi.TriggerFiredBundle: java.util.Date getFireTime()>();

        r0.<org.quartz.impl.JobExecutionContextImpl: java.util.Date fireTime> = $r8;

        $r9 = virtualinvoke r2.<org.quartz.spi.TriggerFiredBundle: java.util.Date getScheduledFireTime()>();

        r0.<org.quartz.impl.JobExecutionContextImpl: java.util.Date scheduledFireTime> = $r9;

        $r10 = virtualinvoke r2.<org.quartz.spi.TriggerFiredBundle: java.util.Date getPrevFireTime()>();

        r0.<org.quartz.impl.JobExecutionContextImpl: java.util.Date prevFireTime> = $r10;

        $r11 = virtualinvoke r2.<org.quartz.spi.TriggerFiredBundle: java.util.Date getNextFireTime()>();

        r0.<org.quartz.impl.JobExecutionContextImpl: java.util.Date nextFireTime> = $r11;

        $r12 = new org.quartz.JobDataMap;

        specialinvoke $r12.<org.quartz.JobDataMap: void <init>()>();

        r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.JobDataMap jobDataMap> = $r12;

        $r14 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.JobDataMap jobDataMap>;

        $r13 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.JobDetail jobDetail>;

        $r15 = interfaceinvoke $r13.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>();

        virtualinvoke $r14.<org.quartz.JobDataMap: void putAll(java.util.Map)>($r15);

        $r17 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.JobDataMap jobDataMap>;

        $r16 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.Trigger trigger>;

        $r18 = interfaceinvoke $r16.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>();

        virtualinvoke $r17.<org.quartz.JobDataMap: void putAll(java.util.Map)>($r18);

        return;
    }

    public org.quartz.Scheduler getScheduler()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        org.quartz.Scheduler $r1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.Scheduler scheduler>;

        return $r1;
    }

    public org.quartz.Trigger getTrigger()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        org.quartz.Trigger $r1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.Trigger trigger>;

        return $r1;
    }

    public org.quartz.Calendar getCalendar()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        org.quartz.Calendar $r1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.Calendar calendar>;

        return $r1;
    }

    public boolean isRecovering()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        boolean $z0;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $z0 = r0.<org.quartz.impl.JobExecutionContextImpl: boolean recovering>;

        return $z0;
    }

    public org.quartz.TriggerKey getRecoveringTriggerKey()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        org.quartz.TriggerKey $r2;
        org.quartz.JobDataMap $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $z0 = virtualinvoke r0.<org.quartz.impl.JobExecutionContextImpl: boolean isRecovering()>();

        if $z0 == 0 goto label1;

        $r2 = new org.quartz.TriggerKey;

        $r3 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.JobDataMap jobDataMap>;

        $r4 = virtualinvoke $r3.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("QRTZ_FAILED_JOB_ORIG_TRIGGER_NAME");

        $r5 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.JobDataMap jobDataMap>;

        $r6 = virtualinvoke $r5.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("QRTZ_FAILED_JOB_ORIG_TRIGGER_GROUP");

        specialinvoke $r2.<org.quartz.TriggerKey: void <init>(java.lang.String,java.lang.String)>($r4, $r6);

        return $r2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not a recovering job");

        throw $r1;
    }

    public void incrementRefireCount()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        int $i0, $i1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $i0 = r0.<org.quartz.impl.JobExecutionContextImpl: int numRefires>;

        $i1 = $i0 + 1;

        r0.<org.quartz.impl.JobExecutionContextImpl: int numRefires> = $i1;

        return;
    }

    public int getRefireCount()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        int $i0;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $i0 = r0.<org.quartz.impl.JobExecutionContextImpl: int numRefires>;

        return $i0;
    }

    public org.quartz.JobDataMap getMergedJobDataMap()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        org.quartz.JobDataMap $r1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.JobDataMap jobDataMap>;

        return $r1;
    }

    public org.quartz.JobDetail getJobDetail()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        org.quartz.JobDetail $r1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.JobDetail jobDetail>;

        return $r1;
    }

    public org.quartz.Job getJobInstance()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        org.quartz.Job $r1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.Job job>;

        return $r1;
    }

    public java.util.Date getFireTime()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        java.util.Date $r1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = r0.<org.quartz.impl.JobExecutionContextImpl: java.util.Date fireTime>;

        return $r1;
    }

    public java.util.Date getScheduledFireTime()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        java.util.Date $r1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = r0.<org.quartz.impl.JobExecutionContextImpl: java.util.Date scheduledFireTime>;

        return $r1;
    }

    public java.util.Date getPreviousFireTime()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        java.util.Date $r1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = r0.<org.quartz.impl.JobExecutionContextImpl: java.util.Date prevFireTime>;

        return $r1;
    }

    public java.util.Date getNextFireTime()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        java.util.Date $r1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = r0.<org.quartz.impl.JobExecutionContextImpl: java.util.Date nextFireTime>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r23, $r24, $r25;
        org.quartz.Trigger $r3;
        org.quartz.TriggerKey $r4;
        org.quartz.JobDetail $r7;
        org.quartz.JobKey $r8;
        java.util.Date $r11, $r14, $r17, $r20;
        boolean $z0;
        int $i0;
        java.lang.String $r26;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobExecutionContext: trigger: \'");

        $r3 = virtualinvoke r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.Trigger getTrigger()>();

        $r4 = interfaceinvoke $r3.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" job: ");

        $r7 = virtualinvoke r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.JobDetail getJobDetail()>();

        $r8 = interfaceinvoke $r7.<org.quartz.JobDetail: org.quartz.JobKey getKey()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fireTime: \'");

        $r11 = virtualinvoke r0.<org.quartz.impl.JobExecutionContextImpl: java.util.Date getFireTime()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scheduledFireTime: ");

        $r14 = virtualinvoke r0.<org.quartz.impl.JobExecutionContextImpl: java.util.Date getScheduledFireTime()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" previousFireTime: \'");

        $r17 = virtualinvoke r0.<org.quartz.impl.JobExecutionContextImpl: java.util.Date getPreviousFireTime()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nextFireTime: ");

        $r20 = virtualinvoke r0.<org.quartz.impl.JobExecutionContextImpl: java.util.Date getNextFireTime()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isRecovering: ");

        $z0 = virtualinvoke r0.<org.quartz.impl.JobExecutionContextImpl: boolean isRecovering()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" refireCount: ");

        $i0 = virtualinvoke r0.<org.quartz.impl.JobExecutionContextImpl: int getRefireCount()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r26;
    }

    public java.lang.Object getResult()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        java.lang.Object $r1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = r0.<org.quartz.impl.JobExecutionContextImpl: java.lang.Object result>;

        return $r1;
    }

    public void setResult(java.lang.Object)
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        java.lang.Object r1;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        r1 := @parameter0: java.lang.Object;

        r0.<org.quartz.impl.JobExecutionContextImpl: java.lang.Object result> = r1;

        return;
    }

    public long getJobRunTime()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        long $l0;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $l0 = r0.<org.quartz.impl.JobExecutionContextImpl: long jobRunTime>;

        return $l0;
    }

    public void setJobRunTime(long)
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        long l0;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        l0 := @parameter0: long;

        r0.<org.quartz.impl.JobExecutionContextImpl: long jobRunTime> = l0;

        return;
    }

    public void put(java.lang.Object, java.lang.Object)
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        java.lang.Object r1, r2;
        java.util.HashMap $r3;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.quartz.impl.JobExecutionContextImpl: java.util.HashMap data>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        java.lang.Object r1, $r3;
        java.util.HashMap $r2;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.quartz.impl.JobExecutionContextImpl: java.util.HashMap data>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.String getFireInstanceId()
    {
        org.quartz.impl.JobExecutionContextImpl r0;
        org.quartz.Trigger $r1;
        org.quartz.spi.OperableTrigger $r2;
        java.lang.String $r3;

        r0 := @this: org.quartz.impl.JobExecutionContextImpl;

        $r1 = r0.<org.quartz.impl.JobExecutionContextImpl: org.quartz.Trigger trigger>;

        $r2 = (org.quartz.spi.OperableTrigger) $r1;

        $r3 = interfaceinvoke $r2.<org.quartz.spi.OperableTrigger: java.lang.String getFireInstanceId()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <org.quartz.impl.JobExecutionContextImpl: long serialVersionUID> = -8139417614523942021L;

        return;
    }
}
