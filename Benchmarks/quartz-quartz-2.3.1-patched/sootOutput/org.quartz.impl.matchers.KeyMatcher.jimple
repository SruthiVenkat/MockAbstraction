public class org.quartz.impl.matchers.KeyMatcher extends java.lang.Object implements org.quartz.Matcher
{
    private static final long serialVersionUID;
    protected org.quartz.utils.Key compareTo;

    protected void <init>(org.quartz.utils.Key)
    {
        org.quartz.impl.matchers.KeyMatcher r0;
        org.quartz.utils.Key r1;

        r0 := @this: org.quartz.impl.matchers.KeyMatcher;

        r1 := @parameter0: org.quartz.utils.Key;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.impl.matchers.KeyMatcher: org.quartz.utils.Key compareTo> = r1;

        return;
    }

    public static org.quartz.impl.matchers.KeyMatcher keyEquals(org.quartz.utils.Key)
    {
        org.quartz.utils.Key r0;
        org.quartz.impl.matchers.KeyMatcher $r1;

        r0 := @parameter0: org.quartz.utils.Key;

        $r1 = new org.quartz.impl.matchers.KeyMatcher;

        specialinvoke $r1.<org.quartz.impl.matchers.KeyMatcher: void <init>(org.quartz.utils.Key)>(r0);

        return $r1;
    }

    public boolean isMatch(org.quartz.utils.Key)
    {
        org.quartz.impl.matchers.KeyMatcher r0;
        org.quartz.utils.Key r1, $r2;
        boolean $z0;

        r0 := @this: org.quartz.impl.matchers.KeyMatcher;

        r1 := @parameter0: org.quartz.utils.Key;

        $r2 = r0.<org.quartz.impl.matchers.KeyMatcher: org.quartz.utils.Key compareTo>;

        $z0 = virtualinvoke $r2.<org.quartz.utils.Key: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public org.quartz.utils.Key getCompareToValue()
    {
        org.quartz.impl.matchers.KeyMatcher r0;
        org.quartz.utils.Key $r1;

        r0 := @this: org.quartz.impl.matchers.KeyMatcher;

        $r1 = r0.<org.quartz.impl.matchers.KeyMatcher: org.quartz.utils.Key compareTo>;

        return $r1;
    }

    public int hashCode()
    {
        org.quartz.impl.matchers.KeyMatcher r0;
        org.quartz.utils.Key $r1, $r2;
        int $i1, $i3, i4;

        r0 := @this: org.quartz.impl.matchers.KeyMatcher;

        $i1 = 31 * 1;

        $r1 = r0.<org.quartz.impl.matchers.KeyMatcher: org.quartz.utils.Key compareTo>;

        if $r1 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.quartz.impl.matchers.KeyMatcher: org.quartz.utils.Key compareTo>;

        $i3 = virtualinvoke $r2.<org.quartz.utils.Key: int hashCode()>();

     label2:
        i4 = $i1 + $i3;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        org.quartz.impl.matchers.KeyMatcher r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        org.quartz.utils.Key $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: org.quartz.impl.matchers.KeyMatcher;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (org.quartz.impl.matchers.KeyMatcher) r1;

        $r5 = r0.<org.quartz.impl.matchers.KeyMatcher: org.quartz.utils.Key compareTo>;

        if $r5 != null goto label4;

        $r8 = r2.<org.quartz.impl.matchers.KeyMatcher: org.quartz.utils.Key compareTo>;

        if $r8 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<org.quartz.impl.matchers.KeyMatcher: org.quartz.utils.Key compareTo>;

        $r6 = r2.<org.quartz.impl.matchers.KeyMatcher: org.quartz.utils.Key compareTo>;

        $z0 = virtualinvoke $r7.<org.quartz.utils.Key: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public static void <clinit>()
    {
        <org.quartz.impl.matchers.KeyMatcher: long serialVersionUID> = 1230009869074992437L;

        return;
    }
}
