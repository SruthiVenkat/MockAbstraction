public class org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate extends org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport
{

    public void <init>()
    {
        org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate r0;

        r0 := @this: org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate;

        specialinvoke r0.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport: void <init>()>();

        return;
    }

    public boolean canHandleTriggerType(org.quartz.spi.OperableTrigger)
    {
        org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate r0;
        org.quartz.spi.OperableTrigger r1;
        boolean $z0, $z1, $z2;
        org.quartz.impl.triggers.CalendarIntervalTriggerImpl $r2;

        r0 := @this: org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate;

        r1 := @parameter0: org.quartz.spi.OperableTrigger;

        $z0 = r1 instanceof org.quartz.impl.triggers.CalendarIntervalTriggerImpl;

        if $z0 == 0 goto label1;

        $r2 = (org.quartz.impl.triggers.CalendarIntervalTriggerImpl) r1;

        $z1 = virtualinvoke $r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: boolean hasAdditionalProperties()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.String getHandledTriggerTypeDiscriminator()
    {
        org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate r0;

        r0 := @this: org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate;

        return "CAL_INT";
    }

    protected org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties getTriggerProperties(org.quartz.spi.OperableTrigger)
    {
        org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate r0;
        org.quartz.spi.OperableTrigger r1;
        org.quartz.impl.triggers.CalendarIntervalTriggerImpl r2;
        org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties $r4;
        int $i0, $i1;
        org.quartz.DateBuilder$IntervalUnit $r5;
        java.lang.String $r6, $r8;
        java.util.TimeZone $r7;
        boolean $z0, $z1;

        r0 := @this: org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate;

        r1 := @parameter0: org.quartz.spi.OperableTrigger;

        r2 = (org.quartz.impl.triggers.CalendarIntervalTriggerImpl) r1;

        $r4 = new org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties;

        specialinvoke $r4.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void <init>()>();

        $i0 = virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: int getRepeatInterval()>();

        virtualinvoke $r4.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void setInt1(int)>($i0);

        $r5 = virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>();

        $r6 = virtualinvoke $r5.<org.quartz.DateBuilder$IntervalUnit: java.lang.String name()>();

        virtualinvoke $r4.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void setString1(java.lang.String)>($r6);

        $i1 = virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: int getTimesTriggered()>();

        virtualinvoke $r4.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void setInt2(int)>($i1);

        $r7 = virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.TimeZone getTimeZone()>();

        $r8 = virtualinvoke $r7.<java.util.TimeZone: java.lang.String getID()>();

        virtualinvoke $r4.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void setString2(java.lang.String)>($r8);

        $z0 = virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: boolean isPreserveHourOfDayAcrossDaylightSavings()>();

        virtualinvoke $r4.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void setBoolean1(boolean)>($z0);

        $z1 = virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: boolean isSkipDayIfHourDoesNotExist()>();

        virtualinvoke $r4.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: void setBoolean2(boolean)>($z1);

        return $r4;
    }

    protected org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle getTriggerPropertyBundle(org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties)
    {
        org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate r0;
        org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties r1;
        java.lang.String r2, $r6, $r9;
        org.quartz.CalendarIntervalScheduleBuilder r3, $r8, $r11, $r12, $r13;
        int i0, $i1, $i2;
        java.util.TimeZone r7;
        org.quartz.DateBuilder$IntervalUnit $r10;
        boolean $z0, $z1;
        java.lang.String[] $r14;
        java.lang.Object[] $r15;
        java.lang.Integer $r16;
        org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle $r17;

        r0 := @this: org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate;

        r1 := @parameter0: org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties;

        r7 = null;

        r2 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: java.lang.String getString2()>();

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 == 0 goto label1;

        r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r2);

     label1:
        $r8 = staticinvoke <org.quartz.CalendarIntervalScheduleBuilder: org.quartz.CalendarIntervalScheduleBuilder calendarIntervalSchedule()>();

        $i2 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: int getInt1()>();

        $r9 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: java.lang.String getString1()>();

        $r10 = staticinvoke <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit valueOf(java.lang.String)>($r9);

        $r11 = virtualinvoke $r8.<org.quartz.CalendarIntervalScheduleBuilder: org.quartz.CalendarIntervalScheduleBuilder withInterval(int,org.quartz.DateBuilder$IntervalUnit)>($i2, $r10);

        $r12 = virtualinvoke $r11.<org.quartz.CalendarIntervalScheduleBuilder: org.quartz.CalendarIntervalScheduleBuilder inTimeZone(java.util.TimeZone)>(r7);

        $z0 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: boolean isBoolean1()>();

        $r13 = virtualinvoke $r12.<org.quartz.CalendarIntervalScheduleBuilder: org.quartz.CalendarIntervalScheduleBuilder preserveHourOfDayAcrossDaylightSavings(boolean)>($z0);

        $z1 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: boolean isBoolean2()>();

        r3 = virtualinvoke $r13.<org.quartz.CalendarIntervalScheduleBuilder: org.quartz.CalendarIntervalScheduleBuilder skipDayIfHourDoesNotExist(boolean)>($z1);

        i0 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties: int getInt2()>();

        $r14 = newarray (java.lang.String)[1];

        $r14[0] = "timesTriggered";

        $r15 = newarray (java.lang.Object)[1];

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r15[0] = $r16;

        $r17 = new org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle;

        specialinvoke $r17.<org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle: void <init>(org.quartz.ScheduleBuilder,java.lang.String[],java.lang.Object[])>(r3, $r14, $r15);

        return $r17;
    }
}
