public class org.quartz.RAMSchedulerTest extends org.quartz.AbstractSchedulerTest
{

    public void <init>()
    {
        org.quartz.RAMSchedulerTest r0;

        r0 := @this: org.quartz.RAMSchedulerTest;

        specialinvoke r0.<org.quartz.AbstractSchedulerTest: void <init>()>();

        return;
    }

    protected org.quartz.Scheduler createScheduler(java.lang.String, int) throws org.quartz.SchedulerException
    {
        org.quartz.RAMSchedulerTest r0;
        java.lang.String r1, $r7, $r10;
        int i0;
        java.util.Properties $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        org.quartz.impl.StdSchedulerFactory $r13;
        org.quartz.Scheduler $r14;

        r0 := @this: org.quartz.RAMSchedulerTest;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new java.util.Properties;

        specialinvoke $r3.<java.util.Properties: void <init>()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduler");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceName", $r7);

        virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceId", "AUTO");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", $r10);

        virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool");

        $r13 = new org.quartz.impl.StdSchedulerFactory;

        specialinvoke $r13.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>($r3);

        $r14 = virtualinvoke $r13.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>();

        return $r14;
    }
}
