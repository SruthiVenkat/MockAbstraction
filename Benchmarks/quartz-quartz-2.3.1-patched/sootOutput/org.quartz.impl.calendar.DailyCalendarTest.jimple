public class org.quartz.impl.calendar.DailyCalendarTest extends org.quartz.SerializationTestSupport
{
    private static final java.lang.String[] VERSIONS;

    public void <init>()
    {
        org.quartz.impl.calendar.DailyCalendarTest r0;

        r0 := @this: org.quartz.impl.calendar.DailyCalendarTest;

        specialinvoke r0.<org.quartz.SerializationTestSupport: void <init>()>();

        return;
    }

    public void testStringStartEndTimes()
    {
        org.quartz.impl.calendar.DailyCalendarTest r0;
        org.quartz.impl.calendar.DailyCalendar $r1, $r3;
        java.lang.String $r2, $r4;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: org.quartz.impl.calendar.DailyCalendarTest;

        $r1 = new org.quartz.impl.calendar.DailyCalendar;

        specialinvoke $r1.<org.quartz.impl.calendar.DailyCalendar: void <init>(java.lang.String,java.lang.String)>("1:20", "14:50");

        $r2 = virtualinvoke $r1.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("01:20:00:000 - 14:50:00:000");

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z0);

        $r3 = new org.quartz.impl.calendar.DailyCalendar;

        specialinvoke $r3.<org.quartz.impl.calendar.DailyCalendar: void <init>(java.lang.String,java.lang.String)>("1:20:1:456", "14:50:15:2");

        $r4 = virtualinvoke $r3.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("01:20:01:456 - 14:50:15:002");

        if $i1 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z1);

        return;
    }

    public void testStringInvertTimeRange()
    {
        org.quartz.impl.calendar.DailyCalendarTest r0;
        org.quartz.impl.calendar.DailyCalendar $r2;
        java.lang.String $r3, $r4;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: org.quartz.impl.calendar.DailyCalendarTest;

        $r2 = new org.quartz.impl.calendar.DailyCalendar;

        specialinvoke $r2.<org.quartz.impl.calendar.DailyCalendar: void <init>(java.lang.String,java.lang.String)>("1:20", "14:50");

        virtualinvoke $r2.<org.quartz.impl.calendar.DailyCalendar: void setInvertTimeRange(boolean)>(1);

        $r3 = virtualinvoke $r2.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("inverted: true");

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z0);

        virtualinvoke $r2.<org.quartz.impl.calendar.DailyCalendar: void setInvertTimeRange(boolean)>(0);

        $r4 = virtualinvoke $r2.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("inverted: false");

        if $i1 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z1);

        return;
    }

    protected java.lang.Object getTargetObject()
    {
        org.quartz.impl.calendar.DailyCalendarTest r0;
        org.quartz.impl.calendar.DailyCalendar $r2;

        r0 := @this: org.quartz.impl.calendar.DailyCalendarTest;

        $r2 = new org.quartz.impl.calendar.DailyCalendar;

        specialinvoke $r2.<org.quartz.impl.calendar.DailyCalendar: void <init>(java.lang.String,java.lang.String)>("01:20:01:456", "14:50:15:002");

        virtualinvoke $r2.<org.quartz.impl.calendar.DailyCalendar: void setDescription(java.lang.String)>("description");

        virtualinvoke $r2.<org.quartz.impl.calendar.DailyCalendar: void setInvertTimeRange(boolean)>(1);

        return $r2;
    }

    protected java.lang.String[] getVersions()
    {
        org.quartz.impl.calendar.DailyCalendarTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.quartz.impl.calendar.DailyCalendarTest;

        $r1 = <org.quartz.impl.calendar.DailyCalendarTest: java.lang.String[] VERSIONS>;

        return $r1;
    }

    protected void verifyMatch(java.lang.Object, java.lang.Object)
    {
        org.quartz.impl.calendar.DailyCalendarTest r0;
        java.lang.Object r1, r2;
        org.quartz.impl.calendar.DailyCalendar r3, r4;
        java.lang.String $r5, $r6, $r8;
        boolean $z0, $z1;
        java.util.TimeZone $r7;
        int $i0;

        r0 := @this: org.quartz.impl.calendar.DailyCalendarTest;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 = (org.quartz.impl.calendar.DailyCalendar) r1;

        r4 = (org.quartz.impl.calendar.DailyCalendar) r2;

        staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertNotNull(java.lang.Object)>(r4);

        $r5 = virtualinvoke r3.<org.quartz.impl.calendar.DailyCalendar: java.lang.String getDescription()>();

        $r6 = virtualinvoke r4.<org.quartz.impl.calendar.DailyCalendar: java.lang.String getDescription()>();

        staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertEquals(java.lang.String,java.lang.String)>($r5, $r6);

        $z0 = virtualinvoke r4.<org.quartz.impl.calendar.DailyCalendar: boolean getInvertTimeRange()>();

        staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z0);

        $r7 = virtualinvoke r4.<org.quartz.impl.calendar.DailyCalendar: java.util.TimeZone getTimeZone()>();

        staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertNull(java.lang.Object)>($r7);

        $r8 = virtualinvoke r4.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("01:20:01:456 - 14:50:15:002");

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z1);

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "1.5.2";

        <org.quartz.impl.calendar.DailyCalendarTest: java.lang.String[] VERSIONS> = $r0;

        return;
    }
}
