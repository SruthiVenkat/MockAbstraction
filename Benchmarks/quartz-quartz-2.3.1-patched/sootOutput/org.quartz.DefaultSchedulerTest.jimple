public class org.quartz.DefaultSchedulerTest extends junit.framework.TestCase
{

    public void <init>()
    {
        org.quartz.DefaultSchedulerTest r0;

        r0 := @this: org.quartz.DefaultSchedulerTest;

        specialinvoke r0.<junit.framework.TestCase: void <init>()>();

        return;
    }

    public void testAddJobNoTrigger() throws java.lang.Exception
    {
        org.quartz.DefaultSchedulerTest r0;
        org.quartz.Scheduler r1;
        org.quartz.impl.JobDetailImpl $r4;
        org.quartz.SchedulerException $r5;
        java.lang.String $r6;
        org.hamcrest.Matcher $r7;

        r0 := @this: org.quartz.DefaultSchedulerTest;

        r1 = staticinvoke <org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getDefaultScheduler()>();

        $r4 = new org.quartz.impl.JobDetailImpl;

        specialinvoke $r4.<org.quartz.impl.JobDetailImpl: void <init>()>();

        virtualinvoke $r4.<org.quartz.impl.JobDetailImpl: void setName(java.lang.String)>("testjob");

     label1:
        interfaceinvoke r1.<org.quartz.Scheduler: void addJob(org.quartz.JobDetail,boolean)>($r4, 0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<org.quartz.SchedulerException: java.lang.String getMessage()>();

        $r7 = staticinvoke <org.junit.matchers.JUnitMatchers: org.hamcrest.Matcher containsString(java.lang.String)>("durable");

        staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r6, $r7);

     label4:
        virtualinvoke $r4.<org.quartz.impl.JobDetailImpl: void setDurability(boolean)>(1);

        interfaceinvoke r1.<org.quartz.Scheduler: void addJob(org.quartz.JobDetail,boolean)>($r4, 0);

        return;

        catch org.quartz.SchedulerException from label1 to label2 with label3;
    }
}
