class org.quartz.core.QTZ385Test$1 extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
    final org.quartz.impl.jdbcjobstore.JobStoreTX val$realJobStore;
    final java.util.concurrent.CyclicBarrier val$barrier;
    final org.quartz.core.QTZ385Test this$0;

    void <init>(org.quartz.core.QTZ385Test, org.quartz.impl.jdbcjobstore.JobStoreTX, java.util.concurrent.CyclicBarrier)
    {
        org.quartz.core.QTZ385Test$1 r0;
        org.quartz.core.QTZ385Test r1;
        org.quartz.impl.jdbcjobstore.JobStoreTX r2;
        java.util.concurrent.CyclicBarrier r3;

        r0 := @this: org.quartz.core.QTZ385Test$1;

        r1 := @parameter0: org.quartz.core.QTZ385Test;

        r2 := @parameter1: org.quartz.impl.jdbcjobstore.JobStoreTX;

        r3 := @parameter2: java.util.concurrent.CyclicBarrier;

        r0.<org.quartz.core.QTZ385Test$1: org.quartz.core.QTZ385Test this$0> = r1;

        r0.<org.quartz.core.QTZ385Test$1: org.quartz.impl.jdbcjobstore.JobStoreTX val$realJobStore> = r2;

        r0.<org.quartz.core.QTZ385Test$1: java.util.concurrent.CyclicBarrier val$barrier> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        org.quartz.core.QTZ385Test$1 r0;
        java.lang.Object r1, r4, $r8;
        java.lang.reflect.Method r2, $r6;
        java.lang.Object[] r3;
        boolean $z0;
        org.quartz.impl.jdbcjobstore.JobStoreTX $r7, $r9;
        java.util.concurrent.CyclicBarrier $r10, $r12;
        java.util.concurrent.TimeUnit $r11;
        java.lang.Exception $r13;

        r0 := @this: org.quartz.core.QTZ385Test$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object[];

        $r6 = staticinvoke <org.quartz.core.QTZ385Test: java.lang.reflect.Method access$000()>();

        $z0 = virtualinvoke $r6.<java.lang.reflect.Method: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label5;

        $r9 = r0.<org.quartz.core.QTZ385Test$1: org.quartz.impl.jdbcjobstore.JobStoreTX val$realJobStore>;

        r4 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r9, r3);

        $r10 = r0.<org.quartz.core.QTZ385Test$1: java.util.concurrent.CyclicBarrier val$barrier>;

        virtualinvoke $r10.<java.util.concurrent.CyclicBarrier: int await()>();

     label1:
        $r12 = r0.<org.quartz.core.QTZ385Test$1: java.util.concurrent.CyclicBarrier val$barrier>;

        $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        virtualinvoke $r12.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(1L, $r11);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

     label4:
        return r4;

     label5:
        $r7 = r0.<org.quartz.core.QTZ385Test$1: org.quartz.impl.jdbcjobstore.JobStoreTX val$realJobStore>;

        $r8 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, r3);

        return $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
