public class org.quartz.impl.JobDetailImplTest extends java.lang.Object
{

    public void <init>()
    {
        org.quartz.impl.JobDetailImplTest r0;

        r0 := @this: org.quartz.impl.JobDetailImplTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testHashCode()
    {
        org.quartz.impl.JobDetailImplTest r0;
        org.quartz.impl.JobDetailImpl $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3, $r4, $r6, $r7, $r10, $r11;
        org.hamcrest.Matcher $r5, $r8, $r9, $r12, $r13;

        r0 := @this: org.quartz.impl.JobDetailImplTest;

        $r2 = new org.quartz.impl.JobDetailImpl;

        specialinvoke $r2.<org.quartz.impl.JobDetailImpl: void <init>()>();

        $i0 = virtualinvoke $r2.<org.quartz.impl.JobDetailImpl: int hashCode()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r5 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r4);

        staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r3, $r5);

        virtualinvoke $r2.<org.quartz.impl.JobDetailImpl: void setName(java.lang.String)>("test");

        $i1 = virtualinvoke $r2.<org.quartz.impl.JobDetailImpl: int hashCode()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r8 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r7);

        $r9 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(org.hamcrest.Matcher)>($r8);

        staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r6, $r9);

        virtualinvoke $r2.<org.quartz.impl.JobDetailImpl: void setGroup(java.lang.String)>("test");

        $i2 = virtualinvoke $r2.<org.quartz.impl.JobDetailImpl: int hashCode()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r12 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r11);

        $r13 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(org.hamcrest.Matcher)>($r12);

        staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r10, $r13);

        return;
    }
}
