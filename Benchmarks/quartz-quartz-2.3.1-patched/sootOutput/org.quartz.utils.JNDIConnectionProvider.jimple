public class org.quartz.utils.JNDIConnectionProvider extends java.lang.Object implements org.quartz.utils.ConnectionProvider
{
    private java.lang.String url;
    private java.util.Properties props;
    private java.lang.Object datasource;
    private boolean alwaysLookup;
    private final org.slf4j.Logger log;

    public void <init>(java.lang.String, boolean)
    {
        org.quartz.utils.JNDIConnectionProvider r0;
        java.lang.String r1;
        boolean z0;
        java.lang.Class $r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.quartz.utils.JNDIConnectionProvider;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.utils.JNDIConnectionProvider: boolean alwaysLookup> = 0;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r2);

        r0.<org.quartz.utils.JNDIConnectionProvider: org.slf4j.Logger log> = $r3;

        r0.<org.quartz.utils.JNDIConnectionProvider: java.lang.String url> = r1;

        r0.<org.quartz.utils.JNDIConnectionProvider: boolean alwaysLookup> = z0;

        specialinvoke r0.<org.quartz.utils.JNDIConnectionProvider: void init()>();

        return;
    }

    public void <init>(java.lang.String, java.util.Properties, boolean)
    {
        org.quartz.utils.JNDIConnectionProvider r0;
        java.lang.String r1;
        java.util.Properties r2;
        boolean z0;
        java.lang.Class $r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.quartz.utils.JNDIConnectionProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Properties;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.utils.JNDIConnectionProvider: boolean alwaysLookup> = 0;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r3);

        r0.<org.quartz.utils.JNDIConnectionProvider: org.slf4j.Logger log> = $r4;

        r0.<org.quartz.utils.JNDIConnectionProvider: java.lang.String url> = r1;

        r0.<org.quartz.utils.JNDIConnectionProvider: java.util.Properties props> = r2;

        r0.<org.quartz.utils.JNDIConnectionProvider: boolean alwaysLookup> = z0;

        specialinvoke r0.<org.quartz.utils.JNDIConnectionProvider: void init()>();

        return;
    }

    protected org.slf4j.Logger getLog()
    {
        org.quartz.utils.JNDIConnectionProvider r0;
        org.slf4j.Logger $r1;

        r0 := @this: org.quartz.utils.JNDIConnectionProvider;

        $r1 = r0.<org.quartz.utils.JNDIConnectionProvider: org.slf4j.Logger log>;

        return $r1;
    }

    private void init()
    {
        org.quartz.utils.JNDIConnectionProvider r0;
        boolean $z0;
        java.util.Properties $r3, $r7;
        java.lang.String $r4, $r15, $r17;
        java.lang.Object $r5;
        javax.sql.DataSource $r6;
        java.lang.Throwable $r8;
        java.lang.Exception $r9, $r10, $r11, $r18;
        org.slf4j.Logger $r12;
        java.lang.StringBuilder $r13, $r14, $r16;
        javax.naming.InitialContext r19, $r20;

        r0 := @this: org.quartz.utils.JNDIConnectionProvider;

        $z0 = virtualinvoke r0.<org.quartz.utils.JNDIConnectionProvider: boolean isAlwaysLookup()>();

        if $z0 != 0 goto label18;

        r19 = null;

     label01:
        $r3 = r0.<org.quartz.utils.JNDIConnectionProvider: java.util.Properties props>;

        if $r3 == null goto label02;

        $r20 = new javax.naming.InitialContext;

        $r7 = r0.<org.quartz.utils.JNDIConnectionProvider: java.util.Properties props>;

        specialinvoke $r20.<javax.naming.InitialContext: void <init>(java.util.Hashtable)>($r7);

        goto label03;

     label02:
        $r20 = new javax.naming.InitialContext;

        specialinvoke $r20.<javax.naming.InitialContext: void <init>()>();

     label03:
        r19 = $r20;

        $r4 = r0.<org.quartz.utils.JNDIConnectionProvider: java.lang.String url>;

        $r5 = interfaceinvoke $r20.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>($r4);

        $r6 = (javax.sql.DataSource) $r5;

        r0.<org.quartz.utils.JNDIConnectionProvider: java.lang.Object datasource> = $r6;

     label04:
        if $r20 == null goto label18;

     label05:
        interfaceinvoke $r20.<javax.naming.Context: void close()>();

     label06:
        goto label18;

     label07:
        $r9 := @caughtexception;

        goto label18;

     label08:
        $r11 := @caughtexception;

        $r12 = virtualinvoke r0.<org.quartz.utils.JNDIConnectionProvider: org.slf4j.Logger getLog()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error looking up datasource: ");

        $r15 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r17, $r11);

     label09:
        if r19 == null goto label18;

     label10:
        interfaceinvoke r19.<javax.naming.Context: void close()>();

     label11:
        goto label18;

     label12:
        $r10 := @caughtexception;

        goto label18;

     label13:
        $r8 := @caughtexception;

        if r19 == null goto label17;

     label14:
        interfaceinvoke r19.<javax.naming.Context: void close()>();

     label15:
        goto label17;

     label16:
        $r18 := @caughtexception;

     label17:
        throw $r8;

     label18:
        return;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label01 to label04 with label08;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label01 to label04 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    public java.sql.Connection getConnection() throws java.sql.SQLException
    {
        org.quartz.utils.JNDIConnectionProvider r0;
        java.util.Properties $r3, $r22;
        java.lang.String $r4, $r8, $r11, $r18, $r21, $r28, $r32, $r35, $r37;
        boolean $z0, $z1, $z2, $z3;
        java.sql.SQLException $r5, $r15, $r25;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r16, $r17, $r19, $r20, $r26, $r27, $r29, $r30, $r33, $r34, $r36;
        javax.sql.DataSource $r12;
        javax.sql.XADataSource $r13;
        javax.sql.XAConnection $r14;
        java.lang.Exception $r23, $r24, $r38, $r39;
        java.lang.Class $r31;
        java.lang.Throwable $r40;
        javax.naming.InitialContext r41, $r43;
        java.lang.Object r42;
        java.sql.Connection r44, r46;

        r0 := @this: org.quartz.utils.JNDIConnectionProvider;

        r41 = null;

     label01:
        r42 = r0.<org.quartz.utils.JNDIConnectionProvider: java.lang.Object datasource>;

        if r42 == null goto label02;

        $z3 = virtualinvoke r0.<org.quartz.utils.JNDIConnectionProvider: boolean isAlwaysLookup()>();

        if $z3 == 0 goto label05;

     label02:
        $r3 = r0.<org.quartz.utils.JNDIConnectionProvider: java.util.Properties props>;

        if $r3 == null goto label03;

        $r43 = new javax.naming.InitialContext;

        $r22 = r0.<org.quartz.utils.JNDIConnectionProvider: java.util.Properties props>;

        specialinvoke $r43.<javax.naming.InitialContext: void <init>(java.util.Hashtable)>($r22);

        goto label04;

     label03:
        $r43 = new javax.naming.InitialContext;

        specialinvoke $r43.<javax.naming.InitialContext: void <init>()>();

     label04:
        r41 = $r43;

        $r4 = r0.<org.quartz.utils.JNDIConnectionProvider: java.lang.String url>;

        r42 = interfaceinvoke $r43.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>($r4);

        $z0 = virtualinvoke r0.<org.quartz.utils.JNDIConnectionProvider: boolean isAlwaysLookup()>();

        if $z0 != 0 goto label05;

        r0.<org.quartz.utils.JNDIConnectionProvider: java.lang.Object datasource> = r42;

     label05:
        if r42 != null goto label06;

        $r15 = new java.sql.SQLException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is no object at the JNDI URL \'");

        $r18 = r0.<org.quartz.utils.JNDIConnectionProvider: java.lang.String url>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.sql.SQLException: void <init>(java.lang.String)>($r21);

        throw $r15;

     label06:
        $z1 = r42 instanceof javax.sql.XADataSource;

        if $z1 == 0 goto label12;

        $r13 = (javax.sql.XADataSource) r42;

        $r14 = interfaceinvoke $r13.<javax.sql.XADataSource: javax.sql.XAConnection getXAConnection()>();

        r44 = interfaceinvoke $r14.<javax.sql.XAConnection: java.sql.Connection getConnection()>();

     label07:
        if r41 == null goto label11;

     label08:
        interfaceinvoke r41.<javax.naming.Context: void close()>();

     label09:
        goto label11;

     label10:
        $r23 := @caughtexception;

     label11:
        return r44;

     label12:
        $z2 = r42 instanceof javax.sql.DataSource;

        if $z2 == 0 goto label18;

        $r12 = (javax.sql.DataSource) r42;

        r46 = interfaceinvoke $r12.<javax.sql.DataSource: java.sql.Connection getConnection()>();

     label13:
        if r41 == null goto label17;

     label14:
        interfaceinvoke r41.<javax.naming.Context: void close()>();

     label15:
        goto label17;

     label16:
        $r39 := @caughtexception;

     label17:
        return r46;

     label18:
        $r5 = new java.sql.SQLException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object at JNDI URL \'");

        $r8 = r0.<org.quartz.utils.JNDIConnectionProvider: java.lang.String url>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not a DataSource.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.sql.SQLException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label19:
        $r24 := @caughtexception;

        r0.<org.quartz.utils.JNDIConnectionProvider: java.lang.Object datasource> = null;

        $r25 = new java.sql.SQLException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not retrieve datasource via JNDI url \'");

        $r28 = r0.<org.quartz.utils.JNDIConnectionProvider: java.lang.String url>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r31 = virtualinvoke $r24.<java.lang.Object: java.lang.Class getClass()>();

        $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r35 = virtualinvoke $r24.<java.lang.Exception: java.lang.String getMessage()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.sql.SQLException: void <init>(java.lang.String)>($r37);

        throw $r25;

     label20:
        $r40 := @caughtexception;

     label21:
        if r41 == null goto label25;

     label22:
        interfaceinvoke r41.<javax.naming.Context: void close()>();

     label23:
        goto label25;

     label24:
        $r38 := @caughtexception;

     label25:
        throw $r40;

        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Exception from label01 to label07 with label19;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Exception from label18 to label19 with label19;
        catch java.lang.Throwable from label01 to label07 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Exception from label22 to label23 with label24;
        catch java.lang.Throwable from label18 to label21 with label20;
    }

    public boolean isAlwaysLookup()
    {
        org.quartz.utils.JNDIConnectionProvider r0;
        boolean $z0;

        r0 := @this: org.quartz.utils.JNDIConnectionProvider;

        $z0 = r0.<org.quartz.utils.JNDIConnectionProvider: boolean alwaysLookup>;

        return $z0;
    }

    public void setAlwaysLookup(boolean)
    {
        org.quartz.utils.JNDIConnectionProvider r0;
        boolean z0;

        r0 := @this: org.quartz.utils.JNDIConnectionProvider;

        z0 := @parameter0: boolean;

        r0.<org.quartz.utils.JNDIConnectionProvider: boolean alwaysLookup> = z0;

        return;
    }

    public void shutdown() throws java.sql.SQLException
    {
        org.quartz.utils.JNDIConnectionProvider r0;

        r0 := @this: org.quartz.utils.JNDIConnectionProvider;

        return;
    }

    public void initialize() throws java.sql.SQLException
    {
        org.quartz.utils.JNDIConnectionProvider r0;

        r0 := @this: org.quartz.utils.JNDIConnectionProvider;

        return;
    }
}
