public class org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore extends org.quartz.simpl.RAMJobStore
{

    public void <init>()
    {
        org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore r0;

        r0 := @this: org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore;

        specialinvoke r0.<org.quartz.simpl.RAMJobStore: void <init>()>();

        return;
    }

    public void setInstanceId(java.lang.String)
    {
        org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore r0;
        java.lang.String r1;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.quartz.simpl.RAMJobStore: void setInstanceId(java.lang.String)>(r1);

        $r2 = staticinvoke <org.quartz.impl.SchedulerDetailsSetterTest: java.util.concurrent.atomic.AtomicInteger access$000()>();

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        return;
    }

    public void setInstanceName(java.lang.String)
    {
        org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore r0;
        java.lang.String r1;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.quartz.simpl.RAMJobStore: void setInstanceName(java.lang.String)>(r1);

        $r2 = staticinvoke <org.quartz.impl.SchedulerDetailsSetterTest: java.util.concurrent.atomic.AtomicInteger access$100()>();

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        return;
    }
}
