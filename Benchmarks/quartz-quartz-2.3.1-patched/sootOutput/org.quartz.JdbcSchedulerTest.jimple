public class org.quartz.JdbcSchedulerTest extends org.quartz.AbstractSchedulerTest
{

    public void <init>()
    {
        org.quartz.JdbcSchedulerTest r0;

        r0 := @this: org.quartz.JdbcSchedulerTest;

        specialinvoke r0.<org.quartz.AbstractSchedulerTest: void <init>()>();

        return;
    }

    protected org.quartz.Scheduler createScheduler(java.lang.String, int) throws org.quartz.SchedulerException
    {
        org.quartz.JdbcSchedulerTest r0;
        java.lang.String r1, $r5, $r10, $r15, $r21;
        int i0;
        java.lang.StringBuilder $r2, $r3, $r4, $r7, $r8, $r9, $r12, $r13, $r14, $r18, $r19, $r20;
        org.quartz.impl.jdbcjobstore.JobStoreTX $r6;
        org.quartz.impl.DirectSchedulerFactory $r11;
        org.quartz.simpl.SimpleThreadPool $r16;
        org.quartz.impl.SchedulerRepository $r17;
        org.quartz.Scheduler $r22;
        java.sql.SQLException $r23;
        java.lang.AssertionError $r24;

        r0 := @this: org.quartz.JdbcSchedulerTest;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Database");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void createDatabase(java.lang.String)>($r5);

     label2:
        goto label4;

     label3:
        $r23 := @caughtexception;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>($r23);

        throw $r24;

     label4:
        $r6 = new org.quartz.impl.jdbcjobstore.JobStoreTX;

        specialinvoke $r6.<org.quartz.impl.jdbcjobstore.JobStoreTX: void <init>()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Database");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setDataSource(java.lang.String)>($r10);

        virtualinvoke $r6.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setTablePrefix(java.lang.String)>("QRTZ_");

        virtualinvoke $r6.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceId(java.lang.String)>("AUTO");

        $r11 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduler");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new org.quartz.simpl.SimpleThreadPool;

        specialinvoke $r16.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(i0, 5);

        virtualinvoke $r11.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(java.lang.String,java.lang.String,org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>($r15, "AUTO", $r16, $r6);

        $r17 = staticinvoke <org.quartz.impl.SchedulerRepository: org.quartz.impl.SchedulerRepository getInstance()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduler");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = virtualinvoke $r17.<org.quartz.impl.SchedulerRepository: org.quartz.Scheduler lookup(java.lang.String)>($r21);

        return $r22;

        catch java.sql.SQLException from label1 to label2 with label3;
    }
}
