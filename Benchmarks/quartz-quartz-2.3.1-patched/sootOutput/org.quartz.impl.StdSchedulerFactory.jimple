public class org.quartz.impl.StdSchedulerFactory extends java.lang.Object implements org.quartz.SchedulerFactory
{
    public static final java.lang.String PROPERTIES_FILE;
    public static final java.lang.String PROP_SCHED_INSTANCE_NAME;
    public static final java.lang.String PROP_SCHED_INSTANCE_ID;
    public static final java.lang.String PROP_SCHED_INSTANCE_ID_GENERATOR_PREFIX;
    public static final java.lang.String PROP_SCHED_INSTANCE_ID_GENERATOR_CLASS;
    public static final java.lang.String PROP_SCHED_THREAD_NAME;
    public static final java.lang.String PROP_SCHED_BATCH_TIME_WINDOW;
    public static final java.lang.String PROP_SCHED_MAX_BATCH_SIZE;
    public static final java.lang.String PROP_SCHED_JMX_EXPORT;
    public static final java.lang.String PROP_SCHED_JMX_OBJECT_NAME;
    public static final java.lang.String PROP_SCHED_JMX_PROXY;
    public static final java.lang.String PROP_SCHED_JMX_PROXY_CLASS;
    public static final java.lang.String PROP_SCHED_RMI_EXPORT;
    public static final java.lang.String PROP_SCHED_RMI_PROXY;
    public static final java.lang.String PROP_SCHED_RMI_HOST;
    public static final java.lang.String PROP_SCHED_RMI_PORT;
    public static final java.lang.String PROP_SCHED_RMI_SERVER_PORT;
    public static final java.lang.String PROP_SCHED_RMI_CREATE_REGISTRY;
    public static final java.lang.String PROP_SCHED_RMI_BIND_NAME;
    public static final java.lang.String PROP_SCHED_WRAP_JOB_IN_USER_TX;
    public static final java.lang.String PROP_SCHED_USER_TX_URL;
    public static final java.lang.String PROP_SCHED_IDLE_WAIT_TIME;
    public static final java.lang.String PROP_SCHED_DB_FAILURE_RETRY_INTERVAL;
    public static final java.lang.String PROP_SCHED_MAKE_SCHEDULER_THREAD_DAEMON;
    public static final java.lang.String PROP_SCHED_SCHEDULER_THREADS_INHERIT_CONTEXT_CLASS_LOADER_OF_INITIALIZING_THREAD;
    public static final java.lang.String PROP_SCHED_CLASS_LOAD_HELPER_CLASS;
    public static final java.lang.String PROP_SCHED_JOB_FACTORY_CLASS;
    public static final java.lang.String PROP_SCHED_JOB_FACTORY_PREFIX;
    public static final java.lang.String PROP_SCHED_INTERRUPT_JOBS_ON_SHUTDOWN;
    public static final java.lang.String PROP_SCHED_INTERRUPT_JOBS_ON_SHUTDOWN_WITH_WAIT;
    public static final java.lang.String PROP_SCHED_CONTEXT_PREFIX;
    public static final java.lang.String PROP_THREAD_POOL_PREFIX;
    public static final java.lang.String PROP_THREAD_POOL_CLASS;
    public static final java.lang.String PROP_JOB_STORE_PREFIX;
    public static final java.lang.String PROP_JOB_STORE_LOCK_HANDLER_PREFIX;
    public static final java.lang.String PROP_JOB_STORE_LOCK_HANDLER_CLASS;
    public static final java.lang.String PROP_TABLE_PREFIX;
    public static final java.lang.String PROP_SCHED_NAME;
    public static final java.lang.String PROP_JOB_STORE_CLASS;
    public static final java.lang.String PROP_JOB_STORE_USE_PROP;
    public static final java.lang.String PROP_DATASOURCE_PREFIX;
    public static final java.lang.String PROP_CONNECTION_PROVIDER_CLASS;
    public static final java.lang.String PROP_DATASOURCE_DRIVER;
    public static final java.lang.String PROP_DATASOURCE_URL;
    public static final java.lang.String PROP_DATASOURCE_USER;
    public static final java.lang.String PROP_DATASOURCE_PASSWORD;
    public static final java.lang.String PROP_DATASOURCE_MAX_CONNECTIONS;
    public static final java.lang.String PROP_DATASOURCE_VALIDATION_QUERY;
    public static final java.lang.String PROP_DATASOURCE_JNDI_URL;
    public static final java.lang.String PROP_DATASOURCE_JNDI_ALWAYS_LOOKUP;
    public static final java.lang.String PROP_DATASOURCE_JNDI_INITIAL;
    public static final java.lang.String PROP_DATASOURCE_JNDI_PROVDER;
    public static final java.lang.String PROP_DATASOURCE_JNDI_PRINCIPAL;
    public static final java.lang.String PROP_DATASOURCE_JNDI_CREDENTIALS;
    public static final java.lang.String PROP_PLUGIN_PREFIX;
    public static final java.lang.String PROP_PLUGIN_CLASS;
    public static final java.lang.String PROP_JOB_LISTENER_PREFIX;
    public static final java.lang.String PROP_TRIGGER_LISTENER_PREFIX;
    public static final java.lang.String PROP_LISTENER_CLASS;
    public static final java.lang.String DEFAULT_INSTANCE_ID;
    public static final java.lang.String AUTO_GENERATE_INSTANCE_ID;
    public static final java.lang.String PROP_THREAD_EXECUTOR;
    public static final java.lang.String PROP_THREAD_EXECUTOR_CLASS;
    public static final java.lang.String SYSTEM_PROPERTY_AS_INSTANCE_ID;
    public static final java.lang.String MANAGEMENT_REST_SERVICE_ENABLED;
    public static final java.lang.String MANAGEMENT_REST_SERVICE_HOST_PORT;
    private org.quartz.SchedulerException initException;
    private java.lang.String propSrc;
    private org.quartz.utils.PropertiesParser cfg;
    private final org.slf4j.Logger log;

    public void <init>()
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.lang.Class $r1;
        org.slf4j.Logger $r2;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = null;

        r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc> = null;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r1);

        r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger log> = $r2;

        return;
    }

    public void <init>(java.util.Properties) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.util.Properties r1;
        java.lang.Class $r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: java.util.Properties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = null;

        r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc> = null;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r2);

        r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger log> = $r3;

        virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: void initialize(java.util.Properties)>(r1);

        return;
    }

    public void <init>(java.lang.String) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.lang.String r1;
        java.lang.Class $r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = null;

        r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc> = null;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r2);

        r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger log> = $r3;

        virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: void initialize(java.lang.String)>(r1);

        return;
    }

    public org.slf4j.Logger getLog()
    {
        org.quartz.impl.StdSchedulerFactory r0;
        org.slf4j.Logger $r1;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        $r1 = r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger log>;

        return $r1;
    }

    public void initialize() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.lang.String r1, r2, $r22, $r29, $r37, $r46, $r55, $r61;
        org.quartz.utils.PropertiesParser $r8;
        org.quartz.SchedulerException $r9, $r13, $r14, $r24, $r30, $r38, $r41, $r47, $r50, $r56, $r59, $r60;
        java.io.File $r10;
        java.util.Properties $r11, $r67;
        boolean $z0;
        java.lang.Class $r12;
        org.quartz.SchedulerConfigException $r15;
        java.lang.Thread $r16;
        java.lang.ClassLoader $r17, r65;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r25, $r26, $r27, $r28, $r33, $r34, $r35, $r36, $r42, $r43, $r44, $r45, $r51, $r52, $r53, $r54;
        java.io.BufferedInputStream $r23, $r31;
        java.io.FileInputStream $r32;
        java.lang.Throwable $r39;
        java.io.IOException $r40, $r48, $r49, $r57, $r58;
        java.io.InputStream r62;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        $r8 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        if $r8 == null goto label01;

        return;

     label01:
        $r9 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        if $r9 == null goto label02;

        $r38 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r38;

     label02:
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.quartz.properties");

        if r1 == null goto label03;

        $r61 = r1;

        goto label04;

     label03:
        $r61 = "quartz.properties";

     label04:
        r2 = $r61;

        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r61);

        $r11 = new java.util.Properties;

        specialinvoke $r11.<java.util.Properties: void <init>()>();

        r62 = null;

     label05:
        $z0 = virtualinvoke $r10.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label11;

     label06:
        if r1 == null goto label07;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("specified file: \'");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc> = $r37;

        goto label08;

     label07:
        r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc> = "default file in current working dir: \'quartz.properties\'";

     label08:
        $r31 = new java.io.BufferedInputStream;

        $r32 = new java.io.FileInputStream;

        specialinvoke $r32.<java.io.FileInputStream: void <init>(java.lang.String)>(r2);

        specialinvoke $r31.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r32);

        r62 = $r31;

        virtualinvoke $r11.<java.util.Properties: void load(java.io.InputStream)>($r31);

     label09:
        goto label24;

     label10:
        $r40 := @caughtexception;

        $r41 = new org.quartz.SchedulerException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Properties file: \'");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be read.");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r46, $r40);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r41;

        $r47 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r47;

     label11:
        if r1 == null goto label16;

        $r16 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r17 = virtualinvoke $r16.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        r62 = virtualinvoke $r17.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        if r62 != null goto label12;

        $r24 = new org.quartz.SchedulerException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Properties file: \'");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be found.");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.quartz.SchedulerException: void <init>(java.lang.String)>($r29);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r24;

        $r30 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r30;

     label12:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("specified file: \'");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in the class resource path.");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc> = $r22;

        $r23 = new java.io.BufferedInputStream;

        specialinvoke $r23.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r62);

        r62 = $r23;

     label13:
        virtualinvoke $r11.<java.util.Properties: void load(java.io.InputStream)>($r23);

     label14:
        goto label24;

     label15:
        $r49 := @caughtexception;

        $r50 = new org.quartz.SchedulerException;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Properties file: \'");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be read.");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r50.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r55, $r49);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r50;

        $r56 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r56;

     label16:
        r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc> = "default resource file in Quartz package: \'quartz.properties\'";

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r65 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if r65 != null goto label17;

        r65 = specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: java.lang.ClassLoader findClassloader()>();

     label17:
        if r65 != null goto label18;

        $r15 = new org.quartz.SchedulerConfigException;

        specialinvoke $r15.<org.quartz.SchedulerConfigException: void <init>(java.lang.String)>("Unable to find a class loader on the current thread or class.");

        throw $r15;

     label18:
        r62 = virtualinvoke r65.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("quartz.properties");

        if r62 != null goto label19;

        r62 = virtualinvoke r65.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("/quartz.properties");

     label19:
        if r62 != null goto label20;

        r62 = virtualinvoke r65.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("org/quartz/quartz.properties");

     label20:
        if r62 != null goto label21;

        $r13 = new org.quartz.SchedulerException;

        specialinvoke $r13.<org.quartz.SchedulerException: void <init>(java.lang.String)>("Default quartz.properties not found in class path");

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r13;

        $r14 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r14;

     label21:
        virtualinvoke $r11.<java.util.Properties: void load(java.io.InputStream)>(r62);

     label22:
        goto label24;

     label23:
        $r58 := @caughtexception;

        $r59 = new org.quartz.SchedulerException;

        specialinvoke $r59.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>("Resource properties file: \'org/quartz/quartz.properties\' could not be read from the classpath.", $r58);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r59;

        $r60 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r60;

     label24:
        if r62 == null goto label34;

     label25:
        virtualinvoke r62.<java.io.InputStream: void close()>();

     label26:
        goto label34;

     label27:
        $r57 := @caughtexception;

        goto label34;

     label28:
        $r39 := @caughtexception;

     label29:
        if r62 == null goto label33;

     label30:
        virtualinvoke r62.<java.io.InputStream: void close()>();

     label31:
        goto label33;

     label32:
        $r48 := @caughtexception;

     label33:
        throw $r39;

     label34:
        $r67 = specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: java.util.Properties overrideWithSysProps(java.util.Properties)>($r11);

        virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: void initialize(java.util.Properties)>($r67);

        return;

        catch java.io.IOException from label06 to label09 with label10;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.lang.Throwable from label05 to label24 with label28;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    private java.util.Properties overrideWithSysProps(java.util.Properties)
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.util.Properties r1, r5;
        java.security.AccessControlException $r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: java.util.Properties;

        r5 = null;

     label1:
        r5 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger getLog()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Skipping overriding quartz properties with System properties during initialization because of an AccessControlException.  This is likely due to not having read/write access for java.util.PropertyPermission as required by java.lang.System.getProperties().  To resolve this warning, either add this permission to your policy file or use a non-default version of initialize().", $r3);

     label4:
        if r5 == null goto label5;

        virtualinvoke r1.<java.util.Properties: void putAll(java.util.Map)>(r5);

     label5:
        return r1;

        catch java.security.AccessControlException from label1 to label2 with label3;
    }

    public void initialize(java.lang.String) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.lang.String r1, $r15, $r21, $r29;
        org.quartz.utils.PropertiesParser $r4;
        org.quartz.SchedulerException $r5, $r22, $r24, $r30;
        java.util.Properties $r6;
        java.lang.Thread $r7;
        java.lang.ClassLoader $r8;
        java.io.BufferedInputStream $r9, $r16;
        java.io.FileInputStream $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r25, $r26, $r27, $r28;
        java.io.IOException $r23, $r31, $r32;
        java.lang.Throwable $r33;
        java.io.InputStream r34;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        if $r4 == null goto label01;

        return;

     label01:
        $r5 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        if $r5 == null goto label02;

        $r22 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r22;

     label02:
        $r6 = new java.util.Properties;

        specialinvoke $r6.<java.util.Properties: void <init>()>();

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r8 = virtualinvoke $r7.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        r34 = virtualinvoke $r8.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

     label03:
        if r34 == null goto label04;

        $r16 = new java.io.BufferedInputStream;

        specialinvoke $r16.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r34);

        r34 = $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the specified file : \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' from the class resource path.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc> = $r21;

        goto label05;

     label04:
        $r9 = new java.io.BufferedInputStream;

        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        specialinvoke $r9.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r10);

        r34 = $r9;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the specified file : \'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc> = $r15;

     label05:
        virtualinvoke $r6.<java.util.Properties: void load(java.io.InputStream)>(r34);

     label06:
        if r34 == null goto label17;

     label07:
        virtualinvoke r34.<java.io.InputStream: void close()>();

     label08:
        goto label17;

     label09:
        $r32 := @caughtexception;

        goto label17;

     label10:
        $r23 := @caughtexception;

        $r24 = new org.quartz.SchedulerException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Properties file: \'");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be read.");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r23);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r24;

        $r30 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r30;

     label11:
        $r33 := @caughtexception;

     label12:
        if r34 == null goto label16;

     label13:
        virtualinvoke r34.<java.io.InputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r31 := @caughtexception;

     label16:
        throw $r33;

     label17:
        virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: void initialize(java.util.Properties)>($r6);

        return;

        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label03 to label06 with label10;
        catch java.lang.Throwable from label03 to label06 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label10 to label12 with label11;
    }

    public void initialize(java.io.InputStream) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.io.InputStream r1;
        org.quartz.utils.PropertiesParser $r4;
        org.quartz.SchedulerException $r5, $r7, $r8, $r9, $r11, $r12;
        java.util.Properties $r6;
        java.io.IOException $r10;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: java.io.InputStream;

        $r4 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        if $r4 == null goto label1;

        return;

     label1:
        $r5 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        if $r5 == null goto label2;

        $r9 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r9;

     label2:
        $r6 = new java.util.Properties;

        specialinvoke $r6.<java.util.Properties: void <init>()>();

        if r1 == null goto label6;

     label3:
        virtualinvoke $r6.<java.util.Properties: void load(java.io.InputStream)>(r1);

        r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc> = "an externally opened InputStream.";

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        $r11 = new org.quartz.SchedulerException;

        specialinvoke $r11.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>("Error loading property data from InputStream", $r10);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r11;

        $r12 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r12;

     label6:
        $r7 = new org.quartz.SchedulerException;

        specialinvoke $r7.<org.quartz.SchedulerException: void <init>(java.lang.String)>("Error loading property data from InputStream - InputStream is null.");

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r7;

        $r8 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r8;

     label7:
        virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: void initialize(java.util.Properties)>($r6);

        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public void initialize(java.util.Properties) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.util.Properties r1;
        java.lang.String $r2;
        org.quartz.utils.PropertiesParser $r3;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: java.util.Properties;

        $r2 = r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc>;

        if $r2 != null goto label1;

        r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc> = "an externally provided properties instance.";

     label1:
        $r3 = new org.quartz.utils.PropertiesParser;

        specialinvoke $r3.<org.quartz.utils.PropertiesParser: void <init>(java.util.Properties)>(r1);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg> = $r3;

        return;
    }

    private org.quartz.Scheduler instantiate() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.lang.String r1, r2, r4, r5, r6, r7, r8, r9, r10, r13, $r21, $r48, $r54, $r68, $r75, $r78, $r80, $r84, $r86, $r88, $r90, $r97, $r108, $r113, $r125, $r129, $r131, $r136, $r140, $r143, $r148, $r150, $r155, $r159, $r162, $r167, $r169, $r175, $r178, $r184, $r186, $r188, $r194, $r196, $r201, $r203, $r209, $r221, $r223, $r242, $r251, $r259, $r268, $r279, $r287, $r295, $r301, $r303, $r312, $r320, $r330, $r336, $r338, $r345, $r353, $r361, $r369, $r375, $r377, $r385, $r394, $r396, $r404, $r412, $r420, $r428, $r436, r440, r441, r443, r448, $r449, r466, r471, r476, r484, r488, r489, r490, r491, r492, $r497, r498, r499, r500, r501, $r507, $r510, r523, r531, r539, r544, r550;
        org.quartz.impl.SchedulerRepository r3;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, z19, z20, z21, z22, z23, z24, $z25;
        long l0, l16, l18;
        int i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, i19, $i20, i21, i22, i23, i24, $i25, i26, $i27, i28, i29;
        java.util.Properties r11, $r187, $r190, $r207, $r208, $r211, r456, r460, r464, r469, r474, r478, r493, $r494, $r515, r522, r530, r538, r545;
        java.lang.Object r12, $r45, $r50, $r56, $r106, $r120, $r133, $r152, $r171, $r206, $r214, $r229, $r232, $r235, $r516;
        org.quartz.utils.PropertiesParser $r14, $r16, $r18, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r47, $r51, $r53, $r58, $r59, $r61, $r62, $r63, $r107, $r118, $r127, $r146, $r165, $r180, $r182, $r212, $r215, $r230, $r233, $r236, $r243, $r442, $r444, $r445, $r446, $r447, $r481;
        org.quartz.SchedulerException $r15, $r137, $r144, $r156, $r163, $r172, $r179, $r191, $r197, $r198, $r204, $r224, $r225, $r226, $r227, $r240, $r241, $r244, $r246, $r252, $r254, $r260, $r263, $r269, $r274, $r280, $r282, $r288, $r290, $r296, $r307, $r313, $r315, $r321, $r323, $r325, $r331, $r340, $r346, $r348, $r354, $r356, $r362, $r364, $r370, $r380, $r386, $r391, $r397, $r399, $r405, $r407, $r413, $r415, $r421, $r423, $r429, $r431, $r437;
        java.lang.StringBuilder $r17, $r19, $r20, $r73, $r74, $r76, $r77, $r79, $r82, $r83, $r85, $r109, $r110, $r111, $r112, $r114, $r115, $r116, $r121, $r123, $r124, $r126, $r128, $r130, $r138, $r139, $r141, $r142, $r145, $r147, $r149, $r157, $r158, $r160, $r161, $r164, $r166, $r168, $r173, $r174, $r176, $r177, $r181, $r183, $r185, $r192, $r193, $r195, $r199, $r200, $r202, $r218, $r219, $r220, $r247, $r248, $r249, $r250, $r255, $r256, $r257, $r258, $r264, $r265, $r266, $r267, $r275, $r276, $r277, $r278, $r283, $r284, $r285, $r286, $r291, $r292, $r293, $r294, $r299, $r300, $r302, $r308, $r309, $r310, $r311, $r316, $r317, $r318, $r319, $r326, $r327, $r328, $r329, $r334, $r335, $r337, $r341, $r342, $r343, $r344, $r349, $r350, $r351, $r352, $r357, $r358, $r359, $r360, $r365, $r366, $r367, $r368, $r373, $r374, $r376, $r381, $r382, $r383, $r384, $r392, $r393, $r395, $r400, $r401, $r402, $r403, $r408, $r409, $r410, $r411, $r416, $r417, $r418, $r419, $r424, $r425, $r426, $r427, $r432, $r433, $r434, $r435, $r503, $r504, $r505, $r506, $r508, $r509;
        byte $b4, $b14, $b17;
        java.lang.Class $r44, $r46, $r49, $r52, $r55, $r67, $r102, $r119, $r132, $r134, $r151, $r153, $r170, $r205, $r213, $r228, $r231, $r234, $r511;
        java.lang.String[] $r57, r482, r520, r528, r536;
        java.lang.Class[] $r60, $r103, $r512;
        org.slf4j.Logger $r64, $r72, $r81, $r122, $r217, $r271, $r502;
        org.quartz.impl.DefaultThreadExecutor $r65;
        org.quartz.ee.jta.JTAAnnotationAwareJobRunShellFactory $r66;
        org.quartz.core.QuartzScheduler $r69, r438;
        java.util.Set $r70;
        org.quartz.spi.SchedulerSignaler $r71;
        org.quartz.SchedulerContext $r89;
        org.quartz.ListenerManager $r91, $r94;
        org.quartz.TriggerListener $r92, r540;
        org.quartz.impl.matchers.EverythingMatcher $r93, $r96;
        org.quartz.JobListener $r95, r532;
        org.quartz.spi.SchedulerPlugin $r98, $r99, r524;
        org.quartz.simpl.SimpleThreadPool $r100;
        org.quartz.management.ManagementRESTServiceConfiguration $r101;
        java.lang.reflect.Method $r104, r534, r542;
        java.lang.Object[] $r105, $r135, $r154, $r514;
        org.quartz.ee.jta.JTAJobRunShellFactory $r117;
        org.quartz.utils.PoolingConnectionProvider $r189, $r210;
        org.quartz.impl.jdbcjobstore.JobStoreSupport $r216, $r222, r552;
        org.quartz.SchedulerConfigException $r237, $r239, $r298, $r333, $r372, $r389;
        org.quartz.impl.RemoteScheduler $r238;
        java.lang.Exception $r245, $r253, $r262, $r270, $r273, $r281, $r289, $r297, $r304, $r306, $r314, $r324, $r332, $r339, $r347, $r355, $r363, $r371, $r379, $r388, $r390, $r398, $r406, $r414, $r422, $r430;
        java.lang.NoSuchMethodException $r261, $r322;
        java.lang.IllegalStateException $r272;
        java.lang.RuntimeException $r305, $r378;
        java.lang.Error $r387;
        org.quartz.utils.DBConnectionManager r439;
        org.quartz.spi.ClassLoadHelper r452;
        org.quartz.impl.RemoteMBeanScheduler r454;
        org.quartz.spi.JobFactory r458;
        org.quartz.spi.InstanceIdGenerator r462;
        org.quartz.spi.ThreadPool r467;
        org.quartz.spi.JobStore r472;
        org.quartz.impl.jdbcjobstore.Semaphore r477;
        org.quartz.utils.ConnectionProvider r485, r517;
        org.quartz.utils.JNDIConnectionProvider $r495;
        java.lang.reflect.Constructor r513;
        org.quartz.spi.SchedulerPlugin[] r521;
        org.quartz.JobListener[] r529;
        org.quartz.TriggerListener[] r537;
        org.quartz.spi.ThreadExecutor r546;
        org.quartz.core.JobRunShellFactory r548;
        org.quartz.core.QuartzSchedulerResources $r553;
        org.quartz.Scheduler r556;
        java.util.Iterator r557;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        $r14 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        if $r14 != null goto label001;

        virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: void initialize()>();

     label001:
        $r15 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        if $r15 == null goto label002;

        $r244 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r244;

     label002:
        r438 = null;

        r439 = null;

        r440 = null;

        z19 = 0;

        r3 = staticinvoke <org.quartz.impl.SchedulerRepository: org.quartz.impl.SchedulerRepository getInstance()>();

        $r16 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r4 = virtualinvoke $r16.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceName", "QuartzScheduler");

        $r18 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_QuartzSchedulerThread");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = virtualinvoke $r18.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.threadName", $r21);

        $r22 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r441 = virtualinvoke $r22.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceId", "NON_CLUSTERED");

        $z8 = virtualinvoke r441.<java.lang.String: boolean equals(java.lang.Object)>("AUTO");

        if $z8 == 0 goto label003;

        z19 = 1;

        $r243 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r440 = virtualinvoke $r243.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceIdGenerator.class", "org.quartz.simpl.SimpleInstanceIdGenerator");

        goto label004;

     label003:
        $z9 = virtualinvoke r441.<java.lang.String: boolean equals(java.lang.Object)>("SYS_PROP");

        if $z9 == 0 goto label004;

        z19 = 1;

        r440 = "org.quartz.simpl.SystemPropertyInstanceIdGenerator";

     label004:
        $r442 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r443 = virtualinvoke $r442.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.userTransactionURL", null);

        if r443 == null goto label005;

        $r242 = virtualinvoke r443.<java.lang.String: java.lang.String trim()>();

        $i15 = virtualinvoke $r242.<java.lang.String: int length()>();

        if $i15 != 0 goto label005;

        r443 = null;

     label005:
        $r444 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r1 = virtualinvoke $r444.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.classLoadHelper.class", "org.quartz.simpl.CascadingClassLoadHelper");

        $r445 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        z20 = virtualinvoke $r445.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String,boolean)>("org.quartz.scheduler.wrapJobExecutionInUserTransaction", 0);

        $r446 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r2 = virtualinvoke $r446.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.jobFactory.class", null);

        $r447 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        l16 = virtualinvoke $r447.<org.quartz.utils.PropertiesParser: long getLongProperty(java.lang.String,long)>("org.quartz.scheduler.idleWaitTime", -1L);

        $b17 = l16 cmp -1L;

        if $b17 <= 0 goto label006;

        $b14 = l16 cmp 1000L;

        if $b14 >= 0 goto label006;

        $r241 = new org.quartz.SchedulerException;

        specialinvoke $r241.<org.quartz.SchedulerException: void <init>(java.lang.String)>("org.quartz.scheduler.idleWaitTime of less than 1000ms is not legal.");

        throw $r241;

     label006:
        $r23 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        l18 = virtualinvoke $r23.<org.quartz.utils.PropertiesParser: long getLongProperty(java.lang.String,long)>("org.quartz.scheduler.dbFailureRetryInterval", 15000L);

        $b4 = l18 cmp 0L;

        if $b4 >= 0 goto label007;

        $r240 = new org.quartz.SchedulerException;

        specialinvoke $r240.<org.quartz.SchedulerException: void <init>(java.lang.String)>("org.quartz.scheduler.dbFailureRetryInterval of less than 0 ms is not legal.");

        throw $r240;

     label007:
        $r24 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        z0 = virtualinvoke $r24.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String)>("org.quartz.scheduler.makeSchedulerThreadDaemon");

        $r25 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        z1 = virtualinvoke $r25.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String)>("org.quartz.scheduler.threadsInheritContextClassLoaderOfInitializer");

        $r26 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        l0 = virtualinvoke $r26.<org.quartz.utils.PropertiesParser: long getLongProperty(java.lang.String,long)>("org.quartz.scheduler.batchTriggerAcquisitionFireAheadTimeWindow", 0L);

        $r27 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        i1 = virtualinvoke $r27.<org.quartz.utils.PropertiesParser: int getIntProperty(java.lang.String,int)>("org.quartz.scheduler.batchTriggerAcquisitionMaxCount", 1);

        $r28 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        z2 = virtualinvoke $r28.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String,boolean)>("org.quartz.scheduler.interruptJobsOnShutdown", 0);

        $r29 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        z3 = virtualinvoke $r29.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String,boolean)>("org.quartz.scheduler.interruptJobsOnShutdownWithWait", 0);

        $r30 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        z21 = virtualinvoke $r30.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String)>("org.quartz.scheduler.jmx.export");

        $r31 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r448 = virtualinvoke $r31.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("org.quartz.scheduler.jmx.objectName");

        $r32 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        z4 = virtualinvoke $r32.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String)>("org.quartz.scheduler.jmx.proxy");

        $r33 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r6 = virtualinvoke $r33.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("org.quartz.scheduler.jmx.proxy.class");

        $r34 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        z5 = virtualinvoke $r34.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String,boolean)>("org.quartz.scheduler.rmi.export", 0);

        $r35 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        z6 = virtualinvoke $r35.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String,boolean)>("org.quartz.scheduler.rmi.proxy", 0);

        $r36 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r7 = virtualinvoke $r36.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.rmi.registryHost", "localhost");

        $r37 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        i2 = virtualinvoke $r37.<org.quartz.utils.PropertiesParser: int getIntProperty(java.lang.String,int)>("org.quartz.scheduler.rmi.registryPort", 1099);

        $r38 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        i3 = virtualinvoke $r38.<org.quartz.utils.PropertiesParser: int getIntProperty(java.lang.String,int)>("org.quartz.scheduler.rmi.serverPort", -1);

        $r39 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r8 = virtualinvoke $r39.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.rmi.createRegistry", "never");

        $r40 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r9 = virtualinvoke $r40.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("org.quartz.scheduler.rmi.bindName");

        if z4 == 0 goto label008;

        if z6 == 0 goto label008;

        $r239 = new org.quartz.SchedulerConfigException;

        specialinvoke $r239.<org.quartz.SchedulerConfigException: void <init>(java.lang.String)>("Cannot proxy both RMI and JMX.");

        throw $r239;

     label008:
        $r41 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        z7 = virtualinvoke $r41.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String,boolean)>("org.quartz.managementRESTService.enabled", 0);

        $r42 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r10 = virtualinvoke $r42.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.managementRESTService.bind", "0.0.0.0:9889");

        $r43 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r11 = virtualinvoke $r43.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean)>("org.quartz.context.key", 1);

        if z6 == 0 goto label012;

        if z19 == 0 goto label009;

        r441 = "NON_CLUSTERED";

     label009:
        if r9 != null goto label010;

        $r449 = staticinvoke <org.quartz.core.QuartzSchedulerResources: java.lang.String getUniqueIdentifier(java.lang.String,java.lang.String)>(r4, r441);

        goto label011;

     label010:
        $r449 = r9;

     label011:
        $r238 = new org.quartz.impl.RemoteScheduler;

        specialinvoke $r238.<org.quartz.impl.RemoteScheduler: void <init>(java.lang.String,java.lang.String,int)>($r449, r7, i2);

        virtualinvoke r3.<org.quartz.impl.SchedulerRepository: void bind(org.quartz.Scheduler)>($r238);

        return $r238;

     label012:
        $r44 = specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: java.lang.Class loadClass(java.lang.String)>(r1);

        $r45 = virtualinvoke $r44.<java.lang.Class: java.lang.Object newInstance()>();

        r452 = (org.quartz.spi.ClassLoadHelper) $r45;

     label013:
        goto label015;

     label014:
        $r371 := @caughtexception;

        $r372 = new org.quartz.SchedulerConfigException;

        $r373 = new java.lang.StringBuilder;

        specialinvoke $r373.<java.lang.StringBuilder: void <init>()>();

        $r374 = virtualinvoke $r373.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate class load helper class: ");

        $r375 = virtualinvoke $r371.<java.lang.Exception: java.lang.String getMessage()>();

        $r376 = virtualinvoke $r374.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r375);

        $r377 = virtualinvoke $r376.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r372.<org.quartz.SchedulerConfigException: void <init>(java.lang.String,java.lang.Throwable)>($r377, $r371);

        throw $r372;

     label015:
        interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: void initialize()>();

        if z4 == 0 goto label026;

        if z19 == 0 goto label016;

        r441 = "NON_CLUSTERED";

     label016:
        if r6 != null goto label017;

        $r237 = new org.quartz.SchedulerConfigException;

        specialinvoke $r237.<org.quartz.SchedulerConfigException: void <init>(java.lang.String)>("No JMX Proxy Scheduler class provided");

        throw $r237;

     label017:
        $r234 = interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: java.lang.Class loadClass(java.lang.String)>(r6);

        $r235 = virtualinvoke $r234.<java.lang.Class: java.lang.Object newInstance()>();

        r454 = (org.quartz.impl.RemoteMBeanScheduler) $r235;

     label018:
        goto label020;

     label019:
        $r388 := @caughtexception;

        $r389 = new org.quartz.SchedulerConfigException;

        specialinvoke $r389.<org.quartz.SchedulerConfigException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to instantiate RemoteMBeanScheduler class.", $r388);

        throw $r389;

     label020:
        if r448 != null goto label021;

        r448 = staticinvoke <org.quartz.core.QuartzSchedulerResources: java.lang.String generateJMXObjectName(java.lang.String,java.lang.String)>(r4, r441);

     label021:
        virtualinvoke r454.<org.quartz.impl.RemoteMBeanScheduler: void setSchedulerObjectName(java.lang.String)>(r448);

        $r236 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r456 = virtualinvoke $r236.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean)>("org.quartz.scheduler.jmx.proxy", 1);

     label022:
        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void setBeanProps(java.lang.Object,java.util.Properties)>(r454, r456);

     label023:
        goto label025;

     label024:
        $r314 := @caughtexception;

        $r315 = new org.quartz.SchedulerException;

        $r316 = new java.lang.StringBuilder;

        specialinvoke $r316.<java.lang.StringBuilder: void <init>()>();

        $r317 = virtualinvoke $r316.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteMBeanScheduler class \'");

        $r318 = virtualinvoke $r317.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r319 = virtualinvoke $r318.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' props could not be configured.");

        $r320 = virtualinvoke $r319.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r315.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r320, $r314);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r315;

        $r321 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r321;

     label025:
        virtualinvoke r454.<org.quartz.impl.RemoteMBeanScheduler: void initialize()>();

        virtualinvoke r3.<org.quartz.impl.SchedulerRepository: void bind(org.quartz.Scheduler)>(r454);

        return r454;

     label026:
        r458 = null;

        if r2 == null goto label034;

     label027:
        $r231 = interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: java.lang.Class loadClass(java.lang.String)>(r2);

        $r232 = virtualinvoke $r231.<java.lang.Class: java.lang.Object newInstance()>();

        r458 = (org.quartz.spi.JobFactory) $r232;

     label028:
        goto label030;

     label029:
        $r297 := @caughtexception;

        $r298 = new org.quartz.SchedulerConfigException;

        $r299 = new java.lang.StringBuilder;

        specialinvoke $r299.<java.lang.StringBuilder: void <init>()>();

        $r300 = virtualinvoke $r299.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate JobFactory class: ");

        $r301 = virtualinvoke $r297.<java.lang.Exception: java.lang.String getMessage()>();

        $r302 = virtualinvoke $r300.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r301);

        $r303 = virtualinvoke $r302.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r298.<org.quartz.SchedulerConfigException: void <init>(java.lang.String,java.lang.Throwable)>($r303, $r297);

        throw $r298;

     label030:
        $r233 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r460 = virtualinvoke $r233.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean)>("org.quartz.scheduler.jobFactory", 1);

     label031:
        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void setBeanProps(java.lang.Object,java.util.Properties)>(r458, r460);

     label032:
        goto label034;

     label033:
        $r289 := @caughtexception;

        $r290 = new org.quartz.SchedulerException;

        $r291 = new java.lang.StringBuilder;

        specialinvoke $r291.<java.lang.StringBuilder: void <init>()>();

        $r292 = virtualinvoke $r291.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobFactory class \'");

        $r293 = virtualinvoke $r292.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r294 = virtualinvoke $r293.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' props could not be configured.");

        $r295 = virtualinvoke $r294.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r290.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r295, $r289);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r290;

        $r296 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r296;

     label034:
        r462 = null;

        if r440 == null goto label042;

     label035:
        $r228 = interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: java.lang.Class loadClass(java.lang.String)>(r440);

        $r229 = virtualinvoke $r228.<java.lang.Class: java.lang.Object newInstance()>();

        r462 = (org.quartz.spi.InstanceIdGenerator) $r229;

     label036:
        goto label038;

     label037:
        $r332 := @caughtexception;

        $r333 = new org.quartz.SchedulerConfigException;

        $r334 = new java.lang.StringBuilder;

        specialinvoke $r334.<java.lang.StringBuilder: void <init>()>();

        $r335 = virtualinvoke $r334.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate InstanceIdGenerator class: ");

        $r336 = virtualinvoke $r332.<java.lang.Exception: java.lang.String getMessage()>();

        $r337 = virtualinvoke $r335.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r336);

        $r338 = virtualinvoke $r337.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r333.<org.quartz.SchedulerConfigException: void <init>(java.lang.String,java.lang.Throwable)>($r338, $r332);

        throw $r333;

     label038:
        $r230 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r464 = virtualinvoke $r230.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean)>("org.quartz.scheduler.instanceIdGenerator", 1);

     label039:
        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void setBeanProps(java.lang.Object,java.util.Properties)>(r462, r464);

     label040:
        goto label042;

     label041:
        $r379 := @caughtexception;

        $r380 = new org.quartz.SchedulerException;

        $r381 = new java.lang.StringBuilder;

        specialinvoke $r381.<java.lang.StringBuilder: void <init>()>();

        $r382 = virtualinvoke $r381.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InstanceIdGenerator class \'");

        $r383 = virtualinvoke $r382.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r440);

        $r384 = virtualinvoke $r383.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' props could not be configured.");

        $r385 = virtualinvoke $r384.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r380.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r385, $r379);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r380;

        $r386 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r386;

     label042:
        $r47 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        $r46 = class "Lorg/quartz/simpl/SimpleThreadPool;";

        $r48 = virtualinvoke $r46.<java.lang.Class: java.lang.String getName()>();

        r466 = virtualinvoke $r47.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.class", $r48);

        if r466 != null goto label043;

        $r226 = new org.quartz.SchedulerException;

        specialinvoke $r226.<org.quartz.SchedulerException: void <init>(java.lang.String)>("ThreadPool class not specified. ");

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r226;

        $r227 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r227;

     label043:
        $r49 = interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: java.lang.Class loadClass(java.lang.String)>(r466);

        $r50 = virtualinvoke $r49.<java.lang.Class: java.lang.Object newInstance()>();

        r467 = (org.quartz.spi.ThreadPool) $r50;

     label044:
        goto label046;

     label045:
        $r347 := @caughtexception;

        $r348 = new org.quartz.SchedulerException;

        $r349 = new java.lang.StringBuilder;

        specialinvoke $r349.<java.lang.StringBuilder: void <init>()>();

        $r350 = virtualinvoke $r349.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreadPool class \'");

        $r351 = virtualinvoke $r350.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r466);

        $r352 = virtualinvoke $r351.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be instantiated.");

        $r353 = virtualinvoke $r352.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r348.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r353, $r347);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r348;

        $r354 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r354;

     label046:
        $r51 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r469 = virtualinvoke $r51.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean)>("org.quartz.threadPool", 1);

     label047:
        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void setBeanProps(java.lang.Object,java.util.Properties)>(r467, r469);

     label048:
        goto label050;

     label049:
        $r406 := @caughtexception;

        $r407 = new org.quartz.SchedulerException;

        $r408 = new java.lang.StringBuilder;

        specialinvoke $r408.<java.lang.StringBuilder: void <init>()>();

        $r409 = virtualinvoke $r408.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreadPool class \'");

        $r410 = virtualinvoke $r409.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r466);

        $r411 = virtualinvoke $r410.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' props could not be configured.");

        $r412 = virtualinvoke $r411.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r407.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r412, $r406);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r407;

        $r413 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r413;

     label050:
        $r53 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        $r52 = class "Lorg/quartz/simpl/RAMJobStore;";

        $r54 = virtualinvoke $r52.<java.lang.Class: java.lang.String getName()>();

        r471 = virtualinvoke $r53.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.jobStore.class", $r54);

        if r471 != null goto label051;

        $r224 = new org.quartz.SchedulerException;

        specialinvoke $r224.<org.quartz.SchedulerException: void <init>(java.lang.String)>("JobStore class not specified. ");

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r224;

        $r225 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r225;

     label051:
        $r55 = interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: java.lang.Class loadClass(java.lang.String)>(r471);

        $r56 = virtualinvoke $r55.<java.lang.Class: java.lang.Object newInstance()>();

        r472 = (org.quartz.spi.JobStore) $r56;

     label052:
        goto label054;

     label053:
        $r422 := @caughtexception;

        $r423 = new org.quartz.SchedulerException;

        $r424 = new java.lang.StringBuilder;

        specialinvoke $r424.<java.lang.StringBuilder: void <init>()>();

        $r425 = virtualinvoke $r424.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobStore class \'");

        $r426 = virtualinvoke $r425.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r471);

        $r427 = virtualinvoke $r426.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be instantiated.");

        $r428 = virtualinvoke $r427.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r423.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r428, $r422);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r423;

        $r429 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r429;

     label054:
        staticinvoke <org.quartz.impl.SchedulerDetailsSetter: void setDetails(java.lang.Object,java.lang.String,java.lang.String)>(r472, r4, r441);

        $r58 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        $r57 = newarray (java.lang.String)[1];

        $r57[0] = "org.quartz.jobStore.lockHandler";

        r474 = virtualinvoke $r58.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean,java.lang.String[])>("org.quartz.jobStore", 1, $r57);

     label055:
        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void setBeanProps(java.lang.Object,java.util.Properties)>(r472, r474);

     label056:
        goto label058;

     label057:
        $r273 := @caughtexception;

        $r274 = new org.quartz.SchedulerException;

        $r275 = new java.lang.StringBuilder;

        specialinvoke $r275.<java.lang.StringBuilder: void <init>()>();

        $r276 = virtualinvoke $r275.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobStore class \'");

        $r277 = virtualinvoke $r276.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r471);

        $r278 = virtualinvoke $r277.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' props could not be configured.");

        $r279 = virtualinvoke $r278.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r274.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r279, $r273);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r274;

        $r280 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r280;

     label058:
        $z10 = r472 instanceof org.quartz.impl.jdbcjobstore.JobStoreSupport;

        if $z10 == 0 goto label066;

        $r212 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r476 = virtualinvoke $r212.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("org.quartz.jobStore.lockHandler.class");

        if r476 == null goto label066;

     label059:
        $r213 = interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: java.lang.Class loadClass(java.lang.String)>(r476);

        $r214 = virtualinvoke $r213.<java.lang.Class: java.lang.Object newInstance()>();

        r477 = (org.quartz.impl.jdbcjobstore.Semaphore) $r214;

        $r215 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r478 = virtualinvoke $r215.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean)>("org.quartz.jobStore.lockHandler", 1);

        $z18 = r477 instanceof org.quartz.impl.jdbcjobstore.TablePrefixAware;

        if $z18 == 0 goto label060;

        $r222 = (org.quartz.impl.jdbcjobstore.JobStoreSupport) r472;

        $r223 = virtualinvoke $r222.<org.quartz.impl.jdbcjobstore.JobStoreSupport: java.lang.String getTablePrefix()>();

        virtualinvoke r478.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("tablePrefix", $r223);

        virtualinvoke r478.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("schedName", r4);

     label060:
        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void setBeanProps(java.lang.Object,java.util.Properties)>(r477, r478);

     label061:
        goto label063;

     label062:
        $r281 := @caughtexception;

        $r282 = new org.quartz.SchedulerException;

        $r283 = new java.lang.StringBuilder;

        specialinvoke $r283.<java.lang.StringBuilder: void <init>()>();

        $r284 = virtualinvoke $r283.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobStore LockHandler class \'");

        $r285 = virtualinvoke $r284.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r476);

        $r286 = virtualinvoke $r285.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' props could not be configured.");

        $r287 = virtualinvoke $r286.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r282.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r287, $r281);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r282;

        $r288 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r288;

     label063:
        $r216 = (org.quartz.impl.jdbcjobstore.JobStoreSupport) r472;

        virtualinvoke $r216.<org.quartz.impl.jdbcjobstore.JobStoreSupport: void setLockHandler(org.quartz.impl.jdbcjobstore.Semaphore)>(r477);

        $r217 = virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger getLog()>();

        $r218 = new java.lang.StringBuilder;

        specialinvoke $r218.<java.lang.StringBuilder: void <init>()>();

        $r219 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using custom data access locking (synchronization): ");

        $r220 = virtualinvoke $r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r476);

        $r221 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r217.<org.slf4j.Logger: void info(java.lang.String)>($r221);

     label064:
        goto label066;

     label065:
        $r414 := @caughtexception;

        $r415 = new org.quartz.SchedulerException;

        $r416 = new java.lang.StringBuilder;

        specialinvoke $r416.<java.lang.StringBuilder: void <init>()>();

        $r417 = virtualinvoke $r416.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobStore LockHandler class \'");

        $r418 = virtualinvoke $r417.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r476);

        $r419 = virtualinvoke $r418.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be instantiated.");

        $r420 = virtualinvoke $r419.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r415.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r420, $r414);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r415;

        $r421 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r421;

     label066:
        $r481 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r482 = virtualinvoke $r481.<org.quartz.utils.PropertiesParser: java.lang.String[] getPropertyGroups(java.lang.String)>("org.quartz.dataSource");

        i19 = 0;

     label067:
        $i20 = lengthof r482;

        if i19 >= $i20 goto label095;

        $r180 = new org.quartz.utils.PropertiesParser;

        $r182 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        $r181 = new java.lang.StringBuilder;

        specialinvoke $r181.<java.lang.StringBuilder: void <init>()>();

        $r183 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.quartz.dataSource.");

        $r184 = r482[i19];

        $r185 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r184);

        $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.String toString()>();

        $r187 = virtualinvoke $r182.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean)>($r186, 1);

        specialinvoke $r180.<org.quartz.utils.PropertiesParser: void <init>(java.util.Properties)>($r187);

        r484 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("connectionProvider.class", null);

        if r484 == null goto label077;

     label068:
        $r205 = interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: java.lang.Class loadClass(java.lang.String)>(r484);

        $r206 = virtualinvoke $r205.<java.lang.Class: java.lang.Object newInstance()>();

        r485 = (org.quartz.utils.ConnectionProvider) $r206;

     label069:
        goto label071;

     label070:
        $r245 := @caughtexception;

        $r246 = new org.quartz.SchedulerException;

        $r247 = new java.lang.StringBuilder;

        specialinvoke $r247.<java.lang.StringBuilder: void <init>()>();

        $r248 = virtualinvoke $r247.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConnectionProvider class \'");

        $r249 = virtualinvoke $r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r484);

        $r250 = virtualinvoke $r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be instantiated.");

        $r251 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r246.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r251, $r245);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r246;

        $r252 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r252;

     label071:
        $r207 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.util.Properties getUnderlyingProperties()>();

        virtualinvoke $r207.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("connectionProvider.class");

        $z17 = r485 instanceof org.quartz.utils.PoolingConnectionProvider;

        if $z17 == 0 goto label072;

        $r210 = (org.quartz.utils.PoolingConnectionProvider) r485;

        $r211 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.util.Properties getUnderlyingProperties()>();

        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void populateProviderWithExtraProps(org.quartz.utils.PoolingConnectionProvider,java.util.Properties)>($r210, $r211);

        goto label073;

     label072:
        $r208 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.util.Properties getUnderlyingProperties()>();

        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void setBeanProps(java.lang.Object,java.util.Properties)>(r485, $r208);

     label073:
        interfaceinvoke r485.<org.quartz.utils.ConnectionProvider: void initialize()>();

     label074:
        goto label076;

     label075:
        $r324 := @caughtexception;

        $r325 = new org.quartz.SchedulerException;

        $r326 = new java.lang.StringBuilder;

        specialinvoke $r326.<java.lang.StringBuilder: void <init>()>();

        $r327 = virtualinvoke $r326.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConnectionProvider class \'");

        $r328 = virtualinvoke $r327.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r484);

        $r329 = virtualinvoke $r328.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' props could not be configured.");

        $r330 = virtualinvoke $r329.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r325.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r330, $r324);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r325;

        $r331 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r331;

     label076:
        r439 = staticinvoke <org.quartz.utils.DBConnectionManager: org.quartz.utils.DBConnectionManager getInstance()>();

        $r209 = r482[i19];

        virtualinvoke r439.<org.quartz.utils.DBConnectionManager: void addConnectionProvider(java.lang.String,org.quartz.utils.ConnectionProvider)>($r209, r485);

        goto label094;

     label077:
        r488 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("jndiURL", null);

        if r488 == null goto label083;

        z22 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String)>("jndiAlwaysLookup");

        r489 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("java.naming.factory.initial");

        r490 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("java.naming.provider.url");

        r491 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("java.naming.security.principal");

        r492 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("java.naming.security.credentials");

        r493 = null;

        if null != r489 goto label078;

        if null != r490 goto label078;

        if null != r491 goto label078;

        if null == r492 goto label082;

     label078:
        $r494 = new java.util.Properties;

        specialinvoke $r494.<java.util.Properties: void <init>()>();

        r493 = $r494;

        if r489 == null goto label079;

        virtualinvoke $r494.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.initial", r489);

     label079:
        if r490 == null goto label080;

        virtualinvoke $r494.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.provider.url", r490);

     label080:
        if r491 == null goto label081;

        virtualinvoke $r494.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.principal", r491);

     label081:
        if r492 == null goto label082;

        virtualinvoke $r494.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.credentials", r492);

     label082:
        $r495 = new org.quartz.utils.JNDIConnectionProvider;

        specialinvoke $r495.<org.quartz.utils.JNDIConnectionProvider: void <init>(java.lang.String,java.util.Properties,boolean)>(r488, r493, z22);

        r439 = staticinvoke <org.quartz.utils.DBConnectionManager: org.quartz.utils.DBConnectionManager getInstance()>();

        $r497 = r482[i19];

        virtualinvoke r439.<org.quartz.utils.DBConnectionManager: void addConnectionProvider(java.lang.String,org.quartz.utils.ConnectionProvider)>($r497, $r495);

        goto label094;

     label083:
        r498 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("provider");

        r499 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("driver");

        r500 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("URL");

        if r499 != null goto label084;

        $r198 = new org.quartz.SchedulerException;

        $r199 = new java.lang.StringBuilder;

        specialinvoke $r199.<java.lang.StringBuilder: void <init>()>();

        $r200 = virtualinvoke $r199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Driver not specified for DataSource: ");

        $r201 = r482[i19];

        $r202 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r201);

        $r203 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r198.<org.quartz.SchedulerException: void <init>(java.lang.String)>($r203);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r198;

        $r204 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r204;

     label084:
        if r500 != null goto label085;

        $r191 = new org.quartz.SchedulerException;

        $r192 = new java.lang.StringBuilder;

        specialinvoke $r192.<java.lang.StringBuilder: void <init>()>();

        $r193 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DB URL not specified for DataSource: ");

        $r194 = r482[i19];

        $r195 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r194);

        $r196 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r191.<org.quartz.SchedulerException: void <init>(java.lang.String)>($r196);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r191;

        $r197 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r197;

     label085:
        if r498 == null goto label086;

        $z16 = virtualinvoke r498.<java.lang.String: boolean equals(java.lang.Object)>("hikaricp");

        if $z16 == 0 goto label086;

        r501 = "org.quartz.utils.HikariCpPoolingConnectionProvider";

        goto label087;

     label086:
        r501 = "org.quartz.utils.C3p0PoolingConnectionProvider";

     label087:
        $r502 = r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger log>;

        $r503 = new java.lang.StringBuilder;

        specialinvoke $r503.<java.lang.StringBuilder: void <init>()>();

        $r504 = virtualinvoke $r503.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using ConnectionProvider class \'");

        $r505 = virtualinvoke $r504.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r501);

        $r506 = virtualinvoke $r505.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for data source \'");

        $r507 = r482[i19];

        $r508 = virtualinvoke $r506.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r507);

        $r509 = virtualinvoke $r508.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r510 = virtualinvoke $r509.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r502.<org.slf4j.Logger: void info(java.lang.String)>($r510);

     label088:
        $r511 = interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: java.lang.Class loadClass(java.lang.String)>(r501);

        $r512 = newarray (java.lang.Class)[1];

        $r512[0] = class "Ljava/util/Properties;";

        r513 = virtualinvoke $r511.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r512);

        $r514 = newarray (java.lang.Object)[1];

        $r515 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.util.Properties getUnderlyingProperties()>();

        $r514[0] = $r515;

        $r516 = virtualinvoke r513.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r514);

        r517 = (org.quartz.utils.ConnectionProvider) $r516;

     label089:
        goto label091;

     label090:
        $r430 := @caughtexception;

        $r431 = new org.quartz.SchedulerException;

        $r432 = new java.lang.StringBuilder;

        specialinvoke $r432.<java.lang.StringBuilder: void <init>()>();

        $r433 = virtualinvoke $r432.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConnectionProvider class \'");

        $r434 = virtualinvoke $r433.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r501);

        $r435 = virtualinvoke $r434.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be instantiated.");

        $r436 = virtualinvoke $r435.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r431.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r436, $r430);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r431;

        $r437 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r437;

     label091:
        r439 = staticinvoke <org.quartz.utils.DBConnectionManager: org.quartz.utils.DBConnectionManager getInstance()>();

        $r188 = r482[i19];

        virtualinvoke r439.<org.quartz.utils.DBConnectionManager: void addConnectionProvider(java.lang.String,org.quartz.utils.ConnectionProvider)>($r188, r517);

        $r189 = (org.quartz.utils.PoolingConnectionProvider) r517;

        $r190 = virtualinvoke $r180.<org.quartz.utils.PropertiesParser: java.util.Properties getUnderlyingProperties()>();

        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void populateProviderWithExtraProps(org.quartz.utils.PoolingConnectionProvider,java.util.Properties)>($r189, $r190);

     label092:
        goto label094;

     label093:
        $r390 := @caughtexception;

        $r391 = new org.quartz.SchedulerException;

        $r392 = new java.lang.StringBuilder;

        specialinvoke $r392.<java.lang.StringBuilder: void <init>()>();

        $r393 = virtualinvoke $r392.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not initialize DataSource: ");

        $r394 = r482[i19];

        $r395 = virtualinvoke $r393.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r394);

        $r396 = virtualinvoke $r395.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r391.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r396, $r390);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r391;

        $r397 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r397;

     label094:
        i19 = i19 + 1;

        goto label067;

     label095:
        $r59 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r520 = virtualinvoke $r59.<org.quartz.utils.PropertiesParser: java.lang.String[] getPropertyGroups(java.lang.String)>("org.quartz.plugin");

        $i5 = lengthof r520;

        r521 = newarray (org.quartz.spi.SchedulerPlugin)[$i5];

        i21 = 0;

     label096:
        $i6 = lengthof r520;

        if i21 >= $i6 goto label104;

        $r165 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        $r164 = new java.lang.StringBuilder;

        specialinvoke $r164.<java.lang.StringBuilder: void <init>()>();

        $r166 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.quartz.plugin.");

        $r167 = r520[i21];

        $r168 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r167);

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.String toString()>();

        r522 = virtualinvoke $r165.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean)>($r169, 1);

        r523 = virtualinvoke r522.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>("class", null);

        if r523 != null goto label097;

        $r172 = new org.quartz.SchedulerException;

        $r173 = new java.lang.StringBuilder;

        specialinvoke $r173.<java.lang.StringBuilder: void <init>()>();

        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SchedulerPlugin class not specified for plugin \'");

        $r175 = r520[i21];

        $r176 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r175);

        $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r172.<org.quartz.SchedulerException: void <init>(java.lang.String)>($r178);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r172;

        $r179 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r179;

     label097:
        $r170 = interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: java.lang.Class loadClass(java.lang.String)>(r523);

        $r171 = virtualinvoke $r170.<java.lang.Class: java.lang.Object newInstance()>();

        r524 = (org.quartz.spi.SchedulerPlugin) $r171;

     label098:
        goto label100;

     label099:
        $r339 := @caughtexception;

        $r340 = new org.quartz.SchedulerException;

        $r341 = new java.lang.StringBuilder;

        specialinvoke $r341.<java.lang.StringBuilder: void <init>()>();

        $r342 = virtualinvoke $r341.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SchedulerPlugin class \'");

        $r343 = virtualinvoke $r342.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r523);

        $r344 = virtualinvoke $r343.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be instantiated.");

        $r345 = virtualinvoke $r344.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r340.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r345, $r339);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r340;

        $r346 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r346;

     label100:
        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void setBeanProps(java.lang.Object,java.util.Properties)>(r524, r522);

     label101:
        goto label103;

     label102:
        $r306 := @caughtexception;

        $r307 = new org.quartz.SchedulerException;

        $r308 = new java.lang.StringBuilder;

        specialinvoke $r308.<java.lang.StringBuilder: void <init>()>();

        $r309 = virtualinvoke $r308.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobStore SchedulerPlugin \'");

        $r310 = virtualinvoke $r309.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r523);

        $r311 = virtualinvoke $r310.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' props could not be configured.");

        $r312 = virtualinvoke $r311.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r307.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r312, $r306);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r307;

        $r313 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r313;

     label103:
        r521[i21] = r524;

        i21 = i21 + 1;

        goto label096;

     label104:
        $r60 = newarray (java.lang.Class)[1];

        $r60[0] = class "Ljava/lang/String;";

        $r61 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r528 = virtualinvoke $r61.<org.quartz.utils.PropertiesParser: java.lang.String[] getPropertyGroups(java.lang.String)>("org.quartz.jobListener");

        $i7 = lengthof r528;

        r529 = newarray (org.quartz.JobListener)[$i7];

        i22 = 0;

     label105:
        $i8 = lengthof r528;

        if i22 >= $i8 goto label118;

        $r146 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        $r145 = new java.lang.StringBuilder;

        specialinvoke $r145.<java.lang.StringBuilder: void <init>()>();

        $r147 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.quartz.jobListener.");

        $r148 = r528[i22];

        $r149 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r148);

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.String toString()>();

        r530 = virtualinvoke $r146.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean)>($r150, 1);

        r531 = virtualinvoke r530.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>("class", null);

        if r531 != null goto label106;

        $r156 = new org.quartz.SchedulerException;

        $r157 = new java.lang.StringBuilder;

        specialinvoke $r157.<java.lang.StringBuilder: void <init>()>();

        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobListener class not specified for listener \'");

        $r159 = r528[i22];

        $r160 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r159);

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r156.<org.quartz.SchedulerException: void <init>(java.lang.String)>($r162);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r156;

        $r163 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r163;

     label106:
        $r151 = interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: java.lang.Class loadClass(java.lang.String)>(r531);

        $r152 = virtualinvoke $r151.<java.lang.Class: java.lang.Object newInstance()>();

        r532 = (org.quartz.JobListener) $r152;

     label107:
        goto label109;

     label108:
        $r363 := @caughtexception;

        $r364 = new org.quartz.SchedulerException;

        $r365 = new java.lang.StringBuilder;

        specialinvoke $r365.<java.lang.StringBuilder: void <init>()>();

        $r366 = virtualinvoke $r365.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobListener class \'");

        $r367 = virtualinvoke $r366.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r531);

        $r368 = virtualinvoke $r367.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be instantiated.");

        $r369 = virtualinvoke $r368.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r364.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r369, $r363);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r364;

        $r370 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r370;

     label109:
        r534 = null;

     label110:
        $r153 = virtualinvoke r532.<java.lang.Object: java.lang.Class getClass()>();

        r534 = virtualinvoke $r153.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setName", $r60);

     label111:
        goto label113;

     label112:
        $r322 := @caughtexception;

     label113:
        if r534 == null goto label114;

        $r154 = newarray (java.lang.Object)[1];

        $r155 = r528[i22];

        $r154[0] = $r155;

        virtualinvoke r534.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r532, $r154);

     label114:
        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void setBeanProps(java.lang.Object,java.util.Properties)>(r532, r530);

     label115:
        goto label117;

     label116:
        $r355 := @caughtexception;

        $r356 = new org.quartz.SchedulerException;

        $r357 = new java.lang.StringBuilder;

        specialinvoke $r357.<java.lang.StringBuilder: void <init>()>();

        $r358 = virtualinvoke $r357.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobListener \'");

        $r359 = virtualinvoke $r358.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r531);

        $r360 = virtualinvoke $r359.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' props could not be configured.");

        $r361 = virtualinvoke $r360.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r356.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r361, $r355);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r356;

        $r362 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r362;

     label117:
        r529[i22] = r532;

        i22 = i22 + 1;

        goto label105;

     label118:
        $r62 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r536 = virtualinvoke $r62.<org.quartz.utils.PropertiesParser: java.lang.String[] getPropertyGroups(java.lang.String)>("org.quartz.triggerListener");

        $i9 = lengthof r536;

        r537 = newarray (org.quartz.TriggerListener)[$i9];

        i23 = 0;

     label119:
        $i10 = lengthof r536;

        if i23 >= $i10 goto label132;

        $r127 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        $r126 = new java.lang.StringBuilder;

        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();

        $r128 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.quartz.triggerListener.");

        $r129 = r536[i23];

        $r130 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>();

        r538 = virtualinvoke $r127.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean)>($r131, 1);

        r539 = virtualinvoke r538.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>("class", null);

        if r539 != null goto label120;

        $r137 = new org.quartz.SchedulerException;

        $r138 = new java.lang.StringBuilder;

        specialinvoke $r138.<java.lang.StringBuilder: void <init>()>();

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TriggerListener class not specified for listener \'");

        $r140 = r536[i23];

        $r141 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r140);

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r137.<org.quartz.SchedulerException: void <init>(java.lang.String)>($r143);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r137;

        $r144 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r144;

     label120:
        $r132 = interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: java.lang.Class loadClass(java.lang.String)>(r539);

        $r133 = virtualinvoke $r132.<java.lang.Class: java.lang.Object newInstance()>();

        r540 = (org.quartz.TriggerListener) $r133;

     label121:
        goto label123;

     label122:
        $r253 := @caughtexception;

        $r254 = new org.quartz.SchedulerException;

        $r255 = new java.lang.StringBuilder;

        specialinvoke $r255.<java.lang.StringBuilder: void <init>()>();

        $r256 = virtualinvoke $r255.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TriggerListener class \'");

        $r257 = virtualinvoke $r256.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r539);

        $r258 = virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be instantiated.");

        $r259 = virtualinvoke $r258.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r254.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r259, $r253);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r254;

        $r260 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r260;

     label123:
        r542 = null;

     label124:
        $r134 = virtualinvoke r540.<java.lang.Object: java.lang.Class getClass()>();

        r542 = virtualinvoke $r134.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setName", $r60);

     label125:
        goto label127;

     label126:
        $r261 := @caughtexception;

     label127:
        if r542 == null goto label128;

        $r135 = newarray (java.lang.Object)[1];

        $r136 = r536[i23];

        $r135[0] = $r136;

        virtualinvoke r542.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r540, $r135);

     label128:
        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void setBeanProps(java.lang.Object,java.util.Properties)>(r540, r538);

     label129:
        goto label131;

     label130:
        $r398 := @caughtexception;

        $r399 = new org.quartz.SchedulerException;

        $r400 = new java.lang.StringBuilder;

        specialinvoke $r400.<java.lang.StringBuilder: void <init>()>();

        $r401 = virtualinvoke $r400.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TriggerListener \'");

        $r402 = virtualinvoke $r401.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r539);

        $r403 = virtualinvoke $r402.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' props could not be configured.");

        $r404 = virtualinvoke $r403.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r399.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r404, $r398);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r399;

        $r405 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r405;

     label131:
        r537[i23] = r540;

        i23 = i23 + 1;

        goto label119;

     label132:
        z23 = 0;

        z24 = 0;

        $r63 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r544 = virtualinvoke $r63.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("org.quartz.threadExecutor.class");

        if r544 == null goto label136;

        $r118 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        r545 = virtualinvoke $r118.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean)>("org.quartz.threadExecutor", 1);

     label133:
        $r119 = interfaceinvoke r452.<org.quartz.spi.ClassLoadHelper: java.lang.Class loadClass(java.lang.String)>(r544);

        $r120 = virtualinvoke $r119.<java.lang.Class: java.lang.Object newInstance()>();

        r546 = (org.quartz.spi.ThreadExecutor) $r120;

        $r122 = r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger log>;

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r123 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using custom implementation for ThreadExecutor: ");

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r544);

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r122.<org.slf4j.Logger: void info(java.lang.String)>($r125);

        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void setBeanProps(java.lang.Object,java.util.Properties)>(r546, r545);

     label134:
        goto label137;

     label135:
        $r262 := @caughtexception;

        $r263 = new org.quartz.SchedulerException;

        $r264 = new java.lang.StringBuilder;

        specialinvoke $r264.<java.lang.StringBuilder: void <init>()>();

        $r265 = virtualinvoke $r264.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreadExecutor class \'");

        $r266 = virtualinvoke $r265.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r544);

        $r267 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be instantiated.");

        $r268 = virtualinvoke $r267.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r263.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>($r268, $r262);

        r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException> = $r263;

        $r269 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.SchedulerException initException>;

        throw $r269;

     label136:
        $r64 = r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger log>;

        interfaceinvoke $r64.<org.slf4j.Logger: void info(java.lang.String)>("Using default implementation for ThreadExecutor");

        $r65 = new org.quartz.impl.DefaultThreadExecutor;

        specialinvoke $r65.<org.quartz.impl.DefaultThreadExecutor: void <init>()>();

        r546 = $r65;

     label137:
        if r443 == null goto label138;

        staticinvoke <org.quartz.ee.jta.UserTransactionHelper: void setUserTxLocation(java.lang.String)>(r443);

     label138:
        if z20 == 0 goto label139;

        $r117 = new org.quartz.ee.jta.JTAJobRunShellFactory;

        specialinvoke $r117.<org.quartz.ee.jta.JTAJobRunShellFactory: void <init>()>();

        r548 = $r117;

        goto label140;

     label139:
        $r66 = new org.quartz.ee.jta.JTAAnnotationAwareJobRunShellFactory;

        specialinvoke $r66.<org.quartz.ee.jta.JTAAnnotationAwareJobRunShellFactory: void <init>()>();

        r548 = $r66;

     label140:
        if z19 == 0 goto label144;

     label141:
        r441 = "NON_CLUSTERED";

        $z15 = interfaceinvoke r472.<org.quartz.spi.JobStore: boolean isClustered()>();

        if $z15 == 0 goto label142;

        r441 = interfaceinvoke r462.<org.quartz.spi.InstanceIdGenerator: java.lang.String generateInstanceId()>();

     label142:
        goto label144;

     label143:
        $r270 := @caughtexception;

        $r271 = virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger getLog()>();

        interfaceinvoke $r271.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Couldn\'t generate instance Id!", $r270);

        $r272 = new java.lang.IllegalStateException;

        specialinvoke $r272.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot run without an instance id.");

        throw $r272;

     label144:
        $r67 = virtualinvoke r472.<java.lang.Object: java.lang.Class getClass()>();

        $r68 = virtualinvoke $r67.<java.lang.Class: java.lang.String getName()>();

        $z11 = virtualinvoke $r68.<java.lang.String: boolean startsWith(java.lang.String)>("org.terracotta.quartz");

        if $z11 == 0 goto label150;

     label145:
        $r102 = virtualinvoke r472.<java.lang.Object: java.lang.Class getClass()>();

        $r103 = newarray (java.lang.Class)[0];

        $r104 = virtualinvoke $r102.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getUUID", $r103);

        $r105 = newarray (java.lang.Object)[0];

        $r106 = virtualinvoke $r104.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r472, $r105);

        r550 = (java.lang.String) $r106;

        $z14 = virtualinvoke r441.<java.lang.String: boolean equals(java.lang.Object)>("NON_CLUSTERED");

        if $z14 == 0 goto label146;

        $r114 = new java.lang.StringBuilder;

        specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TERRACOTTA_CLUSTERED,node=");

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r550);

        r441 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();

        if r448 != null goto label147;

        r448 = staticinvoke <org.quartz.core.QuartzSchedulerResources: java.lang.String generateJMXObjectName(java.lang.String,java.lang.String)>(r4, r441);

        goto label147;

     label146:
        if r448 != null goto label147;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r441);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",node=");

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r550);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        r448 = staticinvoke <org.quartz.core.QuartzSchedulerResources: java.lang.String generateJMXObjectName(java.lang.String,java.lang.String)>(r4, $r113);

     label147:
        goto label149;

     label148:
        $r304 := @caughtexception;

        $r305 = new java.lang.RuntimeException;

        specialinvoke $r305.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Problem obtaining node id from TerracottaJobStore.", $r304);

        throw $r305;

     label149:
        $r107 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        $r108 = virtualinvoke $r107.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>("org.quartz.scheduler.jmx.export");

        if null != $r108 goto label150;

        z21 = 1;

     label150:
        $z25 = r472 instanceof org.quartz.impl.jdbcjobstore.JobStoreSupport;

        if $z25 == 0 goto label152;

        r552 = (org.quartz.impl.jdbcjobstore.JobStoreSupport) r472;

        virtualinvoke r552.<org.quartz.impl.jdbcjobstore.JobStoreSupport: void setDbRetryInterval(long)>(l18);

        if z1 == 0 goto label151;

        virtualinvoke r552.<org.quartz.impl.jdbcjobstore.JobStoreSupport: void setThreadsInheritInitializersClassLoadContext(boolean)>(z1);

     label151:
        virtualinvoke r552.<org.quartz.impl.jdbcjobstore.JobStoreSupport: void setThreadExecutor(org.quartz.spi.ThreadExecutor)>(r546);

     label152:
        $r553 = new org.quartz.core.QuartzSchedulerResources;

        specialinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void <init>()>();

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setName(java.lang.String)>(r4);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setThreadName(java.lang.String)>(r5);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setInstanceId(java.lang.String)>(r441);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setJobRunShellFactory(org.quartz.core.JobRunShellFactory)>(r548);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setMakeSchedulerThreadDaemon(boolean)>(z0);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setThreadsInheritInitializersClassLoadContext(boolean)>(z1);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setBatchTimeWindow(long)>(l0);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setMaxBatchSize(int)>(i1);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setInterruptJobsOnShutdown(boolean)>(z2);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setInterruptJobsOnShutdownWithWait(boolean)>(z3);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setJMXExport(boolean)>(z21);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setJMXObjectName(java.lang.String)>(r448);

        if z7 == 0 goto label153;

        $r101 = new org.quartz.management.ManagementRESTServiceConfiguration;

        specialinvoke $r101.<org.quartz.management.ManagementRESTServiceConfiguration: void <init>()>();

        virtualinvoke $r101.<org.quartz.management.ManagementRESTServiceConfiguration: void setBind(java.lang.String)>(r10);

        virtualinvoke $r101.<org.quartz.management.ManagementRESTServiceConfiguration: void setEnabled(boolean)>(z7);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setManagementRESTServiceConfiguration(org.quartz.management.ManagementRESTServiceConfiguration)>($r101);

     label153:
        if z5 == 0 goto label154;

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setRMIRegistryHost(java.lang.String)>(r7);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setRMIRegistryPort(int)>(i2);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setRMIServerPort(int)>(i3);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setRMICreateRegistryStrategy(java.lang.String)>(r8);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setRMIBindName(java.lang.String)>(r9);

     label154:
        staticinvoke <org.quartz.impl.SchedulerDetailsSetter: void setDetails(java.lang.Object,java.lang.String,java.lang.String)>(r467, r4, r441);

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setThreadExecutor(org.quartz.spi.ThreadExecutor)>(r546);

        interfaceinvoke r546.<org.quartz.spi.ThreadExecutor: void initialize()>();

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setThreadPool(org.quartz.spi.ThreadPool)>(r467);

        $z12 = r467 instanceof org.quartz.simpl.SimpleThreadPool;

        if $z12 == 0 goto label155;

        if z1 == 0 goto label155;

        $r100 = (org.quartz.simpl.SimpleThreadPool) r467;

        virtualinvoke $r100.<org.quartz.simpl.SimpleThreadPool: void setThreadsInheritContextClassLoaderOfInitializingThread(boolean)>(z1);

     label155:
        interfaceinvoke r467.<org.quartz.spi.ThreadPool: void initialize()>();

        z23 = 1;

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void setJobStore(org.quartz.spi.JobStore)>(r472);

        i24 = 0;

     label156:
        $i25 = lengthof r521;

        if i24 >= $i25 goto label157;

        $r99 = r521[i24];

        virtualinvoke $r553.<org.quartz.core.QuartzSchedulerResources: void addSchedulerPlugin(org.quartz.spi.SchedulerPlugin)>($r99);

        i24 = i24 + 1;

        goto label156;

     label157:
        $r69 = new org.quartz.core.QuartzScheduler;

        specialinvoke $r69.<org.quartz.core.QuartzScheduler: void <init>(org.quartz.core.QuartzSchedulerResources,long,long)>($r553, l16, l18);

        r438 = $r69;

        z24 = 1;

        r556 = virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler instantiate(org.quartz.core.QuartzSchedulerResources,org.quartz.core.QuartzScheduler)>($r553, $r69);

        if r458 == null goto label158;

        virtualinvoke $r69.<org.quartz.core.QuartzScheduler: void setJobFactory(org.quartz.spi.JobFactory)>(r458);

     label158:
        i26 = 0;

     label159:
        $i27 = lengthof r521;

        if i26 >= $i27 goto label160;

        $r98 = r521[i26];

        $r97 = r520[i26];

        interfaceinvoke $r98.<org.quartz.spi.SchedulerPlugin: void initialize(java.lang.String,org.quartz.Scheduler,org.quartz.spi.ClassLoadHelper)>($r97, r556, r452);

        i26 = i26 + 1;

        goto label159;

     label160:
        i28 = 0;

     label161:
        $i11 = lengthof r529;

        if i28 >= $i11 goto label162;

        $r94 = virtualinvoke $r69.<org.quartz.core.QuartzScheduler: org.quartz.ListenerManager getListenerManager()>();

        $r95 = r529[i28];

        $r96 = staticinvoke <org.quartz.impl.matchers.EverythingMatcher: org.quartz.impl.matchers.EverythingMatcher allJobs()>();

        interfaceinvoke $r94.<org.quartz.ListenerManager: void addJobListener(org.quartz.JobListener,org.quartz.Matcher)>($r95, $r96);

        i28 = i28 + 1;

        goto label161;

     label162:
        i29 = 0;

     label163:
        $i12 = lengthof r537;

        if i29 >= $i12 goto label164;

        $r91 = virtualinvoke $r69.<org.quartz.core.QuartzScheduler: org.quartz.ListenerManager getListenerManager()>();

        $r92 = r537[i29];

        $r93 = staticinvoke <org.quartz.impl.matchers.EverythingMatcher: org.quartz.impl.matchers.EverythingMatcher allTriggers()>();

        interfaceinvoke $r91.<org.quartz.ListenerManager: void addTriggerListener(org.quartz.TriggerListener,org.quartz.Matcher)>($r92, $r93);

        i29 = i29 + 1;

        goto label163;

     label164:
        $r70 = virtualinvoke r11.<java.util.Properties: java.util.Set keySet()>();

        r557 = interfaceinvoke $r70.<java.util.Set: java.util.Iterator iterator()>();

     label165:
        $z13 = interfaceinvoke r557.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label166;

        r12 = interfaceinvoke r557.<java.util.Iterator: java.lang.Object next()>();

        $r88 = (java.lang.String) r12;

        r13 = virtualinvoke r11.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r88);

        $r89 = interfaceinvoke r556.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>();

        $r90 = (java.lang.String) r12;

        virtualinvoke $r89.<org.quartz.SchedulerContext: void put(java.lang.String,java.lang.String)>($r90, r13);

        goto label165;

     label166:
        interfaceinvoke r472.<org.quartz.spi.JobStore: void setInstanceId(java.lang.String)>(r441);

        interfaceinvoke r472.<org.quartz.spi.JobStore: void setInstanceName(java.lang.String)>(r4);

        $i13 = interfaceinvoke r467.<org.quartz.spi.ThreadPool: int getPoolSize()>();

        interfaceinvoke r472.<org.quartz.spi.JobStore: void setThreadPoolSize(int)>($i13);

        $r71 = virtualinvoke $r69.<org.quartz.core.QuartzScheduler: org.quartz.spi.SchedulerSignaler getSchedulerSignaler()>();

        interfaceinvoke r472.<org.quartz.spi.JobStore: void initialize(org.quartz.spi.ClassLoadHelper,org.quartz.spi.SchedulerSignaler)>(r452, $r71);

        interfaceinvoke r548.<org.quartz.core.JobRunShellFactory: void initialize(org.quartz.Scheduler)>(r556);

        virtualinvoke $r69.<org.quartz.core.QuartzScheduler: void initialize()>();

        $r72 = virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger getLog()>();

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Quartz scheduler \'");

        $r75 = interfaceinvoke r556.<org.quartz.Scheduler: java.lang.String getSchedulerName()>();

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' initialized from ");

        $r78 = r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String propSrc>;

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r72.<org.slf4j.Logger: void info(java.lang.String)>($r80);

        $r81 = virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger getLog()>();

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Quartz scheduler version: ");

        $r84 = virtualinvoke $r69.<org.quartz.core.QuartzScheduler: java.lang.String getVersion()>();

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r81.<org.slf4j.Logger: void info(java.lang.String)>($r86);

        virtualinvoke $r69.<org.quartz.core.QuartzScheduler: void addNoGCObject(java.lang.Object)>(r3);

        if r439 == null goto label167;

        virtualinvoke $r69.<org.quartz.core.QuartzScheduler: void addNoGCObject(java.lang.Object)>(r439);

     label167:
        virtualinvoke r3.<org.quartz.impl.SchedulerRepository: void bind(org.quartz.Scheduler)>(r556);

     label168:
        return r556;

     label169:
        $r323 := @caughtexception;

        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void shutdownFromInstantiateException(org.quartz.spi.ThreadPool,org.quartz.core.QuartzScheduler,boolean,boolean)>(r467, r438, z23, z24);

        throw $r323;

     label170:
        $r378 := @caughtexception;

        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void shutdownFromInstantiateException(org.quartz.spi.ThreadPool,org.quartz.core.QuartzScheduler,boolean,boolean)>(r467, r438, z23, z24);

        throw $r378;

     label171:
        $r387 := @caughtexception;

        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void shutdownFromInstantiateException(org.quartz.spi.ThreadPool,org.quartz.core.QuartzScheduler,boolean,boolean)>(r467, r438, z23, z24);

        throw $r387;

        catch java.lang.Exception from label012 to label013 with label014;
        catch java.lang.Exception from label017 to label018 with label019;
        catch java.lang.Exception from label022 to label023 with label024;
        catch java.lang.Exception from label027 to label028 with label029;
        catch java.lang.Exception from label031 to label032 with label033;
        catch java.lang.Exception from label035 to label036 with label037;
        catch java.lang.Exception from label039 to label040 with label041;
        catch java.lang.Exception from label043 to label044 with label045;
        catch java.lang.Exception from label047 to label048 with label049;
        catch java.lang.Exception from label051 to label052 with label053;
        catch java.lang.Exception from label055 to label056 with label057;
        catch java.lang.Exception from label060 to label061 with label062;
        catch java.lang.Exception from label059 to label064 with label065;
        catch java.lang.Exception from label068 to label069 with label070;
        catch java.lang.Exception from label071 to label074 with label075;
        catch java.lang.Exception from label088 to label089 with label090;
        catch java.lang.Exception from label088 to label092 with label093;
        catch java.lang.Exception from label097 to label098 with label099;
        catch java.lang.Exception from label100 to label101 with label102;
        catch java.lang.Exception from label106 to label107 with label108;
        catch java.lang.NoSuchMethodException from label110 to label111 with label112;
        catch java.lang.Exception from label109 to label115 with label116;
        catch java.lang.Exception from label120 to label121 with label122;
        catch java.lang.NoSuchMethodException from label124 to label125 with label126;
        catch java.lang.Exception from label123 to label129 with label130;
        catch java.lang.Exception from label133 to label134 with label135;
        catch java.lang.Exception from label141 to label142 with label143;
        catch java.lang.Exception from label145 to label147 with label148;
        catch org.quartz.SchedulerException from label137 to label168 with label169;
        catch java.lang.RuntimeException from label137 to label168 with label170;
        catch java.lang.Error from label137 to label168 with label171;
    }

    private void populateProviderWithExtraProps(org.quartz.utils.PoolingConnectionProvider, java.util.Properties) throws java.lang.Exception
    {
        org.quartz.impl.StdSchedulerFactory r0;
        org.quartz.utils.PoolingConnectionProvider r1;
        java.util.Properties r2, $r4;
        boolean $z0;
        javax.sql.DataSource $r12;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: org.quartz.utils.PoolingConnectionProvider;

        r2 := @parameter1: java.util.Properties;

        $r4 = new java.util.Properties;

        specialinvoke $r4.<java.util.Properties: void <init>()>();

        virtualinvoke $r4.<java.util.Properties: void putAll(java.util.Map)>(r2);

        virtualinvoke $r4.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("driver");

        virtualinvoke $r4.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("URL");

        virtualinvoke $r4.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("user");

        virtualinvoke $r4.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("password");

        virtualinvoke $r4.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("maxConnections");

        virtualinvoke $r4.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("validationQuery");

        virtualinvoke $r4.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("provider");

        $z0 = r1 instanceof org.quartz.utils.C3p0PoolingConnectionProvider;

        if $z0 == 0 goto label1;

        virtualinvoke $r4.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("maxCachedStatementsPerConnection");

        virtualinvoke $r4.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("validateOnCheckout");

        virtualinvoke $r4.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("idleConnectionValidationSeconds");

        virtualinvoke $r4.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("maxIdleTime");

     label1:
        $r12 = interfaceinvoke r1.<org.quartz.utils.PoolingConnectionProvider: javax.sql.DataSource getDataSource()>();

        specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: void setBeanProps(java.lang.Object,java.util.Properties)>($r12, $r4);

        return;
    }

    private void shutdownFromInstantiateException(org.quartz.spi.ThreadPool, org.quartz.core.QuartzScheduler, boolean, boolean)
    {
        org.quartz.impl.StdSchedulerFactory r0;
        org.quartz.spi.ThreadPool r1;
        org.quartz.core.QuartzScheduler r2;
        boolean z0, z1;
        java.lang.Exception $r4;
        org.slf4j.Logger $r5;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: org.quartz.spi.ThreadPool;

        r2 := @parameter1: org.quartz.core.QuartzScheduler;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

     label1:
        if z1 == 0 goto label2;

        virtualinvoke r2.<org.quartz.core.QuartzScheduler: void shutdown(boolean)>(0);

        goto label3;

     label2:
        if z0 == 0 goto label3;

        interfaceinvoke r1.<org.quartz.spi.ThreadPool: void shutdown(boolean)>(0);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: org.slf4j.Logger getLog()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Got another exception while shutting down after instantiation exception", $r4);

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    protected org.quartz.Scheduler instantiate(org.quartz.core.QuartzSchedulerResources, org.quartz.core.QuartzScheduler)
    {
        org.quartz.impl.StdSchedulerFactory r0;
        org.quartz.core.QuartzSchedulerResources r1;
        org.quartz.core.QuartzScheduler r2;
        org.quartz.impl.StdScheduler $r4;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: org.quartz.core.QuartzSchedulerResources;

        r2 := @parameter1: org.quartz.core.QuartzScheduler;

        $r4 = new org.quartz.impl.StdScheduler;

        specialinvoke $r4.<org.quartz.impl.StdScheduler: void <init>(org.quartz.core.QuartzScheduler)>(r2);

        return $r4;
    }

    private void setBeanProps(java.lang.Object, java.util.Properties) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.beans.IntrospectionException, org.quartz.SchedulerConfigException
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.lang.Object r1, $r15;
        java.util.Properties r2;
        java.beans.BeanInfo r3;
        java.beans.PropertyDescriptor[] r4;
        java.util.Enumeration r6;
        java.lang.String r7, r8, r9, $r16, $r21, $r37, $r39, $r61, $r67, $r74, $r76, r79, r80;
        java.lang.reflect.Method r10;
        java.lang.Class $r13, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r81, $r82;
        org.quartz.utils.PropertiesParser $r14, r78;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Locale $r17;
        java.lang.StringBuilder $r18, $r19, $r20, $r22, $r33, $r34, $r35, $r36, $r57, $r58, $r59, $r60, $r63, $r64, $r65, $r66, $r70, $r71, $r72, $r73, $r75;
        int $i0, $i2;
        java.lang.NoSuchMethodException $r32, $r56, $r62;
        java.lang.Object[] $r38, $r41, $r44, $r47, $r50, $r53;
        java.lang.Boolean $r42;
        double $d0;
        java.lang.Double $r45;
        float $f0;
        java.lang.Float $r48;
        long $l1;
        java.lang.Long $r51;
        java.lang.Integer $r54;
        java.lang.NumberFormatException $r68;
        org.quartz.SchedulerConfigException $r69;
        java.lang.Class[] r77;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Properties;

        virtualinvoke r2.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("class");

        virtualinvoke r2.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("provider");

        $r13 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r3 = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>($r13);

        r4 = interfaceinvoke r3.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>();

        $r14 = new org.quartz.utils.PropertiesParser;

        specialinvoke $r14.<org.quartz.utils.PropertiesParser: void <init>(java.util.Properties)>(r2);

        r6 = virtualinvoke r2.<java.util.Properties: java.util.Enumeration keys()>();

     label01:
        $z0 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label16;

        $r15 = interfaceinvoke r6.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (java.lang.String) $r15;

        $r16 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r17 = <java.util.Locale: java.util.Locale US>;

        r8 = virtualinvoke $r16.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r17);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r21 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(1);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        r9 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        r10 = specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: java.lang.reflect.Method getSetMethod(java.lang.String,java.beans.PropertyDescriptor[])>(r9, r4);

     label02:
        if r10 != null goto label03;

        $r62 = new java.lang.NoSuchMethodException;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No setter for property \'");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r62.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r67);

        throw $r62;

     label03:
        r77 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof r77;

        if $i0 == 1 goto label04;

        $r56 = new java.lang.NoSuchMethodException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No 1-argument setter for property \'");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r56.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r61);

        throw $r56;

     label04:
        r78 = $r14;

        r79 = virtualinvoke $r14.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r7);

        if r79 == null goto label05;

        $z7 = virtualinvoke r79.<java.lang.String: boolean startsWith(java.lang.String)>("$@");

        if $z7 == 0 goto label05;

        r80 = virtualinvoke r79.<java.lang.String: java.lang.String substring(int)>(2);

        r78 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        goto label06;

     label05:
        r80 = r7;

     label06:
        $r81 = r77[0];

        $r82 = <java.lang.Integer: java.lang.Class TYPE>;

        $z8 = virtualinvoke $r81.<java.lang.Object: boolean equals(java.lang.Object)>($r82);

        if $z8 == 0 goto label07;

        $r53 = newarray (java.lang.Object)[1];

        $i2 = virtualinvoke r78.<org.quartz.utils.PropertiesParser: int getIntProperty(java.lang.String)>(r80);

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r53[0] = $r54;

        virtualinvoke r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r53);

        goto label13;

     label07:
        $r24 = r77[0];

        $r23 = <java.lang.Long: java.lang.Class TYPE>;

        $z1 = virtualinvoke $r24.<java.lang.Object: boolean equals(java.lang.Object)>($r23);

        if $z1 == 0 goto label08;

        $r50 = newarray (java.lang.Object)[1];

        $l1 = virtualinvoke r78.<org.quartz.utils.PropertiesParser: long getLongProperty(java.lang.String)>(r80);

        $r51 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r50[0] = $r51;

        virtualinvoke r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r50);

        goto label13;

     label08:
        $r26 = r77[0];

        $r25 = <java.lang.Float: java.lang.Class TYPE>;

        $z2 = virtualinvoke $r26.<java.lang.Object: boolean equals(java.lang.Object)>($r25);

        if $z2 == 0 goto label09;

        $r47 = newarray (java.lang.Object)[1];

        $f0 = virtualinvoke r78.<org.quartz.utils.PropertiesParser: float getFloatProperty(java.lang.String)>(r80);

        $r48 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r47[0] = $r48;

        virtualinvoke r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r47);

        goto label13;

     label09:
        $r28 = r77[0];

        $r27 = <java.lang.Double: java.lang.Class TYPE>;

        $z3 = virtualinvoke $r28.<java.lang.Object: boolean equals(java.lang.Object)>($r27);

        if $z3 == 0 goto label10;

        $r44 = newarray (java.lang.Object)[1];

        $d0 = virtualinvoke r78.<org.quartz.utils.PropertiesParser: double getDoubleProperty(java.lang.String)>(r80);

        $r45 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r44[0] = $r45;

        virtualinvoke r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r44);

        goto label13;

     label10:
        $r30 = r77[0];

        $r29 = <java.lang.Boolean: java.lang.Class TYPE>;

        $z4 = virtualinvoke $r30.<java.lang.Object: boolean equals(java.lang.Object)>($r29);

        if $z4 == 0 goto label11;

        $r41 = newarray (java.lang.Object)[1];

        $z6 = virtualinvoke r78.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String)>(r80);

        $r42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        $r41[0] = $r42;

        virtualinvoke r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r41);

        goto label13;

     label11:
        $r31 = r77[0];

        $z5 = virtualinvoke $r31.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/String;");

        if $z5 == 0 goto label12;

        $r38 = newarray (java.lang.Object)[1];

        $r39 = virtualinvoke r78.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r80);

        $r38[0] = $r39;

        virtualinvoke r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r38);

        goto label13;

     label12:
        $r32 = new java.lang.NoSuchMethodException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No primitive-type setter for property \'");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r37);

        throw $r32;

     label13:
        goto label15;

     label14:
        $r68 := @caughtexception;

        $r69 = new org.quartz.SchedulerConfigException;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse property \'");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' into correct data type: ");

        $r74 = virtualinvoke $r68.<java.lang.NumberFormatException: java.lang.String toString()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r69.<org.quartz.SchedulerConfigException: void <init>(java.lang.String)>($r76);

        throw $r69;

     label15:
        goto label01;

     label16:
        return;

        catch java.lang.NumberFormatException from label02 to label13 with label14;
    }

    private java.lang.reflect.Method getSetMethod(java.lang.String, java.beans.PropertyDescriptor[])
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.lang.String r1, $r5;
        java.beans.PropertyDescriptor[] r2;
        java.lang.reflect.Method r3;
        int $i0, i1;
        java.beans.PropertyDescriptor $r4;
        boolean $z0;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.beans.PropertyDescriptor[];

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label3;

        $r4 = r2[i1];

        r3 = virtualinvoke $r4.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        if r3 == null goto label2;

        $r5 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private java.lang.Class loadClass(java.lang.String) throws java.lang.ClassNotFoundException, org.quartz.SchedulerConfigException
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.lang.String r1;
        org.quartz.SchedulerConfigException $r2;
        java.lang.Class $r3, $r5, $r7, $r9;
        java.lang.ClassNotFoundException $r4;
        java.lang.ClassLoader $r6, $r8, r10;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: java.lang.String;

     label1:
        r10 = specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: java.lang.ClassLoader findClassloader()>();

        if r10 == null goto label3;

        $r3 = virtualinvoke r10.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

     label2:
        return $r3;

     label3:
        $r2 = new org.quartz.SchedulerConfigException;

        specialinvoke $r2.<org.quartz.SchedulerConfigException: void <init>(java.lang.String)>("Unable to find a class loader on the current thread or class.");

        throw $r2;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r6 == null goto label5;

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r9 = virtualinvoke $r8.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

        return $r9;

     label5:
        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label4;
        catch java.lang.ClassNotFoundException from label3 to label4 with label4;
    }

    private java.lang.ClassLoader findClassloader()
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.lang.Thread $r1, $r5, $r8;
        java.lang.ClassLoader $r2, $r4, $r7, $r9;
        java.lang.Class $r3, $r6;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r4 == null goto label1;

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r5.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r7);

     label1:
        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r9 = virtualinvoke $r8.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        return $r9;
    }

    private java.lang.String getSchedulerName()
    {
        org.quartz.impl.StdSchedulerFactory r0;
        org.quartz.utils.PropertiesParser $r1;
        java.lang.String $r2;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        $r1 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        $r2 = virtualinvoke $r1.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceName", "QuartzScheduler");

        return $r2;
    }

    public org.quartz.Scheduler getScheduler() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdSchedulerFactory r0;
        org.quartz.impl.SchedulerRepository r1;
        org.quartz.utils.PropertiesParser $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        org.quartz.Scheduler r5, r6;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        $r2 = r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.utils.PropertiesParser cfg>;

        if $r2 != null goto label1;

        virtualinvoke r0.<org.quartz.impl.StdSchedulerFactory: void initialize()>();

     label1:
        r1 = staticinvoke <org.quartz.impl.SchedulerRepository: org.quartz.impl.SchedulerRepository getInstance()>();

        $r3 = specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String getSchedulerName()>();

        r5 = virtualinvoke r1.<org.quartz.impl.SchedulerRepository: org.quartz.Scheduler lookup(java.lang.String)>($r3);

        if r5 == null goto label3;

        $z0 = interfaceinvoke r5.<org.quartz.Scheduler: boolean isShutdown()>();

        if $z0 == 0 goto label2;

        $r4 = specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: java.lang.String getSchedulerName()>();

        virtualinvoke r1.<org.quartz.impl.SchedulerRepository: boolean remove(java.lang.String)>($r4);

        goto label3;

     label2:
        return r5;

     label3:
        r6 = specialinvoke r0.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler instantiate()>();

        return r6;
    }

    public static org.quartz.Scheduler getDefaultScheduler() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdSchedulerFactory $r1;
        org.quartz.Scheduler $r2;

        $r1 = new org.quartz.impl.StdSchedulerFactory;

        specialinvoke $r1.<org.quartz.impl.StdSchedulerFactory: void <init>()>();

        $r2 = virtualinvoke $r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>();

        return $r2;
    }

    public org.quartz.Scheduler getScheduler(java.lang.String) throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdSchedulerFactory r0;
        java.lang.String r1;
        org.quartz.impl.SchedulerRepository $r2;
        org.quartz.Scheduler $r3;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.quartz.impl.SchedulerRepository: org.quartz.impl.SchedulerRepository getInstance()>();

        $r3 = virtualinvoke $r2.<org.quartz.impl.SchedulerRepository: org.quartz.Scheduler lookup(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.Collection getAllSchedulers() throws org.quartz.SchedulerException
    {
        org.quartz.impl.StdSchedulerFactory r0;
        org.quartz.impl.SchedulerRepository $r1;
        java.util.Collection $r2;

        r0 := @this: org.quartz.impl.StdSchedulerFactory;

        $r1 = staticinvoke <org.quartz.impl.SchedulerRepository: org.quartz.impl.SchedulerRepository getInstance()>();

        $r2 = virtualinvoke $r1.<org.quartz.impl.SchedulerRepository: java.util.Collection lookupAll()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.quartz.impl.StdSchedulerFactory: java.lang.String MANAGEMENT_REST_SERVICE_HOST_PORT> = "org.quartz.managementRESTService.bind";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String MANAGEMENT_REST_SERVICE_ENABLED> = "org.quartz.managementRESTService.enabled";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String SYSTEM_PROPERTY_AS_INSTANCE_ID> = "SYS_PROP";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_THREAD_EXECUTOR_CLASS> = "org.quartz.threadExecutor.class";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_THREAD_EXECUTOR> = "org.quartz.threadExecutor";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String AUTO_GENERATE_INSTANCE_ID> = "AUTO";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String DEFAULT_INSTANCE_ID> = "NON_CLUSTERED";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_LISTENER_CLASS> = "class";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_TRIGGER_LISTENER_PREFIX> = "org.quartz.triggerListener";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_JOB_LISTENER_PREFIX> = "org.quartz.jobListener";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_PLUGIN_CLASS> = "class";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_PLUGIN_PREFIX> = "org.quartz.plugin";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_JNDI_CREDENTIALS> = "java.naming.security.credentials";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_JNDI_PRINCIPAL> = "java.naming.security.principal";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_JNDI_PROVDER> = "java.naming.provider.url";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_JNDI_INITIAL> = "java.naming.factory.initial";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_JNDI_ALWAYS_LOOKUP> = "jndiAlwaysLookup";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_JNDI_URL> = "jndiURL";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_VALIDATION_QUERY> = "validationQuery";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_MAX_CONNECTIONS> = "maxConnections";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_PASSWORD> = "password";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_USER> = "user";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_URL> = "URL";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_DRIVER> = "driver";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_CONNECTION_PROVIDER_CLASS> = "connectionProvider.class";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_DATASOURCE_PREFIX> = "org.quartz.dataSource";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_JOB_STORE_USE_PROP> = "org.quartz.jobStore.useProperties";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_JOB_STORE_CLASS> = "org.quartz.jobStore.class";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_NAME> = "schedName";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_TABLE_PREFIX> = "tablePrefix";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_JOB_STORE_LOCK_HANDLER_CLASS> = "org.quartz.jobStore.lockHandler.class";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_JOB_STORE_LOCK_HANDLER_PREFIX> = "org.quartz.jobStore.lockHandler";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_JOB_STORE_PREFIX> = "org.quartz.jobStore";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_THREAD_POOL_CLASS> = "org.quartz.threadPool.class";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_THREAD_POOL_PREFIX> = "org.quartz.threadPool";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_CONTEXT_PREFIX> = "org.quartz.context.key";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_INTERRUPT_JOBS_ON_SHUTDOWN_WITH_WAIT> = "org.quartz.scheduler.interruptJobsOnShutdownWithWait";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_INTERRUPT_JOBS_ON_SHUTDOWN> = "org.quartz.scheduler.interruptJobsOnShutdown";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_JOB_FACTORY_PREFIX> = "org.quartz.scheduler.jobFactory";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_JOB_FACTORY_CLASS> = "org.quartz.scheduler.jobFactory.class";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_CLASS_LOAD_HELPER_CLASS> = "org.quartz.scheduler.classLoadHelper.class";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_SCHEDULER_THREADS_INHERIT_CONTEXT_CLASS_LOADER_OF_INITIALIZING_THREAD> = "org.quartz.scheduler.threadsInheritContextClassLoaderOfInitializer";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_MAKE_SCHEDULER_THREAD_DAEMON> = "org.quartz.scheduler.makeSchedulerThreadDaemon";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_DB_FAILURE_RETRY_INTERVAL> = "org.quartz.scheduler.dbFailureRetryInterval";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_IDLE_WAIT_TIME> = "org.quartz.scheduler.idleWaitTime";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_USER_TX_URL> = "org.quartz.scheduler.userTransactionURL";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_WRAP_JOB_IN_USER_TX> = "org.quartz.scheduler.wrapJobExecutionInUserTransaction";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_RMI_BIND_NAME> = "org.quartz.scheduler.rmi.bindName";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_RMI_CREATE_REGISTRY> = "org.quartz.scheduler.rmi.createRegistry";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_RMI_SERVER_PORT> = "org.quartz.scheduler.rmi.serverPort";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_RMI_PORT> = "org.quartz.scheduler.rmi.registryPort";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_RMI_HOST> = "org.quartz.scheduler.rmi.registryHost";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_RMI_PROXY> = "org.quartz.scheduler.rmi.proxy";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_RMI_EXPORT> = "org.quartz.scheduler.rmi.export";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_JMX_PROXY_CLASS> = "org.quartz.scheduler.jmx.proxy.class";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_JMX_PROXY> = "org.quartz.scheduler.jmx.proxy";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_JMX_OBJECT_NAME> = "org.quartz.scheduler.jmx.objectName";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_JMX_EXPORT> = "org.quartz.scheduler.jmx.export";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_MAX_BATCH_SIZE> = "org.quartz.scheduler.batchTriggerAcquisitionMaxCount";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_BATCH_TIME_WINDOW> = "org.quartz.scheduler.batchTriggerAcquisitionFireAheadTimeWindow";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_THREAD_NAME> = "org.quartz.scheduler.threadName";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_INSTANCE_ID_GENERATOR_CLASS> = "org.quartz.scheduler.instanceIdGenerator.class";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_INSTANCE_ID_GENERATOR_PREFIX> = "org.quartz.scheduler.instanceIdGenerator";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_INSTANCE_ID> = "org.quartz.scheduler.instanceId";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROP_SCHED_INSTANCE_NAME> = "org.quartz.scheduler.instanceName";

        <org.quartz.impl.StdSchedulerFactory: java.lang.String PROPERTIES_FILE> = "org.quartz.properties";

        return;
    }
}
