public class org.quartz.impl.calendar.BaseCalendar extends java.lang.Object implements org.quartz.Calendar, java.io.Serializable, java.lang.Cloneable
{
    static final long serialVersionUID;
    private org.quartz.Calendar baseCalendar;
    private java.lang.String description;
    private java.util.TimeZone timeZone;

    public void <init>()
    {
        org.quartz.impl.calendar.BaseCalendar r0;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.quartz.Calendar)
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        org.quartz.Calendar r1;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        r1 := @parameter0: org.quartz.Calendar;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: void setBaseCalendar(org.quartz.Calendar)>(r1);

        return;
    }

    public void <init>(java.util.TimeZone)
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        java.util.TimeZone r1;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        r1 := @parameter0: java.util.TimeZone;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: void setTimeZone(java.util.TimeZone)>(r1);

        return;
    }

    public void <init>(org.quartz.Calendar, java.util.TimeZone)
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        org.quartz.Calendar r1;
        java.util.TimeZone r2;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        r1 := @parameter0: org.quartz.Calendar;

        r2 := @parameter1: java.util.TimeZone;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: void setBaseCalendar(org.quartz.Calendar)>(r1);

        virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: void setTimeZone(java.util.TimeZone)>(r2);

        return;
    }

    public java.lang.Object clone()
    {
        org.quartz.impl.calendar.BaseCalendar r0, r13;
        java.lang.Object $r1, $r5, $r9;
        org.quartz.Calendar $r2, $r8, $r10;
        java.util.TimeZone $r3, $r4, $r6;
        java.lang.CloneNotSupportedException $r11;
        java.lang.IncompatibleClassChangeError $r12;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r13 = (org.quartz.impl.calendar.BaseCalendar) $r1;

        $r2 = virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar getBaseCalendar()>();

        if $r2 == null goto label2;

        $r8 = virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar getBaseCalendar()>();

        $r9 = interfaceinvoke $r8.<org.quartz.Calendar: java.lang.Object clone()>();

        $r10 = (org.quartz.Calendar) $r9;

        r13.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar baseCalendar> = $r10;

     label2:
        $r3 = virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone getTimeZone()>();

        if $r3 == null goto label3;

        $r4 = virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone getTimeZone()>();

        $r5 = virtualinvoke $r4.<java.util.TimeZone: java.lang.Object clone()>();

        $r6 = (java.util.TimeZone) $r5;

        r13.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone timeZone> = $r6;

     label3:
        return r13;

     label4:
        $r11 := @caughtexception;

        $r12 = new java.lang.IncompatibleClassChangeError;

        specialinvoke $r12.<java.lang.IncompatibleClassChangeError: void <init>(java.lang.String)>("Not Cloneable.");

        throw $r12;

        catch java.lang.CloneNotSupportedException from label1 to label3 with label4;
    }

    public void setBaseCalendar(org.quartz.Calendar)
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        org.quartz.Calendar r1;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        r1 := @parameter0: org.quartz.Calendar;

        r0.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar baseCalendar> = r1;

        return;
    }

    public org.quartz.Calendar getBaseCalendar()
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        org.quartz.Calendar $r1;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        $r1 = r0.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar baseCalendar>;

        return $r1;
    }

    public java.lang.String getDescription()
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        java.lang.String $r1;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        $r1 = r0.<org.quartz.impl.calendar.BaseCalendar: java.lang.String description>;

        return $r1;
    }

    public void setDescription(java.lang.String)
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        java.lang.String r1;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        r1 := @parameter0: java.lang.String;

        r0.<org.quartz.impl.calendar.BaseCalendar: java.lang.String description> = r1;

        return;
    }

    public java.util.TimeZone getTimeZone()
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        java.util.TimeZone $r1;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        $r1 = r0.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone timeZone>;

        return $r1;
    }

    public void setTimeZone(java.util.TimeZone)
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        java.util.TimeZone r1;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        r1 := @parameter0: java.util.TimeZone;

        r0.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone timeZone> = r1;

        return;
    }

    public boolean isTimeIncluded(long)
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        long l0;
        byte $b1;
        org.quartz.Calendar $r1, $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("timeStamp must be greater 0");

        throw $r3;

     label1:
        $r1 = r0.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar baseCalendar>;

        if $r1 == null goto label2;

        $r2 = r0.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar baseCalendar>;

        $z0 = interfaceinvoke $r2.<org.quartz.Calendar: boolean isTimeIncluded(long)>(l0);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public long getNextIncludedTime(long)
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        long l0, $l2;
        byte $b1;
        org.quartz.Calendar $r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("timeStamp must be greater 0");

        throw $r3;

     label1:
        $r1 = r0.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar baseCalendar>;

        if $r1 == null goto label2;

        $r2 = r0.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar baseCalendar>;

        $l2 = interfaceinvoke $r2.<org.quartz.Calendar: long getNextIncludedTime(long)>(l0);

        return $l2;

     label2:
        return l0;
    }

    protected java.util.Calendar createJavaCalendar(long)
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        long l0;
        java.util.Calendar r1;
        java.util.Date $r2;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: java.util.Calendar createJavaCalendar()>();

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>(long)>(l0);

        virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>($r2);

        return r1;
    }

    protected java.util.Calendar createJavaCalendar()
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        java.util.TimeZone $r1, $r2;
        java.util.Calendar $r3;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        $r1 = virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone getTimeZone()>();

        if $r1 != null goto label1;

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone getTimeZone()>();

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r2);

     label2:
        return $r3;
    }

    protected java.util.Calendar getStartOfDayJavaCalendar(long)
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        long l0;
        java.util.Calendar r1;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: java.util.Calendar createJavaCalendar(long)>(l0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0);

        return r1;
    }

    protected java.util.Calendar getEndOfDayJavaCalendar(long)
    {
        org.quartz.impl.calendar.BaseCalendar r0;
        long l0;
        java.util.Calendar r1;

        r0 := @this: org.quartz.impl.calendar.BaseCalendar;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<org.quartz.impl.calendar.BaseCalendar: java.util.Calendar createJavaCalendar(long)>(l0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 23);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 59);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 59);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999);

        return r1;
    }

    public static void <clinit>()
    {
        <org.quartz.impl.calendar.BaseCalendar: long serialVersionUID> = 3106623404629760239L;

        return;
    }
}
