class org.quartz.AbstractSchedulerTest$1 extends java.lang.Thread
{
    final org.quartz.Scheduler val$scheduler;
    final java.util.concurrent.atomic.AtomicBoolean val$shutdown;
    final org.quartz.AbstractSchedulerTest this$0;

    void <init>(org.quartz.AbstractSchedulerTest, org.quartz.Scheduler, java.util.concurrent.atomic.AtomicBoolean)
    {
        org.quartz.AbstractSchedulerTest$1 r0;
        org.quartz.AbstractSchedulerTest r1;
        org.quartz.Scheduler r2;
        java.util.concurrent.atomic.AtomicBoolean r3;

        r0 := @this: org.quartz.AbstractSchedulerTest$1;

        r1 := @parameter0: org.quartz.AbstractSchedulerTest;

        r2 := @parameter1: org.quartz.Scheduler;

        r3 := @parameter2: java.util.concurrent.atomic.AtomicBoolean;

        r0.<org.quartz.AbstractSchedulerTest$1: org.quartz.AbstractSchedulerTest this$0> = r1;

        r0.<org.quartz.AbstractSchedulerTest$1: org.quartz.Scheduler val$scheduler> = r2;

        r0.<org.quartz.AbstractSchedulerTest$1: java.util.concurrent.atomic.AtomicBoolean val$shutdown> = r3;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        org.quartz.AbstractSchedulerTest$1 r0;
        org.quartz.Scheduler $r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        org.quartz.SchedulerException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: org.quartz.AbstractSchedulerTest$1;

     label1:
        $r2 = r0.<org.quartz.AbstractSchedulerTest$1: org.quartz.Scheduler val$scheduler>;

        interfaceinvoke $r2.<org.quartz.Scheduler: void shutdown(boolean)>(1);

        $r3 = r0.<org.quartz.AbstractSchedulerTest$1: java.util.concurrent.atomic.AtomicBoolean val$shutdown>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        return;

        catch org.quartz.SchedulerException from label1 to label2 with label3;
    }
}
