public class org.quartz.simpl.PropertySettingJobFactory extends org.quartz.simpl.SimpleJobFactory
{
    private boolean warnIfNotFound;
    private boolean throwIfNotFound;

    public void <init>()
    {
        org.quartz.simpl.PropertySettingJobFactory r0;

        r0 := @this: org.quartz.simpl.PropertySettingJobFactory;

        specialinvoke r0.<org.quartz.simpl.SimpleJobFactory: void <init>()>();

        r0.<org.quartz.simpl.PropertySettingJobFactory: boolean warnIfNotFound> = 0;

        r0.<org.quartz.simpl.PropertySettingJobFactory: boolean throwIfNotFound> = 0;

        return;
    }

    public org.quartz.Job newJob(org.quartz.spi.TriggerFiredBundle, org.quartz.Scheduler) throws org.quartz.SchedulerException
    {
        org.quartz.simpl.PropertySettingJobFactory r0;
        org.quartz.spi.TriggerFiredBundle r1;
        org.quartz.Scheduler r2;
        org.quartz.Job r3;
        org.quartz.JobDataMap $r5, $r8, $r10;
        org.quartz.SchedulerContext $r6;
        org.quartz.JobDetail $r7;
        org.quartz.spi.OperableTrigger $r9;

        r0 := @this: org.quartz.simpl.PropertySettingJobFactory;

        r1 := @parameter0: org.quartz.spi.TriggerFiredBundle;

        r2 := @parameter1: org.quartz.Scheduler;

        r3 = specialinvoke r0.<org.quartz.simpl.SimpleJobFactory: org.quartz.Job newJob(org.quartz.spi.TriggerFiredBundle,org.quartz.Scheduler)>(r1, r2);

        $r5 = new org.quartz.JobDataMap;

        specialinvoke $r5.<org.quartz.JobDataMap: void <init>()>();

        $r6 = interfaceinvoke r2.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>();

        virtualinvoke $r5.<org.quartz.JobDataMap: void putAll(java.util.Map)>($r6);

        $r7 = virtualinvoke r1.<org.quartz.spi.TriggerFiredBundle: org.quartz.JobDetail getJobDetail()>();

        $r8 = interfaceinvoke $r7.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>();

        virtualinvoke $r5.<org.quartz.JobDataMap: void putAll(java.util.Map)>($r8);

        $r9 = virtualinvoke r1.<org.quartz.spi.TriggerFiredBundle: org.quartz.spi.OperableTrigger getTrigger()>();

        $r10 = interfaceinvoke $r9.<org.quartz.spi.OperableTrigger: org.quartz.JobDataMap getJobDataMap()>();

        virtualinvoke $r5.<org.quartz.JobDataMap: void putAll(java.util.Map)>($r10);

        virtualinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>(r3, $r5);

        return r3;
    }

    protected void setBeanProps(java.lang.Object, org.quartz.JobDataMap) throws org.quartz.SchedulerException
    {
        org.quartz.simpl.PropertySettingJobFactory r0;
        java.lang.Object r1, $r13, $r14, r128, r129;
        org.quartz.JobDataMap r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.String r5, r6, r7, r9, $r15, $r20, $r28, $r36, $r38, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r60, $r63, $r67, $r72, $r77, $r82, $r87, $r95, $r97, $r102, $r107, $r112, $r120, $r122;
        java.lang.reflect.Method r8;
        java.lang.Class $r10, $r27, $r35, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r59, $r66, $r76, $r86, $r94, $r101, $r111, $r119, r127;
        java.util.Map $r11;
        java.util.Set $r12;
        java.util.Locale $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r21, $r25, $r26, $r29, $r30, $r31, $r32, $r33, $r34, $r37, $r55, $r56, $r57, $r58, $r61, $r62, $r64, $r65, $r68, $r69, $r70, $r71, $r74, $r75, $r78, $r79, $r80, $r81, $r84, $r85, $r88, $r89, $r90, $r91, $r92, $r93, $r96, $r99, $r100, $r103, $r104, $r105, $r106, $r109, $r110, $r113, $r114, $r115, $r116, $r117, $r118, $r121;
        java.lang.Class[] $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26;
        java.lang.Object[] $r23;
        int $i0;
        char $c1;
        java.lang.reflect.InvocationTargetException $r73;
        java.lang.IllegalArgumentException $r83;
        java.lang.IllegalAccessException $r98;
        java.lang.NumberFormatException $r108;
        java.beans.IntrospectionException $r123;
        java.beans.BeanInfo r124;
        java.beans.PropertyDescriptor[] r126;

        r0 := @this: org.quartz.simpl.PropertySettingJobFactory;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.quartz.JobDataMap;

        r124 = null;

     label01:
        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r124 = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>($r10);

     label02:
        goto label04;

     label03:
        $r123 := @caughtexception;

        specialinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: void handleError(java.lang.String,java.lang.Exception)>("Unable to introspect Job class.", $r123);

     label04:
        r126 = interfaceinvoke r124.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>();

        $r11 = virtualinvoke r2.<org.quartz.JobDataMap: java.util.Map getWrappedMap()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z26 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z26 == 0 goto label37;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r13;

        $r14 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r14;

        $r15 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r16 = <java.util.Locale: java.util.Locale US>;

        r6 = virtualinvoke $r15.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r20 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(1);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        r7 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = specialinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: java.lang.reflect.Method getSetMethod(java.lang.String,java.beans.PropertyDescriptor[])>(r7, r126);

        r127 = null;

        r128 = null;

     label06:
        if r8 != null goto label08;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No setter on Job class ");

        $r66 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r67 = virtualinvoke $r66.<java.lang.Class: java.lang.String getName()>();

        $r68 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for property \'");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: void handleError(java.lang.String)>($r72);

     label07:
        goto label05;

     label08:
        $r22 = virtualinvoke r8.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        r127 = $r22[0];

        r128 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r129 = null;

        $z0 = virtualinvoke r127.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label27;

        if r128 != null goto label10;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set primitive property \'");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' on Job class ");

        $r59 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r60 = virtualinvoke $r59.<java.lang.Class: java.lang.String getName()>();

        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to null.");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: void handleError(java.lang.String)>($r63);

     label09:
        goto label05;

     label10:
        $r40 = <java.lang.Integer: java.lang.Class TYPE>;

        $z2 = virtualinvoke r127.<java.lang.Object: boolean equals(java.lang.Object)>($r40);

        if $z2 == 0 goto label12;

        $z24 = r128 instanceof java.lang.String;

        if $z24 == 0 goto label11;

        $r54 = (java.lang.String) r128;

        r129 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r54);

        goto label28;

     label11:
        $z25 = r128 instanceof java.lang.Integer;

        if $z25 == 0 goto label28;

        r129 = r128;

        goto label28;

     label12:
        $r41 = <java.lang.Long: java.lang.Class TYPE>;

        $z3 = virtualinvoke r127.<java.lang.Object: boolean equals(java.lang.Object)>($r41);

        if $z3 == 0 goto label14;

        $z22 = r128 instanceof java.lang.String;

        if $z22 == 0 goto label13;

        $r53 = (java.lang.String) r128;

        r129 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r53);

        goto label28;

     label13:
        $z23 = r128 instanceof java.lang.Long;

        if $z23 == 0 goto label28;

        r129 = r128;

        goto label28;

     label14:
        $r42 = <java.lang.Float: java.lang.Class TYPE>;

        $z4 = virtualinvoke r127.<java.lang.Object: boolean equals(java.lang.Object)>($r42);

        if $z4 == 0 goto label16;

        $z20 = r128 instanceof java.lang.String;

        if $z20 == 0 goto label15;

        $r52 = (java.lang.String) r128;

        r129 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r52);

        goto label28;

     label15:
        $z21 = r128 instanceof java.lang.Float;

        if $z21 == 0 goto label28;

        r129 = r128;

        goto label28;

     label16:
        $r43 = <java.lang.Double: java.lang.Class TYPE>;

        $z5 = virtualinvoke r127.<java.lang.Object: boolean equals(java.lang.Object)>($r43);

        if $z5 == 0 goto label18;

        $z18 = r128 instanceof java.lang.String;

        if $z18 == 0 goto label17;

        $r51 = (java.lang.String) r128;

        r129 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r51);

        goto label28;

     label17:
        $z19 = r128 instanceof java.lang.Double;

        if $z19 == 0 goto label28;

        r129 = r128;

        goto label28;

     label18:
        $r44 = <java.lang.Boolean: java.lang.Class TYPE>;

        $z6 = virtualinvoke r127.<java.lang.Object: boolean equals(java.lang.Object)>($r44);

        if $z6 == 0 goto label20;

        $z16 = r128 instanceof java.lang.String;

        if $z16 == 0 goto label19;

        $r50 = (java.lang.String) r128;

        r129 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r50);

        goto label28;

     label19:
        $z17 = r128 instanceof java.lang.Boolean;

        if $z17 == 0 goto label28;

        r129 = r128;

        goto label28;

     label20:
        $r45 = <java.lang.Byte: java.lang.Class TYPE>;

        $z7 = virtualinvoke r127.<java.lang.Object: boolean equals(java.lang.Object)>($r45);

        if $z7 == 0 goto label22;

        $z14 = r128 instanceof java.lang.String;

        if $z14 == 0 goto label21;

        $r49 = (java.lang.String) r128;

        r129 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>($r49);

        goto label28;

     label21:
        $z15 = r128 instanceof java.lang.Byte;

        if $z15 == 0 goto label28;

        r129 = r128;

        goto label28;

     label22:
        $r46 = <java.lang.Short: java.lang.Class TYPE>;

        $z8 = virtualinvoke r127.<java.lang.Object: boolean equals(java.lang.Object)>($r46);

        if $z8 == 0 goto label24;

        $z12 = r128 instanceof java.lang.String;

        if $z12 == 0 goto label23;

        $r48 = (java.lang.String) r128;

        r129 = staticinvoke <java.lang.Short: java.lang.Short valueOf(java.lang.String)>($r48);

        goto label28;

     label23:
        $z13 = r128 instanceof java.lang.Short;

        if $z13 == 0 goto label28;

        r129 = r128;

        goto label28;

     label24:
        $r47 = <java.lang.Character: java.lang.Class TYPE>;

        $z9 = virtualinvoke r127.<java.lang.Object: boolean equals(java.lang.Object)>($r47);

        if $z9 == 0 goto label28;

        $z10 = r128 instanceof java.lang.String;

        if $z10 == 0 goto label26;

        r9 = (java.lang.String) r128;

        $i0 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i0 != 1 goto label25;

        $c1 = virtualinvoke r9.<java.lang.String: char charAt(int)>(0);

        r129 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

     label25:
        goto label28;

     label26:
        $z11 = r128 instanceof java.lang.Character;

        if $z11 == 0 goto label28;

        r129 = r128;

        goto label28;

     label27:
        if r128 == null goto label28;

        $r39 = virtualinvoke r128.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r127.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r39);

        if $z1 == 0 goto label28;

        r129 = r128;

     label28:
        if r128 == null goto label30;

        if r129 != null goto label30;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The setter on Job class ");

        $r27 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r28 = virtualinvoke $r27.<java.lang.Class: java.lang.String getName()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for property \'");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' expects a ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r127);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was given ");

        $r35 = virtualinvoke r128.<java.lang.Object: java.lang.Class getClass()>();

        $r36 = virtualinvoke $r35.<java.lang.Class: java.lang.String getName()>();

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: void handleError(java.lang.String)>($r38);

     label29:
        goto label05;

     label30:
        $r23 = newarray (java.lang.Object)[1];

        $r23[0] = r129;

        virtualinvoke r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r23);

     label31:
        goto label36;

     label32:
        $r108 := @caughtexception;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The setter on Job class ");

        $r111 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r112 = virtualinvoke $r111.<java.lang.Class: java.lang.String getName()>();

        $r113 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112);

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for property \'");

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' expects a ");

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r127);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was given ");

        $r119 = virtualinvoke r128.<java.lang.Object: java.lang.Class getClass()>();

        $r120 = virtualinvoke $r119.<java.lang.Class: java.lang.String getName()>();

        $r121 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120);

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: void handleError(java.lang.String,java.lang.Exception)>($r122, $r108);

        goto label36;

     label33:
        $r83 := @caughtexception;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The setter on Job class ");

        $r86 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r87 = virtualinvoke $r86.<java.lang.Class: java.lang.String getName()>();

        $r88 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for property \'");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' expects a ");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r127);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was given ");

        $r94 = virtualinvoke r128.<java.lang.Object: java.lang.Class getClass()>();

        $r95 = virtualinvoke $r94.<java.lang.Class: java.lang.String getName()>();

        $r96 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: void handleError(java.lang.String,java.lang.Exception)>($r97, $r83);

        goto label36;

     label34:
        $r98 := @caughtexception;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The setter on Job class ");

        $r101 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r102 = virtualinvoke $r101.<java.lang.Class: java.lang.String getName()>();

        $r103 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for property \'");

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be accessed.");

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: void handleError(java.lang.String,java.lang.Exception)>($r107, $r98);

        goto label36;

     label35:
        $r73 := @caughtexception;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The setter on Job class ");

        $r76 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r77 = virtualinvoke $r76.<java.lang.Class: java.lang.String getName()>();

        $r78 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for property \'");

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be invoked.");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: void handleError(java.lang.String,java.lang.Exception)>($r82, $r73);

     label36:
        goto label05;

     label37:
        return;

        catch java.beans.IntrospectionException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label06 to label07 with label32;
        catch java.lang.NumberFormatException from label08 to label09 with label32;
        catch java.lang.NumberFormatException from label10 to label29 with label32;
        catch java.lang.NumberFormatException from label30 to label31 with label32;
        catch java.lang.IllegalArgumentException from label06 to label07 with label33;
        catch java.lang.IllegalArgumentException from label08 to label09 with label33;
        catch java.lang.IllegalArgumentException from label10 to label29 with label33;
        catch java.lang.IllegalArgumentException from label30 to label31 with label33;
        catch java.lang.IllegalAccessException from label06 to label07 with label34;
        catch java.lang.IllegalAccessException from label08 to label09 with label34;
        catch java.lang.IllegalAccessException from label10 to label29 with label34;
        catch java.lang.IllegalAccessException from label30 to label31 with label34;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label35;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label35;
        catch java.lang.reflect.InvocationTargetException from label10 to label29 with label35;
        catch java.lang.reflect.InvocationTargetException from label30 to label31 with label35;
    }

    private void handleError(java.lang.String) throws org.quartz.SchedulerException
    {
        org.quartz.simpl.PropertySettingJobFactory r0;
        java.lang.String r1;

        r0 := @this: org.quartz.simpl.PropertySettingJobFactory;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: void handleError(java.lang.String,java.lang.Exception)>(r1, null);

        return;
    }

    private void handleError(java.lang.String, java.lang.Exception) throws org.quartz.SchedulerException
    {
        org.quartz.simpl.PropertySettingJobFactory r0;
        java.lang.String r1;
        java.lang.Exception r2;
        boolean $z0, $z1;
        org.slf4j.Logger $r3, $r4;
        org.quartz.SchedulerException $r5;

        r0 := @this: org.quartz.simpl.PropertySettingJobFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Exception;

        $z0 = virtualinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: boolean isThrowIfPropertyNotFound()>();

        if $z0 == 0 goto label1;

        $r5 = new org.quartz.SchedulerException;

        specialinvoke $r5.<org.quartz.SchedulerException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        throw $r5;

     label1:
        $z1 = virtualinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: boolean isWarnIfPropertyNotFound()>();

        if $z1 == 0 goto label3;

        if r2 != null goto label2;

        $r4 = virtualinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: org.slf4j.Logger getLog()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String)>(r1);

        goto label3;

     label2:
        $r3 = virtualinvoke r0.<org.quartz.simpl.PropertySettingJobFactory: org.slf4j.Logger getLog()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(r1, r2);

     label3:
        return;
    }

    private java.lang.reflect.Method getSetMethod(java.lang.String, java.beans.PropertyDescriptor[])
    {
        org.quartz.simpl.PropertySettingJobFactory r0;
        java.lang.String r1, $r6;
        java.beans.PropertyDescriptor[] r2;
        java.lang.reflect.Method r3;
        int $i0, $i1, i2;
        java.beans.PropertyDescriptor $r4;
        java.lang.Class[] $r5;
        boolean $z0;

        r0 := @this: org.quartz.simpl.PropertySettingJobFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.beans.PropertyDescriptor[];

        i2 = 0;

     label1:
        $i0 = lengthof r2;

        if i2 >= $i0 goto label5;

        $r4 = r2[i2];

        r3 = virtualinvoke $r4.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        if r3 != null goto label2;

        goto label4;

     label2:
        $r5 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r5;

        if $i1 == 1 goto label3;

        goto label4;

     label3:
        $r6 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        return r3;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return null;
    }

    public boolean isThrowIfPropertyNotFound()
    {
        org.quartz.simpl.PropertySettingJobFactory r0;
        boolean $z0;

        r0 := @this: org.quartz.simpl.PropertySettingJobFactory;

        $z0 = r0.<org.quartz.simpl.PropertySettingJobFactory: boolean throwIfNotFound>;

        return $z0;
    }

    public void setThrowIfPropertyNotFound(boolean)
    {
        org.quartz.simpl.PropertySettingJobFactory r0;
        boolean z0;

        r0 := @this: org.quartz.simpl.PropertySettingJobFactory;

        z0 := @parameter0: boolean;

        r0.<org.quartz.simpl.PropertySettingJobFactory: boolean throwIfNotFound> = z0;

        return;
    }

    public boolean isWarnIfPropertyNotFound()
    {
        org.quartz.simpl.PropertySettingJobFactory r0;
        boolean $z0;

        r0 := @this: org.quartz.simpl.PropertySettingJobFactory;

        $z0 = r0.<org.quartz.simpl.PropertySettingJobFactory: boolean warnIfNotFound>;

        return $z0;
    }

    public void setWarnIfPropertyNotFound(boolean)
    {
        org.quartz.simpl.PropertySettingJobFactory r0;
        boolean z0;

        r0 := @this: org.quartz.simpl.PropertySettingJobFactory;

        z0 := @parameter0: boolean;

        r0.<org.quartz.simpl.PropertySettingJobFactory: boolean warnIfNotFound> = z0;

        return;
    }
}
