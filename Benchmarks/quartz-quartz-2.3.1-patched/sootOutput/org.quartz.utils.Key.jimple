public class org.quartz.utils.Key extends java.lang.Object implements java.io.Serializable, java.lang.Comparable
{
    private static final long serialVersionUID;
    public static final java.lang.String DEFAULT_GROUP;
    private final java.lang.String name;
    private final java.lang.String group;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.quartz.utils.Key r0;
        java.lang.String r1, r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.quartz.utils.Key;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name cannot be null.");

        throw $r3;

     label1:
        r0.<org.quartz.utils.Key: java.lang.String name> = r1;

        if r2 == null goto label2;

        r0.<org.quartz.utils.Key: java.lang.String group> = r2;

        goto label3;

     label2:
        r0.<org.quartz.utils.Key: java.lang.String group> = "DEFAULT";

     label3:
        return;
    }

    public java.lang.String getName()
    {
        org.quartz.utils.Key r0;
        java.lang.String $r1;

        r0 := @this: org.quartz.utils.Key;

        $r1 = r0.<org.quartz.utils.Key: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getGroup()
    {
        org.quartz.utils.Key r0;
        java.lang.String $r1;

        r0 := @this: org.quartz.utils.Key;

        $r1 = r0.<org.quartz.utils.Key: java.lang.String group>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.quartz.utils.Key r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r0 := @this: org.quartz.utils.Key;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<org.quartz.utils.Key: java.lang.String getGroup()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r5 = virtualinvoke r0.<org.quartz.utils.Key: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public int hashCode()
    {
        org.quartz.utils.Key r0;
        java.lang.String $r1, $r2, $r3, $r4;
        int $i1, $i2, $i4, i5, $i6, i7;

        r0 := @this: org.quartz.utils.Key;

        $i1 = 31 * 1;

        $r1 = r0.<org.quartz.utils.Key: java.lang.String group>;

        if $r1 != null goto label1;

        $i4 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.quartz.utils.Key: java.lang.String group>;

        $i4 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        i5 = $i1 + $i4;

        $i2 = 31 * i5;

        $r3 = r0.<org.quartz.utils.Key: java.lang.String name>;

        if $r3 != null goto label3;

        $i6 = 0;

        goto label4;

     label3:
        $r4 = r0.<org.quartz.utils.Key: java.lang.String name>;

        $i6 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

     label4:
        i7 = $i2 + $i6;

        return i7;
    }

    public boolean equals(java.lang.Object)
    {
        org.quartz.utils.Key r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        boolean $z0, $z1;

        r0 := @this: org.quartz.utils.Key;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (org.quartz.utils.Key) r1;

        $r5 = r0.<org.quartz.utils.Key: java.lang.String group>;

        if $r5 != null goto label4;

        $r12 = r2.<org.quartz.utils.Key: java.lang.String group>;

        if $r12 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<org.quartz.utils.Key: java.lang.String group>;

        $r6 = r2.<org.quartz.utils.Key: java.lang.String group>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<org.quartz.utils.Key: java.lang.String name>;

        if $r8 != null goto label6;

        $r11 = r2.<org.quartz.utils.Key: java.lang.String name>;

        if $r11 == null goto label7;

        return 0;

     label6:
        $r10 = r0.<org.quartz.utils.Key: java.lang.String name>;

        $r9 = r2.<org.quartz.utils.Key: java.lang.String name>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public int compareTo(org.quartz.utils.Key)
    {
        org.quartz.utils.Key r0, r1;
        int i0, $i1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.quartz.utils.Key;

        r1 := @parameter0: org.quartz.utils.Key;

        $r2 = r0.<org.quartz.utils.Key: java.lang.String group>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("DEFAULT");

        if $z0 == 0 goto label1;

        $r9 = r1.<org.quartz.utils.Key: java.lang.String group>;

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("DEFAULT");

        if $z3 != 0 goto label1;

        return -1;

     label1:
        $r3 = r0.<org.quartz.utils.Key: java.lang.String group>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("DEFAULT");

        if $z1 != 0 goto label2;

        $r8 = r1.<org.quartz.utils.Key: java.lang.String group>;

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("DEFAULT");

        if $z2 == 0 goto label2;

        return 1;

     label2:
        $r4 = r0.<org.quartz.utils.Key: java.lang.String group>;

        $r5 = virtualinvoke r1.<org.quartz.utils.Key: java.lang.String getGroup()>();

        i0 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r5);

        if i0 == 0 goto label3;

        return i0;

     label3:
        $r6 = r0.<org.quartz.utils.Key: java.lang.String name>;

        $r7 = virtualinvoke r1.<org.quartz.utils.Key: java.lang.String getName()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int compareTo(java.lang.String)>($r7);

        return $i1;
    }

    public static java.lang.String createUniqueName(java.lang.String)
    {
        java.lang.String r0, r1, $r6, $r7, r8;
        java.util.UUID $r2, $r4;
        byte[] $r3;
        java.lang.Object[] $r5;

        r8 := @parameter0: java.lang.String;

        if r8 != null goto label1;

        r8 = "DEFAULT";

     label1:
        $r2 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        r0 = virtualinvoke $r2.<java.util.UUID: java.lang.String toString()>();

        $r3 = virtualinvoke r8.<java.lang.String: byte[] getBytes()>();

        $r4 = staticinvoke <java.util.UUID: java.util.UUID nameUUIDFromBytes(byte[])>($r3);

        r1 = virtualinvoke $r4.<java.util.UUID: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[2];

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(24);

        $r5[0] = $r6;

        $r5[1] = r0;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s-%s", $r5);

        return $r7;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.quartz.utils.Key r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.quartz.utils.Key;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.quartz.utils.Key) r1;

        $i0 = virtualinvoke r0.<org.quartz.utils.Key: int compareTo(org.quartz.utils.Key)>($r2);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.quartz.utils.Key: java.lang.String DEFAULT_GROUP> = "DEFAULT";

        <org.quartz.utils.Key: long serialVersionUID> = -7141167957642391350L;

        return;
    }
}
