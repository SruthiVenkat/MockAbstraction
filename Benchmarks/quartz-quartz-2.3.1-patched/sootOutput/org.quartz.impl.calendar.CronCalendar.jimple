public class org.quartz.impl.calendar.CronCalendar extends org.quartz.impl.calendar.BaseCalendar
{
    static final long serialVersionUID;
    org.quartz.CronExpression cronExpression;

    public void <init>(java.lang.String) throws java.text.ParseException
    {
        org.quartz.impl.calendar.CronCalendar r0;
        java.lang.String r1;

        r0 := @this: org.quartz.impl.calendar.CronCalendar;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.quartz.impl.calendar.CronCalendar: void <init>(org.quartz.Calendar,java.lang.String,java.util.TimeZone)>(null, r1, null);

        return;
    }

    public void <init>(org.quartz.Calendar, java.lang.String) throws java.text.ParseException
    {
        org.quartz.impl.calendar.CronCalendar r0;
        org.quartz.Calendar r1;
        java.lang.String r2;

        r0 := @this: org.quartz.impl.calendar.CronCalendar;

        r1 := @parameter0: org.quartz.Calendar;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.quartz.impl.calendar.CronCalendar: void <init>(org.quartz.Calendar,java.lang.String,java.util.TimeZone)>(r1, r2, null);

        return;
    }

    public void <init>(org.quartz.Calendar, java.lang.String, java.util.TimeZone) throws java.text.ParseException
    {
        org.quartz.impl.calendar.CronCalendar r0;
        org.quartz.Calendar r1;
        java.lang.String r2;
        java.util.TimeZone r3;
        org.quartz.CronExpression $r4, $r5;

        r0 := @this: org.quartz.impl.calendar.CronCalendar;

        r1 := @parameter0: org.quartz.Calendar;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.TimeZone;

        specialinvoke r0.<org.quartz.impl.calendar.BaseCalendar: void <init>(org.quartz.Calendar)>(r1);

        $r4 = new org.quartz.CronExpression;

        specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>(r2);

        r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression> = $r4;

        $r5 = r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression>;

        virtualinvoke $r5.<org.quartz.CronExpression: void setTimeZone(java.util.TimeZone)>(r3);

        return;
    }

    public java.lang.Object clone()
    {
        org.quartz.impl.calendar.CronCalendar r0, r1;
        java.lang.Object $r2;
        org.quartz.CronExpression $r3, $r4;

        r0 := @this: org.quartz.impl.calendar.CronCalendar;

        $r2 = specialinvoke r0.<org.quartz.impl.calendar.BaseCalendar: java.lang.Object clone()>();

        r1 = (org.quartz.impl.calendar.CronCalendar) $r2;

        $r3 = new org.quartz.CronExpression;

        $r4 = r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression>;

        specialinvoke $r3.<org.quartz.CronExpression: void <init>(org.quartz.CronExpression)>($r4);

        r1.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression> = $r3;

        return r1;
    }

    public java.util.TimeZone getTimeZone()
    {
        org.quartz.impl.calendar.CronCalendar r0;
        org.quartz.CronExpression $r1;
        java.util.TimeZone $r2;

        r0 := @this: org.quartz.impl.calendar.CronCalendar;

        $r1 = r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression>;

        $r2 = virtualinvoke $r1.<org.quartz.CronExpression: java.util.TimeZone getTimeZone()>();

        return $r2;
    }

    public void setTimeZone(java.util.TimeZone)
    {
        org.quartz.impl.calendar.CronCalendar r0;
        java.util.TimeZone r1;
        org.quartz.CronExpression $r2;

        r0 := @this: org.quartz.impl.calendar.CronCalendar;

        r1 := @parameter0: java.util.TimeZone;

        $r2 = r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression>;

        virtualinvoke $r2.<org.quartz.CronExpression: void setTimeZone(java.util.TimeZone)>(r1);

        return;
    }

    public boolean isTimeIncluded(long)
    {
        org.quartz.impl.calendar.CronCalendar r0;
        long l0;
        org.quartz.Calendar $r1, $r4;
        java.util.Date $r2;
        org.quartz.CronExpression $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.quartz.impl.calendar.CronCalendar;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.Calendar getBaseCalendar()>();

        if $r1 == null goto label1;

        $r4 = virtualinvoke r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.Calendar getBaseCalendar()>();

        $z1 = interfaceinvoke $r4.<org.quartz.Calendar: boolean isTimeIncluded(long)>(l0);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression>;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>(long)>(l0);

        $z0 = virtualinvoke $r3.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r2);

        if $z0 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public long getNextIncludedTime(long)
    {
        org.quartz.impl.calendar.CronCalendar r0;
        long l0, l1;
        java.util.Date $r1, $r6, $r8;
        org.quartz.CronExpression $r2, $r7;
        boolean $z0, $z1, $z2;
        org.quartz.Calendar $r3, $r4, $r5;

        r0 := @this: org.quartz.impl.calendar.CronCalendar;

        l0 := @parameter0: long;

        l1 = l0 + 1L;

     label1:
        $z2 = virtualinvoke r0.<org.quartz.impl.calendar.CronCalendar: boolean isTimeIncluded(long)>(l1);

        if $z2 != 0 goto label4;

        $r2 = r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression>;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>(l1);

        $z0 = virtualinvoke $r2.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r1);

        if $z0 == 0 goto label2;

        $r7 = r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression>;

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>(long)>(l1);

        $r8 = virtualinvoke $r7.<org.quartz.CronExpression: java.util.Date getNextInvalidTimeAfter(java.util.Date)>($r6);

        l1 = virtualinvoke $r8.<java.util.Date: long getTime()>();

        goto label1;

     label2:
        $r3 = virtualinvoke r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.Calendar getBaseCalendar()>();

        if $r3 == null goto label3;

        $r4 = virtualinvoke r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.Calendar getBaseCalendar()>();

        $z1 = interfaceinvoke $r4.<org.quartz.Calendar: boolean isTimeIncluded(long)>(l1);

        if $z1 != 0 goto label3;

        $r5 = virtualinvoke r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.Calendar getBaseCalendar()>();

        l1 = interfaceinvoke $r5.<org.quartz.Calendar: long getNextIncludedTime(long)>(l1);

        goto label1;

     label3:
        l1 = l1 + 1L;

        goto label1;

     label4:
        return l1;
    }

    public java.lang.String toString()
    {
        org.quartz.impl.calendar.CronCalendar r0;
        java.lang.StringBuffer $r2;
        org.quartz.Calendar $r4, $r11;
        org.quartz.CronExpression $r7;
        java.lang.String $r10, $r12;

        r0 := @this: org.quartz.impl.calendar.CronCalendar;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("base calendar: [");

        $r4 = virtualinvoke r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.Calendar getBaseCalendar()>();

        if $r4 == null goto label1;

        $r11 = virtualinvoke r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.Calendar getBaseCalendar()>();

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        goto label2;

     label1:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

     label2:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("], excluded cron expression: \'");

        $r7 = r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    public org.quartz.CronExpression getCronExpression()
    {
        org.quartz.impl.calendar.CronCalendar r0;
        org.quartz.CronExpression $r1;

        r0 := @this: org.quartz.impl.calendar.CronCalendar;

        $r1 = r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression>;

        return $r1;
    }

    public void setCronExpression(java.lang.String) throws java.text.ParseException
    {
        org.quartz.impl.calendar.CronCalendar r0;
        java.lang.String r1;
        org.quartz.CronExpression $r3;

        r0 := @this: org.quartz.impl.calendar.CronCalendar;

        r1 := @parameter0: java.lang.String;

        $r3 = new org.quartz.CronExpression;

        specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>(r1);

        r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression> = $r3;

        return;
    }

    public void setCronExpression(org.quartz.CronExpression)
    {
        org.quartz.impl.calendar.CronCalendar r0;
        org.quartz.CronExpression r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.quartz.impl.calendar.CronCalendar;

        r1 := @parameter0: org.quartz.CronExpression;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("expression cannot be null");

        throw $r2;

     label1:
        r0.<org.quartz.impl.calendar.CronCalendar: org.quartz.CronExpression cronExpression> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.quartz.impl.calendar.CronCalendar: long serialVersionUID> = -8172103999750856831L;

        return;
    }
}
