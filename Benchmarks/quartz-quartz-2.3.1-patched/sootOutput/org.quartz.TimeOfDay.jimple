public class org.quartz.TimeOfDay extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final int hour;
    private final int minute;
    private final int second;

    public void <init>(int, int, int)
    {
        org.quartz.TimeOfDay r0;
        int i0, i1, i2;

        r0 := @this: org.quartz.TimeOfDay;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.TimeOfDay: int hour> = i0;

        r0.<org.quartz.TimeOfDay: int minute> = i1;

        r0.<org.quartz.TimeOfDay: int second> = i2;

        specialinvoke r0.<org.quartz.TimeOfDay: void validate()>();

        return;
    }

    public void <init>(int, int)
    {
        org.quartz.TimeOfDay r0;
        int i0, i1;

        r0 := @this: org.quartz.TimeOfDay;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.TimeOfDay: int hour> = i0;

        r0.<org.quartz.TimeOfDay: int minute> = i1;

        r0.<org.quartz.TimeOfDay: int second> = 0;

        specialinvoke r0.<org.quartz.TimeOfDay: void validate()>();

        return;
    }

    private void validate()
    {
        org.quartz.TimeOfDay r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.IllegalArgumentException $r1, $r2, $r3;

        r0 := @this: org.quartz.TimeOfDay;

        $i0 = r0.<org.quartz.TimeOfDay: int hour>;

        if $i0 < 0 goto label1;

        $i1 = r0.<org.quartz.TimeOfDay: int hour>;

        if $i1 <= 23 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Hour must be from 0 to 23");

        throw $r1;

     label2:
        $i2 = r0.<org.quartz.TimeOfDay: int minute>;

        if $i2 < 0 goto label3;

        $i3 = r0.<org.quartz.TimeOfDay: int minute>;

        if $i3 <= 59 goto label4;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Minute must be from 0 to 59");

        throw $r2;

     label4:
        $i4 = r0.<org.quartz.TimeOfDay: int second>;

        if $i4 < 0 goto label5;

        $i5 = r0.<org.quartz.TimeOfDay: int second>;

        if $i5 <= 59 goto label6;

     label5:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Second must be from 0 to 59");

        throw $r3;

     label6:
        return;
    }

    public static org.quartz.TimeOfDay hourMinuteAndSecondOfDay(int, int, int)
    {
        int i0, i1, i2;
        org.quartz.TimeOfDay $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = new org.quartz.TimeOfDay;

        specialinvoke $r0.<org.quartz.TimeOfDay: void <init>(int,int,int)>(i0, i1, i2);

        return $r0;
    }

    public static org.quartz.TimeOfDay hourAndMinuteOfDay(int, int)
    {
        int i0, i1;
        org.quartz.TimeOfDay $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new org.quartz.TimeOfDay;

        specialinvoke $r0.<org.quartz.TimeOfDay: void <init>(int,int)>(i0, i1);

        return $r0;
    }

    public int getHour()
    {
        org.quartz.TimeOfDay r0;
        int $i0;

        r0 := @this: org.quartz.TimeOfDay;

        $i0 = r0.<org.quartz.TimeOfDay: int hour>;

        return $i0;
    }

    public int getMinute()
    {
        org.quartz.TimeOfDay r0;
        int $i0;

        r0 := @this: org.quartz.TimeOfDay;

        $i0 = r0.<org.quartz.TimeOfDay: int minute>;

        return $i0;
    }

    public int getSecond()
    {
        org.quartz.TimeOfDay r0;
        int $i0;

        r0 := @this: org.quartz.TimeOfDay;

        $i0 = r0.<org.quartz.TimeOfDay: int second>;

        return $i0;
    }

    public boolean before(org.quartz.TimeOfDay)
    {
        org.quartz.TimeOfDay r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.quartz.TimeOfDay;

        r1 := @parameter0: org.quartz.TimeOfDay;

        $i1 = r1.<org.quartz.TimeOfDay: int hour>;

        $i0 = r0.<org.quartz.TimeOfDay: int hour>;

        if $i1 <= $i0 goto label1;

        return 1;

     label1:
        $i3 = r1.<org.quartz.TimeOfDay: int hour>;

        $i2 = r0.<org.quartz.TimeOfDay: int hour>;

        if $i3 >= $i2 goto label2;

        return 0;

     label2:
        $i5 = r1.<org.quartz.TimeOfDay: int minute>;

        $i4 = r0.<org.quartz.TimeOfDay: int minute>;

        if $i5 <= $i4 goto label3;

        return 1;

     label3:
        $i7 = r1.<org.quartz.TimeOfDay: int minute>;

        $i6 = r0.<org.quartz.TimeOfDay: int minute>;

        if $i7 >= $i6 goto label4;

        return 0;

     label4:
        $i9 = r1.<org.quartz.TimeOfDay: int second>;

        $i8 = r0.<org.quartz.TimeOfDay: int second>;

        if $i9 <= $i8 goto label5;

        return 1;

     label5:
        $i11 = r1.<org.quartz.TimeOfDay: int second>;

        $i10 = r0.<org.quartz.TimeOfDay: int second>;

        if $i11 >= $i10 goto label6;

        return 0;

     label6:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        org.quartz.TimeOfDay r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.quartz.TimeOfDay;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.quartz.TimeOfDay;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.quartz.TimeOfDay) r1;

        $i1 = r2.<org.quartz.TimeOfDay: int hour>;

        $i0 = r0.<org.quartz.TimeOfDay: int hour>;

        if $i1 != $i0 goto label2;

        $i3 = r2.<org.quartz.TimeOfDay: int minute>;

        $i2 = r0.<org.quartz.TimeOfDay: int minute>;

        if $i3 != $i2 goto label2;

        $i5 = r2.<org.quartz.TimeOfDay: int second>;

        $i4 = r0.<org.quartz.TimeOfDay: int second>;

        if $i5 != $i4 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        org.quartz.TimeOfDay r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.quartz.TimeOfDay;

        $i0 = r0.<org.quartz.TimeOfDay: int hour>;

        $i3 = $i0 + 1;

        $i1 = r0.<org.quartz.TimeOfDay: int minute>;

        $i2 = $i1 + 1;

        $i6 = $i3 ^ $i2;

        $i4 = r0.<org.quartz.TimeOfDay: int second>;

        $i5 = $i4 + 1;

        $i7 = $i6 ^ $i5;

        return $i7;
    }

    public java.util.Date getTimeOfDayForDate(java.util.Date)
    {
        org.quartz.TimeOfDay r0;
        java.util.Date r1, $r3;
        java.util.Calendar r2;
        int $i0, $i1, $i2;

        r0 := @this: org.quartz.TimeOfDay;

        r1 := @parameter0: java.util.Date;

        if r1 != null goto label1;

        return null;

     label1:
        r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        $i0 = r0.<org.quartz.TimeOfDay: int hour>;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(11, $i0);

        $i1 = r0.<org.quartz.TimeOfDay: int minute>;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, $i1);

        $i2 = r0.<org.quartz.TimeOfDay: int second>;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, $i2);

        virtualinvoke r2.<java.util.Calendar: void clear(int)>(14);

        $r3 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        return $r3;
    }

    public static org.quartz.TimeOfDay hourAndMinuteAndSecondFromDate(java.util.Date)
    {
        java.util.Date r0;
        org.quartz.TimeOfDay $r1;

        r0 := @parameter0: java.util.Date;

        $r1 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteAndSecondFromDate(java.util.Date,java.util.TimeZone)>(r0, null);

        return $r1;
    }

    public static org.quartz.TimeOfDay hourAndMinuteAndSecondFromDate(java.util.Date, java.util.TimeZone)
    {
        java.util.Date r0;
        java.util.TimeZone r1;
        java.util.Calendar r2;
        org.quartz.TimeOfDay $r3;
        int $i0, $i1, $i2;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.util.TimeZone;

        if r0 != null goto label1;

        return null;

     label1:
        r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>(r0);

        if r1 == null goto label2;

        virtualinvoke r2.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(r1);

     label2:
        $r3 = new org.quartz.TimeOfDay;

        $i0 = virtualinvoke r2.<java.util.Calendar: int get(int)>(11);

        $i1 = virtualinvoke r2.<java.util.Calendar: int get(int)>(12);

        $i2 = virtualinvoke r2.<java.util.Calendar: int get(int)>(13);

        specialinvoke $r3.<org.quartz.TimeOfDay: void <init>(int,int,int)>($i0, $i1, $i2);

        return $r3;
    }

    public static org.quartz.TimeOfDay hourAndMinuteFromDate(java.util.Date)
    {
        java.util.Date r0;
        org.quartz.TimeOfDay $r1;

        r0 := @parameter0: java.util.Date;

        $r1 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteFromDate(java.util.Date,java.util.TimeZone)>(r0, null);

        return $r1;
    }

    public static org.quartz.TimeOfDay hourAndMinuteFromDate(java.util.Date, java.util.TimeZone)
    {
        java.util.Date r0;
        java.util.TimeZone r1;
        java.util.Calendar r2;
        org.quartz.TimeOfDay $r3;
        int $i0, $i1;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.util.TimeZone;

        if r0 != null goto label1;

        return null;

     label1:
        r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>(r0);

        if r1 == null goto label2;

        virtualinvoke r2.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(r1);

     label2:
        $r3 = new org.quartz.TimeOfDay;

        $i0 = virtualinvoke r2.<java.util.Calendar: int get(int)>(11);

        $i1 = virtualinvoke r2.<java.util.Calendar: int get(int)>(12);

        specialinvoke $r3.<org.quartz.TimeOfDay: void <init>(int,int)>($i0, $i1);

        return $r3;
    }

    public java.lang.String toString()
    {
        org.quartz.TimeOfDay r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2;
        java.lang.String $r9;

        r0 := @this: org.quartz.TimeOfDay;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TimeOfDay[");

        $i0 = r0.<org.quartz.TimeOfDay: int hour>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i1 = r0.<org.quartz.TimeOfDay: int minute>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i2 = r0.<org.quartz.TimeOfDay: int second>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public static void <clinit>()
    {
        <org.quartz.TimeOfDay: long serialVersionUID> = 2964774315889061771L;

        return;
    }
}
