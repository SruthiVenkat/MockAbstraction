public class org.quartz.listeners.JobChainingJobListener extends org.quartz.listeners.JobListenerSupport
{
    private java.lang.String name;
    private java.util.Map chainLinks;

    public void <init>(java.lang.String)
    {
        org.quartz.listeners.JobChainingJobListener r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.quartz.listeners.JobChainingJobListener;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.quartz.listeners.JobListenerSupport: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener name cannot be null!");

        throw $r3;

     label1:
        r0.<org.quartz.listeners.JobChainingJobListener: java.lang.String name> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.quartz.listeners.JobChainingJobListener: java.util.Map chainLinks> = $r2;

        return;
    }

    public java.lang.String getName()
    {
        org.quartz.listeners.JobChainingJobListener r0;
        java.lang.String $r1;

        r0 := @this: org.quartz.listeners.JobChainingJobListener;

        $r1 = r0.<org.quartz.listeners.JobChainingJobListener: java.lang.String name>;

        return $r1;
    }

    public void addJobChainLink(org.quartz.JobKey, org.quartz.JobKey)
    {
        org.quartz.listeners.JobChainingJobListener r0;
        org.quartz.JobKey r1, r2;
        java.lang.IllegalArgumentException $r3, $r5;
        java.lang.String $r4, $r6;
        java.util.Map $r7;

        r0 := @this: org.quartz.listeners.JobChainingJobListener;

        r1 := @parameter0: org.quartz.JobKey;

        r2 := @parameter1: org.quartz.JobKey;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key cannot be null!");

        throw $r3;

     label2:
        $r4 = virtualinvoke r1.<org.quartz.JobKey: java.lang.String getName()>();

        if $r4 == null goto label3;

        $r6 = virtualinvoke r2.<org.quartz.JobKey: java.lang.String getName()>();

        if $r6 != null goto label4;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key cannot have a null name!");

        throw $r5;

     label4:
        $r7 = r0.<org.quartz.listeners.JobChainingJobListener: java.util.Map chainLinks>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void jobWasExecuted(org.quartz.JobExecutionContext, org.quartz.JobExecutionException)
    {
        org.quartz.listeners.JobChainingJobListener r0;
        org.quartz.JobExecutionContext r1;
        org.quartz.JobExecutionException r2;
        org.quartz.JobKey r3, $r7, $r13;
        java.util.Map $r5;
        org.quartz.JobDetail $r6, $r12;
        java.lang.Object $r8;
        org.slf4j.Logger $r9, $r21;
        java.lang.StringBuilder $r10, $r11, $r14, $r15, $r16, $r17, $r22, $r23, $r24, $r25;
        java.lang.String $r18, $r26;
        org.quartz.Scheduler $r19;
        org.quartz.SchedulerException $r20;

        r0 := @this: org.quartz.listeners.JobChainingJobListener;

        r1 := @parameter0: org.quartz.JobExecutionContext;

        r2 := @parameter1: org.quartz.JobExecutionException;

        $r5 = r0.<org.quartz.listeners.JobChainingJobListener: java.util.Map chainLinks>;

        $r6 = interfaceinvoke r1.<org.quartz.JobExecutionContext: org.quartz.JobDetail getJobDetail()>();

        $r7 = interfaceinvoke $r6.<org.quartz.JobDetail: org.quartz.JobKey getKey()>();

        $r8 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r3 = (org.quartz.JobKey) $r8;

        if r3 != null goto label1;

        return;

     label1:
        $r9 = virtualinvoke r0.<org.quartz.listeners.JobChainingJobListener: org.slf4j.Logger getLog()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job \'");

        $r12 = interfaceinvoke r1.<org.quartz.JobExecutionContext: org.quartz.JobDetail getJobDetail()>();

        $r13 = interfaceinvoke $r12.<org.quartz.JobDetail: org.quartz.JobKey getKey()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' will now chain to Job \'");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r18);

     label2:
        $r19 = interfaceinvoke r1.<org.quartz.JobExecutionContext: org.quartz.Scheduler getScheduler()>();

        interfaceinvoke $r19.<org.quartz.Scheduler: void triggerJob(org.quartz.JobKey)>(r3);

     label3:
        goto label5;

     label4:
        $r20 := @caughtexception;

        $r21 = virtualinvoke r0.<org.quartz.listeners.JobChainingJobListener: org.slf4j.Logger getLog()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error encountered during chaining to Job \'");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r26, $r20);

     label5:
        return;

        catch org.quartz.SchedulerException from label2 to label3 with label4;
    }
}
