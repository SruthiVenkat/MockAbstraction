public class org.quartz.impl.jdbcjobstore.SimpleSemaphore extends java.lang.Object implements org.quartz.impl.jdbcjobstore.Semaphore
{
    java.lang.ThreadLocal lockOwners;
    java.util.HashSet locks;
    private final org.slf4j.Logger log;

    public void <init>()
    {
        org.quartz.impl.jdbcjobstore.SimpleSemaphore r0;
        java.lang.ThreadLocal $r1;
        java.util.HashSet $r2;
        java.lang.Class $r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.quartz.impl.jdbcjobstore.SimpleSemaphore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: java.lang.ThreadLocal lockOwners> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: java.util.HashSet locks> = $r2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r3);

        r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger log> = $r4;

        return;
    }

    protected org.slf4j.Logger getLog()
    {
        org.quartz.impl.jdbcjobstore.SimpleSemaphore r0;
        org.slf4j.Logger $r1;

        r0 := @this: org.quartz.impl.jdbcjobstore.SimpleSemaphore;

        $r1 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger log>;

        return $r1;
    }

    private java.util.HashSet getThreadLocks()
    {
        org.quartz.impl.jdbcjobstore.SimpleSemaphore r0;
        java.lang.ThreadLocal $r1, $r4;
        java.lang.Object $r2;
        java.util.HashSet $r3, r5;

        r0 := @this: org.quartz.impl.jdbcjobstore.SimpleSemaphore;

        $r1 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: java.lang.ThreadLocal lockOwners>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r5 = (java.util.HashSet) $r2;

        if r5 != null goto label1;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r5 = $r3;

        $r4 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: java.lang.ThreadLocal lockOwners>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r3);

     label1:
        return r5;
    }

    public synchronized boolean obtainLock(java.sql.Connection, java.lang.String)
    {
        org.quartz.impl.jdbcjobstore.SimpleSemaphore r0;
        java.sql.Connection r1;
        org.slf4j.Logger $r3, $r4, $r6, $r16, $r17, $r21, $r30, $r39, $r48, $r50;
        boolean $z0, $z1, $z2, $z3, $z4, $z7, $z8;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r12, $r13, $r20, $r22, $r23, $r24, $r27, $r29, $r31, $r32, $r33, $r36, $r38, $r40, $r41, $r42, $r45, $r49, $r51, $r52, $r53, $r56;
        java.lang.Thread $r10, $r25, $r34, $r43, $r54;
        java.lang.String $r11, $r14, $r26, $r28, $r35, $r37, $r44, $r46, $r55, $r57, r58, r59;
        java.lang.Exception $r15;
        java.util.HashSet $r18, $r19, $r60;
        java.lang.InterruptedException $r47;

        r0 := @this: org.quartz.impl.jdbcjobstore.SimpleSemaphore;

        r1 := @parameter0: java.sql.Connection;

        r58 := @parameter1: java.lang.String;

        r59 = virtualinvoke r58.<java.lang.String: java.lang.String intern()>();

        $r3 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $r39 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger log>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lock \'");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is desired by: ");

        $r43 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r44 = virtualinvoke $r43.<java.lang.Thread: java.lang.String getName()>();

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r39.<org.slf4j.Logger: void debug(java.lang.String)>($r46);

     label01:
        $z1 = virtualinvoke r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: boolean isLockOwner(java.lang.String)>(r59);

        if $z1 != 0 goto label09;

        $r16 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger log>;

        $z3 = interfaceinvoke $r16.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label02;

        $r30 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger log>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lock \'");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is being obtained: ");

        $r34 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r35 = virtualinvoke $r34.<java.lang.Thread: java.lang.String getName()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String)>($r37);

     label02:
        $r60 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: java.util.HashSet locks>;

        $z8 = virtualinvoke $r60.<java.util.HashSet: boolean contains(java.lang.Object)>(r59);

        if $z8 == 0 goto label07;

     label03:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label04:
        goto label02;

     label05:
        $r47 := @caughtexception;

        $r48 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger log>;

        $z7 = interfaceinvoke $r48.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z7 == 0 goto label06;

        $r50 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger log>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lock \'");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was not obtained by: ");

        $r54 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r55 = virtualinvoke $r54.<java.lang.Thread: java.lang.String getName()>();

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r50.<org.slf4j.Logger: void debug(java.lang.String)>($r57);

     label06:
        goto label02;

     label07:
        $r17 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger log>;

        $z4 = interfaceinvoke $r17.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z4 == 0 goto label08;

        $r21 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger log>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lock \'");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' given to: ");

        $r25 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r26 = virtualinvoke $r25.<java.lang.Thread: java.lang.String getName()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String)>($r28);

     label08:
        $r18 = specialinvoke r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: java.util.HashSet getThreadLocks()>();

        virtualinvoke $r18.<java.util.HashSet: boolean add(java.lang.Object)>(r59);

        $r19 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: java.util.HashSet locks>;

        virtualinvoke $r19.<java.util.HashSet: boolean add(java.lang.Object)>(r59);

        goto label10;

     label09:
        $r4 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label10;

        $r6 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lock \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' already owned by: ");

        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r11 = virtualinvoke $r10.<java.lang.Thread: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- but not owner!");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.Exception;

        specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>("stack-trace of wrongful returner");

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r14, $r15);

     label10:
        return 1;

        catch java.lang.InterruptedException from label03 to label04 with label05;
    }

    public synchronized void releaseLock(java.lang.String)
    {
        org.quartz.impl.jdbcjobstore.SimpleSemaphore r0;
        boolean $z0, $z1, $z2;
        org.slf4j.Logger $r1, $r2, $r13, $r16;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r9, $r10, $r17, $r18, $r19, $r20, $r23;
        java.lang.Thread $r7, $r21;
        java.lang.String $r8, $r11, $r22, $r24, r25, r26;
        java.lang.Exception $r12;
        java.util.HashSet $r14, $r15;

        r0 := @this: org.quartz.impl.jdbcjobstore.SimpleSemaphore;

        r25 := @parameter0: java.lang.String;

        r26 = virtualinvoke r25.<java.lang.String: java.lang.String intern()>();

        $z0 = virtualinvoke r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: boolean isLockOwner(java.lang.String)>(r26);

        if $z0 == 0 goto label2;

        $r13 = virtualinvoke r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger getLog()>();

        $z2 = interfaceinvoke $r13.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label1;

        $r16 = virtualinvoke r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger getLog()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lock \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' retuned by: ");

        $r21 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r22 = virtualinvoke $r21.<java.lang.Thread: java.lang.String getName()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>($r24);

     label1:
        $r14 = specialinvoke r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: java.util.HashSet getThreadLocks()>();

        virtualinvoke $r14.<java.util.HashSet: boolean remove(java.lang.Object)>(r26);

        $r15 = r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: java.util.HashSet locks>;

        virtualinvoke $r15.<java.util.HashSet: boolean remove(java.lang.Object)>(r26);

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        goto label3;

     label2:
        $r1 = virtualinvoke r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger getLog()>();

        $z1 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        $r2 = virtualinvoke r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: org.slf4j.Logger getLog()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lock \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' attempt to retun by: ");

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r8 = virtualinvoke $r7.<java.lang.Thread: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- but not owner!");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new java.lang.Exception;

        specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>("stack-trace of wrongful returner");

        interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r11, $r12);

     label3:
        return;
    }

    public synchronized boolean isLockOwner(java.lang.String)
    {
        org.quartz.impl.jdbcjobstore.SimpleSemaphore r0;
        java.util.HashSet $r1;
        boolean $z0;
        java.lang.String r2, r3;

        r0 := @this: org.quartz.impl.jdbcjobstore.SimpleSemaphore;

        r2 := @parameter0: java.lang.String;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        $r1 = specialinvoke r0.<org.quartz.impl.jdbcjobstore.SimpleSemaphore: java.util.HashSet getThreadLocks()>();

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r3);

        return $z0;
    }

    public boolean requiresConnection()
    {
        org.quartz.impl.jdbcjobstore.SimpleSemaphore r0;

        r0 := @this: org.quartz.impl.jdbcjobstore.SimpleSemaphore;

        return 0;
    }
}
