public class org.quartz.TriggerUtils extends java.lang.Object
{

    private void <init>()
    {
        org.quartz.TriggerUtils r0;

        r0 := @this: org.quartz.TriggerUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List computeFireTimes(org.quartz.spi.OperableTrigger, org.quartz.Calendar, int)
    {
        org.quartz.spi.OperableTrigger r0, r3;
        org.quartz.Calendar r1;
        int i0, i1;
        java.util.Date r4, $r7;
        java.util.LinkedList $r5;
        java.lang.Object $r6;
        java.util.List $r8;

        r0 := @parameter0: org.quartz.spi.OperableTrigger;

        r1 := @parameter1: org.quartz.Calendar;

        i0 := @parameter2: int;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        $r6 = interfaceinvoke r0.<org.quartz.spi.OperableTrigger: java.lang.Object clone()>();

        r3 = (org.quartz.spi.OperableTrigger) $r6;

        $r7 = interfaceinvoke r3.<org.quartz.spi.OperableTrigger: java.util.Date getNextFireTime()>();

        if $r7 != null goto label1;

        interfaceinvoke r3.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(r1);

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r4 = interfaceinvoke r3.<org.quartz.spi.OperableTrigger: java.util.Date getNextFireTime()>();

        if r4 == null goto label3;

        virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>(r4);

        interfaceinvoke r3.<org.quartz.spi.OperableTrigger: void triggered(org.quartz.Calendar)>(r1);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        return $r8;
    }

    public static java.util.Date computeEndTimeToAllowParticularNumberOfFirings(org.quartz.spi.OperableTrigger, org.quartz.Calendar, int)
    {
        org.quartz.spi.OperableTrigger r0, r2;
        org.quartz.Calendar r1;
        int i0, i3, i4;
        java.util.Date r3, $r5, $r6, r8;
        java.lang.Object $r4;
        long $l1, $l2;

        r0 := @parameter0: org.quartz.spi.OperableTrigger;

        r1 := @parameter1: org.quartz.Calendar;

        i0 := @parameter2: int;

        $r4 = interfaceinvoke r0.<org.quartz.spi.OperableTrigger: java.lang.Object clone()>();

        r2 = (org.quartz.spi.OperableTrigger) $r4;

        $r5 = interfaceinvoke r2.<org.quartz.spi.OperableTrigger: java.util.Date getNextFireTime()>();

        if $r5 != null goto label1;

        interfaceinvoke r2.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(r1);

     label1:
        i3 = 0;

        r8 = null;

        i4 = 0;

     label2:
        if i4 >= i0 goto label4;

        r3 = interfaceinvoke r2.<org.quartz.spi.OperableTrigger: java.util.Date getNextFireTime()>();

        if r3 == null goto label4;

        i3 = i3 + 1;

        interfaceinvoke r2.<org.quartz.spi.OperableTrigger: void triggered(org.quartz.Calendar)>(r1);

        if i3 != i0 goto label3;

        r8 = r3;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        if r8 != null goto label5;

        return null;

     label5:
        $r6 = new java.util.Date;

        $l1 = virtualinvoke r8.<java.util.Date: long getTime()>();

        $l2 = $l1 + 1000L;

        specialinvoke $r6.<java.util.Date: void <init>(long)>($l2);

        return $r6;
    }

    public static java.util.List computeFireTimesBetween(org.quartz.spi.OperableTrigger, org.quartz.Calendar, java.util.Date, java.util.Date)
    {
        org.quartz.spi.OperableTrigger r0, r5;
        org.quartz.Calendar r1;
        java.util.Date r2, r3, r6, $r9;
        java.util.LinkedList $r7;
        java.lang.Object $r8;
        java.util.List $r10;
        boolean $z0, $z1;

        r0 := @parameter0: org.quartz.spi.OperableTrigger;

        r1 := @parameter1: org.quartz.Calendar;

        r2 := @parameter2: java.util.Date;

        r3 := @parameter3: java.util.Date;

        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        $r8 = interfaceinvoke r0.<org.quartz.spi.OperableTrigger: java.lang.Object clone()>();

        r5 = (org.quartz.spi.OperableTrigger) $r8;

        $r9 = interfaceinvoke r5.<org.quartz.spi.OperableTrigger: java.util.Date getNextFireTime()>();

        if $r9 != null goto label1;

        interfaceinvoke r5.<org.quartz.spi.OperableTrigger: void setStartTime(java.util.Date)>(r2);

        interfaceinvoke r5.<org.quartz.spi.OperableTrigger: void setEndTime(java.util.Date)>(r3);

        interfaceinvoke r5.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(r1);

     label1:
        r6 = interfaceinvoke r5.<org.quartz.spi.OperableTrigger: java.util.Date getNextFireTime()>();

        if r6 == null goto label4;

        $z0 = virtualinvoke r6.<java.util.Date: boolean before(java.util.Date)>(r2);

        if $z0 == 0 goto label2;

        interfaceinvoke r5.<org.quartz.spi.OperableTrigger: void triggered(org.quartz.Calendar)>(r1);

        goto label1;

     label2:
        $z1 = virtualinvoke r6.<java.util.Date: boolean after(java.util.Date)>(r3);

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        virtualinvoke $r7.<java.util.LinkedList: boolean add(java.lang.Object)>(r6);

        interfaceinvoke r5.<org.quartz.spi.OperableTrigger: void triggered(org.quartz.Calendar)>(r1);

        goto label1;

     label4:
        $r10 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        return $r10;
    }
}
