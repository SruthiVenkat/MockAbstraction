public class org.quartz.impl.matchers.AndMatcher extends java.lang.Object implements org.quartz.Matcher
{
    private static final long serialVersionUID;
    protected org.quartz.Matcher leftOperand;
    protected org.quartz.Matcher rightOperand;

    protected void <init>(org.quartz.Matcher, org.quartz.Matcher)
    {
        org.quartz.impl.matchers.AndMatcher r0;
        org.quartz.Matcher r1, r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.quartz.impl.matchers.AndMatcher;

        r1 := @parameter0: org.quartz.Matcher;

        r2 := @parameter1: org.quartz.Matcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Two non-null operands required!");

        throw $r3;

     label2:
        r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher leftOperand> = r1;

        r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher rightOperand> = r2;

        return;
    }

    public static org.quartz.impl.matchers.AndMatcher and(org.quartz.Matcher, org.quartz.Matcher)
    {
        org.quartz.Matcher r0, r1;
        org.quartz.impl.matchers.AndMatcher $r2;

        r0 := @parameter0: org.quartz.Matcher;

        r1 := @parameter1: org.quartz.Matcher;

        $r2 = new org.quartz.impl.matchers.AndMatcher;

        specialinvoke $r2.<org.quartz.impl.matchers.AndMatcher: void <init>(org.quartz.Matcher,org.quartz.Matcher)>(r0, r1);

        return $r2;
    }

    public boolean isMatch(org.quartz.utils.Key)
    {
        org.quartz.impl.matchers.AndMatcher r0;
        org.quartz.utils.Key r1;
        org.quartz.Matcher $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.quartz.impl.matchers.AndMatcher;

        r1 := @parameter0: org.quartz.utils.Key;

        $r2 = r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher leftOperand>;

        $z0 = interfaceinvoke $r2.<org.quartz.Matcher: boolean isMatch(org.quartz.utils.Key)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher rightOperand>;

        $z1 = interfaceinvoke $r3.<org.quartz.Matcher: boolean isMatch(org.quartz.utils.Key)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public org.quartz.Matcher getLeftOperand()
    {
        org.quartz.impl.matchers.AndMatcher r0;
        org.quartz.Matcher $r1;

        r0 := @this: org.quartz.impl.matchers.AndMatcher;

        $r1 = r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher leftOperand>;

        return $r1;
    }

    public org.quartz.Matcher getRightOperand()
    {
        org.quartz.impl.matchers.AndMatcher r0;
        org.quartz.Matcher $r1;

        r0 := @this: org.quartz.impl.matchers.AndMatcher;

        $r1 = r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher rightOperand>;

        return $r1;
    }

    public int hashCode()
    {
        org.quartz.impl.matchers.AndMatcher r0;
        org.quartz.Matcher $r1, $r2, $r3, $r4;
        int $i1, $i2, $i4, i5, $i6, i7;

        r0 := @this: org.quartz.impl.matchers.AndMatcher;

        $i1 = 31 * 1;

        $r1 = r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher leftOperand>;

        if $r1 != null goto label1;

        $i4 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher leftOperand>;

        $i4 = interfaceinvoke $r2.<org.quartz.Matcher: int hashCode()>();

     label2:
        i5 = $i1 + $i4;

        $i2 = 31 * i5;

        $r3 = r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher rightOperand>;

        if $r3 != null goto label3;

        $i6 = 0;

        goto label4;

     label3:
        $r4 = r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher rightOperand>;

        $i6 = interfaceinvoke $r4.<org.quartz.Matcher: int hashCode()>();

     label4:
        i7 = $i2 + $i6;

        return i7;
    }

    public boolean equals(java.lang.Object)
    {
        org.quartz.impl.matchers.AndMatcher r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        org.quartz.Matcher $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        boolean $z0, $z1;

        r0 := @this: org.quartz.impl.matchers.AndMatcher;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (org.quartz.impl.matchers.AndMatcher) r1;

        $r5 = r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher leftOperand>;

        if $r5 != null goto label4;

        $r12 = r2.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher leftOperand>;

        if $r12 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher leftOperand>;

        $r6 = r2.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher leftOperand>;

        $z0 = interfaceinvoke $r7.<org.quartz.Matcher: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher rightOperand>;

        if $r8 != null goto label6;

        $r11 = r2.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher rightOperand>;

        if $r11 == null goto label7;

        return 0;

     label6:
        $r10 = r0.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher rightOperand>;

        $r9 = r2.<org.quartz.impl.matchers.AndMatcher: org.quartz.Matcher rightOperand>;

        $z1 = interfaceinvoke $r10.<org.quartz.Matcher: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public static void <clinit>()
    {
        <org.quartz.impl.matchers.AndMatcher: long serialVersionUID> = 4697276220890670941L;

        return;
    }
}
