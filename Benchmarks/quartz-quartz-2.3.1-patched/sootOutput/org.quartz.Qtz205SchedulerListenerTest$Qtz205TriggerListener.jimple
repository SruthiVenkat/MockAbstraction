public class org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener extends java.lang.Object implements org.quartz.TriggerListener
{
    private volatile int fireCount;

    public void <init>()
    {
        org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener r0;

        r0 := @this: org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getFireCount()
    {
        org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener r0;
        int $i0;

        r0 := @this: org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener;

        $i0 = r0.<org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener: int fireCount>;

        return $i0;
    }

    public java.lang.String getName()
    {
        org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener r0;

        r0 := @this: org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener;

        return "Qtz205TriggerListener";
    }

    public void triggerFired(org.quartz.Trigger, org.quartz.JobExecutionContext)
    {
        org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener r0;
        org.quartz.Trigger r1;
        org.quartz.JobExecutionContext r2;
        int $i0, $i1, $i2;
        org.slf4j.Logger $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener;

        r1 := @parameter0: org.quartz.Trigger;

        r2 := @parameter1: org.quartz.JobExecutionContext;

        $i0 = r0.<org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener: int fireCount>;

        $i1 = $i0 + 1;

        r0.<org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener: int fireCount> = $i1;

        $r3 = staticinvoke <org.quartz.Qtz205SchedulerListenerTest: org.slf4j.Logger access$000()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trigger fired. count ");

        $i2 = r0.<org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener: int fireCount>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r7);

        return;
    }

    public boolean vetoJobExecution(org.quartz.Trigger, org.quartz.JobExecutionContext)
    {
        org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener r0;
        org.quartz.Trigger r1;
        org.quartz.JobExecutionContext r2;
        int $i0;
        org.slf4j.Logger $r3;

        r0 := @this: org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener;

        r1 := @parameter0: org.quartz.Trigger;

        r2 := @parameter1: org.quartz.JobExecutionContext;

        $i0 = r0.<org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener: int fireCount>;

        if $i0 < 3 goto label1;

        $r3 = staticinvoke <org.quartz.Qtz205SchedulerListenerTest: org.slf4j.Logger access$000()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Job execution vetoed.");

        return 1;

     label1:
        return 0;
    }

    public void triggerMisfired(org.quartz.Trigger)
    {
        org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener r0;
        org.quartz.Trigger r1;

        r0 := @this: org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener;

        r1 := @parameter0: org.quartz.Trigger;

        return;
    }

    public void triggerComplete(org.quartz.Trigger, org.quartz.JobExecutionContext, org.quartz.Trigger$CompletedExecutionInstruction)
    {
        org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener r0;
        org.quartz.Trigger r1;
        org.quartz.JobExecutionContext r2;
        org.quartz.Trigger$CompletedExecutionInstruction r3;

        r0 := @this: org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener;

        r1 := @parameter0: org.quartz.Trigger;

        r2 := @parameter1: org.quartz.JobExecutionContext;

        r3 := @parameter2: org.quartz.Trigger$CompletedExecutionInstruction;

        return;
    }
}
