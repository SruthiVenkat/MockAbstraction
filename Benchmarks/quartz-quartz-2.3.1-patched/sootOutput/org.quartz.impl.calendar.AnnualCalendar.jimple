public class org.quartz.impl.calendar.AnnualCalendar extends org.quartz.impl.calendar.BaseCalendar implements org.quartz.Calendar, java.io.Serializable
{
    static final long serialVersionUID;
    private java.util.ArrayList excludeDays;
    private boolean dataSorted;

    public void <init>()
    {
        org.quartz.impl.calendar.AnnualCalendar r0;
        java.util.ArrayList $r1;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        specialinvoke r0.<org.quartz.impl.calendar.BaseCalendar: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays> = $r1;

        r0.<org.quartz.impl.calendar.AnnualCalendar: boolean dataSorted> = 0;

        return;
    }

    public void <init>(org.quartz.Calendar)
    {
        org.quartz.impl.calendar.AnnualCalendar r0;
        org.quartz.Calendar r1;
        java.util.ArrayList $r2;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        r1 := @parameter0: org.quartz.Calendar;

        specialinvoke r0.<org.quartz.impl.calendar.BaseCalendar: void <init>(org.quartz.Calendar)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays> = $r2;

        r0.<org.quartz.impl.calendar.AnnualCalendar: boolean dataSorted> = 0;

        return;
    }

    public void <init>(java.util.TimeZone)
    {
        org.quartz.impl.calendar.AnnualCalendar r0;
        java.util.TimeZone r1;
        java.util.ArrayList $r2;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        r1 := @parameter0: java.util.TimeZone;

        specialinvoke r0.<org.quartz.impl.calendar.BaseCalendar: void <init>(java.util.TimeZone)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays> = $r2;

        r0.<org.quartz.impl.calendar.AnnualCalendar: boolean dataSorted> = 0;

        return;
    }

    public void <init>(org.quartz.Calendar, java.util.TimeZone)
    {
        org.quartz.impl.calendar.AnnualCalendar r0;
        org.quartz.Calendar r1;
        java.util.TimeZone r2;
        java.util.ArrayList $r3;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        r1 := @parameter0: org.quartz.Calendar;

        r2 := @parameter1: java.util.TimeZone;

        specialinvoke r0.<org.quartz.impl.calendar.BaseCalendar: void <init>(org.quartz.Calendar,java.util.TimeZone)>(r1, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays> = $r3;

        r0.<org.quartz.impl.calendar.AnnualCalendar: boolean dataSorted> = 0;

        return;
    }

    public java.lang.Object clone()
    {
        org.quartz.impl.calendar.AnnualCalendar r0, r1;
        java.lang.Object $r2;
        java.util.ArrayList $r3, $r4;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        $r2 = specialinvoke r0.<org.quartz.impl.calendar.BaseCalendar: java.lang.Object clone()>();

        r1 = (org.quartz.impl.calendar.AnnualCalendar) $r2;

        $r3 = new java.util.ArrayList;

        $r4 = r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r1.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays> = $r3;

        return r1;
    }

    public java.util.ArrayList getDaysExcluded()
    {
        org.quartz.impl.calendar.AnnualCalendar r0;
        java.util.ArrayList $r1;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        $r1 = r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays>;

        return $r1;
    }

    public boolean isDayExcluded(java.util.Calendar)
    {
        org.quartz.impl.calendar.AnnualCalendar r0;
        java.util.Calendar r1, r3;
        int i0, i1, $i3, $i4, $i5;
        java.util.Iterator r2;
        java.util.Date $r4;
        long $l2;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r5, $r8;
        java.lang.Object $r6;
        org.quartz.impl.calendar.CalendarComparator $r7;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        r1 := @parameter0: java.util.Calendar;

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter day must not be null");

        throw $r9;

     label1:
        $r4 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>();

        $l2 = virtualinvoke $r4.<java.util.Date: long getTime()>();

        $z0 = specialinvoke r0.<org.quartz.impl.calendar.BaseCalendar: boolean isTimeIncluded(long)>($l2);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(5);

        $z1 = r0.<org.quartz.impl.calendar.AnnualCalendar: boolean dataSorted>;

        if $z1 != 0 goto label3;

        $r8 = r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays>;

        $r7 = new org.quartz.impl.calendar.CalendarComparator;

        specialinvoke $r7.<org.quartz.impl.calendar.CalendarComparator: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r8, $r7);

        r0.<org.quartz.impl.calendar.AnnualCalendar: boolean dataSorted> = 1;

     label3:
        $r5 = r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Calendar) $r6;

        $i3 = virtualinvoke r3.<java.util.Calendar: int get(int)>(2);

        if i0 >= $i3 goto label5;

        return 0;

     label5:
        $i4 = virtualinvoke r3.<java.util.Calendar: int get(int)>(5);

        if i1 == $i4 goto label6;

        goto label4;

     label6:
        $i5 = virtualinvoke r3.<java.util.Calendar: int get(int)>(2);

        if i0 == $i5 goto label7;

        goto label4;

     label7:
        return 1;

     label8:
        return 0;
    }

    public void setDaysExcluded(java.util.ArrayList)
    {
        org.quartz.impl.calendar.AnnualCalendar r0;
        java.util.ArrayList r1, $r2;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        r1 := @parameter0: java.util.ArrayList;

        if r1 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays> = $r2;

        goto label2;

     label1:
        r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays> = r1;

     label2:
        r0.<org.quartz.impl.calendar.AnnualCalendar: boolean dataSorted> = 0;

        return;
    }

    public void setDayExcluded(java.util.Calendar, boolean)
    {
        org.quartz.impl.calendar.AnnualCalendar r0;
        java.util.Calendar r1;
        boolean z0, $z1, $z2;
        java.util.ArrayList $r2;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        r1 := @parameter0: java.util.Calendar;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $z2 = virtualinvoke r0.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r1);

        if $z2 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        r0.<org.quartz.impl.calendar.AnnualCalendar: boolean dataSorted> = 0;

        goto label4;

     label2:
        $z1 = virtualinvoke r0.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r1);

        if $z1 != 0 goto label3;

        return;

     label3:
        specialinvoke r0.<org.quartz.impl.calendar.AnnualCalendar: void removeExcludedDay(java.util.Calendar,boolean)>(r1, 1);

     label4:
        return;
    }

    public void removeExcludedDay(java.util.Calendar)
    {
        org.quartz.impl.calendar.AnnualCalendar r0;
        java.util.Calendar r1;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        r1 := @parameter0: java.util.Calendar;

        specialinvoke r0.<org.quartz.impl.calendar.AnnualCalendar: void removeExcludedDay(java.util.Calendar,boolean)>(r1, 0);

        return;
    }

    private void removeExcludedDay(java.util.Calendar, boolean)
    {
        org.quartz.impl.calendar.AnnualCalendar r0;
        boolean z0, $z1, $z3, $z4;
        int i0, i1, $i2, $i3;
        java.util.Iterator r1;
        java.util.Calendar r2, r7;
        java.util.ArrayList $r3, $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        r7 := @parameter0: java.util.Calendar;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label1;

        $z3 = virtualinvoke r0.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r7);

        if $z3 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

        return;

     label2:
        i0 = virtualinvoke r7.<java.util.Calendar: int get(int)>(2);

        i1 = virtualinvoke r7.<java.util.Calendar: int get(int)>(5);

        $r4 = r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays>;

        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Calendar) $r6;

        $i2 = virtualinvoke r2.<java.util.Calendar: int get(int)>(2);

        if i0 == $i2 goto label4;

        goto label3;

     label4:
        $i3 = virtualinvoke r2.<java.util.Calendar: int get(int)>(5);

        if i1 == $i3 goto label5;

        goto label3;

     label5:
        r7 = r2;

        goto label6;

     label6:
        $r5 = r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList excludeDays>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r7);

        return;
    }

    public boolean isTimeIncluded(long)
    {
        org.quartz.impl.calendar.AnnualCalendar r0;
        long l0;
        java.util.Calendar r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        l0 := @parameter0: long;

        $z0 = specialinvoke r0.<org.quartz.impl.calendar.BaseCalendar: boolean isTimeIncluded(long)>(l0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = virtualinvoke r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.Calendar createJavaCalendar(long)>(l0);

        $z1 = virtualinvoke r0.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r1);

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public long getNextIncludedTime(long)
    {
        org.quartz.impl.calendar.AnnualCalendar r0;
        long l0, $l2, l4;
        java.util.Calendar r1;
        byte $b1, $b3;
        boolean $z0, $z1;
        java.util.Date $r2;

        r0 := @this: org.quartz.impl.calendar.AnnualCalendar;

        l4 := @parameter0: long;

        l0 = specialinvoke r0.<org.quartz.impl.calendar.BaseCalendar: long getNextIncludedTime(long)>(l4);

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $b3 = l0 cmp l4;

        if $b3 <= 0 goto label1;

        l4 = l0;

     label1:
        r1 = virtualinvoke r0.<org.quartz.impl.calendar.AnnualCalendar: java.util.Calendar getStartOfDayJavaCalendar(long)>(l4);

        $z1 = virtualinvoke r0.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r1);

        if $z1 != 0 goto label2;

        return l4;

     label2:
        $z0 = virtualinvoke r0.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r1);

        if $z0 != 1 goto label3;

        virtualinvoke r1.<java.util.Calendar: void add(int,int)>(5, 1);

        goto label2;

     label3:
        $r2 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>();

        $l2 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        return $l2;
    }

    public static void <clinit>()
    {
        <org.quartz.impl.calendar.AnnualCalendar: long serialVersionUID> = 7346867105876610961L;

        return;
    }
}
