class org.quartz.impl.SchedulerDetailsSetter extends java.lang.Object
{
    private static final org.slf4j.Logger LOGGER;

    private void <init>()
    {
        org.quartz.impl.SchedulerDetailsSetter r0;

        r0 := @this: org.quartz.impl.SchedulerDetailsSetter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void setDetails(java.lang.Object, java.lang.String, java.lang.String) throws org.quartz.SchedulerException
    {
        java.lang.Object r0;
        java.lang.String r1, r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        staticinvoke <org.quartz.impl.SchedulerDetailsSetter: void set(java.lang.Object,java.lang.String,java.lang.String)>(r0, "setInstanceName", r1);

        staticinvoke <org.quartz.impl.SchedulerDetailsSetter: void set(java.lang.Object,java.lang.String,java.lang.String)>(r0, "setInstanceId", r2);

        return;
    }

    private static void set(java.lang.Object, java.lang.String, java.lang.String) throws org.quartz.SchedulerException
    {
        java.lang.Object r0;
        java.lang.String r1, r2, $r11, $r16, $r21, $r23, $r30, $r35;
        java.lang.reflect.Method r3;
        java.lang.Class $r4, $r10, $r29;
        java.lang.Class[] $r5;
        int $i0;
        boolean $z0;
        java.lang.Object[] $r6;
        java.lang.StringBuilder $r8, $r12, $r13, $r14, $r15, $r18, $r20, $r22, $r27, $r31, $r32, $r33, $r34;
        org.slf4j.Logger $r9, $r19, $r28;
        java.lang.SecurityException $r17;
        java.lang.Exception $r24;
        org.quartz.SchedulerException $r25, $r37;
        java.lang.NoSuchMethodException $r26;
        java.lang.reflect.InvocationTargetException $r36;
        java.lang.Throwable $r38;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

     label01:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = newarray (java.lang.Class)[1];

        $r5[0] = class "Ljava/lang/String;";

        r3 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, $r5);

     label02:
        goto label05;

     label03:
        $r17 := @caughtexception;

        $r19 = <org.quartz.impl.SchedulerDetailsSetter: org.slf4j.Logger LOGGER>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A SecurityException occured: ");

        $r21 = virtualinvoke $r17.<java.lang.SecurityException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r23, $r17);

        return;

     label04:
        $r26 := @caughtexception;

        $r28 = <org.quartz.impl.SchedulerDetailsSetter: org.slf4j.Logger LOGGER>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not contain public method ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(String)");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.slf4j.Logger: void warn(java.lang.String)>($r35);

        return;

     label05:
        $i0 = virtualinvoke r3.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        if $z0 == 0 goto label06;

        $r9 = <org.quartz.impl.SchedulerDetailsSetter: org.slf4j.Logger LOGGER>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not implement ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(String)");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String)>($r16);

        return;

     label06:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r2;

        virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r6);

     label07:
        goto label10;

     label08:
        $r36 := @caughtexception;

        $r37 = new org.quartz.SchedulerException;

        $r38 = virtualinvoke $r36.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        specialinvoke $r37.<org.quartz.SchedulerException: void <init>(java.lang.Throwable)>($r38);

        throw $r37;

     label09:
        $r24 := @caughtexception;

        $r25 = new org.quartz.SchedulerException;

        specialinvoke $r25.<org.quartz.SchedulerException: void <init>(java.lang.Throwable)>($r24);

        throw $r25;

     label10:
        return;

        catch java.lang.SecurityException from label01 to label02 with label03;
        catch java.lang.NoSuchMethodException from label01 to label02 with label04;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label08;
        catch java.lang.Exception from label06 to label07 with label09;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/quartz/impl/SchedulerDetailsSetter;");

        <org.quartz.impl.SchedulerDetailsSetter: org.slf4j.Logger LOGGER> = $r0;

        return;
    }
}
