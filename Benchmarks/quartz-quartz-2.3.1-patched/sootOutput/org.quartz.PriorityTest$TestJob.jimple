public class org.quartz.PriorityTest$TestJob extends java.lang.Object implements org.quartz.StatefulJob
{

    public void <init>()
    {
        org.quartz.PriorityTest$TestJob r0;

        r0 := @this: org.quartz.PriorityTest$TestJob;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(org.quartz.JobExecutionContext) throws org.quartz.JobExecutionException
    {
        org.quartz.PriorityTest$TestJob r0;
        org.quartz.JobExecutionContext r1;
        java.lang.StringBuffer $r2;
        org.quartz.Trigger $r3;
        org.quartz.TriggerKey $r4;
        java.lang.String $r5;
        java.util.concurrent.CountDownLatch $r7;

        r0 := @this: org.quartz.PriorityTest$TestJob;

        r1 := @parameter0: org.quartz.JobExecutionContext;

        $r2 = staticinvoke <org.quartz.PriorityTest: java.lang.StringBuffer access$000()>();

        $r3 = interfaceinvoke r1.<org.quartz.JobExecutionContext: org.quartz.Trigger getTrigger()>();

        $r4 = interfaceinvoke $r3.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>();

        $r5 = virtualinvoke $r4.<org.quartz.TriggerKey: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = staticinvoke <org.quartz.PriorityTest: java.util.concurrent.CountDownLatch access$100()>();

        virtualinvoke $r7.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;
    }
}
