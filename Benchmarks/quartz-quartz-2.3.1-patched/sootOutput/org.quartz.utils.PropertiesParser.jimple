public class org.quartz.utils.PropertiesParser extends java.lang.Object
{
    java.util.Properties props;

    public void <init>(java.util.Properties)
    {
        org.quartz.utils.PropertiesParser r0;
        java.util.Properties r1;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.util.Properties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.utils.PropertiesParser: java.util.Properties props> = null;

        r0.<org.quartz.utils.PropertiesParser: java.util.Properties props> = r1;

        return;
    }

    public java.util.Properties getUnderlyingProperties()
    {
        org.quartz.utils.PropertiesParser r0;
        java.util.Properties $r1;

        r0 := @this: org.quartz.utils.PropertiesParser;

        $r1 = r0.<org.quartz.utils.PropertiesParser: java.util.Properties props>;

        return $r1;
    }

    public java.lang.String getStringProperty(java.lang.String)
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, $r2;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>(r1, null);

        return $r2;
    }

    public java.lang.String getStringProperty(java.lang.String, java.lang.String)
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, r4, r5, $r6;
        java.util.Properties $r3;
        int $i0;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.quartz.utils.PropertiesParser: java.util.Properties props>;

        r4 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>(r1, r2);

        if r4 != null goto label1;

        return r2;

     label1:
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r6 = r2;

        goto label3;

     label2:
        $r6 = r5;

     label3:
        return $r6;
    }

    public java.lang.String[] getStringArrayProperty(java.lang.String)
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String[] getStringArrayProperty(java.lang.String,java.lang.String[])>(r1, null);

        return $r2;
    }

    public java.lang.String[] getStringArrayProperty(java.lang.String, java.lang.String[])
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r3, $r13, $r14;
        java.lang.String[] r2, $r9, $r11, $r12;
        java.util.StringTokenizer $r7;
        java.util.ArrayList $r8;
        boolean $z0;
        int $i0;
        java.lang.Object[] $r10;
        java.lang.Exception $r15;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r3 != null goto label1;

        return r2;

     label1:
        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r3, ",");

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

     label2:
        $z0 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r13 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        goto label2;

     label3:
        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $r9 = newarray (java.lang.String)[$i0];

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r11 = (java.lang.String[]) $r10;

        $r12 = (java.lang.String[]) $r11;

     label4:
        return $r12;

     label5:
        $r15 := @caughtexception;

        return r2;

        catch java.lang.Exception from label2 to label4 with label5;
    }

    public boolean getBooleanProperty(java.lang.String)
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: boolean getBooleanProperty(java.lang.String,boolean)>(r1, 0);

        return $z0;
    }

    public boolean getBooleanProperty(java.lang.String, boolean)
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2;
        boolean z0, $z1;
        java.lang.Boolean $r3;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        $z1 = z0;

        goto label2;

     label1:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r2);

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z1;
    }

    public byte getByteProperty(java.lang.String) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, $r11;
        byte $b0;
        java.lang.NumberFormatException $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>(" null string");

        throw $r4;

     label1:
        $b0 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String)>(r2);

     label2:
        return $b0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.NumberFormatException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r11);

        throw $r6;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public byte getByteProperty(java.lang.String, byte) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, $r10;
        byte b0, $b1;
        java.lang.NumberFormatException $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        return b0;

     label1:
        $b1 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String)>(r2);

     label2:
        return $b1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.NumberFormatException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r10);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public char getCharProperty(java.lang.String)
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1;
        char $c0;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: char getCharProperty(java.lang.String,char)>(r1, 0);

        return $c0;
    }

    public char getCharProperty(java.lang.String, char)
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2;
        char c0, $c1;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        $c1 = c0;

        goto label2;

     label1:
        $c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

     label2:
        return $c1;
    }

    public double getDoubleProperty(java.lang.String) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, $r11;
        double $d0;
        java.lang.NumberFormatException $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>(" null string");

        throw $r4;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r2);

     label2:
        return $d0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.NumberFormatException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r11);

        throw $r6;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public double getDoubleProperty(java.lang.String, double) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, $r10;
        double d0, $d1;
        java.lang.NumberFormatException $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        return d0;

     label1:
        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r2);

     label2:
        return $d1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.NumberFormatException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r10);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public float getFloatProperty(java.lang.String) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, $r11;
        float $f0;
        java.lang.NumberFormatException $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>(" null string");

        throw $r4;

     label1:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

     label2:
        return $f0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.NumberFormatException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r11);

        throw $r6;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public float getFloatProperty(java.lang.String, float) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, $r10;
        float f0, $f1;
        java.lang.NumberFormatException $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        return f0;

     label1:
        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

     label2:
        return $f1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.NumberFormatException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r10);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public int getIntProperty(java.lang.String) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, $r11;
        int $i0;
        java.lang.NumberFormatException $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>(" null string");

        throw $r4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.NumberFormatException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r11);

        throw $r6;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public int getIntProperty(java.lang.String, int) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, $r10;
        int i0, $i1;
        java.lang.NumberFormatException $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        return i0;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        return $i1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.NumberFormatException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r10);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public int[] getIntArrayProperty(java.lang.String) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1;
        int[] $r2;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: int[] getIntArrayProperty(java.lang.String,int[])>(r1, null);

        return $r2;
    }

    public int[] getIntArrayProperty(java.lang.String, int[]) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r3, $r11, $r12, $r19;
        int[] r2, r22;
        java.util.StringTokenizer $r6;
        java.util.ArrayList $r7;
        boolean $z0;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r8;
        java.lang.Integer $r9, $r10;
        java.lang.NumberFormatException $r13, $r14;
        java.lang.StringBuilder $r15, $r16, $r17, $r18;
        java.lang.Exception $r20;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: int[];

        r3 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r3 != null goto label1;

        return r2;

     label1:
        $r6 = new java.util.StringTokenizer;

        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r3, ",");

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

     label2:
        $z0 = virtualinvoke $r6.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label6;

     label3:
        $r10 = new java.lang.Integer;

        $r11 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r10.<java.lang.Integer: void <init>(java.lang.String)>($r12);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label4:
        goto label2;

     label5:
        $r13 := @caughtexception;

        $r14 = new java.lang.NumberFormatException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label6:
        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        r22 = newarray (int)[$i0];

        i3 = 0;

     label7:
        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label8;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r9 = (java.lang.Integer) $r8;

        $i2 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        r22[i3] = $i2;

        i3 = i3 + 1;

        goto label7;

     label8:
        return r22;

     label9:
        $r20 := @caughtexception;

        return r2;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
        catch java.lang.Exception from label2 to label8 with label9;
    }

    public long getLongProperty(java.lang.String) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, $r11;
        long $l0;
        java.lang.NumberFormatException $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>(" null string");

        throw $r4;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

     label2:
        return $l0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.NumberFormatException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r11);

        throw $r6;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public long getLongProperty(java.lang.String, long) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, $r10;
        long l0, $l1;
        java.lang.NumberFormatException $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        return l0;

     label1:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

     label2:
        return $l1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.NumberFormatException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r10);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public short getShortProperty(java.lang.String) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, $r11;
        short $s0;
        java.lang.NumberFormatException $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>(" null string");

        throw $r4;

     label1:
        $s0 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>(r2);

     label2:
        return $s0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.NumberFormatException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r11);

        throw $r6;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public short getShortProperty(java.lang.String, short) throws java.lang.NumberFormatException
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1, r2, $r10;
        short s0, $s1;
        java.lang.NumberFormatException $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        return s0;

     label1:
        $s1 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>(r2);

     label2:
        return $s1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.NumberFormatException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r10);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public java.lang.String[] getPropertyGroups(java.lang.String)
    {
        org.quartz.utils.PropertiesParser r0;
        java.util.Enumeration r1;
        java.lang.String r3, r4, r15;
        java.util.Properties $r5;
        java.util.HashSet $r6;
        boolean $z0, $z1, $z3;
        int $i0, $i1, $i2, $i3;
        java.lang.String[] $r7, $r9, $r10;
        java.lang.Object[] $r8;
        java.lang.Object $r11;
        java.lang.StringBuilder $r12, $r13, $r14;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r15 := @parameter0: java.lang.String;

        $r5 = r0.<org.quartz.utils.PropertiesParser: java.util.Properties props>;

        r1 = virtualinvoke $r5.<java.util.Properties: java.util.Enumeration propertyNames()>();

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>(int)>(10);

        $z0 = virtualinvoke r15.<java.lang.String: boolean endsWith(java.lang.String)>(".");

        if $z0 != 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $z3 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z3 == 0 goto label3;

        $r11 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (java.lang.String) $r11;

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(r15);

        if $z1 == 0 goto label2;

        $i1 = virtualinvoke r15.<java.lang.String: int length()>();

        $i2 = virtualinvoke r15.<java.lang.String: int length()>();

        $i3 = virtualinvoke r3.<java.lang.String: int indexOf(int,int)>(46, $i2);

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i1, $i3);

        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

     label2:
        goto label1;

     label3:
        $i0 = virtualinvoke $r6.<java.util.HashSet: int size()>();

        $r7 = newarray (java.lang.String)[$i0];

        $r8 = virtualinvoke $r6.<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (java.lang.String[]) $r8;

        $r10 = (java.lang.String[]) $r9;

        return $r10;
    }

    public java.util.Properties getPropertyGroup(java.lang.String)
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1;
        java.util.Properties $r2;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean,java.lang.String[])>(r1, 0, null);

        return $r2;
    }

    public java.util.Properties getPropertyGroup(java.lang.String, boolean)
    {
        org.quartz.utils.PropertiesParser r0;
        java.lang.String r1;
        boolean z0;
        java.util.Properties $r2;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean,java.lang.String[])>(r1, z0, null);

        return $r2;
    }

    public java.util.Properties getPropertyGroup(java.lang.String, boolean, java.lang.String[])
    {
        org.quartz.utils.PropertiesParser r0;
        boolean z0, $z1, $z2, $z3, z4;
        java.lang.String[] r1;
        java.util.Enumeration r2;
        java.lang.String r4, $r9, $r11, r15, r16;
        java.util.Properties $r5, $r6;
        java.lang.Object $r7;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r12, $r13, $r14;

        r0 := @this: org.quartz.utils.PropertiesParser;

        r15 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String[];

        $r5 = r0.<org.quartz.utils.PropertiesParser: java.util.Properties props>;

        r2 = virtualinvoke $r5.<java.util.Properties: java.util.Enumeration propertyNames()>();

        $r6 = new java.util.Properties;

        specialinvoke $r6.<java.util.Properties: void <init>()>();

        $z1 = virtualinvoke r15.<java.lang.String: boolean endsWith(java.lang.String)>(".");

        if $z1 != 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z3 == 0 goto label6;

        $r7 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (java.lang.String) $r7;

        $z2 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>(r15);

        if $z2 == 0 goto label5;

        z4 = 0;

        if r1 == null goto label3;

        i2 = 0;

     label2:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label3;

        if z4 != 0 goto label3;

        $r11 = r1[i2];

        z4 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>($r11);

        i2 = i2 + 1;

        goto label2;

     label3:
        if z4 != 0 goto label5;

        r16 = virtualinvoke r0.<org.quartz.utils.PropertiesParser: java.lang.String getStringProperty(java.lang.String,java.lang.String)>(r4, "");

        if z0 == 0 goto label4;

        $i0 = virtualinvoke r15.<java.lang.String: int length()>();

        $r9 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i0);

        virtualinvoke $r6.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r16);

        goto label5;

     label4:
        virtualinvoke $r6.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r16);

     label5:
        goto label1;

     label6:
        return $r6;
    }
}
