public class org.quartz.utils.ClassUtilsTest extends junit.framework.TestCase
{

    public void <init>()
    {
        org.quartz.utils.ClassUtilsTest r0;

        r0 := @this: org.quartz.utils.ClassUtilsTest;

        specialinvoke r0.<junit.framework.TestCase: void <init>()>();

        return;
    }

    public void testIsAnnotationPresentOnSuperClass() throws java.lang.Exception
    {
        org.quartz.utils.ClassUtilsTest r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.quartz.utils.ClassUtilsTest;

        $z0 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$BaseJob;", class "Lorg/quartz/DisallowConcurrentExecution;");

        staticinvoke <org.quartz.utils.ClassUtilsTest: void assertTrue(boolean)>($z0);

        $z1 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$BaseJob;", class "Lorg/quartz/PersistJobDataAfterExecution;");

        staticinvoke <org.quartz.utils.ClassUtilsTest: void assertFalse(boolean)>($z1);

        $z2 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$ExtendedJob;", class "Lorg/quartz/DisallowConcurrentExecution;");

        staticinvoke <org.quartz.utils.ClassUtilsTest: void assertTrue(boolean)>($z2);

        $z3 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$ExtendedJob;", class "Lorg/quartz/PersistJobDataAfterExecution;");

        staticinvoke <org.quartz.utils.ClassUtilsTest: void assertFalse(boolean)>($z3);

        $z4 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$ReallyExtendedJob;", class "Lorg/quartz/DisallowConcurrentExecution;");

        staticinvoke <org.quartz.utils.ClassUtilsTest: void assertTrue(boolean)>($z4);

        $z5 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$ReallyExtendedJob;", class "Lorg/quartz/PersistJobDataAfterExecution;");

        staticinvoke <org.quartz.utils.ClassUtilsTest: void assertTrue(boolean)>($z5);

        return;
    }
}
