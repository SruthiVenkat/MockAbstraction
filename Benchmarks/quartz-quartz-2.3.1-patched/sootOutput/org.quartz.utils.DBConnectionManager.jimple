public class org.quartz.utils.DBConnectionManager extends java.lang.Object
{
    public static final java.lang.String DB_PROPS_PREFIX;
    private static org.quartz.utils.DBConnectionManager instance;
    private java.util.HashMap providers;

    private void <init>()
    {
        org.quartz.utils.DBConnectionManager r0;
        java.util.HashMap $r1;

        r0 := @this: org.quartz.utils.DBConnectionManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.quartz.utils.DBConnectionManager: java.util.HashMap providers> = $r1;

        return;
    }

    public void addConnectionProvider(java.lang.String, org.quartz.utils.ConnectionProvider)
    {
        org.quartz.utils.DBConnectionManager r0;
        java.lang.String r1;
        org.quartz.utils.ConnectionProvider r2;
        java.util.HashMap $r3;

        r0 := @this: org.quartz.utils.DBConnectionManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.quartz.utils.ConnectionProvider;

        $r3 = r0.<org.quartz.utils.DBConnectionManager: java.util.HashMap providers>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.sql.Connection getConnection(java.lang.String) throws java.sql.SQLException
    {
        org.quartz.utils.DBConnectionManager r0;
        java.lang.String r1, $r11;
        org.quartz.utils.ConnectionProvider r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.sql.Connection $r5;
        java.sql.SQLException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: org.quartz.utils.DBConnectionManager;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.quartz.utils.DBConnectionManager: java.util.HashMap providers>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (org.quartz.utils.ConnectionProvider) $r4;

        if r2 != null goto label1;

        $r6 = new java.sql.SQLException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is no DataSource named \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.sql.SQLException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $r5 = interfaceinvoke r2.<org.quartz.utils.ConnectionProvider: java.sql.Connection getConnection()>();

        return $r5;
    }

    public static org.quartz.utils.DBConnectionManager getInstance()
    {
        org.quartz.utils.DBConnectionManager $r0;

        $r0 = <org.quartz.utils.DBConnectionManager: org.quartz.utils.DBConnectionManager instance>;

        return $r0;
    }

    public void shutdown(java.lang.String) throws java.sql.SQLException
    {
        org.quartz.utils.DBConnectionManager r0;
        java.lang.String r1, $r10;
        org.quartz.utils.ConnectionProvider r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.sql.SQLException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: org.quartz.utils.DBConnectionManager;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.quartz.utils.DBConnectionManager: java.util.HashMap providers>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (org.quartz.utils.ConnectionProvider) $r4;

        if r2 != null goto label1;

        $r5 = new java.sql.SQLException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is no DataSource named \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.sql.SQLException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        interfaceinvoke r2.<org.quartz.utils.ConnectionProvider: void shutdown()>();

        return;
    }

    org.quartz.utils.ConnectionProvider getConnectionProvider(java.lang.String)
    {
        org.quartz.utils.DBConnectionManager r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        org.quartz.utils.ConnectionProvider $r4;

        r0 := @this: org.quartz.utils.DBConnectionManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.quartz.utils.DBConnectionManager: java.util.HashMap providers>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.quartz.utils.ConnectionProvider) $r3;

        return $r4;
    }

    static void <clinit>()
    {
        org.quartz.utils.DBConnectionManager $r0;

        <org.quartz.utils.DBConnectionManager: java.lang.String DB_PROPS_PREFIX> = "org.quartz.db.";

        $r0 = new org.quartz.utils.DBConnectionManager;

        specialinvoke $r0.<org.quartz.utils.DBConnectionManager: void <init>()>();

        <org.quartz.utils.DBConnectionManager: org.quartz.utils.DBConnectionManager instance> = $r0;

        return;
    }
}
