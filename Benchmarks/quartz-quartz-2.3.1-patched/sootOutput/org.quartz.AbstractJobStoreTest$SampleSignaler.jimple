public class org.quartz.AbstractJobStoreTest$SampleSignaler extends java.lang.Object implements org.quartz.spi.SchedulerSignaler
{
    volatile int fMisfireCount;

    public void <init>()
    {
        org.quartz.AbstractJobStoreTest$SampleSignaler r0;

        r0 := @this: org.quartz.AbstractJobStoreTest$SampleSignaler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.quartz.AbstractJobStoreTest$SampleSignaler: int fMisfireCount> = 0;

        return;
    }

    public void notifyTriggerListenersMisfired(org.quartz.Trigger)
    {
        org.quartz.AbstractJobStoreTest$SampleSignaler r0;
        org.quartz.Trigger r1;
        java.lang.StringBuilder $r2, $r4, $r6, $r7, $r9;
        java.io.PrintStream $r3;
        org.quartz.TriggerKey $r5;
        java.util.Date $r8;
        java.lang.String $r10;
        int $i0, $i1;

        r0 := @this: org.quartz.AbstractJobStoreTest$SampleSignaler;

        r1 := @parameter0: org.quartz.Trigger;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trigger misfired: ");

        $r5 = interfaceinvoke r1.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", fire time: ");

        $r8 = interfaceinvoke r1.<org.quartz.Trigger: java.util.Date getNextFireTime()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $i0 = r0.<org.quartz.AbstractJobStoreTest$SampleSignaler: int fMisfireCount>;

        $i1 = $i0 + 1;

        r0.<org.quartz.AbstractJobStoreTest$SampleSignaler: int fMisfireCount> = $i1;

        return;
    }

    public void signalSchedulingChange(long)
    {
        org.quartz.AbstractJobStoreTest$SampleSignaler r0;
        long l0;

        r0 := @this: org.quartz.AbstractJobStoreTest$SampleSignaler;

        l0 := @parameter0: long;

        return;
    }

    public void notifySchedulerListenersFinalized(org.quartz.Trigger)
    {
        org.quartz.AbstractJobStoreTest$SampleSignaler r0;
        org.quartz.Trigger r1;

        r0 := @this: org.quartz.AbstractJobStoreTest$SampleSignaler;

        r1 := @parameter0: org.quartz.Trigger;

        return;
    }

    public void notifySchedulerListenersJobDeleted(org.quartz.JobKey)
    {
        org.quartz.AbstractJobStoreTest$SampleSignaler r0;
        org.quartz.JobKey r1;

        r0 := @this: org.quartz.AbstractJobStoreTest$SampleSignaler;

        r1 := @parameter0: org.quartz.JobKey;

        return;
    }

    public void notifySchedulerListenersError(java.lang.String, org.quartz.SchedulerException)
    {
        org.quartz.AbstractJobStoreTest$SampleSignaler r0;
        java.lang.String r1;
        org.quartz.SchedulerException r2;

        r0 := @this: org.quartz.AbstractJobStoreTest$SampleSignaler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.quartz.SchedulerException;

        return;
    }
}
