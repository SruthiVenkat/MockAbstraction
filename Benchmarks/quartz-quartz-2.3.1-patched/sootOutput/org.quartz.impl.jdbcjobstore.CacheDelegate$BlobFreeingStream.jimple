class org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream extends java.io.InputStream
{
    private final java.sql.Blob source;
    private final java.io.InputStream delegate;

    private void <init>(java.sql.Blob, java.io.InputStream)
    {
        org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream r0;
        java.sql.Blob r1;
        java.io.InputStream r2;

        r0 := @this: org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream;

        r1 := @parameter0: java.sql.Blob;

        r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.sql.Blob source> = r1;

        r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.io.InputStream delegate> = r2;

        return;
    }

    public int read() throws java.io.IOException
    {
        org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream r0;
        java.io.InputStream $r1;
        int $i0;

        r0 := @this: org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream;

        $r1 = r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.io.InputStream delegate>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream r0;
        byte[] r1;
        java.io.InputStream $r2;
        int $i0;

        r0 := @this: org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.io.InputStream delegate>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>(r1);

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream r0;
        byte[] r1;
        int i0, i1, $i2;
        java.io.InputStream $r2;

        r0 := @this: org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.io.InputStream delegate>;

        $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public long skip(long) throws java.io.IOException
    {
        org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream r0;
        long l0, $l1;
        java.io.InputStream $r1;

        r0 := @this: org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream;

        l0 := @parameter0: long;

        $r1 = r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.io.InputStream delegate>;

        $l1 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>(l0);

        return $l1;
    }

    public int available() throws java.io.IOException
    {
        org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream r0;
        java.io.InputStream $r1;
        int $i0;

        r0 := @this: org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream;

        $r1 = r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.io.InputStream delegate>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i0;
    }

    public void close() throws java.io.IOException
    {
        org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream r0;
        java.io.InputStream $r4;
        java.sql.Blob $r5, $r11;
        java.sql.SQLException $r6, $r8;
        java.io.IOException $r7, $r9;
        java.lang.Throwable $r10;

        r0 := @this: org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream;

     label01:
        $r4 = r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.io.InputStream delegate>;

        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label02:
        $r5 = r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.sql.Blob source>;

        interfaceinvoke $r5.<java.sql.Blob: void free()>();

     label03:
        goto label10;

     label04:
        $r6 := @caughtexception;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label05:
        $r10 := @caughtexception;

     label06:
        $r11 = r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.sql.Blob source>;

        interfaceinvoke $r11.<java.sql.Blob: void free()>();

     label07:
        goto label09;

     label08:
        $r8 := @caughtexception;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label09:
        throw $r10;

     label10:
        return;

        catch java.sql.SQLException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.sql.SQLException from label06 to label07 with label08;
    }

    public synchronized void mark(int)
    {
        org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream r0;
        int i0;
        java.io.InputStream $r1;

        r0 := @this: org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.io.InputStream delegate>;

        virtualinvoke $r1.<java.io.InputStream: void mark(int)>(i0);

        return;
    }

    public synchronized void reset() throws java.io.IOException
    {
        org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream;

        $r1 = r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.io.InputStream delegate>;

        virtualinvoke $r1.<java.io.InputStream: void reset()>();

        return;
    }

    public boolean markSupported()
    {
        org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream r0;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream;

        $r1 = r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: java.io.InputStream delegate>;

        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();

        return $z0;
    }

    void <init>(java.sql.Blob, java.io.InputStream, org.quartz.impl.jdbcjobstore.CacheDelegate$1)
    {
        org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream r0;
        java.sql.Blob r1;
        java.io.InputStream r2;
        org.quartz.impl.jdbcjobstore.CacheDelegate$1 r3;

        r0 := @this: org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream;

        r1 := @parameter0: java.sql.Blob;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: org.quartz.impl.jdbcjobstore.CacheDelegate$1;

        specialinvoke r0.<org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream: void <init>(java.sql.Blob,java.io.InputStream)>(r1, r2);

        return;
    }
}
