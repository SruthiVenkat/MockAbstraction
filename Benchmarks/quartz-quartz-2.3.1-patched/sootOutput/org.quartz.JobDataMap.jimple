public class org.quartz.JobDataMap extends org.quartz.utils.StringKeyDirtyFlagMap implements java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.quartz.JobDataMap r0;

        r0 := @this: org.quartz.JobDataMap;

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void <init>(int)>(15);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.quartz.JobDataMap r0;
        java.util.Map r1;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.quartz.JobDataMap: void <init>()>();

        virtualinvoke r0.<org.quartz.JobDataMap: void putAll(java.util.Map)>(r1);

        virtualinvoke r0.<org.quartz.JobDataMap: void clearDirtyFlag()>();

        return;
    }

    public void putAsString(java.lang.String, boolean)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, r2;
        boolean z0;
        java.lang.Boolean $r3;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r2 = virtualinvoke $r3.<java.lang.Boolean: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void put(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void putAsString(java.lang.String, java.lang.Boolean)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, r3;
        java.lang.Boolean r2;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Boolean;

        r3 = virtualinvoke r2.<java.lang.Boolean: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void put(java.lang.String,java.lang.String)>(r1, r3);

        return;
    }

    public void putAsString(java.lang.String, char)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, r2;
        char c0;
        java.lang.Character $r3;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        r2 = virtualinvoke $r3.<java.lang.Character: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void put(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void putAsString(java.lang.String, java.lang.Character)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, r3;
        java.lang.Character r2;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Character;

        r3 = virtualinvoke r2.<java.lang.Character: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void put(java.lang.String,java.lang.String)>(r1, r3);

        return;
    }

    public void putAsString(java.lang.String, double)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, r2;
        double d0;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        r2 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d0);

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void put(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void putAsString(java.lang.String, java.lang.Double)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, r3;
        java.lang.Double r2;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Double;

        r3 = virtualinvoke r2.<java.lang.Double: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void put(java.lang.String,java.lang.String)>(r1, r3);

        return;
    }

    public void putAsString(java.lang.String, float)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, r2;
        float f0;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void put(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void putAsString(java.lang.String, java.lang.Float)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, r3;
        java.lang.Float r2;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Float;

        r3 = virtualinvoke r2.<java.lang.Float: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void put(java.lang.String,java.lang.String)>(r1, r3);

        return;
    }

    public void putAsString(java.lang.String, int)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, r2;
        int i0;
        java.lang.Integer $r3;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r2 = virtualinvoke $r3.<java.lang.Integer: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void put(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void putAsString(java.lang.String, java.lang.Integer)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, r3;
        java.lang.Integer r2;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Integer;

        r3 = virtualinvoke r2.<java.lang.Integer: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void put(java.lang.String,java.lang.String)>(r1, r3);

        return;
    }

    public void putAsString(java.lang.String, long)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, r2;
        long l0;
        java.lang.Long $r3;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r2 = virtualinvoke $r3.<java.lang.Long: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void put(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void putAsString(java.lang.String, java.lang.Long)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, r3;
        java.lang.Long r2;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Long;

        r3 = virtualinvoke r2.<java.lang.Long: java.lang.String toString()>();

        specialinvoke r0.<org.quartz.utils.StringKeyDirtyFlagMap: void put(java.lang.String,java.lang.String)>(r1, r3);

        return;
    }

    public int getIntFromString(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = new java.lang.Integer;

        $r4 = (java.lang.String) r2;

        specialinvoke $r3.<java.lang.Integer: void <init>(java.lang.String)>($r4);

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int getIntValue(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<org.quartz.JobDataMap: int getIntFromString(java.lang.String)>(r1);

        return $i1;

     label1:
        $i0 = virtualinvoke r0.<org.quartz.JobDataMap: int getInt(java.lang.String)>(r1);

        return $i0;
    }

    public java.lang.Integer getIntegerFromString(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        java.lang.Integer $r3;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = new java.lang.Integer;

        $r4 = (java.lang.String) r2;

        specialinvoke $r3.<java.lang.Integer: void <init>(java.lang.String)>($r4);

        return $r3;
    }

    public boolean getBooleanValueFromString(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, $r3;
        java.lang.Object r2;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (java.lang.String) r2;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean getBooleanValue(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r0.<org.quartz.JobDataMap: boolean getBooleanValueFromString(java.lang.String)>(r1);

        return $z2;

     label1:
        $z1 = virtualinvoke r0.<org.quartz.JobDataMap: boolean getBoolean(java.lang.String)>(r1);

        return $z1;
    }

    public java.lang.Boolean getBooleanFromString(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, $r3;
        java.lang.Object r2;
        java.lang.Boolean $r4;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (java.lang.String) r2;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3);

        return $r4;
    }

    public char getCharFromString(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, $r3;
        java.lang.Object r2;
        char $c0;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (java.lang.String) r2;

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        return $c0;
    }

    public java.lang.Character getCharacterFromString(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, $r3;
        java.lang.Object r2;
        char $c0;
        java.lang.Character $r4;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (java.lang.String) r2;

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        return $r4;
    }

    public double getDoubleValueFromString(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, $r3;
        java.lang.Object r2;
        java.lang.Double $r4;
        double $d0;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (java.lang.String) r2;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r3);

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public double getDoubleValue(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean $z0;
        double $d0, $d1;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $d1 = virtualinvoke r0.<org.quartz.JobDataMap: double getDoubleValueFromString(java.lang.String)>(r1);

        return $d1;

     label1:
        $d0 = virtualinvoke r0.<org.quartz.JobDataMap: double getDouble(java.lang.String)>(r1);

        return $d0;
    }

    public java.lang.Double getDoubleFromString(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        java.lang.Double $r3;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = new java.lang.Double;

        $r4 = (java.lang.String) r2;

        specialinvoke $r3.<java.lang.Double: void <init>(java.lang.String)>($r4);

        return $r3;
    }

    public float getFloatValueFromString(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        java.lang.Float $r3;
        float $f0;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = new java.lang.Float;

        $r4 = (java.lang.String) r2;

        specialinvoke $r3.<java.lang.Float: void <init>(java.lang.String)>($r4);

        $f0 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        return $f0;
    }

    public float getFloatValue(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean $z0;
        float $f0, $f1;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $f1 = virtualinvoke r0.<org.quartz.JobDataMap: float getFloatValueFromString(java.lang.String)>(r1);

        return $f1;

     label1:
        $f0 = virtualinvoke r0.<org.quartz.JobDataMap: float getFloat(java.lang.String)>(r1);

        return $f0;
    }

    public java.lang.Float getFloatFromString(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        java.lang.Float $r3;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = new java.lang.Float;

        $r4 = (java.lang.String) r2;

        specialinvoke $r3.<java.lang.Float: void <init>(java.lang.String)>($r4);

        return $r3;
    }

    public long getLongValueFromString(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        java.lang.Long $r3;
        long $l0;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = new java.lang.Long;

        $r4 = (java.lang.String) r2;

        specialinvoke $r3.<java.lang.Long: void <init>(java.lang.String)>($r4);

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public long getLongValue(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean $z0;
        long $l0, $l1;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $l1 = virtualinvoke r0.<org.quartz.JobDataMap: long getLongValueFromString(java.lang.String)>(r1);

        return $l1;

     label1:
        $l0 = virtualinvoke r0.<org.quartz.JobDataMap: long getLong(java.lang.String)>(r1);

        return $l0;
    }

    public java.lang.Long getLongFromString(java.lang.String)
    {
        org.quartz.JobDataMap r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        java.lang.Long $r3;

        r0 := @this: org.quartz.JobDataMap;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = new java.lang.Long;

        $r4 = (java.lang.String) r2;

        specialinvoke $r3.<java.lang.Long: void <init>(java.lang.String)>($r4);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.quartz.JobDataMap: long serialVersionUID> = -6939901990106713909L;

        return;
    }
}
