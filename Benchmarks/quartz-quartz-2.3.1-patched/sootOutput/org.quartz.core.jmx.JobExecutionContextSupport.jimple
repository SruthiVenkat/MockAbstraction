public class org.quartz.core.jmx.JobExecutionContextSupport extends java.lang.Object
{
    private static final java.lang.String COMPOSITE_TYPE_NAME;
    private static final java.lang.String COMPOSITE_TYPE_DESCRIPTION;
    private static final java.lang.String[] ITEM_NAMES;
    private static final java.lang.String[] ITEM_DESCRIPTIONS;
    private static final javax.management.openmbean.OpenType[] ITEM_TYPES;
    private static final javax.management.openmbean.CompositeType COMPOSITE_TYPE;
    private static final java.lang.String TABULAR_TYPE_NAME;
    private static final java.lang.String TABULAR_TYPE_DESCRIPTION;
    private static final java.lang.String[] INDEX_NAMES;
    private static final javax.management.openmbean.TabularType TABULAR_TYPE;

    public void <init>()
    {
        org.quartz.core.jmx.JobExecutionContextSupport r0;

        r0 := @this: org.quartz.core.jmx.JobExecutionContextSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.management.openmbean.CompositeData toCompositeData(org.quartz.JobExecutionContext) throws org.quartz.SchedulerException
    {
        org.quartz.JobExecutionContext r0;
        javax.management.openmbean.CompositeDataSupport $r2;
        java.lang.Object[] $r3;
        javax.management.openmbean.CompositeType $r4;
        java.lang.String[] $r5;
        org.quartz.Scheduler $r6;
        java.lang.String $r7, $r10, $r13, $r16, $r19, $r23, $r31;
        org.quartz.Trigger $r8, $r11, $r22;
        org.quartz.TriggerKey $r9, $r12;
        org.quartz.JobDetail $r14, $r17;
        org.quartz.JobKey $r15, $r18;
        org.quartz.JobDataMap $r20;
        javax.management.openmbean.TabularData $r21;
        boolean $z0;
        java.lang.Boolean $r24;
        int $i0;
        java.lang.Integer $r25;
        java.util.Date $r26, $r27, $r28, $r29;
        long $l1;
        java.lang.Long $r30;
        javax.management.openmbean.OpenDataException $r32;
        java.lang.RuntimeException $r33;

        r0 := @parameter0: org.quartz.JobExecutionContext;

     label1:
        $r2 = new javax.management.openmbean.CompositeDataSupport;

        $r4 = <org.quartz.core.jmx.JobExecutionContextSupport: javax.management.openmbean.CompositeType COMPOSITE_TYPE>;

        $r5 = <org.quartz.core.jmx.JobExecutionContextSupport: java.lang.String[] ITEM_NAMES>;

        $r3 = newarray (java.lang.Object)[15];

        $r6 = interfaceinvoke r0.<org.quartz.JobExecutionContext: org.quartz.Scheduler getScheduler()>();

        $r7 = interfaceinvoke $r6.<org.quartz.Scheduler: java.lang.String getSchedulerName()>();

        $r3[0] = $r7;

        $r8 = interfaceinvoke r0.<org.quartz.JobExecutionContext: org.quartz.Trigger getTrigger()>();

        $r9 = interfaceinvoke $r8.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>();

        $r10 = virtualinvoke $r9.<org.quartz.TriggerKey: java.lang.String getName()>();

        $r3[1] = $r10;

        $r11 = interfaceinvoke r0.<org.quartz.JobExecutionContext: org.quartz.Trigger getTrigger()>();

        $r12 = interfaceinvoke $r11.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>();

        $r13 = virtualinvoke $r12.<org.quartz.TriggerKey: java.lang.String getGroup()>();

        $r3[2] = $r13;

        $r14 = interfaceinvoke r0.<org.quartz.JobExecutionContext: org.quartz.JobDetail getJobDetail()>();

        $r15 = interfaceinvoke $r14.<org.quartz.JobDetail: org.quartz.JobKey getKey()>();

        $r16 = virtualinvoke $r15.<org.quartz.JobKey: java.lang.String getName()>();

        $r3[3] = $r16;

        $r17 = interfaceinvoke r0.<org.quartz.JobExecutionContext: org.quartz.JobDetail getJobDetail()>();

        $r18 = interfaceinvoke $r17.<org.quartz.JobDetail: org.quartz.JobKey getKey()>();

        $r19 = virtualinvoke $r18.<org.quartz.JobKey: java.lang.String getGroup()>();

        $r3[4] = $r19;

        $r20 = interfaceinvoke r0.<org.quartz.JobExecutionContext: org.quartz.JobDataMap getMergedJobDataMap()>();

        $r21 = staticinvoke <org.quartz.core.jmx.JobDataMapSupport: javax.management.openmbean.TabularData toTabularData(org.quartz.JobDataMap)>($r20);

        $r3[5] = $r21;

        $r22 = interfaceinvoke r0.<org.quartz.JobExecutionContext: org.quartz.Trigger getTrigger()>();

        $r23 = interfaceinvoke $r22.<org.quartz.Trigger: java.lang.String getCalendarName()>();

        $r3[6] = $r23;

        $z0 = interfaceinvoke r0.<org.quartz.JobExecutionContext: boolean isRecovering()>();

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3[7] = $r24;

        $i0 = interfaceinvoke r0.<org.quartz.JobExecutionContext: int getRefireCount()>();

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[8] = $r25;

        $r26 = interfaceinvoke r0.<org.quartz.JobExecutionContext: java.util.Date getFireTime()>();

        $r3[9] = $r26;

        $r27 = interfaceinvoke r0.<org.quartz.JobExecutionContext: java.util.Date getScheduledFireTime()>();

        $r3[10] = $r27;

        $r28 = interfaceinvoke r0.<org.quartz.JobExecutionContext: java.util.Date getPreviousFireTime()>();

        $r3[11] = $r28;

        $r29 = interfaceinvoke r0.<org.quartz.JobExecutionContext: java.util.Date getNextFireTime()>();

        $r3[12] = $r29;

        $l1 = interfaceinvoke r0.<org.quartz.JobExecutionContext: long getJobRunTime()>();

        $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3[13] = $r30;

        $r31 = interfaceinvoke r0.<org.quartz.JobExecutionContext: java.lang.String getFireInstanceId()>();

        $r3[14] = $r31;

        specialinvoke $r2.<javax.management.openmbean.CompositeDataSupport: void <init>(javax.management.openmbean.CompositeType,java.lang.String[],java.lang.Object[])>($r4, $r5, $r3);

     label2:
        return $r2;

     label3:
        $r32 := @caughtexception;

        $r33 = new java.lang.RuntimeException;

        specialinvoke $r33.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r32);

        throw $r33;

        catch javax.management.openmbean.OpenDataException from label1 to label2 with label3;
    }

    public static javax.management.openmbean.TabularData toTabularData(java.util.List) throws org.quartz.SchedulerException
    {
        java.util.List r0;
        org.quartz.JobExecutionContext r2;
        java.util.ArrayList $r3;
        boolean $z0;
        javax.management.openmbean.TabularDataSupport $r4;
        javax.management.openmbean.TabularType $r5;
        int $i0;
        javax.management.openmbean.CompositeData[] $r6, $r8;
        java.lang.Object[] $r7;
        java.lang.Object $r9;
        javax.management.openmbean.CompositeData $r10;
        java.util.Iterator r11;

        r0 := @parameter0: java.util.List;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r11 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.quartz.JobExecutionContext) $r9;

        $r10 = staticinvoke <org.quartz.core.jmx.JobExecutionContextSupport: javax.management.openmbean.CompositeData toCompositeData(org.quartz.JobExecutionContext)>(r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r4 = new javax.management.openmbean.TabularDataSupport;

        $r5 = <org.quartz.core.jmx.JobExecutionContextSupport: javax.management.openmbean.TabularType TABULAR_TYPE>;

        specialinvoke $r4.<javax.management.openmbean.TabularDataSupport: void <init>(javax.management.openmbean.TabularType)>($r5);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r6 = newarray (javax.management.openmbean.CompositeData)[$i0];

        $r7 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (javax.management.openmbean.CompositeData[]) $r7;

        interfaceinvoke $r4.<javax.management.openmbean.TabularData: void putAll(javax.management.openmbean.CompositeData[])>($r8);

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.String[] $r1, $r2, $r19, $r22, $r23, $r25;
        javax.management.openmbean.OpenType[] $r3, $r21;
        javax.management.openmbean.SimpleType $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        javax.management.openmbean.TabularType $r9, $r24;
        javax.management.openmbean.CompositeType $r20, $r26;
        javax.management.openmbean.OpenDataException $r27;
        java.lang.RuntimeException $r28;

        <org.quartz.core.jmx.JobExecutionContextSupport: java.lang.String TABULAR_TYPE_DESCRIPTION> = "Array of composite JobExecutionContext";

        <org.quartz.core.jmx.JobExecutionContextSupport: java.lang.String TABULAR_TYPE_NAME> = "JobExecutionContextArray";

        <org.quartz.core.jmx.JobExecutionContextSupport: java.lang.String COMPOSITE_TYPE_DESCRIPTION> = "Job Execution Instance Details";

        <org.quartz.core.jmx.JobExecutionContextSupport: java.lang.String COMPOSITE_TYPE_NAME> = "JobExecutionContext";

        $r1 = newarray (java.lang.String)[15];

        $r1[0] = "schedulerName";

        $r1[1] = "triggerName";

        $r1[2] = "triggerGroup";

        $r1[3] = "jobName";

        $r1[4] = "jobGroup";

        $r1[5] = "jobDataMap";

        $r1[6] = "calendarName";

        $r1[7] = "recovering";

        $r1[8] = "refireCount";

        $r1[9] = "fireTime";

        $r1[10] = "scheduledFireTime";

        $r1[11] = "previousFireTime";

        $r1[12] = "nextFireTime";

        $r1[13] = "jobRunTime";

        $r1[14] = "fireInstanceId";

        <org.quartz.core.jmx.JobExecutionContextSupport: java.lang.String[] ITEM_NAMES> = $r1;

        $r2 = newarray (java.lang.String)[15];

        $r2[0] = "schedulerName";

        $r2[1] = "triggerName";

        $r2[2] = "triggerGroup";

        $r2[3] = "jobName";

        $r2[4] = "jobGroup";

        $r2[5] = "jobDataMap";

        $r2[6] = "calendarName";

        $r2[7] = "recovering";

        $r2[8] = "refireCount";

        $r2[9] = "fireTime";

        $r2[10] = "scheduledFireTime";

        $r2[11] = "previousFireTime";

        $r2[12] = "nextFireTime";

        $r2[13] = "jobRunTime";

        $r2[14] = "fireInstanceId";

        <org.quartz.core.jmx.JobExecutionContextSupport: java.lang.String[] ITEM_DESCRIPTIONS> = $r2;

        $r3 = newarray (javax.management.openmbean.OpenType)[15];

        $r4 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType STRING>;

        $r3[0] = $r4;

        $r5 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType STRING>;

        $r3[1] = $r5;

        $r6 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType STRING>;

        $r3[2] = $r6;

        $r7 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType STRING>;

        $r3[3] = $r7;

        $r8 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType STRING>;

        $r3[4] = $r8;

        $r9 = <org.quartz.core.jmx.JobDataMapSupport: javax.management.openmbean.TabularType TABULAR_TYPE>;

        $r3[5] = $r9;

        $r10 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType STRING>;

        $r3[6] = $r10;

        $r11 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType BOOLEAN>;

        $r3[7] = $r11;

        $r12 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType INTEGER>;

        $r3[8] = $r12;

        $r13 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType DATE>;

        $r3[9] = $r13;

        $r14 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType DATE>;

        $r3[10] = $r14;

        $r15 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType DATE>;

        $r3[11] = $r15;

        $r16 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType DATE>;

        $r3[12] = $r16;

        $r17 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType LONG>;

        $r3[13] = $r17;

        $r18 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType STRING>;

        $r3[14] = $r18;

        <org.quartz.core.jmx.JobExecutionContextSupport: javax.management.openmbean.OpenType[] ITEM_TYPES> = $r3;

        $r19 = newarray (java.lang.String)[6];

        $r19[0] = "schedulerName";

        $r19[1] = "triggerName";

        $r19[2] = "triggerGroup";

        $r19[3] = "jobName";

        $r19[4] = "jobGroup";

        $r19[5] = "fireTime";

        <org.quartz.core.jmx.JobExecutionContextSupport: java.lang.String[] INDEX_NAMES> = $r19;

     label1:
        $r20 = new javax.management.openmbean.CompositeType;

        $r23 = <org.quartz.core.jmx.JobExecutionContextSupport: java.lang.String[] ITEM_NAMES>;

        $r22 = <org.quartz.core.jmx.JobExecutionContextSupport: java.lang.String[] ITEM_DESCRIPTIONS>;

        $r21 = <org.quartz.core.jmx.JobExecutionContextSupport: javax.management.openmbean.OpenType[] ITEM_TYPES>;

        specialinvoke $r20.<javax.management.openmbean.CompositeType: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],javax.management.openmbean.OpenType[])>("JobExecutionContext", "Job Execution Instance Details", $r23, $r22, $r21);

        <org.quartz.core.jmx.JobExecutionContextSupport: javax.management.openmbean.CompositeType COMPOSITE_TYPE> = $r20;

        $r24 = new javax.management.openmbean.TabularType;

        $r26 = <org.quartz.core.jmx.JobExecutionContextSupport: javax.management.openmbean.CompositeType COMPOSITE_TYPE>;

        $r25 = <org.quartz.core.jmx.JobExecutionContextSupport: java.lang.String[] INDEX_NAMES>;

        specialinvoke $r24.<javax.management.openmbean.TabularType: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.CompositeType,java.lang.String[])>("JobExecutionContextArray", "Array of composite JobExecutionContext", $r26, $r25);

        <org.quartz.core.jmx.JobExecutionContextSupport: javax.management.openmbean.TabularType TABULAR_TYPE> = $r24;

     label2:
        goto label4;

     label3:
        $r27 := @caughtexception;

        $r28 = new java.lang.RuntimeException;

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r27);

        throw $r28;

     label4:
        return;

        catch javax.management.openmbean.OpenDataException from label1 to label2 with label3;
    }
}
