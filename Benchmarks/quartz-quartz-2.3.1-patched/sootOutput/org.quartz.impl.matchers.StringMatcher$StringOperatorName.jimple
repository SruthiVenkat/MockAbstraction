public abstract enum class org.quartz.impl.matchers.StringMatcher$StringOperatorName extends java.lang.Enum
{
    public static final enum org.quartz.impl.matchers.StringMatcher$StringOperatorName EQUALS;
    public static final enum org.quartz.impl.matchers.StringMatcher$StringOperatorName STARTS_WITH;
    public static final enum org.quartz.impl.matchers.StringMatcher$StringOperatorName ENDS_WITH;
    public static final enum org.quartz.impl.matchers.StringMatcher$StringOperatorName CONTAINS;
    public static final enum org.quartz.impl.matchers.StringMatcher$StringOperatorName ANYTHING;
    private static final org.quartz.impl.matchers.StringMatcher$StringOperatorName[] $VALUES;

    public static org.quartz.impl.matchers.StringMatcher$StringOperatorName[] values()
    {
        org.quartz.impl.matchers.StringMatcher$StringOperatorName[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.quartz.impl.matchers.StringMatcher$StringOperatorName[]) $r1;

        return $r2;
    }

    public static org.quartz.impl.matchers.StringMatcher$StringOperatorName valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.quartz.impl.matchers.StringMatcher$StringOperatorName $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/quartz/impl/matchers/StringMatcher$StringOperatorName;", r0);

        $r2 = (org.quartz.impl.matchers.StringMatcher$StringOperatorName) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.quartz.impl.matchers.StringMatcher$StringOperatorName r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.quartz.impl.matchers.StringMatcher$StringOperatorName;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public abstract boolean evaluate(java.lang.String, java.lang.String);

    void <init>(java.lang.String, int, org.quartz.impl.matchers.StringMatcher$1)
    {
        org.quartz.impl.matchers.StringMatcher$StringOperatorName r0;
        java.lang.String r1;
        int i0;
        org.quartz.impl.matchers.StringMatcher$1 r2;

        r0 := @this: org.quartz.impl.matchers.StringMatcher$StringOperatorName;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.quartz.impl.matchers.StringMatcher$1;

        specialinvoke r0.<org.quartz.impl.matchers.StringMatcher$StringOperatorName: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        org.quartz.impl.matchers.StringMatcher$StringOperatorName$1 $r0;
        org.quartz.impl.matchers.StringMatcher$StringOperatorName$2 $r1;
        org.quartz.impl.matchers.StringMatcher$StringOperatorName$3 $r2;
        org.quartz.impl.matchers.StringMatcher$StringOperatorName$4 $r3;
        org.quartz.impl.matchers.StringMatcher$StringOperatorName$5 $r4;
        org.quartz.impl.matchers.StringMatcher$StringOperatorName[] $r5;
        org.quartz.impl.matchers.StringMatcher$StringOperatorName $r6, $r7, $r8, $r9, $r10;

        $r0 = new org.quartz.impl.matchers.StringMatcher$StringOperatorName$1;

        specialinvoke $r0.<org.quartz.impl.matchers.StringMatcher$StringOperatorName$1: void <init>(java.lang.String,int)>("EQUALS", 0);

        <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName EQUALS> = $r0;

        $r1 = new org.quartz.impl.matchers.StringMatcher$StringOperatorName$2;

        specialinvoke $r1.<org.quartz.impl.matchers.StringMatcher$StringOperatorName$2: void <init>(java.lang.String,int)>("STARTS_WITH", 1);

        <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName STARTS_WITH> = $r1;

        $r2 = new org.quartz.impl.matchers.StringMatcher$StringOperatorName$3;

        specialinvoke $r2.<org.quartz.impl.matchers.StringMatcher$StringOperatorName$3: void <init>(java.lang.String,int)>("ENDS_WITH", 2);

        <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName ENDS_WITH> = $r2;

        $r3 = new org.quartz.impl.matchers.StringMatcher$StringOperatorName$4;

        specialinvoke $r3.<org.quartz.impl.matchers.StringMatcher$StringOperatorName$4: void <init>(java.lang.String,int)>("CONTAINS", 3);

        <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName CONTAINS> = $r3;

        $r4 = new org.quartz.impl.matchers.StringMatcher$StringOperatorName$5;

        specialinvoke $r4.<org.quartz.impl.matchers.StringMatcher$StringOperatorName$5: void <init>(java.lang.String,int)>("ANYTHING", 4);

        <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName ANYTHING> = $r4;

        $r5 = newarray (org.quartz.impl.matchers.StringMatcher$StringOperatorName)[5];

        $r6 = <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName EQUALS>;

        $r5[0] = $r6;

        $r7 = <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName STARTS_WITH>;

        $r5[1] = $r7;

        $r8 = <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName ENDS_WITH>;

        $r5[2] = $r8;

        $r9 = <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName CONTAINS>;

        $r5[3] = $r9;

        $r10 = <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName ANYTHING>;

        $r5[4] = $r10;

        <org.quartz.impl.matchers.StringMatcher$StringOperatorName: org.quartz.impl.matchers.StringMatcher$StringOperatorName[] $VALUES> = $r5;

        return;
    }
}
