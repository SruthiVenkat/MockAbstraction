public class org.quartz.Qtz205SchedulerListenerTest extends java.lang.Object
{
    private static org.slf4j.Logger logger;

    public void <init>()
    {
        org.quartz.Qtz205SchedulerListenerTest r0;

        r0 := @this: org.quartz.Qtz205SchedulerListenerTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testTriggerFinalized() throws java.lang.Exception
    {
        org.quartz.Qtz205SchedulerListenerTest r0;
        org.quartz.Scheduler r4;
        org.quartz.JobDetail r5;
        org.quartz.Trigger r6;
        org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener $r7;
        org.quartz.Qtz205SchedulerListenerTest$Qtz205ScheListener $r8;
        java.util.Properties $r9;
        org.quartz.impl.StdSchedulerFactory $r12;
        org.quartz.ListenerManager $r13, $r14;
        org.quartz.JobBuilder $r15, $r16;
        org.quartz.TriggerBuilder $r17, $r18, $r22;
        org.quartz.SimpleScheduleBuilder $r19, $r20, $r21;
        int $i0, $i1, $i2;

        r0 := @this: org.quartz.Qtz205SchedulerListenerTest;

        $r7 = new org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener;

        specialinvoke $r7.<org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener: void <init>()>();

        $r8 = new org.quartz.Qtz205SchedulerListenerTest$Qtz205ScheListener;

        specialinvoke $r8.<org.quartz.Qtz205SchedulerListenerTest$Qtz205ScheListener: void <init>()>();

        $r9 = new java.util.Properties;

        specialinvoke $r9.<java.util.Properties: void <init>()>();

        virtualinvoke $r9.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.idleWaitTime", "1500");

        virtualinvoke $r9.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "2");

        $r12 = new org.quartz.impl.StdSchedulerFactory;

        specialinvoke $r12.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>($r9);

        r4 = virtualinvoke $r12.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>();

        $r13 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>();

        interfaceinvoke $r13.<org.quartz.ListenerManager: void addSchedulerListener(org.quartz.SchedulerListener)>($r8);

        $r14 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>();

        interfaceinvoke $r14.<org.quartz.ListenerManager: void addTriggerListener(org.quartz.TriggerListener)>($r7);

        interfaceinvoke r4.<org.quartz.Scheduler: void start()>();

        interfaceinvoke r4.<org.quartz.Scheduler: void standby()>();

        $r15 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/Qtz205SchedulerListenerTest$Qtz205Job;");

        $r16 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test");

        r5 = virtualinvoke $r16.<org.quartz.JobBuilder: org.quartz.JobDetail build()>();

        $r17 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>();

        $r18 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test");

        $r19 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>();

        $r20 = virtualinvoke $r19.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInMilliseconds(long)>(250L);

        $r21 = virtualinvoke $r20.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withRepeatCount(int)>(2);

        $r22 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r21);

        r6 = virtualinvoke $r22.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>();

        interfaceinvoke r4.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r5, r6);

        interfaceinvoke r4.<org.quartz.Scheduler: void start()>();

        staticinvoke <java.lang.Thread: void sleep(long)>(5000L);

        interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(1);

        $i0 = staticinvoke <org.quartz.Qtz205SchedulerListenerTest$Qtz205Job: int access$100()>();

        staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i0);

        $i1 = virtualinvoke $r7.<org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener: int getFireCount()>();

        staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i1);

        $i2 = virtualinvoke $r8.<org.quartz.Qtz205SchedulerListenerTest$Qtz205ScheListener: int getTriggerFinalizedCount()>();

        staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2);

        return;
    }

    static org.slf4j.Logger access$000()
    {
        org.slf4j.Logger $r0;

        $r0 = <org.quartz.Qtz205SchedulerListenerTest: org.slf4j.Logger logger>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/quartz/Qtz205SchedulerListenerTest;");

        <org.quartz.Qtz205SchedulerListenerTest: org.slf4j.Logger logger> = $r0;

        return;
    }
}
