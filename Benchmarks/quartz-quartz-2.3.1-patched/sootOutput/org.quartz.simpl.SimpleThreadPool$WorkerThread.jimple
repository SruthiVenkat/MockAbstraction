class org.quartz.simpl.SimpleThreadPool$WorkerThread extends java.lang.Thread
{
    private final java.lang.Object lock;
    private java.util.concurrent.atomic.AtomicBoolean run;
    private org.quartz.simpl.SimpleThreadPool tp;
    private java.lang.Runnable runnable;
    private boolean runOnce;
    final org.quartz.simpl.SimpleThreadPool this$0;

    void <init>(org.quartz.simpl.SimpleThreadPool, org.quartz.simpl.SimpleThreadPool, java.lang.ThreadGroup, java.lang.String, int, boolean)
    {
        org.quartz.simpl.SimpleThreadPool$WorkerThread r0;
        org.quartz.simpl.SimpleThreadPool r1, r2;
        java.lang.ThreadGroup r3;
        java.lang.String r4;
        int i0;
        boolean z0;

        r0 := @this: org.quartz.simpl.SimpleThreadPool$WorkerThread;

        r1 := @parameter0: org.quartz.simpl.SimpleThreadPool;

        r2 := @parameter1: org.quartz.simpl.SimpleThreadPool;

        r3 := @parameter2: java.lang.ThreadGroup;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: void <init>(org.quartz.simpl.SimpleThreadPool,org.quartz.simpl.SimpleThreadPool,java.lang.ThreadGroup,java.lang.String,int,boolean,java.lang.Runnable)>(r1, r2, r3, r4, i0, z0, null);

        return;
    }

    void <init>(org.quartz.simpl.SimpleThreadPool, org.quartz.simpl.SimpleThreadPool, java.lang.ThreadGroup, java.lang.String, int, boolean, java.lang.Runnable)
    {
        org.quartz.simpl.SimpleThreadPool$WorkerThread r0;
        org.quartz.simpl.SimpleThreadPool r1, r2;
        java.lang.ThreadGroup r3;
        java.lang.String r4;
        int i0;
        boolean z0;
        java.lang.Runnable r5;
        java.lang.Object $r6;
        java.util.concurrent.atomic.AtomicBoolean $r7;

        r0 := @this: org.quartz.simpl.SimpleThreadPool$WorkerThread;

        r1 := @parameter0: org.quartz.simpl.SimpleThreadPool;

        r2 := @parameter1: org.quartz.simpl.SimpleThreadPool;

        r3 := @parameter2: java.lang.ThreadGroup;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        r5 := @parameter6: java.lang.Runnable;

        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>(r3, r4);

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Object lock> = $r6;

        $r7 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.util.concurrent.atomic.AtomicBoolean run> = $r7;

        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Runnable runnable> = null;

        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: boolean runOnce> = 0;

        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool tp> = r2;

        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Runnable runnable> = r5;

        if r5 == null goto label1;

        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: boolean runOnce> = 1;

     label1:
        virtualinvoke r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: void setPriority(int)>(i0);

        virtualinvoke r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: void setDaemon(boolean)>(z0);

        return;
    }

    void shutdown()
    {
        org.quartz.simpl.SimpleThreadPool$WorkerThread r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: org.quartz.simpl.SimpleThreadPool$WorkerThread;

        $r1 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.util.concurrent.atomic.AtomicBoolean run>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        return;
    }

    public void run(java.lang.Runnable)
    {
        org.quartz.simpl.SimpleThreadPool$WorkerThread r0;
        java.lang.Runnable r1, $r5;
        java.lang.Object $r4, $r6;
        java.lang.IllegalStateException $r7;
        java.lang.Throwable $r8;

        r0 := @this: org.quartz.simpl.SimpleThreadPool$WorkerThread;

        r1 := @parameter0: java.lang.Runnable;

        $r4 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Object lock>;

        entermonitor $r4;

     label1:
        $r5 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Runnable runnable>;

        if $r5 == null goto label2;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already running a Runnable!");

        throw $r7;

     label2:
        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Runnable runnable> = r1;

        $r6 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Object lock>;

        virtualinvoke $r6.<java.lang.Object: void notifyAll()>();

        exitmonitor $r4;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r4;

     label5:
        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void run()
    {
        org.quartz.simpl.SimpleThreadPool$WorkerThread r0;
        java.util.concurrent.atomic.AtomicBoolean $r7, $r16, $r20, $r27, $r42, $r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        org.quartz.simpl.SimpleThreadPool $r8, $r14, $r15, $r17, $r18, $r25, $r26, $r28, $r29, $r33, $r40, $r41, $r43, $r44, $r46, $r50, $r51, $r53, $r54;
        org.slf4j.Logger $r9, $r34, $r47;
        java.lang.Object $r10, $r13, $r21, $r24, $r39, $r49;
        java.lang.Runnable $r11, $r12, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.Exception $r22, $r23, $r38;
        java.lang.Throwable $r30, $r31, $r32, $r35, $r36, $r37, $r48;
        java.lang.InterruptedException $r45;

        r0 := @this: org.quartz.simpl.SimpleThreadPool$WorkerThread;

        z6 = 0;

     label01:
        $r7 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.util.concurrent.atomic.AtomicBoolean run>;

        $z0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label52;

     label02:
        $r10 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Object lock>;

        entermonitor $r10;

     label03:
        $r11 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Runnable runnable>;

        if $r11 != null goto label04;

        $r20 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.util.concurrent.atomic.AtomicBoolean run>;

        $z2 = virtualinvoke $r20.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z2 == 0 goto label04;

        $r21 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Object lock>;

        virtualinvoke $r21.<java.lang.Object: void wait(long)>(500L);

        goto label03;

     label04:
        $r12 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Runnable runnable>;

        if $r12 == null goto label05;

        z6 = 1;

        $r19 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Runnable runnable>;

        interfaceinvoke $r19.<java.lang.Runnable: void run()>();

     label05:
        exitmonitor $r10;

     label06:
        goto label09;

     label07:
        $r31 := @caughtexception;

        exitmonitor $r10;

     label08:
        throw $r31;

     label09:
        $r13 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Object lock>;

        entermonitor $r13;

     label10:
        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Runnable runnable> = null;

        exitmonitor $r13;

     label11:
        goto label14;

     label12:
        $r35 := @caughtexception;

        exitmonitor $r13;

     label13:
        throw $r35;

     label14:
        $i0 = virtualinvoke r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: int getPriority()>();

        $r14 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool tp>;

        $i1 = virtualinvoke $r14.<org.quartz.simpl.SimpleThreadPool: int getThreadPriority()>();

        if $i0 == $i1 goto label15;

        $r18 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool tp>;

        $i2 = virtualinvoke $r18.<org.quartz.simpl.SimpleThreadPool: int getThreadPriority()>();

        virtualinvoke r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: void setPriority(int)>($i2);

     label15:
        $z1 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: boolean runOnce>;

        if $z1 == 0 goto label16;

        $r16 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.util.concurrent.atomic.AtomicBoolean run>;

        virtualinvoke $r16.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $r17 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool this$0>;

        virtualinvoke $r17.<org.quartz.simpl.SimpleThreadPool: void clearFromBusyWorkersList(org.quartz.simpl.SimpleThreadPool$WorkerThread)>(r0);

        goto label51;

     label16:
        if z6 == 0 goto label51;

        z6 = 0;

        $r15 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool this$0>;

        virtualinvoke $r15.<org.quartz.simpl.SimpleThreadPool: void makeAvailable(org.quartz.simpl.SimpleThreadPool$WorkerThread)>(r0);

        goto label51;

     label17:
        $r45 := @caughtexception;

     label18:
        $r46 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool this$0>;

        $r47 = virtualinvoke $r46.<org.quartz.simpl.SimpleThreadPool: org.slf4j.Logger getLog()>();

        interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Worker thread was interrupt()\'ed.", $r45);

     label19:
        goto label21;

     label20:
        $r38 := @caughtexception;

     label21:
        $r39 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Object lock>;

        entermonitor $r39;

     label22:
        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Runnable runnable> = null;

        exitmonitor $r39;

     label23:
        goto label26;

     label24:
        $r30 := @caughtexception;

        exitmonitor $r39;

     label25:
        throw $r30;

     label26:
        $i6 = virtualinvoke r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: int getPriority()>();

        $r40 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool tp>;

        $i7 = virtualinvoke $r40.<org.quartz.simpl.SimpleThreadPool: int getThreadPriority()>();

        if $i6 == $i7 goto label27;

        $r44 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool tp>;

        $i8 = virtualinvoke $r44.<org.quartz.simpl.SimpleThreadPool: int getThreadPriority()>();

        virtualinvoke r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: void setPriority(int)>($i8);

     label27:
        $z4 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: boolean runOnce>;

        if $z4 == 0 goto label28;

        $r42 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.util.concurrent.atomic.AtomicBoolean run>;

        virtualinvoke $r42.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $r43 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool this$0>;

        virtualinvoke $r43.<org.quartz.simpl.SimpleThreadPool: void clearFromBusyWorkersList(org.quartz.simpl.SimpleThreadPool$WorkerThread)>(r0);

        goto label51;

     label28:
        if z6 == 0 goto label51;

        z6 = 0;

        $r41 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool this$0>;

        virtualinvoke $r41.<org.quartz.simpl.SimpleThreadPool: void makeAvailable(org.quartz.simpl.SimpleThreadPool$WorkerThread)>(r0);

        goto label51;

     label29:
        $r32 := @caughtexception;

     label30:
        $r33 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool this$0>;

        $r34 = virtualinvoke $r33.<org.quartz.simpl.SimpleThreadPool: org.slf4j.Logger getLog()>();

        interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error while executing the Runnable: ", $r32);

     label31:
        goto label33;

     label32:
        $r23 := @caughtexception;

     label33:
        $r24 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Object lock>;

        entermonitor $r24;

     label34:
        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Runnable runnable> = null;

        exitmonitor $r24;

     label35:
        goto label38;

     label36:
        $r36 := @caughtexception;

        exitmonitor $r24;

     label37:
        throw $r36;

     label38:
        $i3 = virtualinvoke r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: int getPriority()>();

        $r25 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool tp>;

        $i4 = virtualinvoke $r25.<org.quartz.simpl.SimpleThreadPool: int getThreadPriority()>();

        if $i3 == $i4 goto label39;

        $r29 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool tp>;

        $i5 = virtualinvoke $r29.<org.quartz.simpl.SimpleThreadPool: int getThreadPriority()>();

        virtualinvoke r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: void setPriority(int)>($i5);

     label39:
        $z3 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: boolean runOnce>;

        if $z3 == 0 goto label40;

        $r27 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.util.concurrent.atomic.AtomicBoolean run>;

        virtualinvoke $r27.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $r28 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool this$0>;

        virtualinvoke $r28.<org.quartz.simpl.SimpleThreadPool: void clearFromBusyWorkersList(org.quartz.simpl.SimpleThreadPool$WorkerThread)>(r0);

        goto label51;

     label40:
        if z6 == 0 goto label51;

        z6 = 0;

        $r26 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool this$0>;

        virtualinvoke $r26.<org.quartz.simpl.SimpleThreadPool: void makeAvailable(org.quartz.simpl.SimpleThreadPool$WorkerThread)>(r0);

        goto label51;

     label41:
        $r48 := @caughtexception;

     label42:
        $r49 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Object lock>;

        entermonitor $r49;

     label43:
        r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.lang.Runnable runnable> = null;

        exitmonitor $r49;

     label44:
        goto label47;

     label45:
        $r37 := @caughtexception;

        exitmonitor $r49;

     label46:
        throw $r37;

     label47:
        $i9 = virtualinvoke r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: int getPriority()>();

        $r50 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool tp>;

        $i10 = virtualinvoke $r50.<org.quartz.simpl.SimpleThreadPool: int getThreadPriority()>();

        if $i9 == $i10 goto label48;

        $r54 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool tp>;

        $i11 = virtualinvoke $r54.<org.quartz.simpl.SimpleThreadPool: int getThreadPriority()>();

        virtualinvoke r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: void setPriority(int)>($i11);

     label48:
        $z5 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: boolean runOnce>;

        if $z5 == 0 goto label49;

        $r52 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: java.util.concurrent.atomic.AtomicBoolean run>;

        virtualinvoke $r52.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $r53 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool this$0>;

        virtualinvoke $r53.<org.quartz.simpl.SimpleThreadPool: void clearFromBusyWorkersList(org.quartz.simpl.SimpleThreadPool$WorkerThread)>(r0);

        goto label50;

     label49:
        if z6 == 0 goto label50;

        $r51 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool this$0>;

        virtualinvoke $r51.<org.quartz.simpl.SimpleThreadPool: void makeAvailable(org.quartz.simpl.SimpleThreadPool$WorkerThread)>(r0);

     label50:
        throw $r48;

     label51:
        goto label01;

     label52:
        $r8 = r0.<org.quartz.simpl.SimpleThreadPool$WorkerThread: org.quartz.simpl.SimpleThreadPool this$0>;

        $r9 = virtualinvoke $r8.<org.quartz.simpl.SimpleThreadPool: org.slf4j.Logger getLog()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>("WorkerThread is shut down.");

     label53:
        goto label55;

     label54:
        $r22 := @caughtexception;

     label55:
        return;

        catch java.lang.Throwable from label03 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.InterruptedException from label02 to label09 with label17;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
        catch java.lang.Throwable from label02 to label09 with label29;
        catch java.lang.Exception from label30 to label31 with label32;
        catch java.lang.Throwable from label34 to label35 with label36;
        catch java.lang.Throwable from label36 to label37 with label36;
        catch java.lang.Throwable from label17 to label21 with label41;
        catch java.lang.Throwable from label29 to label33 with label41;
        catch java.lang.Throwable from label43 to label44 with label45;
        catch java.lang.Throwable from label45 to label46 with label45;
        catch java.lang.Throwable from label41 to label42 with label41;
        catch java.lang.Exception from label52 to label53 with label54;
    }
}
