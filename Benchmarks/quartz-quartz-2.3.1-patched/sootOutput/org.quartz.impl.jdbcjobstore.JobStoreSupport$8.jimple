class org.quartz.impl.jdbcjobstore.JobStoreSupport$8 extends org.quartz.impl.jdbcjobstore.JobStoreSupport$VoidTransactionCallback
{
    final java.util.Map val$triggersAndJobs;
    final boolean val$replace;
    final org.quartz.impl.jdbcjobstore.JobStoreSupport this$0;

    void <init>(org.quartz.impl.jdbcjobstore.JobStoreSupport, java.util.Map, boolean)
    {
        org.quartz.impl.jdbcjobstore.JobStoreSupport$8 r0;
        org.quartz.impl.jdbcjobstore.JobStoreSupport r1;
        java.util.Map r2;
        boolean z0;

        r0 := @this: org.quartz.impl.jdbcjobstore.JobStoreSupport$8;

        r1 := @parameter0: org.quartz.impl.jdbcjobstore.JobStoreSupport;

        r2 := @parameter1: java.util.Map;

        z0 := @parameter2: boolean;

        r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$8: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0> = r1;

        r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$8: java.util.Map val$triggersAndJobs> = r2;

        r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$8: boolean val$replace> = z0;

        specialinvoke r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$VoidTransactionCallback: void <init>(org.quartz.impl.jdbcjobstore.JobStoreSupport)>(r1);

        return;
    }

    public void executeVoid(java.sql.Connection) throws org.quartz.JobPersistenceException
    {
        org.quartz.impl.jdbcjobstore.JobStoreSupport$8 r0;
        java.sql.Connection r1;
        java.util.Iterator r2, r4;
        org.quartz.JobDetail r3;
        org.quartz.Trigger r5;
        java.util.Map $r6, $r10;
        java.util.Set $r7, $r12;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r8, $r11, $r13;
        org.quartz.impl.jdbcjobstore.JobStoreSupport $r9, $r15;
        org.quartz.spi.OperableTrigger $r14;

        r0 := @this: org.quartz.impl.jdbcjobstore.JobStoreSupport$8;

        r1 := @parameter0: java.sql.Connection;

        $r6 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$8: java.util.Map val$triggersAndJobs>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.quartz.JobDetail) $r8;

        $r9 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$8: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0>;

        $z1 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$8: boolean val$replace>;

        virtualinvoke $r9.<org.quartz.impl.jdbcjobstore.JobStoreSupport: void storeJob(java.sql.Connection,org.quartz.JobDetail,boolean)>(r1, r3, $z1);

        $r10 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$8: java.util.Map val$triggersAndJobs>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r12 = (java.util.Set) $r11;

        r4 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.quartz.Trigger) $r13;

        $r15 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$8: org.quartz.impl.jdbcjobstore.JobStoreSupport this$0>;

        $r14 = (org.quartz.spi.OperableTrigger) r5;

        $z3 = r0.<org.quartz.impl.jdbcjobstore.JobStoreSupport$8: boolean val$replace>;

        virtualinvoke $r15.<org.quartz.impl.jdbcjobstore.JobStoreSupport: void storeTrigger(java.sql.Connection,org.quartz.spi.OperableTrigger,org.quartz.JobDetail,boolean,java.lang.String,boolean,boolean)>(r1, $r14, r3, $z3, "WAITING", 0, 0);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }
}
